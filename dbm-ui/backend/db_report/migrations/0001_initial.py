# Generated by Django 3.2.19 on 2023-10-08 01:56
import django.db.models.deletion
from django.db import migrations, models

from backend.db_meta.enums import ClusterType, MachineType
from backend.db_report.enums import MetaCheckSubType


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="MetaCheckReport",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("creator", models.CharField(max_length=64, verbose_name="创建人")),
                ("create_at", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("updater", models.CharField(max_length=64, verbose_name="修改人")),
                ("update_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
                ("bk_biz_id", models.IntegerField(default=0, help_text="业务的 cmdb id")),
                ("bk_cloud_id", models.IntegerField(default=0, help_text="云区域 id")),
                ("status", models.BooleanField(default=True, help_text="巡检结果状态, 默认正常")),
                ("msg", models.TextField(default="", help_text="备注信息")),
                ("ip", models.GenericIPAddressField(default="")),
                ("port", models.PositiveIntegerField(default=0)),
                ("cluster", models.CharField(default="", max_length=255)),
                (
                    "cluster_type",
                    models.CharField(
                        choices=ClusterType.get_choices(),
                        default="",
                        max_length=64,
                    ),
                ),
                (
                    "machine_type",
                    models.CharField(
                        choices=MachineType.get_choices(),
                        default="",
                        max_length=64,
                    ),
                ),
                (
                    "subtype",
                    models.CharField(
                        choices=MetaCheckSubType.get_choices(),
                        default="",
                        help_text="元数据检查子项",
                        max_length=64,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ChecksumCheckReport",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("creator", models.CharField(max_length=64, verbose_name="创建人")),
                ("create_at", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("updater", models.CharField(max_length=64, verbose_name="修改人")),
                ("update_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
                ("bk_biz_id", models.IntegerField(default=0, help_text="业务的 cmdb id")),
                ("bk_cloud_id", models.IntegerField(default=0, help_text="云区域 id")),
                ("status", models.BooleanField(default=True, help_text="巡检结果状态, 默认正常")),
                ("msg", models.TextField(default="", help_text="备注信息")),
                ("fail_slaves", models.IntegerField(default=0, help_text="失败的备库实例")),
                ("cluster", models.CharField(default="", max_length=255)),
                (
                    "cluster_type",
                    models.CharField(
                        choices=[
                            ("tendbsingle", "tendbsingle"),
                            ("tendbha", "tendbha"),
                            ("tendbcluster", "tendbcluster"),
                        ],
                        default="",
                        max_length=64,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ChecksumInstance",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("creator", models.CharField(max_length=64, verbose_name="创建人")),
                ("create_at", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("updater", models.CharField(max_length=64, verbose_name="修改人")),
                ("update_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
                ("ip", models.CharField(max_length=64, verbose_name="slave部署机器ip")),
                ("port", models.CharField(max_length=64, verbose_name="slave部署机器port")),
                ("master_ip", models.CharField(max_length=64, verbose_name="master部署机器ip")),
                ("master_port", models.CharField(max_length=64, verbose_name="master部署机器port")),
                ("details", models.JSONField(default=dict, verbose_name="不一致库表详情")),
                (
                    "report",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="db_report.checksumcheckreport"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
