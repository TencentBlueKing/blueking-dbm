# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.

msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-20 15:58+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: backend/bk_web/handlers.py:37
msgid "部分列表元素的参数不合法，请检查"
msgstr "The parameters of some list elements are invalid, please check"

#: backend/bk_web/handlers.py:65
msgid "捕获未处理异常, 请求URL->{}, 请求方法->{} 请求参数->{}"
msgstr ""
"Catch unhandled exception, request URL-&gt;{}, request method-&gt;{} request "
"parameter-&gt;{}"

#: backend/bk_web/handlers.py:84
msgid "用户未登录或登录态失效，请重新登录"
msgstr ""
"The user is not logged in or the login status is invalid, please log in again"

#: backend/bk_web/handlers.py:97
#, python-brace-format
msgid "【APP 自定义异常】{message}, code={code}, args={args}"
msgstr "【APP custom exception】{message}, code={code}, args={args}"

#: backend/bk_web/handlers.py:113
msgid "捕获未处理异常, 请求URL->[{}], 请求方法->[{}] 请求参数->[{}]"
msgstr ""
"Catch unhandled exception, request URL-&gt;[{}], request method-&gt;[{}] "
"request parameter-&gt;[{}]"

#: backend/bk_web/handlers.py:117
#, python-brace-format
msgid "系统错误，请联系管理员({error})"
msgstr "System error, please contact administrator({error})"

#: backend/bk_web/models.py:20
#: backend/db_proxy/views/redis_dts/serializers.py:22
#: backend/db_services/bigdata/influxdb/query.py:34
#: backend/db_services/bigdata/influxdb/query.py:35
#: backend/db_services/bigdata/resources/query.py:46
#: backend/db_services/bigdata/resources/query.py:47
#: backend/db_services/mysql/resources/spider/query.py:45
#: backend/db_services/mysql/resources/tendbha/query.py:46
#: backend/db_services/mysql/resources/tendbsingle/query.py:42
#: backend/db_services/redis/resources/redis_cluster/query.py:61
#: backend/db_services/redis_dts/serializers.py:17
#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:66
msgid "创建人"
msgstr "founder"

#: backend/bk_web/models.py:21 backend/core/encrypt/models.py:25
#: backend/core/storages/models.py:28 backend/core/storages/models.py:47
#: backend/db_services/bigdata/influxdb/query.py:36
#: backend/db_services/bigdata/resources/query.py:48
#: backend/db_services/mysql/permission/db_account/serializers.py:88
#: backend/db_services/mysql/permission/db_account/serializers.py:98
#: backend/db_services/mysql/resources/spider/query.py:46
#: backend/db_services/mysql/resources/tendbha/query.py:47
#: backend/db_services/mysql/resources/tendbsingle/query.py:43
#: backend/db_services/mysql/sql_import/serializers.py:143
#: backend/db_services/redis/resources/redis_cluster/query.py:62
#: backend/db_services/redis_dts/models/tb_dts_distribute_lock.py:19
#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:57
#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:70
#: backend/flow/models.py:45 backend/ticket/models/ticket.py:43
msgid "创建时间"
msgstr "creation time"

#: backend/bk_web/models.py:22
msgid "修改人"
msgstr "Edited by"

#: backend/bk_web/models.py:23 backend/core/encrypt/models.py:24
#: backend/core/storages/models.py:27 backend/core/storages/models.py:46
#: backend/db_services/bigdata/influxdb/query.py:38
#: backend/db_services/bigdata/resources/query.py:50
#: backend/db_services/dbconfig/serializers.py:66
#: backend/db_services/redis/resources/redis_cluster/query.py:64
#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:58
#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:71
#: backend/flow/models.py:47 backend/ticket/models/ticket.py:44
msgid "更新时间"
msgstr "update time"

#: backend/components/base.py:158
#, python-brace-format
msgid "请求已达到最大重试次数{max_retry_times}"
msgstr ""
"The request has reached the maximum number of retries {max_retry_times}"

#: backend/components/base.py:199
msgid "{}-接口调用异常"
msgstr "{} - interface call exception"

#: backend/components/base.py:217
#, python-brace-format
msgid "[{module}]API请求异常：({error_message})"
msgstr "[{module}] API request exception: ({error_message})"

#: backend/components/base.py:279
msgid "返回数据格式不正确，结果格式非json."
msgstr ""
"The format of the returned data is incorrect, and the result format is not "
"json."

#: backend/components/base.py:347
#, python-brace-format
msgid "[BKAPI] {info}"
msgstr "[BKAPI] {info}"

#: backend/components/base.py:446
#, python-brace-format
msgid "异常请求方式，{method}"
msgstr "Abnormal request method, {method}"

#: backend/components/bk.py:100
msgid "请求[{}]失败：{}"
msgstr "Request failed:{}"

#: backend/components/bklog/client.py:19
msgid "蓝鲸日志平台"
msgstr "Blue Whale Log Platform"

#: backend/components/bklog/client.py:27
msgid "查询索引"
msgstr "query index"

#: backend/components/bklog/client.py:34
msgid "简易创建采集配置"
msgstr "Easy creation of acquisition configurations"

#: backend/components/bklog/client.py:43
msgid "简易更新采集配置"
msgstr "Easy update of acquisition configurations"

#: backend/components/bklog/client.py:50
msgid "创建采集项的前置检查"
msgstr "Pre check before create collection"

#: backend/components/bklog/client.py:57
msgid "获取采集项列表"
msgstr "Get a list of collection items"

#: backend/components/bkmonitorv3/client.py:23
msgid "监控"
msgstr "monitor"

#: backend/components/bkmonitorv3/client.py:31
msgid "获取 data id"
msgstr "get data id"

#: backend/components/bkmonitorv3/client.py:38
msgid "保存通知组"
msgstr "save notification group"

#: backend/components/bkmonitorv3/client.py:45
msgid "获取业务下自定义事件列表"
msgstr "Get a list of custom events under business"

#: backend/components/bkmonitorv3/client.py:52
msgid "获取自定义指标列表"
msgstr "Get a list of custom indicators"

#: backend/components/bkmonitorv3/client.py:59
msgid "获取自定义指标详情"
msgstr "Get custom indicator details"

#: backend/components/bkmonitorv3/client.py:66
msgid "获取业自定义事件详情"
msgstr "Get industry custom event details"

#: backend/components/bkmonitorv3/client.py:73
msgid "创建自定义指标"
msgstr "Create custom metrics"

#: backend/components/bkmonitorv3/client.py:80
msgid "创建自定义事件"
msgstr "Create custom events"

#: backend/components/bkmonitorv3/client.py:87
msgid "保存告警策略"
msgstr "Save alert policy"

#: backend/components/bkmonitorv3/client.py:94
msgid "查询告警策略"
msgstr "Querying the Alarm Policy"

#: backend/components/bkmonitorv3/client.py:101
msgid "保存采集策略"
msgstr "Save collection strategy"

#: backend/components/bkmonitorv3/client.py:108
msgid "查询采集策略"
msgstr "Query collection strategy"

#: backend/components/bkmonitorv3/client.py:115
msgid "查询采集配置列表"
msgstr "Query the collection configuration list"

#: backend/components/bkmonitorv3/client.py:122
msgid "查询采集策略详情"
msgstr "Querying Collection Policy Details"

#: backend/components/cc/client.py:19 backend/iam_app/handlers/permission.py:89
msgid "配置平台"
msgstr "Configure the platform"

#: backend/components/cc/client.py:27
msgid "没有业务信息的主机查询"
msgstr "Host query without business information"

#: backend/components/cc/client.py:34
msgid "查询业务"
msgstr "Query business"

#: backend/components/cc/client.py:41
msgid "查询模块"
msgstr "query module"

#: backend/components/cc/client.py:48
msgid "创建集群"
msgstr "create cluster"

#: backend/components/cc/client.py:55
msgid "查询集群"
msgstr "query cluster"

#: backend/components/cc/client.py:62
msgid "创建模块"
msgstr "create module"

#: backend/components/cc/client.py:69 backend/components/cc/client.py:237
msgid "删除模块"
msgstr "delete module"

#: backend/components/cc/client.py:76
msgid "跨业务转移主机"
msgstr "Transfer hosts across businesses"

#: backend/components/cc/client.py:83
msgid "业务内主机转移模块"
msgstr "Intra-business host transfer module"

#: backend/components/cc/client.py:87
msgid "修改业务"
msgstr "modify business"

#: backend/components/cc/client.py:91
msgid "修改主机"
msgstr "modify host"

#: backend/components/cc/client.py:95
msgid "批量修改主机"
msgstr "Modify hosts in batches"

#: backend/components/cc/client.py:103
msgid "创建自定义字段"
msgstr "Create custom fields"

#: backend/components/cc/client.py:111
msgid "获取模型属性"
msgstr "Get model properties"

#: backend/components/cc/client.py:119
msgid "创建模型属性"
msgstr "Create model properties"

#: backend/components/cc/client.py:127
msgid "主机移动到空闲机模块"
msgstr "The host moves to the idle machine module"

#: backend/components/cc/client.py:135
msgid "主机移动到待回收模块"
msgstr "The host moves to the module to be recycled"

#: backend/components/cc/client.py:143
msgid "查询业务实例拓扑"
msgstr "Querying the Topology of a Service Instance"

#: backend/components/cc/client.py:151
msgid "查询业务下的主机"
msgstr "Query the host under business"

#: backend/components/cc/client.py:159
msgid "查询业务下的主机和拓扑信息"
msgstr "Query host and topology information under business"

#: backend/components/cc/client.py:166
msgid "查询业务的空闲机/故障机/待回收模块"
msgstr ""
"Query the idle machine/failure machine/module to be recycled of the business"

#: backend/components/cc/client.py:173
msgid "获取主机与拓扑的关系"
msgstr "Get the relationship between the host and the topology"

#: backend/components/cc/client.py:182
msgid "查询云区域"
msgstr "Query cloud region"

#: backend/components/cc/client.py:189
msgid "查询主机及其对应拓扑"
msgstr "Query hosts and their corresponding topology"

#: backend/components/cc/client.py:197
msgid "创建服务实例"
msgstr "Create a service instance"

#: backend/components/cc/client.py:205
msgid "查询服务实例详细信息"
msgstr "Query service instance details"

#: backend/components/cc/client.py:213
msgid "直接通过bk_host_id查询服务实例详细信息"
msgstr "Query service instance details directly through bk_host_id"

#: backend/components/cc/client.py:221
msgid "服务实例添加标签"
msgstr "Service instance tagging"

#: backend/components/cc/client.py:229
msgid "删除服务实例"
msgstr "delete service instance"

#: backend/components/cc/client.py:245
msgid "根据条件查询业务下的模块"
msgstr "Query the modules under the business according to the conditions"

#: backend/components/cc/client.py:253
msgid "根据模块ID查询主机和模块的关系"
msgstr ""
"Query the relationship between the host and the module according to the "
"module ID"

#: backend/components/cc/client.py:261
msgid "查询主机业务关系信息"
msgstr "Query host business relationship information"

#: backend/components/cmsi/client.py:19
msgid "消息管理"
msgstr "message management"

#: backend/components/cmsi/client.py:27
msgid "通用消息发送"
msgstr "General Messaging"

#: backend/components/constants.py:20
msgid "服务器证书文件"
msgstr "server certificate file"

#: backend/components/constants.py:21
msgid "服务器私钥"
msgstr "server private key"

#: backend/components/constants.py:22
msgid "客户端证书文件"
msgstr "client certificate file"

#: backend/components/constants.py:23
msgid "客户端私钥"
msgstr "client private key"

#: backend/components/db_name_service/client.py:19
msgid "名字服务"
msgstr "name service"

#: backend/components/db_name_service/client.py:27
msgid "创建clb并绑定后端主机"
msgstr "Create clb and bind backend host"

#: backend/components/db_name_service/client.py:34
msgid "clb解绑部分后端主机"
msgstr "clb unbinds some backend hosts"

#: backend/components/db_name_service/client.py:41
msgid "clb新增绑定部分后端主机"
msgstr "CLB newly added some back-end hosts"

#: backend/components/db_name_service/client.py:48
msgid "获取已绑定clb的后端主机私网IP"
msgstr "Obtain the private network IP of the backend host bound to clb"

#: backend/components/db_name_service/client.py:55
msgid "通过IP查询该IP是否已经被clb绑定了"
msgstr "Query whether the IP has been bound by clb through IP"

#: backend/components/db_name_service/client.py:62
msgid "解绑后端主机并删除clb"
msgstr "Unbind the backend host and delete clb"

#: backend/components/db_name_service/client.py:69
msgid "创建北极星服务和别名并绑定后端主机"
msgstr "Create Polaris service and alias and bind backend host"

#: backend/components/db_name_service/client.py:76
msgid "北极星解绑部分后端主机"
msgstr "Polaris unbinds some back-end hosts"

#: backend/components/db_name_service/client.py:83
msgid "北极星新增绑定部分后端主机"
msgstr "Polaris newly added some back-end hosts"

#: backend/components/db_name_service/client.py:90
msgid "获取北极星已绑定的后端主机信息"
msgstr "Get the backend host information bound by Polaris"

#: backend/components/db_name_service/client.py:97
msgid "解绑后端主机并删除别名和北极星服务"
msgstr "Unbind the backend host and delete the alias and Polaris service"

#: backend/components/db_remote_service/client.py:21
msgid "DB 远程服务"
msgstr "DB remote service"

#: backend/components/db_remote_service/client.py:37
msgid "DB 远程执行"
msgstr "DB remote execution"

#: backend/components/db_remote_service/client.py:46
msgid "DB PROXY远程执行"
msgstr "DB PROXY remote execution"

#: backend/components/db_remote_service/client.py:55
msgid "redis 远程执行"
msgstr "Redis remote execution"

#: backend/components/db_remote_service/client.py:64
msgid "twemproxy 远程执行"
msgstr "twemproxy remote execution"

#: backend/components/dbconfig/client.py:20
msgid "DB配置系统"
msgstr "DB configuration system"

#: backend/components/dbconfig/client.py:28
msgid "新增平台级配置文件"
msgstr "Add platform-level configuration files"

#: backend/components/dbconfig/client.py:35
msgid "查询配置文件列表"
msgstr "Query the list of configuration files"

#: backend/components/dbconfig/client.py:42
msgid "编辑平台级配置"
msgstr "Edit platform-level configuration"

#: backend/components/dbconfig/client.py:49
msgid "查询公共配置项列表"
msgstr "Query the list of public configuration items"

#: backend/components/dbconfig/client.py:56
msgid "查询定义的配置名列表"
msgstr "Query the list of defined configuration names"

#: backend/components/dbconfig/client.py:63
msgid "查询配置项列表"
msgstr "Query the list of configuration items"

#: backend/components/dbconfig/client.py:72
msgid "保存不可变配置（如字符集等）"
msgstr "Save immutable configuration (such as charset, etc.)"

#: backend/components/dbconfig/client.py:79
msgid "编辑发布层级（业务、集群、模块）配置"
msgstr "Edit release level (business, cluster, module) configuration"

#: backend/components/dbconfig/client.py:86
msgid "批量获取多个对象的某一配置项"
msgstr "Get a configuration item of multiple objects in batches"

#: backend/components/dbconfig/client.py:93
msgid "查询历史配置版本名列表"
msgstr "Query the list of historical configuration version names"

#: backend/components/dbconfig/client.py:100
msgid "查询版本详细信息"
msgstr "Query version details"

#: backend/components/dbconfig/client.py:107
msgid "查询实例配置文件模版"
msgstr "Query instance configuration file template"

#: backend/components/dbconfig/constants.py:20
msgid "平台层级"
msgstr "platform level"

#: backend/components/dbconfig/constants.py:21
msgid "业务层级"
msgstr "business level"

#: backend/components/dbconfig/constants.py:22
msgid "模块层级"
msgstr "module level"

#: backend/components/dbconfig/constants.py:23
msgid "集群层级"
msgstr "cluster level"

#: backend/components/dbconfig/constants.py:24
msgid "实例层级"
msgstr "instance level"

#: backend/components/dbconfig/constants.py:30
msgid "部署配置"
msgstr "deployment configuration"

#: backend/components/dbconfig/constants.py:31
msgid "数据库配置"
msgstr "database configuration"

#: backend/components/dbconfig/constants.py:32
msgid "备份配置"
msgstr "backup configuration"

#: backend/components/dbconfig/constants.py:33
msgid "Proxy配置"
msgstr "Proxy configuration"

#: backend/components/dbconfig/constants.py:39
msgid "新增"
msgstr "Add"

#: backend/components/dbconfig/constants.py:40
#: backend/db_services/mysql/permission/constants.py:24
msgid "更新"
msgstr "renew"

#: backend/components/dbconfig/constants.py:41
#: backend/db_services/mysql/permission/constants.py:25
msgid "删除"
msgstr "delete"

#: backend/components/dbconfig/constants.py:47
msgid "仅保存"
msgstr "save only"

#: backend/components/dbconfig/constants.py:48
msgid "生成并保存"
msgstr "generate and save"

#: backend/components/dbconfig/constants.py:49
msgid "保存并发布"
msgstr "save and publish"

#: backend/components/dbconfig/constants.py:50
msgid "生成并发布"
msgstr "generate and publish"

#: backend/components/dbconfig/constants.py:56
msgid "列表"
msgstr "the list"

#: backend/components/dbconfig/constants.py:57
msgid "字典"
msgstr "dictionary"

#: backend/components/dbconfig/constants.py:58
msgid "分级字典"
msgstr "Grading Dictionary"

#: backend/components/dbresource/client.py:19
msgid "资源池 服务"
msgstr "resource pool service"

#: backend/components/dbresource/client.py:27
#: backend/db_services/dbresource/views/resource.py:122
msgid "资源导入"
msgstr "resource import"

#: backend/components/dbresource/client.py:34
#: backend/db_services/dbresource/views/resource.py:65
msgid "资源池资源列表"
msgstr "resource list"

#: backend/components/dbresource/client.py:41
msgid "资源池资源申请"
msgstr "Resource pool resource application"

#: backend/components/dbresource/client.py:48
#: backend/db_services/dbresource/views/resource.py:192
msgid "获取挂载点"
msgstr "Get the mount point"

#: backend/components/dbresource/client.py:55
#: backend/db_services/dbresource/views/resource.py:200
msgid "获取磁盘类型"
msgstr "Get disk type"

#: backend/components/dbresource/client.py:62
#: backend/db_services/dbresource/views/resource.py:208
msgid "根据逻辑城市查询园区"
msgstr "Query parks based on logical cities"

#: backend/components/dbresource/client.py:69
msgid "资源申请预占用"
msgstr "Resource application pre-occupancy"

#: backend/components/dbresource/client.py:76
msgid "资源申请确认"
msgstr "Resource Application Confirmation"

#: backend/components/dbresource/client.py:83
#: backend/db_services/dbresource/views/resource.py:248
msgid "资源删除"
msgstr "resource deletion"

#: backend/components/dbresource/client.py:90
#: backend/db_services/dbresource/views/resource.py:258
msgid "资源更新"
msgstr "Resource update"

#: backend/components/dbresource/client.py:97
msgid "获取机型List"
msgstr "Get Model List"

#: backend/components/dbresource/client.py:104
msgid "获取操作记录"
msgstr "Get operation records"

#: backend/components/gcs_dns/client.py:19
msgid "GCSDNS域名管理"
msgstr "GCSDNS domain name management"

#: backend/components/gcs_dns/client.py:27
msgid "获取域名映射关系"
msgstr "Get domain name mapping relationship"

#: backend/components/gcs_dns/client.py:34
msgid "删除域名映射"
msgstr "delete domain mapping"

#: backend/components/gcs_dns/client.py:41
msgid "更新域名映射关系"
msgstr "Update domain name mapping relationship"

#: backend/components/gcs_dns/client.py:48
msgid "新增域名映射关系"
msgstr "Add domain name mapping relationship"

#: backend/components/gcs_dns/client.py:55
msgid "批量更新域名映射关系"
msgstr "Batch update domain name mapping relationship"

#: backend/components/gcs_dns/client.py:62
msgid "获取所有ip、域名关系"
msgstr "Get all ip, domain name relationship"

#: backend/components/gse/client.py:19
msgid "管控平台"
msgstr "Control platform"

#: backend/components/gse/client.py:27
msgid "Agent在线状态查询"
msgstr "Agent Online Status Query"

#: backend/components/hadb/client.py:19
msgid "HADB 服务"
msgstr "HADB service"

#: backend/components/hadb/client.py:27
msgid "上报和查询ha的探测切换日志"
msgstr "Report and query ha detection switch log"

#: backend/components/hadb/client.py:34
msgid "上报和查询数据库实例的状态"
msgstr "Report and query the status of the database instance"

#: backend/components/hadb/client.py:41
msgid "上报和查询ha服务的状态"
msgstr "Report and query the status of the ha service"

#: backend/components/hadb/client.py:48
msgid "查询和上报切换队列"
msgstr "Query and report switching queue"

#: backend/components/hadb/client.py:55
msgid "查询切换详情"
msgstr "Query switching details"

#: backend/components/itsm/client.py:19
msgid "ITSM流程管理"
msgstr "ITSM process management"

#: backend/components/itsm/client.py:27 backend/ticket/views.py:199
#: backend/ticket/views.py:201
msgid "创建单据"
msgstr "Create ticket"

#: backend/components/itsm/client.py:34
msgid "审批结果查询"
msgstr "Approval result query"

#: backend/components/itsm/client.py:41
msgid "单据日志查询"
msgstr "Ticket log query"

#: backend/components/itsm/client.py:48
msgid "服务目录查询"
msgstr "Service Directory Inquiry"

#: backend/components/itsm/client.py:51
msgid "服务列表查询"
msgstr "Service List Query"

#: backend/components/itsm/client.py:58
msgid "创建服务目录"
msgstr "Create a service catalog"

#: backend/components/itsm/client.py:61
msgid "导入服务"
msgstr "import service"

#: backend/components/itsm/client.py:64
msgid "更新服务"
msgstr "update service"

#: backend/components/itsm/constants.py:18 backend/ticket/constants.py:52
msgid "处理中"
msgstr "Processing"

#: backend/components/itsm/constants.py:19
msgid "已结束"
msgstr "over"

#: backend/components/itsm/constants.py:20
msgid "已撤单"
msgstr "Canceled"

#: backend/components/itsm/constants.py:21
msgid "被终止"
msgstr "terminated"

#: backend/components/job/client.py:19
msgid "作业平台"
msgstr "Working platform"

#: backend/components/job/client.py:27
msgid "快速执行脚本"
msgstr "Execute scripts quickly"

#: backend/components/job/client.py:34
msgid "快速分发文件"
msgstr "Distribute files quickly"

#: backend/components/job/client.py:41
msgid "快速分发配置"
msgstr "Quick distribution configuration"

#: backend/components/job/client.py:48
msgid "查询作业执行状态"
msgstr "Query job execution status"

#: backend/components/job/client.py:55
msgid "根据作业实例ID查询作业执行日志"
msgstr "Query job execution logs based on the job instance ID"

#: backend/components/job/client.py:62
msgid "根据ip列表批量查询作业执行日志"
msgstr "Query job execution logs in batches based on the IP list"

#: backend/components/job/client.py:69
msgid "新建凭据"
msgstr "Create new credentials"

#: backend/components/job/client.py:76
msgid "新建文件源"
msgstr "new file source"

#: backend/components/mysql_backup/client.py:18
#: backend/components/mysql_backup/client.py:34
msgid "备份文件下载"
msgstr "Backup file download"

#: backend/components/mysql_backup/client.py:26
msgid "获取备份"
msgstr "get backup"

#: backend/components/mysql_backup/client.py:42
msgid "查询单据状态"
msgstr "Query ticket status"

#: backend/components/mysql_partition/client.py:18
#: backend/db_services/partition/constants.py:13
msgid "分区管理"
msgstr "Partition management"

#: backend/components/mysql_partition/client.py:26
msgid "获取分区语句"
msgstr "get partition statement"

#: backend/components/mysql_partition/client.py:34
msgid "添加分区配置"
msgstr "Add partition configuration"

#: backend/components/mysql_partition/client.py:42
msgid "删除分区配置"
msgstr "Delete partition configuration"

#: backend/components/mysql_partition/client.py:50
msgid "修改分区配置"
msgstr "Modify partition configuration"

#: backend/components/mysql_partition/client.py:58
msgid "查询分区配置"
msgstr "Query partition configuration"

#: backend/components/mysql_partition/client.py:66
msgid "启用分区"
msgstr "enable partition"

#: backend/components/mysql_partition/client.py:74
msgid "禁用分区"
msgstr "disable partition"

#: backend/components/mysql_partition/client.py:82
msgid "查询分区日志"
msgstr "Query partition logs"

#: backend/components/mysql_priv_manager/client.py:20
msgid "MySQL权限管理"
msgstr "MySQL permission management"

#: backend/components/mysql_priv_manager/client.py:29
msgid "帐号规则详情"
msgstr "Account Rules Details"

#: backend/components/mysql_priv_manager/client.py:36
msgid "帐号规则清单"
msgstr "List of account rules"

#: backend/components/mysql_priv_manager/client.py:43
msgid "添加帐号规则"
msgstr "Add Account Rules"

#: backend/components/mysql_priv_manager/client.py:50
msgid "删除帐号规则"
msgstr "delete account rule"

#: backend/components/mysql_priv_manager/client.py:57
msgid "修改帐号规则"
msgstr "Modify Account Rules"

#: backend/components/mysql_priv_manager/client.py:65
msgid "请求公钥"
msgstr "request public key"

#: backend/components/mysql_priv_manager/client.py:72
#: backend/db_services/mysql/permission/db_account/views.py:61
msgid "创建账号"
msgstr "Create an account"

#: backend/components/mysql_priv_manager/client.py:79
#: backend/db_services/mysql/permission/db_account/views.py:68
msgid "删除账号"
msgstr "delete account"

#: backend/components/mysql_priv_manager/client.py:86
#: backend/db_services/mysql/permission/db_account/views.py:75
msgid "修改密码"
msgstr "change Password"

#: backend/components/mysql_priv_manager/client.py:95
msgid "前置检查授权数据"
msgstr "Pre-check authorization data"

#: backend/components/mysql_priv_manager/client.py:102
msgid "添加授权"
msgstr "Add authorization"

#: backend/components/mysql_priv_manager/client.py:109
msgid "查询现网授权记录"
msgstr "Query the Authorization Record of the Live Network"

#: backend/components/mysql_priv_manager/client.py:118
msgid "实例间权限克隆"
msgstr "Inter-instance privilege cloning"

#: backend/components/mysql_priv_manager/client.py:125
msgid "实例间权限克隆前置检查"
msgstr "Inter-instance permission cloning pre-check"

#: backend/components/mysql_priv_manager/client.py:132
msgid "客户端权限克隆"
msgstr "Client Permission Clone"

#: backend/components/mysql_priv_manager/client.py:139
msgid "客户端权限克隆前置检查"
msgstr "Client permission clone pre-check"

#: backend/components/mysql_priv_manager/client.py:146
msgid "mysql实例创建临时账号(切换专属接口)"
msgstr ""
"Mysql instance creates a temporary account (switching the dedicated "
"interface)"

#: backend/components/proxy_api.py:35
msgid "ProxyApi 必须传入 bk_cloud_id 参数"
msgstr "ProxyApi must pass in the bk_cloud_id parameter"

#: backend/components/sops/client.py:24
msgid "标准运维"
msgstr "Standard operation and maintenance"

#: backend/components/sops/client.py:33
msgid "通过业务流程模版创建任务"
msgstr "Create tasks from business process templates"

#: backend/components/sops/client.py:40
msgid "启动任务"
msgstr "start task"

#: backend/components/sops/client.py:47
msgid "查询任务状态"
msgstr "Query task status"

#: backend/components/sops/client.py:54
msgid "查询任务详情"
msgstr "Query task details"

#: backend/components/sops/client.py:61
msgid "查询任务Node详情"
msgstr "Querying Task Node Details"

#: backend/components/sql_import/client.py:20
msgid "SQL语句导入"
msgstr "SQL statement import"

#: backend/components/sql_import/client.py:28
#: backend/db_services/mysql/sql_import/views.py:67
msgid "sql语法检查"
msgstr "sql syntax check"

#: backend/components/sql_import/client.py:34
msgid "SQL模拟执行"
msgstr "SQL simulation execution"

#: backend/components/sql_import/client.py:42
#: backend/components/sql_import/client.py:58
msgid "容器化SQL模拟执行"
msgstr "Containerized SQL simulation execution"

#: backend/components/sql_import/client.py:50
msgid "查询模拟执行任务状态也"
msgstr "Querying the simulated execution task status is also"

#: backend/components/usermanage/client.py:19
msgid "用户管理模块"
msgstr "User Management Module"

#: backend/components/usermanage/client.py:27
msgid "获取所有用户"
msgstr "get all users"

#: backend/components/usermanage/client.py:35
msgid "获取单个用户"
msgstr "get a single user"

#: backend/components/utils/handlers.py:23
msgid "接口返回数据为空，请检查接口数据是否正常"
msgstr ""
"The data returned by the interface is empty, please check whether the "
"interface data is normal"

#: backend/configuration/apps.py:30
msgid "初始化配置异常，错误信息:{}"
msgstr "Initial configuration exception, error message: {}"

#: backend/configuration/constants.py:21
#: backend/db_services/mysql/permission/constants.py:47
#: backend/flow/consts.py:246
msgid "MySQL"
msgstr "MySQL"

#: backend/configuration/constants.py:22
msgid "TendbCluster"
msgstr "Tendbcluster"

#: backend/configuration/constants.py:23
msgid "Redis"
msgstr "Redis"

#: backend/configuration/constants.py:24 backend/flow/consts.py:130
msgid "Kafka"
msgstr "Kafka"

#: backend/configuration/constants.py:25
msgid "HDFS"
msgstr "HDFS"

#: backend/configuration/constants.py:26
msgid "ElasticSearch"
msgstr "ElasticSearch"

#: backend/configuration/constants.py:27 backend/flow/consts.py:132
msgid "Pulsar"
msgstr "Pulsar"

#: backend/configuration/constants.py:28
msgid "InfluxDB"
msgstr "InfluxDB"

#: backend/configuration/constants.py:29
msgid "Riak"
msgstr "Ripple"

#: backend/configuration/constants.py:32
msgid "Cloud"
msgstr "Cloud"

#: backend/configuration/constants.py:81
msgid "请补充：指定云区域的proxy信息"
msgstr "Please add: the proxy information of the specified cloud area"

#: backend/configuration/constants.py:83
msgid "请补充：自定义指标-数据ID"
msgstr "Please add: custom indicator - data ID"

#: backend/configuration/constants.py:84
msgid "请补充：自定义指标-Token"
msgstr "Please add: custom indicator-Token"

#: backend/configuration/constants.py:87
msgid "请补充：自定义事件-数据ID"
msgstr "Please add: Custom Event - Data ID"

#: backend/configuration/constants.py:88
msgid "请补充：自定义事件-Token"
msgstr "Please add: Custom Event-Token"

#: backend/configuration/constants.py:94
msgid "主从高可用-主域名配置"
msgstr "Master-slave high availability - master domain name configuration"

#: backend/configuration/constants.py:95
msgid "主从高可用-从域名配置"
msgstr "Master-slave high availability-slave domain name configuration"

#: backend/configuration/constants.py:96
msgid "单节点-域名配置"
msgstr "standalone-domain name configuration"

#: backend/configuration/constants.py:97
msgid "端口默认值-Proxy起始端口"
msgstr "Port default value - Proxy start port"

#: backend/configuration/constants.py:98
msgid "端口默认值-MySQL起始端口"
msgstr "Port default value - MySQL start port"

#: backend/configuration/constants.py:99
msgid "监控数据源token"
msgstr "Monitoring data source token"

#: backend/configuration/constants.py:100
msgid "监控数据源上报配置"
msgstr "Monitoring data source reporting configuration"

#: backend/configuration/constants.py:101
msgid "业务空闲模块ID"
msgstr "Business idle module ID"

#: backend/configuration/models/dba.py:21
#: backend/configuration/models/ip_whitelist.py:25
#: backend/configuration/serializers.py:41
#: backend/configuration/serializers.py:50
#: backend/configuration/serializers.py:76
#: backend/configuration/serializers.py:92 backend/core/storages/models.py:19
#: backend/db_event/serializers.py:47 backend/db_event/serializers.py:61
#: backend/db_meta/models/app.py:36 backend/db_meta/models/group.py:22
#: backend/db_monitor/serializers.py:21 backend/db_proxy/models.py:127
#: backend/db_proxy/views/db_meta/serializers.py:95
#: backend/db_proxy/views/db_meta/serializers.py:105
#: backend/db_proxy/views/dbconfig/serializers.py:21
#: backend/db_services/cmdb/serializers.py:18
#: backend/db_services/cmdb/serializers.py:25
#: backend/db_services/cmdb/serializers.py:44
#: backend/db_services/dbconfig/serializers.py:74
#: backend/db_services/dbconfig/serializers.py:86
#: backend/db_services/ipchooser/serializers/topo_sers.py:70
#: backend/db_services/mysql/cluster/serializers.py:60
#: backend/db_services/mysql/permission/db_account/serializers.py:84
#: backend/db_services/mysql/permission/db_account/serializers.py:94
#: backend/db_services/partition/serializers.py:20
#: backend/db_services/partition/serializers.py:31
#: backend/db_services/partition/serializers.py:37
#: backend/db_services/partition/serializers.py:96 backend/flow/models.py:19
#: backend/ticket/builders/common/base.py:32
#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:65
#: backend/ticket/models/ticket.py:86 backend/ticket/serializers.py:197
msgid "业务ID"
msgstr "Business ID"

#: backend/configuration/models/dba.py:22
#: backend/configuration/serializers.py:45 backend/db_monitor/models.py:31
msgid "数据库类型"
msgstr "database type"

#: backend/configuration/models/dba.py:23
#: backend/configuration/serializers.py:46 backend/db_monitor/models.py:32
#: backend/db_services/user/views.py:26
msgid "人员列表"
msgstr "personnel list"

#: backend/configuration/models/dba.py:26
#: backend/configuration/models/dba.py:27
msgid "DBA人员设置"
msgstr "DBA personnel settings"

#: backend/configuration/models/ip_whitelist.py:26
#: backend/configuration/serializers.py:77 backend/ticket/models/ticket.py:100
#: backend/ticket/serializers.py:68
msgid "备注"
msgstr "Remark"

#: backend/configuration/models/ip_whitelist.py:27
#: backend/configuration/serializers.py:78
#: backend/ticket/builders/mysql/mysql_authorize_rules.py:36
msgid "ip列表"
msgstr "ip list"

#: backend/configuration/models/ip_whitelist.py:30
#: backend/configuration/models/ip_whitelist.py:31
#: backend/configuration/views/ip_whitelist.py:31
msgid "IP白名单"
msgstr "IP whitelist"

#: backend/configuration/models/password_policy.py:22
#: backend/configuration/serializers.py:55
#: backend/configuration/serializers.py:72
msgid "账号类型"
msgstr "account type"

#: backend/configuration/models/password_policy.py:23
#: backend/configuration/models/password_policy.py:26
#: backend/configuration/serializers.py:56
#: backend/configuration/views/password_policy.py:22
msgid "密码安全策略"
msgstr "Password Security Policy"

#: backend/configuration/models/profile.py:19 backend/version_log/models.py:42
msgid "用户名"
msgstr "username"

#: backend/configuration/models/profile.py:20
#: backend/db_services/dbresource/serializers.py:47
msgid "标签"
msgstr "Label"

#: backend/configuration/models/profile.py:21
msgid "配置值"
msgstr "configuration value"

#: backend/configuration/models/system.py:29
msgid "DBM的流程服务ID"
msgstr "DBM process service ID"

#: backend/configuration/models/system.py:33 backend/ticket/serializers.py:213
msgid "类型"
msgstr "type"

#: backend/configuration/models/system.py:34
msgid "关键字唯一标识"
msgstr "Keyword Unique Identifier"

#: backend/configuration/models/system.py:35
msgid "系统设置值"
msgstr "system settings"

#: backend/configuration/models/system.py:36
#: backend/db_services/dbconfig/serializers.py:31
#: backend/db_services/dbconfig/serializers.py:82
#: backend/db_services/dbresource/filters.py:20
#: backend/flow/plugins/components/collections/common/pause.py:71
msgid "描述"
msgstr "describe"

#: backend/configuration/models/system.py:39
#: backend/configuration/models/system.py:40
#: backend/configuration/views/system.py:24
#: backend/configuration/views/system.py:44
#: backend/configuration/views/system.py:54
msgid "系统设置"
msgstr "system settings"

#: backend/configuration/serializers.py:64
msgid "密码最小长度不能大于最大长度"
msgstr "The minimum password length cannot be greater than the maximum length"

#: backend/configuration/serializers.py:66
msgid "请确保密码长度范围为整型"
msgstr "Please ensure that the password length range is an integer"

#: backend/configuration/serializers.py:88
msgid "id列表"
msgstr "list of ids"

#: backend/configuration/serializers.py:93
msgid "代过滤IP"
msgstr "Generation filter IP"

#: backend/configuration/serializers.py:94
msgid "待过滤白名单ID"
msgstr "Whitelist ID to be filtered"

#: backend/configuration/views/dba.py:21
msgid "DBA人员"
msgstr "DBA personnel"

#: backend/configuration/views/dba.py:36
msgid "查询DBA人员列表"
msgstr "Query the list of DBA personnel"

#: backend/configuration/views/dba.py:44
msgid "更新DBA人员"
msgstr "Update DBA staff"

#: backend/configuration/views/ip_whitelist.py:57
#: backend/configuration/views/ip_whitelist.py:58
msgid "IP白名单详情"
msgstr "IP whitelist details"

#: backend/configuration/views/ip_whitelist.py:66
msgid "IP白名单列表"
msgstr "IP Whitelist"

#: backend/configuration/views/ip_whitelist.py:78
#: backend/configuration/views/ip_whitelist.py:80
msgid "创建IP白名单"
msgstr "Create an IP whitelist"

#: backend/configuration/views/ip_whitelist.py:87
#: backend/configuration/views/ip_whitelist.py:89
#: backend/configuration/views/ip_whitelist.py:98
msgid "更新IP白名单"
msgstr "Update IP whitelist"

#: backend/configuration/views/ip_whitelist.py:96
msgid "删除IP白名单"
msgstr "delete IP whitelist"

#: backend/configuration/views/ip_whitelist.py:105
msgid "批量删除IP白名单"
msgstr "batch delete IP whitelist"

#: backend/configuration/views/password_policy.py:33
msgid "查询密码安全策略"
msgstr "Query Password Security Policy"

#: backend/configuration/views/password_policy.py:46
msgid "更新密码安全策略"
msgstr "Update Password Security Policy"

#: backend/configuration/views/profile.py:20
msgid "个人配置"
msgstr "personal configuration"

#: backend/configuration/views/profile.py:29
msgid "查询个人配置列表"
msgstr "query personal configuration"

#: backend/configuration/views/profile.py:42
msgid "新增/更新个人配置"
msgstr "update or create personal configuration"

#: backend/configuration/views/system.py:43
msgid "系统设置列表"
msgstr "system settings"

#: backend/configuration/views/system.py:51
msgid "系统设置键值映射表"
msgstr "System settings key-value mapping table"

#: backend/configuration/views/system.py:65
msgid "查询环境变量"
msgstr "Query environment variables"

#: backend/core/encrypt/constants.py:26
msgid "PKCS1"
msgstr "PKCS1"

#: backend/core/encrypt/constants.py:27
msgid "PKCS1_OAEP"
msgstr "PKCS1_OAEP"

#: backend/core/encrypt/constants.py:33
msgid "私钥对象"
msgstr "private key object"

#: backend/core/encrypt/constants.py:34
msgid "公钥对象"
msgstr "public key object"

#: backend/core/encrypt/constants.py:40
msgid "私钥"
msgstr "private key"

#: backend/core/encrypt/constants.py:41
msgid "公钥"
msgstr "public key"

#: backend/core/encrypt/constants.py:50
msgid "MySQL的RSA秘钥"
msgstr "MySQL RSA key"

#: backend/core/encrypt/constants.py:51
msgid "透传接口的RSA秘钥"
msgstr "RSA key of the transparent interface"

#: backend/core/encrypt/constants.py:52
msgid "云区域服务的RSA秘钥"
msgstr "RSA key of the cloud zone service"

#: backend/core/encrypt/exceptions.py:19
msgid "密码加密失败"
msgstr "Password encryption failed"

#: backend/core/encrypt/exceptions.py:23
msgid "密码解密失败"
msgstr "Password decryption failed"

#: backend/core/encrypt/handlers.py:162
msgid "密码加密失败: {}"
msgstr "Password encryption failed: {}"

#: backend/core/encrypt/handlers.py:181
msgid "密码解密失败: {}"
msgstr "Password decryption failed: {}"

#: backend/core/encrypt/models.py:19 backend/core/encrypt/serializers.py:23
msgid "密钥名称"
msgstr "key name"

#: backend/core/encrypt/models.py:20
msgid "密钥类型"
msgstr "key type"

#: backend/core/encrypt/models.py:21
msgid "密钥描述"
msgstr "key description"

#: backend/core/encrypt/models.py:22
msgid "密钥内容"
msgstr "key content"

#: backend/core/encrypt/models.py:28 backend/core/encrypt/models.py:29
msgid "RSA密钥"
msgstr "RSA key"

#: backend/core/encrypt/serializers.py:20
msgid "密钥名称列表"
msgstr "list of key names"

#: backend/core/encrypt/views.py:21
msgid "RSA秘钥"
msgstr "RSA key"

#: backend/core/encrypt/views.py:29
msgid "查询公钥列表"
msgstr "Query the list of public keys"

#: backend/core/storages/base.py:110
msgid "未知文件源"
msgstr "Unknown file source"

#: backend/core/storages/base.py:113
#, python-brace-format
msgid "{file_type_alias}-{file_source_alias}"
msgstr "{file_type_alias}-{file_source_alias}"

#: backend/core/storages/base.py:121
#, python-brace-format
msgid "{file_type_alias}-{server_ips_str}"
msgstr "{file_type_alias}-{server_ips_str}"

#: backend/core/storages/base.py:125
#, python-brace-format
msgid "未知文件源-{file_type}"
msgstr "Unknown file source - {file_type}"

#: backend/core/storages/base.py:128
#, python-brace-format
msgid ""
"从 [{source_info_str}] 下发文件 [{file_list_str}] 到目标机器路径 "
"[{file_target_path}]"
msgstr ""
"Send the file [{file_list_str}] from [{source_info_str}] to the target "
"machine path [{file_target_path}]"

#: backend/core/storages/base.py:217
#, python-brace-format
msgid "文件分发错误：err_msg -> {err_msg}"
msgstr "File distribution error: err_msg -&gt; {err_msg}"

#: backend/core/storages/constants.py:24
msgid "公开仓库"
msgstr "public repository"

#: backend/core/storages/constants.py:25
msgid "私有仓库"
msgstr "private warehouse"

#: backend/core/storages/constants.py:31 backend/flow/consts.py:241
msgid "服务器文件"
msgstr "server file"

#: backend/core/storages/constants.py:32
msgid "第三方源文件"
msgstr "third party source files"

#: backend/core/storages/constants.py:38 backend/core/storages/constants.py:60
msgid "本地文件系统"
msgstr "local file system"

#: backend/core/storages/constants.py:39 backend/core/storages/constants.py:60
msgid "蓝鲸制品库"
msgstr "BKREPO"

#: backend/core/storages/constants.py:83
msgid "单一SecretKey"
msgstr "Single SecretKey"

#: backend/core/storages/constants.py:85
msgid "单一密码"
msgstr "single password"

#: backend/core/storages/constants.py:86
msgid "用户名+密码"
msgstr "username+password"

#: backend/core/storages/exceptions.py:23
msgid "注册凭证失败"
msgstr "Failed to register credentials"

#: backend/core/storages/exceptions.py:28
msgid "文件源类型错误"
msgstr "Wrong file source type"

#: backend/core/storages/exceptions.py:33
msgid "注册文件失败"
msgstr "Failed to register file"

#: backend/core/storages/exceptions.py:38
msgid "文件传输失败"
msgstr "File transfer failed"

#: backend/core/storages/file_source.py:27
#, python-brace-format
msgid "storage_type must be one of {choices}"
msgstr "storage_type must be one of {choices}"

#: backend/core/storages/file_source.py:35
msgid "DBM[biz-{bk_biz_id}]{storage_type_alias}文件凭证"
msgstr "DBM[biz:{bk_biz_id}]{storage_type_alias} file credentials"

#: backend/core/storages/file_source.py:94
#, python-brace-format
msgid "注册凭证失败：bk_biz_id -> {bk_biz_id}, err_msg -> {err_msg}"
msgstr ""
"Register credential failed: bk_biz_id -&gt; {bk_biz_id}, err_msg -&gt; "
"{err_msg}"

#: backend/core/storages/file_source.py:147
msgid "DBM{storage_type_alias}文件源"
msgstr "DBM[biz:{bk_biz_id}]{storage_type_alias} file source"

#: backend/core/storages/file_source.py:204
#, python-brace-format
msgid "注册文件源失败：bk_biz_id -> {bk_biz_id}, err_msg -> {err_msg}"
msgstr ""
"Failed to register file source: bk_biz_id -&gt; {bk_biz_id}, err_msg -&gt; "
"{err_msg}"

#: backend/core/storages/models.py:20
msgid "文件源存储类型"
msgstr "file source storage type"

#: backend/core/storages/models.py:22
msgid "凭证名称"
msgstr "credential name"

#: backend/core/storages/models.py:23
msgid "凭证类型"
msgstr "Ticket Type"

#: backend/core/storages/models.py:24
msgid "凭证描述"
msgstr "credential description"

#: backend/core/storages/models.py:25 backend/core/storages/models.py:38
msgid "凭证ID"
msgstr "Credential ID"

#: backend/core/storages/models.py:31 backend/core/storages/models.py:32
msgid "作业平台文件凭证"
msgstr "Work platform file certificate"

#: backend/core/storages/models.py:39
msgid "文件源ID"
msgstr "file source ID"

#: backend/core/storages/models.py:41 backend/core/storages/models.py:44
msgid "文件源标识"
msgstr "file source ID"

#: backend/core/storages/models.py:42
msgid "文件源别名"
msgstr "file source alias"

#: backend/core/storages/models.py:43
msgid "文件源接入参数"
msgstr "File source access parameters"

#: backend/core/storages/models.py:62 backend/core/storages/models.py:63
msgid "作业平台文件源"
msgstr "Operating platform file source"

#: backend/core/storages/serializers.py:17
#: backend/db_services/taskflow/serializers.py:62
msgid "文件路径列表"
msgstr "list of file paths"

#: backend/core/storages/serializers.py:21
#: backend/db_proxy/views/jobapi/serializers.py:66
msgid "文件路径"
msgstr "file path"

#: backend/core/storages/views.py:25
msgid "批量获取文件内容"
msgstr "Get file content in batches"

#: backend/core/storages/views.py:32
msgid "获取文件内容"
msgstr "get file content"

#: backend/core/storages/views.py:38
msgid "删除文件"
msgstr "Delete Files"

#: backend/core/translation/exceptions.py:19
msgid "翻译目录未找到"
msgstr "Translation directory not found"

#: backend/core/translation/exceptions.py:23
msgid "存在未翻译的文件/代码片段"
msgstr "There are untranslated files/code fragments"

#: backend/core/translation/exceptions.py:27
msgid "存在包含特定翻译语言的f-string"
msgstr "There is an f-string containing the specific translation language"

#: backend/db_event/serializers.py:19
msgid "事件ID"
msgstr "event ID"

#: backend/db_event/serializers.py:25
msgid "日志内容"
msgstr "log content"

#: backend/db_event/serializers.py:26
msgid "日志级别"
msgstr "log level"

#: backend/db_event/serializers.py:27
msgid "时间戳"
msgstr "timestamp"

#: backend/db_event/serializers.py:33
msgid "日志列表"
msgstr "log list"

#: backend/db_event/serializers.py:45
#: backend/db_meta/api/storage_instance/apis.py:165
#: backend/db_services/dbbase/resources/constants.py:19
#: backend/db_services/ipchooser/constants.py:82
#: backend/db_services/ipchooser/mock_data.py:43
#: backend/db_services/ipchooser/mock_data.py:62
#: backend/db_services/ipchooser/mock_data.py:98 backend/ticket/handler.py:52
msgid "集群"
msgstr "cluster"

#: backend/db_event/serializers.py:48
#: backend/db_proxy/views/db_meta/serializers.py:52
msgid "实例IP"
msgstr "Instance IP"

#: backend/db_event/serializers.py:49
#: backend/db_services/dbresource/serializers.py:203
msgid "实例类型"
msgstr "instance type"

#: backend/db_event/serializers.py:50
msgid "实例角色"
msgstr "instance role"

#: backend/db_event/serializers.py:51 backend/db_event/serializers.py:66
#: backend/db_proxy/views/redis_dts/serializers.py:23
#: backend/db_services/redis_dts/serializers.py:18
#: backend/ticket/builders/mysql/mysql_data_repair.py:36
#: backend/ticket/builders/mysql/mysql_flashback.py:28
#: backend/ticket/serializers.py:111
msgid "开始时间"
msgstr "Starting time"

#: backend/db_event/serializers.py:52 backend/db_event/serializers.py:53
#: backend/db_event/serializers.py:67
#: backend/db_proxy/views/redis_dts/serializers.py:24
#: backend/db_services/redis_dts/serializers.py:19
#: backend/ticket/builders/mysql/mysql_data_repair.py:37
#: backend/ticket/builders/mysql/mysql_flashback.py:29
#: backend/ticket/serializers.py:112
msgid "结束时间"
msgstr "End Time"

#: backend/db_event/views/dbha.py:24
msgid "DBHA事件"
msgstr "DBHA event"

#: backend/db_event/views/dbha.py:32
msgid "DBHA切换事件列表"
msgstr "DBHA switching event list"

#: backend/db_event/views/dbha.py:71
msgid "DBHA切换事件详情（日志）"
msgstr "Details of DBHA switchover events (logs)"

#: backend/db_meta/api/cluster/base/graph.py:107
msgid "访问入口"
msgstr "access entrance"

#: backend/db_meta/api/cluster/base/graph.py:117
msgid "node"
msgstr "node"

#: backend/db_meta/api/cluster/base/graph.py:118
msgid "group"
msgstr "group"

#: backend/db_meta/api/cluster/base/graph.py:122
msgid "同步"
msgstr "Synchronize"

#: backend/db_meta/api/cluster/base/graph.py:123
msgid "访问"
msgstr "access"

#: backend/db_meta/api/cluster/base/graph.py:124
msgid "域名绑定"
msgstr "domain binding"

#: backend/db_meta/api/cluster/base/graph.py:125
msgid "读写"
msgstr "read and write"

#: backend/db_meta/api/cluster/base/graph.py:157
msgid "同步到其他集群"
msgstr "Sync to other clusters"

#: backend/db_meta/api/cluster/base/graph.py:158
msgid "从其他集群同步"
msgstr "Synchronize from other clusters"

#: backend/db_meta/api/cluster/base/graph.py:159
msgid "访问其他集群"
msgstr "Access other clusters"

#: backend/db_meta/api/cluster/base/graph.py:160
msgid "从其他集群访问"
msgstr "Access from other clusters"

#: backend/db_meta/api/cluster/es/detail.py:27
msgid "Client 节点"
msgstr "Client node"

#: backend/db_meta/api/cluster/es/detail.py:32
msgid "Master 节点"
msgstr "Master Node"

#: backend/db_meta/api/cluster/es/detail.py:35
#: backend/db_services/bigdata/es/query.py:35
msgid "热节点"
msgstr "hot node"

#: backend/db_meta/api/cluster/es/detail.py:38
#: backend/db_services/bigdata/es/query.py:36
msgid "冷节点"
msgstr "cold node"

#: backend/db_meta/api/cluster/hdfs/create.py:33
#: backend/db_meta/api/cluster/kafka/create.py:38
#: backend/db_meta/api/cluster/tendbcluster/create_cluster.py:59
#: backend/db_meta/api/cluster/tendbha/create_cluster.py:65
#: backend/db_meta/api/cluster/tendbsingle/create_cluster.py:34
msgid "集群名 {} 在 bk_biz_id:{} db_module_id:{} 已存在"
msgstr "The cluster name {} already exists in bk_biz_id:{} db_module_id:{}"

#: backend/db_meta/api/cluster/hdfs/destroy.py:38
msgid "将主机{}转移到待回收模块"
msgstr "Move host {} to the module to be recycled"

#: backend/db_meta/api/cluster/hdfs/detail.py:27
msgid "NameNode 节点"
msgstr "NameNode node"

#: backend/db_meta/api/cluster/hdfs/detail.py:30
msgid "DataNode 节点"
msgstr "DataNode node"

#: backend/db_meta/api/cluster/hdfs/detail.py:35
#: backend/db_meta/api/cluster/kafka/detail.py:30
#: backend/db_meta/api/cluster/pulsar/detail.py:30
msgid "Zookeeper 节点"
msgstr "zookeeper node"

#: backend/db_meta/api/cluster/hdfs/detail.py:40
msgid "Journal 节点"
msgstr "journal node node"

#: backend/db_meta/api/cluster/influxdb/destroy.py:42
#: backend/db_meta/api/cluster/influxdb/replace.py:54
#: backend/db_meta/api/cluster/kafka/destroy.py:39
#: backend/db_meta/api/cluster/kafka/replace.py:51
msgid "将主机{}转移到待回收"
msgstr "Move host {} to the module to be recycled"

#: backend/db_meta/api/cluster/kafka/create.py:42
#: backend/db_meta/api/cluster/nosqlcomm/create_cluster.py:260
#: backend/db_meta/api/cluster/nosqlcomm/create_cluster.py:264
#: backend/db_meta/api/cluster/riak/create.py:34
#: backend/db_meta/api/cluster/tendbcluster/create_cluster.py:63
#: backend/db_meta/api/cluster/tendbcluster/create_cluster.py:69
#: backend/db_meta/api/cluster/tendbcluster/create_slave_cluster.py:30
#: backend/db_meta/api/cluster/tendbha/create_cluster.py:69
#: backend/db_meta/api/cluster/tendbha/create_cluster.py:73
#: backend/db_meta/api/cluster/tendbsingle/create_cluster.py:37
#: backend/db_meta/api/cluster/tendispluscluster/create.py:142
msgid "域名 {} 已存在"
msgstr "The domain name {} already exists"

#: backend/db_meta/api/cluster/kafka/detail.py:27
#: backend/db_meta/api/cluster/pulsar/detail.py:27
msgid "Broker 节点"
msgstr "broker node"

#: backend/db_meta/api/cluster/mongocluster/detail.py:35
msgid "Mongos 节点"
msgstr "Mongos nodes"

#: backend/db_meta/api/cluster/mongocluster/detail.py:52
msgid "ConfigServer 节点"
msgstr "ConfigServer node"

#: backend/db_meta/api/cluster/mongocluster/detail.py:69
msgid "Shard 节点"
msgstr "Shard node"

#: backend/db_meta/api/cluster/mongocluster/detail.py:72
#: backend/db_meta/api/cluster/mongorepset/detail.py:44
msgid "Backup 节点"
msgstr "Backup node"

#: backend/db_meta/api/cluster/mongorepset/detail.py:41
msgid "提供服务 节点"
msgstr "Provide service node"

#: backend/db_meta/api/cluster/nosqlcomm/create_cluster.py:113
msgid "{} 实例未分片规则"
msgstr "{} Instance unsharded rules"

#: backend/db_meta/api/cluster/nosqlcomm/create_cluster.py:256
#: backend/db_meta/api/cluster/riak/create.py:31
msgid "集群名 {} 在 bk_biz_id:{} 已存在"
msgstr "The cluster name {} already exists in bk_biz_id:{}"

#: backend/db_meta/api/cluster/nosqlcomm/create_cluster.py:271
#: backend/db_meta/api/cluster/tendispluscluster/create.py:149
msgid "proxy {} 已属于其他集群"
msgstr "proxy {} already belongs to another cluster"

#: backend/db_meta/api/cluster/nosqlcomm/create_cluster.py:277
#: backend/db_meta/api/cluster/tendispluscluster/create.py:155
msgid "storage {} 已属于其他集群"
msgstr "storage {} already belongs to another cluster"

#: backend/db_meta/api/cluster/nosqlcomm/decommission.py:43
msgid "{} 存在不是本集群的实例下架列表"
msgstr "{} There is an instance removal list that is not in this cluster"

#: backend/db_meta/api/cluster/nosqlcomm/decommission.py:47
msgid "非集群下架模式,不允许直接下架所有实例 {}"
msgstr ""
"Non-cluster unshelf mode, it is not allowed to directly unshelf all "
"instances {}"

#: backend/db_meta/api/cluster/nosqlcomm/decommission.py:107
msgid "非集群下架单,不允许直接下架状态为RUNNING状态实例 {}"
msgstr ""
"Non-cluster unshelf order, it is not allowed to directly unshelf the "
"instance whose state is RUNNING {}"

#: backend/db_meta/api/cluster/nosqlcomm/detail_cluster.py:57
#: backend/db_meta/api/cluster/tendbcluster/detail.py:64
#: backend/db_meta/api/cluster/tendbha/detail.py:50
#: backend/db_meta/api/cluster/tendispluscluster/detail.py:50
msgid "访问入口（从）"
msgstr "access entry (from)"

#: backend/db_meta/api/cluster/nosqlcomm/detail_cluster.py:92
#: backend/db_meta/api/cluster/tendbcluster/detail.py:57
#: backend/db_meta/api/cluster/tendbha/detail.py:84
#: backend/db_meta/api/cluster/tendispluscluster/detail.py:85
msgid "访问入口（主）"
msgstr "access entrance (main)"

#: backend/db_meta/api/cluster/pulsar/detail.py:33
msgid "Bookkeeper 节点"
msgstr "Bookkeeper node"

#: backend/db_meta/api/cluster/tendbcluster/decommission.py:80
#: backend/db_meta/api/cluster/tendbha/decommission.py:79
msgid "{} 与 {} 的 {} 有同步关系"
msgstr "{} has a synchronous relationship with {} of {}"

#: backend/db_meta/api/cluster/tendbcluster/detail.py:55
msgid "Spider Master"
msgstr "Spider Master"

#: backend/db_meta/api/cluster/tendbcluster/detail.py:56
msgid "spider_master_entry_bind"
msgstr "spider_master_entry_bind"

#: backend/db_meta/api/cluster/tendbcluster/detail.py:62
msgid "Spider Slave"
msgstr "Spider Slave"

#: backend/db_meta/api/cluster/tendbcluster/detail.py:63
msgid "spider_slave_entry_bind"
msgstr "spider_slave_entry_bind"

#: backend/db_meta/api/cluster/tendbcluster/detail.py:68
msgid "RemoteDB"
msgstr "RemoteDB"

#: backend/db_meta/api/cluster/tendbcluster/detail.py:72
msgid "RemoteDR"
msgstr "RemoteDR"

#: backend/db_meta/api/cluster/tendbcluster/detail.py:77
msgid "Spider 运维节点"
msgstr "Spider operation and maintenance node"

#: backend/db_meta/api/cluster/tendbcluster/detail.py:84
msgid "controller_group"
msgstr "controller_group"

#: backend/db_meta/api/cluster/tendbcluster/detail.py:84
msgid "中控节点"
msgstr "Control Node"

#: backend/db_meta/api/cluster/tendispluscluster/create.py:160
msgid "proxy {} 未注册"
msgstr "proxy {} unregistered"

#: backend/db_meta/api/cluster/tendispluscluster/create.py:164
msgid "storage {} 未注册"
msgstr "storage {} is not registered"

#: backend/db_meta/api/dbha/apis.py:137
msgid "实例ip={}, port={}不存在，请检查输入参数或相关数据"
msgstr ""
"The instance ip={}, port={} does not exist, please check the input "
"parameters or related data"

#: backend/db_meta/api/proxy_instance/apis.py:98
msgid "proxy {} 在集群里边"
msgstr "proxy {} in the cluster"

#: backend/db_meta/api/proxy_instance/apis.py:102
msgid "proxy {} 不存在"
msgstr "proxy {} does not exist"

#: backend/db_meta/api/storage_instance/apis.py:161
#: backend/db_services/dbbase/resources/serializers.py:49
#: backend/ticket/builders/es/es_apply.py:29
#: backend/ticket/builders/influxdb/influxdb_apply.py:33
#: backend/ticket/builders/kafka/kafka_apply.py:81
#: backend/ticket/builders/pulsar/pulsar_apply.py:33
msgid "端口"
msgstr "port"

#: backend/db_meta/api/storage_instance/apis.py:162
#: backend/db_meta/models/machine.py:25
msgid "IP 地址"
msgstr "IP address"

#: backend/db_meta/api/storage_instance/apis.py:163
msgid "DB 模块 ID"
msgstr "DB module ID"

#: backend/db_meta/api/storage_instance/apis.py:164
#: backend/db_services/ipchooser/serializers/base.py:32
#: backend/db_services/ipchooser/serializers/base.py:41
msgid "业务 ID"
msgstr "Business ID"

#: backend/db_meta/api/storage_instance/apis.py:166
msgid "拓扑层级"
msgstr "topology level"

#: backend/db_meta/api/storage_instance/apis.py:167
msgid "机器类型"
msgstr "machine type"

#: backend/db_meta/api/storage_instance/apis.py:168
#: backend/db_services/dbbase/resources/serializers.py:71
#: backend/db_services/dbbase/resources/serializers.py:84
#: backend/ticket/serializers.py:198
msgid "角色"
msgstr "Role"

#: backend/db_meta/api/storage_instance/apis.py:169
msgid "系统角色"
msgstr "system role"

#: backend/db_meta/api/storage_instance/apis.py:170
#: backend/db_meta/models/spec.py:73 backend/db_proxy/models.py:126
#: backend/db_services/bigdata/resources/query.py:42
#: backend/db_services/cmdb/serializers.py:31
#: backend/db_services/cmdb/serializers.py:36
#: backend/db_services/dbconfig/serializers.py:20
#: backend/db_services/mysql/cluster/serializers.py:63
#: backend/db_services/mysql/permission/authorize/serializers.py:30
#: backend/db_services/mysql/permission/authorize/serializers.py:51
#: backend/db_services/partition/serializers.py:21
#: backend/db_services/partition/serializers.py:32
#: backend/db_services/partition/serializers.py:39
#: backend/db_services/partition/serializers.py:77
#: backend/db_services/partition/serializers.py:90
#: backend/db_services/partition/serializers.py:95
#: backend/db_services/redis/resources/redis_cluster/query.py:56
#: backend/ticket/builders/redis/redis_cluster_apply.py:36
msgid "集群类型"
msgstr "cluster type"

#: backend/db_meta/api/storage_instance/apis.py:171
#: backend/db_services/bigdata/influxdb/serializers.py:19
#: backend/db_services/dbbase/resources/serializers.py:70
#: backend/ticket/serializers.py:67 backend/ticket/serializers.py:208
msgid "状态"
msgstr "state"

#: backend/db_meta/api/storage_instance/apis.py:172
msgid "同步后继"
msgstr "sync successor"

#: backend/db_meta/api/storage_instance/apis.py:173
msgid "同步上联"
msgstr "sync uplink"

#: backend/db_meta/api/storage_instance/apis.py:174
msgid "绑定入口"
msgstr "binding entry"

#: backend/db_meta/api/storage_instance/apis.py:175
msgid "接入层列表"
msgstr "access layer list"

#: backend/db_meta/api/storage_instance/apis.py:176
msgid "IDC 城市 ID"
msgstr "IDC City ID"

#: backend/db_meta/api/storage_instance/apis.py:177
#: backend/db_meta/models/city_map.py:36
msgid "IDC 城市名"
msgstr "IDC city name"

#: backend/db_meta/api/storage_instance/apis.py:178
msgid "逻辑城市 ID"
msgstr "Logical City ID"

#: backend/db_meta/api/storage_instance/apis.py:179
msgid "逻辑城市名"
msgstr "logical city name"

#: backend/db_meta/api/storage_instance/apis.py:180
#: backend/db_meta/models/machine.py:36
msgid "操作系统"
msgstr "operating system"

#: backend/db_meta/api/storage_instance/apis.py:181
#: backend/db_meta/models/machine.py:37
msgid "区域"
msgstr "area"

#: backend/db_meta/api/storage_instance/apis.py:182
#: backend/db_meta/models/machine.py:38
msgid "区域 ID"
msgstr "area ID"

#: backend/db_meta/api/storage_instance/apis.py:183
#: backend/db_meta/models/machine.py:39
msgid "子 Zone"
msgstr "Child Zone"

#: backend/db_meta/api/storage_instance/apis.py:184
#: backend/db_meta/models/machine.py:40
msgid "子 Zone ID"
msgstr "Child Zone ID"

#: backend/db_meta/api/storage_instance/apis.py:185
#: backend/db_meta/models/machine.py:41
msgid "机架"
msgstr "frame"

#: backend/db_meta/api/storage_instance/apis.py:186
#: backend/db_meta/models/machine.py:42
msgid "机架 ID"
msgstr "Rack ID"

#: backend/db_meta/api/storage_instance/apis.py:187
#: backend/db_meta/models/machine.py:43
msgid "标准设备类型"
msgstr "Standard Equipment Type"

#: backend/db_meta/api/storage_instance/apis.py:188
#: backend/db_meta/models/machine.py:44
msgid "机房"
msgstr "engine room"

#: backend/db_meta/api/storage_instance/apis.py:189
#: backend/db_meta/models/machine.py:45
msgid "机房 ID"
msgstr "computer room ID"

#: backend/db_meta/api/storage_instance/apis.py:190
#: backend/db_meta/models/cluster.py:50 backend/db_meta/models/machine.py:46
#: backend/db_proxy/models.py:28 backend/db_proxy/models.py:47
#: backend/db_services/ipchooser/serializers/base.py:90
msgid "云区域 ID"
msgstr "Cloud Region ID"

#: backend/db_meta/api/storage_instance/apis.py:191
msgid "网络设备 ID"
msgstr "network device ID"

#: backend/db_meta/enums/access_layer.py:16
#: backend/db_meta/enums/machine_type.py:18 backend/flow/consts.py:253
#: backend/flow/consts.py:541 backend/ticket/builders/common/constants.py:62
#: backend/ticket/constants.py:23
msgid "proxy"
msgstr "proxy"

#: backend/db_meta/enums/access_layer.py:17 backend/ticket/constants.py:22
msgid "storage"
msgstr "storage"

#: backend/db_meta/enums/access_layer.py:18
msgid "config"
msgstr "config"

#: backend/db_meta/enums/cluster_entry_role.py:17
msgid "master_entry"
msgstr "master_entry"

#: backend/db_meta/enums/cluster_entry_role.py:18
msgid "slave_entry"
msgstr "slave_entry"

#: backend/db_meta/enums/cluster_entry_type.py:16
msgid "dns"
msgstr "dns"

#: backend/db_meta/enums/cluster_entry_type.py:17
msgid "clb"
msgstr "clb"

#: backend/db_meta/enums/cluster_entry_type.py:18
msgid "polaris"
msgstr "polaris"

#: backend/db_meta/enums/cluster_phase.py:17
#: backend/db_meta/enums/instance_phase.py:17
msgid "online"
msgstr "online"

#: backend/db_meta/enums/cluster_phase.py:18
#: backend/db_meta/enums/instance_phase.py:18
msgid "offline"
msgstr "offline"

#: backend/db_meta/enums/cluster_phase.py:21
#: backend/db_meta/enums/instance_phase.py:21
msgid "destroy"
msgstr "destroy"

#: backend/db_meta/enums/cluster_status.py:19
msgid "normal"
msgstr "normal"

#: backend/db_meta/enums/cluster_status.py:20 backend/flow/consts.py:451
msgid "ABNORMAL"
msgstr "ABNORMAL"

#: backend/db_meta/enums/cluster_type.py:16
msgid "tendbsingle"
msgstr "tendbsingle"

#: backend/db_meta/enums/cluster_type.py:17
msgid "tendbha"
msgstr "tendbha"

#: backend/db_meta/enums/cluster_type.py:18 backend/flow/consts.py:134
msgid "tendbcluster"
msgstr "tendbcluster"

#: backend/db_meta/enums/cluster_type.py:20
#: backend/db_meta/enums/cluster_type.py:21
msgid "Redis集群"
msgstr "Redis cluster"

#: backend/db_meta/enums/cluster_type.py:22
msgid "Tendisplus存储版集群"
msgstr "Tendisplus storage cluster"

#: backend/db_meta/enums/cluster_type.py:23
msgid "TendisCache集群"
msgstr "TendisCache cluster"

#: backend/db_meta/enums/cluster_type.py:24
msgid "TendisSSD集群"
msgstr "TendisSSD cluster"

#: backend/db_meta/enums/cluster_type.py:25
msgid "Tendis存储版集群"
msgstr "Tendis Storage Edition Cluster"

#: backend/db_meta/enums/cluster_type.py:26
msgid "RedisCache主从版"
msgstr "RedisCache master-slave version"

#: backend/db_meta/enums/cluster_type.py:27
msgid "TendisSSD主从版"
msgstr "TendispSSD master-slave version"

#: backend/db_meta/enums/cluster_type.py:28
msgid "Tendisplus主从版"
msgstr "Tendisplus master-slave version"

#: backend/db_meta/enums/cluster_type.py:29
msgid "RedisCluster集群"
msgstr "RedisCluster cluster"

#: backend/db_meta/enums/cluster_type.py:30
msgid "TendisplusCluster集群"
msgstr "TendisplusCluster cluster"

#: backend/db_meta/enums/cluster_type.py:32
msgid "ES集群"
msgstr "ES cluster"

#: backend/db_meta/enums/cluster_type.py:33
msgid "Kafka集群"
msgstr "Kafka cluster"

#: backend/db_meta/enums/cluster_type.py:34
msgid "Hdfs集群"
msgstr "Hdfs cluster"

#: backend/db_meta/enums/cluster_type.py:35
msgid "Influxdb实例"
msgstr "InfluxDB instance"

#: backend/db_meta/enums/cluster_type.py:36
msgid "Pulsar集群"
msgstr "Pulsar cluster"

#: backend/db_meta/enums/cluster_type.py:38
msgid "Mongo副本集"
msgstr "Mongo replica set"

#: backend/db_meta/enums/cluster_type.py:39
msgid "Mongo分片集群"
msgstr "Mongo shard cluster"

#: backend/db_meta/enums/cluster_type.py:41
msgid "Riak集群"
msgstr "Riak cluster"

#: backend/db_meta/enums/comm.py:17 backend/flow/consts.py:676
msgid "sms"
msgstr "sms"

#: backend/db_meta/enums/comm.py:18 backend/flow/consts.py:675
msgid "mms"
msgstr "mms"

#: backend/db_meta/enums/comm.py:22 backend/db_meta/enums/machine_type.py:24
#: backend/flow/consts.py:176 backend/flow/consts.py:254
msgid "redis"
msgstr "redis"

#: backend/db_meta/enums/comm.py:23 backend/db_meta/enums/machine_type.py:40
msgid "mongodb"
msgstr "mongodb"

#: backend/db_meta/enums/instance_inner_role.py:16 backend/flow/consts.py:542
#: backend/flow/consts.py:554 backend/ticket/builders/common/constants.py:41
#: backend/ticket/builders/common/constants.py:60
msgid "master"
msgstr "master"

#: backend/db_meta/enums/instance_inner_role.py:17 backend/flow/consts.py:543
#: backend/ticket/builders/common/constants.py:61
msgid "slave"
msgstr "slave"

#: backend/db_meta/enums/instance_inner_role.py:18
msgid "repeater"
msgstr "repeater"

#: backend/db_meta/enums/instance_inner_role.py:19
#: backend/db_meta/enums/instance_role.py:18
msgid "orphan"
msgstr "orphan"

#: backend/db_meta/enums/instance_role.py:21
msgid "backend_master"
msgstr "backend_master"

#: backend/db_meta/enums/instance_role.py:22
msgid "backend_repeater"
msgstr "backend_repeater"

#: backend/db_meta/enums/instance_role.py:23
msgid "backend_slave"
msgstr "backend_slave"

#: backend/db_meta/enums/instance_role.py:26
msgid "remote_master"
msgstr "remote_master"

#: backend/db_meta/enums/instance_role.py:27
msgid "remote_repeater"
msgstr "remote_repeater"

#: backend/db_meta/enums/instance_role.py:28
msgid "remote_slave"
msgstr "remote_slave"

#: backend/db_meta/enums/instance_role.py:30
msgid "redis_proxy"
msgstr "redis_proxy"

#: backend/db_meta/enums/instance_role.py:31
msgid "redis_master"
msgstr "redis_master"

#: backend/db_meta/enums/instance_role.py:32
msgid "redis_slave"
msgstr "redis_slave"

#: backend/db_meta/enums/instance_role.py:34
msgid "es_datanode_hot"
msgstr "es_datanode_hot"

#: backend/db_meta/enums/instance_role.py:35
msgid "es_datanode_cold"
msgstr "es_datanode_cold"

#: backend/db_meta/enums/instance_role.py:36
#: backend/db_meta/enums/machine_type.py:30
msgid "es_master"
msgstr "is_master"

#: backend/db_meta/enums/instance_role.py:37
#: backend/db_meta/enums/machine_type.py:31
msgid "es_client"
msgstr "es_client"

#: backend/db_meta/enums/instance_role.py:39
#: backend/db_meta/enums/machine_type.py:33 backend/flow/consts.py:609
#: backend/ticket/builders/common/constants.py:51
#: backend/ticket/builders/common/constants.py:56
msgid "broker"
msgstr "broker"

#: backend/db_meta/enums/instance_role.py:40
#: backend/db_meta/enums/machine_type.py:34 backend/flow/consts.py:603
#: backend/flow/consts.py:610 backend/ticket/builders/common/constants.py:47
#: backend/ticket/builders/common/constants.py:50
#: backend/ticket/builders/common/constants.py:55
msgid "zookeeper"
msgstr "zookeeper"

#: backend/db_meta/enums/instance_role.py:42
msgid "hdfs_namenode"
msgstr "hdfs_namenode"

#: backend/db_meta/enums/instance_role.py:43
msgid "hdfs_zookeeper"
msgstr "hdfs_zookeeper"

#: backend/db_meta/enums/instance_role.py:44
msgid "hdfs_journalnode"
msgstr "hdfs_journalnode"

#: backend/db_meta/enums/instance_role.py:45
#: backend/db_meta/enums/machine_type.py:37
msgid "hdfs_datanode"
msgstr "hdfs_datanode"

#: backend/db_meta/enums/instance_role.py:47
#: backend/db_meta/enums/machine_type.py:42 backend/flow/consts.py:189
#: backend/flow/consts.py:262
msgid "influxdb"
msgstr "InfluxDB"

#: backend/db_meta/enums/instance_role.py:49
#: backend/db_meta/enums/machine_type.py:45
msgid "pulsar_bookkeeper"
msgstr "pulsar_bookkeeper"

#: backend/db_meta/enums/instance_role.py:50
#: backend/db_meta/enums/machine_type.py:44
msgid "pulsar_zookeeper"
msgstr "pulsar_zookeeper"

#: backend/db_meta/enums/instance_role.py:51
#: backend/db_meta/enums/machine_type.py:46
msgid "pulsar_broker"
msgstr "pulsar_broker"

#: backend/db_meta/enums/instance_role.py:53
msgid "mongo_m1"
msgstr "mongo_m1"

#: backend/db_meta/enums/instance_role.py:54
msgid "mongo_m2"
msgstr "mongo_m2"

#: backend/db_meta/enums/instance_role.py:55
msgid "mongo_m3"
msgstr "mongo_m3"

#: backend/db_meta/enums/instance_role.py:56
msgid "mongo_m4"
msgstr "mongo_m4"

#: backend/db_meta/enums/instance_role.py:57
msgid "mongo_m5"
msgstr "mongo_m5"

#: backend/db_meta/enums/instance_role.py:58
msgid "mongo_m6"
msgstr "mongo_m6"

#: backend/db_meta/enums/instance_role.py:59
msgid "mongo_m7"
msgstr "mongo_m7"

#: backend/db_meta/enums/instance_role.py:60
msgid "mongo_m8"
msgstr "mongo_m8"

#: backend/db_meta/enums/instance_role.py:61
msgid "mongo_m9"
msgstr "mongo_m9"

#: backend/db_meta/enums/instance_role.py:62
msgid "mongo_m10"
msgstr "mongo_m10"

#: backend/db_meta/enums/instance_role.py:63
msgid "mongo_backup"
msgstr "mongo_backup"

#: backend/db_meta/enums/instance_role.py:65
msgid "riak_node"
msgstr "riak_node"

#: backend/db_meta/enums/instance_role.py:70
msgid "spider_master"
msgstr "spider_master"

#: backend/db_meta/enums/instance_role.py:72
msgid "spider_slave"
msgstr "spider_slave"

#: backend/db_meta/enums/instance_role.py:74
msgid "spider_mnt"
msgstr "spider_mnt"

#: backend/db_meta/enums/instance_status.py:16 backend/db_proxy/constants.py:35
#: backend/flow/consts.py:464
msgid "running"
msgstr "running"

#: backend/db_meta/enums/instance_status.py:17 backend/db_proxy/constants.py:36
#: backend/flow/consts.py:466
msgid "unavailable"
msgstr "unavailable"

#: backend/db_meta/enums/instance_status.py:18 backend/db_proxy/constants.py:37
msgid "restoring"
msgstr "restoring"

#: backend/db_meta/enums/machine_type.py:16 backend/flow/consts.py:265
#: backend/flow/consts.py:748
msgid "spider"
msgstr "spider"

#: backend/db_meta/enums/machine_type.py:17
msgid "remote"
msgstr "remote"

#: backend/db_meta/enums/machine_type.py:19
msgid "backend"
msgstr "backend"

#: backend/db_meta/enums/machine_type.py:20 backend/db_monitor/constants.py:28
msgid "single"
msgstr "single"

#: backend/db_meta/enums/machine_type.py:22 backend/flow/consts.py:183
#: backend/flow/consts.py:257
msgid "predixy"
msgstr "predixy"

#: backend/db_meta/enums/machine_type.py:23 backend/flow/consts.py:182
#: backend/flow/consts.py:256
msgid "twemproxy"
msgstr "twemproxy"

#: backend/db_meta/enums/machine_type.py:25
msgid "tendiscache"
msgstr "tend to cache"

#: backend/db_meta/enums/machine_type.py:26 backend/flow/consts.py:178
msgid "tendisssd"
msgstr "tendisssd"

#: backend/db_meta/enums/machine_type.py:27 backend/flow/consts.py:177
msgid "tendisplus"
msgstr "tend more"

#: backend/db_meta/enums/machine_type.py:29
msgid "es_datanode"
msgstr "en_datanode"

#: backend/db_meta/enums/machine_type.py:36
msgid "hdfs_master"
msgstr "hdfs_master"

#: backend/db_meta/enums/machine_type.py:39
msgid "mongos"
msgstr "mongos"

#: backend/db_meta/enums/machine_type.py:41
msgid "mongo_config"
msgstr "mongo_config"

#: backend/db_meta/enums/machine_type.py:48 backend/flow/consts.py:204
#: backend/flow/consts.py:267
msgid "riak"
msgstr "ripple"

#: backend/db_meta/exceptions.py:18
msgid "DBMeta模块异常"
msgstr "DBMeta module exception"

#: backend/db_meta/exceptions.py:23 backend/db_meta/exceptions.py:101
#: backend/flow/engine/bamboo/scene/hdfs/exceptions.py:23
#: backend/flow/engine/bamboo/scene/mysql/common/exceptions.py:22
#: backend/flow/engine/bamboo/scene/pulsar/exceptions.py:23
#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:22
msgid "通用异常"
msgstr "generic exception"

#: backend/db_meta/exceptions.py:24 backend/db_meta/exceptions.py:102
#: backend/flow/engine/bamboo/scene/hdfs/exceptions.py:24
#: backend/flow/engine/bamboo/scene/mysql/common/exceptions.py:23
#: backend/flow/engine/bamboo/scene/pulsar/exceptions.py:24
#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:23
#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:29
#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:35
#, python-brace-format
msgid "{message}"
msgstr "{message}"

#: backend/db_meta/exceptions.py:29
msgid "新建TenDBHA前置检查异常"
msgstr "New TenDBHA pre-check exception"

#: backend/db_meta/exceptions.py:30 backend/db_meta/exceptions.py:66
#: backend/db_services/redis_dts/exceptions.py:24
#: backend/db_services/redis_dts/exceptions.py:30
#: backend/flow/engine/exceptions.py:33
#: backend/flow/utils/mysql/db_table_filter/exception.py:24
#, python-brace-format
msgid "{msg}"
msgstr "{msg}"

#: backend/db_meta/exceptions.py:35
msgid "同步关系记录已存在"
msgstr "Sync relation record already exists"

#: backend/db_meta/exceptions.py:36
#, python-brace-format
msgid "{ejector}和{receiver}的同步关系记录已存在"
msgstr ""
"Synchronization relationship records for {ejector} and {receiver} already "
"exist"

#: backend/db_meta/exceptions.py:41
msgid "proxy已绑定后端存储"
msgstr "Proxy is bound to backend storage"

#: backend/db_meta/exceptions.py:42
#, python-brace-format
msgid "{proxy}已绑定后端存储"
msgstr "{proxy} is bound to backend storage"

#: backend/db_meta/exceptions.py:47
msgid "DB模块已存在"
msgstr "DB module already exists"

#: backend/db_meta/exceptions.py:48
#, python-brace-format
msgid "DB模块[{db_module_name}]已存在，请重新命名"
msgstr "DB module [{db_module_name}] already exists, please rename it"

#: backend/db_meta/exceptions.py:53
msgid "TenDBHA集群已存在"
msgstr "TenDBHA cluster already exists"

#: backend/db_meta/exceptions.py:54
#, python-brace-format
msgid "TenDBHA集群{cluster}已存在"
msgstr "TenDBHA cluster {cluster} already exists"

#: backend/db_meta/exceptions.py:59
msgid "集群访问入口已存在"
msgstr "The cluster access entry already exists"

#: backend/db_meta/exceptions.py:60
#, python-brace-format
msgid "集群访问入口{entry}已存在"
msgstr "Cluster access entry {entry} already exists"

#: backend/db_meta/exceptions.py:65
msgid "新建Tendis前置检查异常"
msgstr "New Tendis pre-check exception"

#: backend/db_meta/exceptions.py:71
msgid "Tendis集群已存在"
msgstr "Tendis cluster already exists"

#: backend/db_meta/exceptions.py:72
#, python-brace-format
msgid "Tendis集群{cluster}已存在"
msgstr "Tendis cluster {cluster} already exists"

#: backend/db_meta/exceptions.py:77
msgid "主机在CMDB中不存在"
msgstr "Host does not exist in CMDB"

#: backend/db_meta/exceptions.py:78
#, python-brace-format
msgid "主机[bk_host_id={bk_host_id}]在CMDB中不存在"
msgstr "Host [bk_host_id={bk_host_id}] does not exist in CMDB"

#: backend/db_meta/exceptions.py:83
msgid "Tendis集群不存在"
msgstr "Tendis cluster does not exist"

#: backend/db_meta/exceptions.py:84
#, python-brace-format
msgid "Tendis集群{cluster}不存在"
msgstr "Tendis cluster {cluster} does not exist"

#: backend/db_meta/exceptions.py:89
msgid "集群,分片不存在"
msgstr "Cluster, shard does not exist"

#: backend/db_meta/exceptions.py:90
#, python-brace-format
msgid "集群{cluster}分片不存在"
msgstr "Cluster {cluster} shard does not exist"

#: backend/db_meta/exceptions.py:95
msgid "集群访问入口不存在"
msgstr "The cluster access entry does not exist"

#: backend/db_meta/exceptions.py:96
#, python-brace-format
msgid "集群访问入口 {entry} 不存在"
msgstr "Cluster access entry {entry} does not exist"

#: backend/db_meta/exceptions.py:107
msgid "集群不存在"
msgstr "cluster does not exist"

#: backend/db_meta/exceptions.py:108
msgid "集群类型:{cluster_type}, ID:{cluster_id}, 域名:{immute_domain} 不存在"
msgstr "Cluster type: {cluster_type}, ID: {cluster_id}, immute_domain:{immute_domain} does not exist"

#: backend/db_meta/exceptions.py:113
msgid "实例不存在"
msgstr "instance does not exist"

#: backend/db_meta/exceptions.py:114
#, python-brace-format
msgid "实例 云区域{bk_cloud_id} {ip}:{port} 不存在"
msgstr "Instance cloud zone {bk_cloud_id} {ip}:{port} does not exist"

#: backend/db_meta/exceptions.py:119
msgid "执行互斥"
msgstr "execute mutex"

#: backend/db_meta/exceptions.py:120
msgid ""
"操作{ticket_type}与集群{cluster_id}正在运行的动作{active_ticket_type}存在互"
"斥/重复操作"
msgstr "The action {ticket_type} and the action {active_ticket_type} that the cluster {cluster_id} is running are mutually exclusive/duplicate"

#: backend/db_meta/exceptions.py:125
msgid "主库不存在"
msgstr "The master does not exist"

#: backend/db_meta/exceptions.py:126
msgid "集群类型:{cluster_type}, ID:{cluster_id} 主库不存在"
msgstr "Cluster type: {cluster_type}, ID: {cluster_id} master database does not exist"

#: backend/db_meta/exceptions.py:131
msgid "集群不支持分片"
msgstr "Cluster does not support sharding"

#: backend/db_meta/exceptions.py:132
msgid "集群类型:{cluster_type}, ID:{cluster_id} 没有数据分片逻辑"
msgstr "Cluster type: {cluster_type}, ID: {cluster_id} without data sharding logic"

#: backend/db_meta/exceptions.py:137
msgid "无效中控主节点"
msgstr "Invalid central control master node"

#: backend/db_meta/exceptions.py:138
msgid "中控主节点必须是 spider_master"
msgstr "The central control master node must be spider_master"

#: backend/db_meta/exceptions.py:143
msgid "集群 proxy 无附加信息"
msgstr "Cluster proxy No additional information"

#: backend/db_meta/exceptions.py:144
msgid "集群类型:{cluster_type} proxy 无附加信息"
msgstr "Cluster type: {cluster_type} proxy No additional information"

#: backend/db_meta/exceptions.py:149
msgid "部署方案不匹配"
msgstr "Deployment scheme does not match"

#: backend/db_meta/exceptions.py:150
msgid "集群类型:{cluster_type} 和部署方案:{deploy_plan_class} 不匹配"
msgstr "Cluster type: {cluster_type} and deployment plan: {deploy_plan_class} do not match"

#: backend/db_meta/exceptions.py:155
msgid "部署方案使用中"
msgstr "The deployment plan is in use"

#: backend/db_meta/exceptions.py:156
#, python-brace-format
msgid "部署方案:{name} 被 {ref_cnt} 个集群引用"
msgstr "Deployment scheme: {name} is referenced by {ref_cnt} clusters"

#: backend/db_meta/exceptions.py:161
msgid "访问入口请求转发和IP绑定混用"
msgstr "Access entry request forwarding and IP binding are mixed"

#: backend/db_meta/exceptions.py:162
#, python-brace-format
msgid ""
"访问入口 {entry} 绑定到 {bind_cnt} 台机器, 转发到 {forward_to} 不能同时存在"
msgstr ""
"The access entry {entry} is bound to {bind_cnt} machines, forwarded to "
"{forward_to} cannot exist at the same time"

#: backend/db_meta/exceptions.py:167
msgid "访问入口未绑定"
msgstr "Access entry is not bound"

#: backend/db_meta/exceptions.py:168
msgid "访问入口 {entry} 未绑定到 IP"
msgstr "The access entry {entry} is not bound to an IP"

#: backend/db_meta/models/app.py:29
msgid "业务的 cmdb id"
msgstr "business cmdb id"

#: backend/db_meta/models/app.py:30
msgid "业务需要在 dba 业务下新增一个 set, 需要记录下这个 set id"
msgstr ""
"The business needs to add a new set under the dba business, and the set id "
"needs to be recorded"

#: backend/db_meta/models/app.py:37 backend/db_services/cmdb/serializers.py:20
msgid "业务英文名"
msgstr "Business English name"

#: backend/db_meta/models/app.py:38
msgid "业务中文名"
msgstr "Business Chinese name"

#: backend/db_meta/models/app.py:39
msgid "语言"
msgstr "language"

#: backend/db_meta/models/app.py:40
msgid "时区"
msgstr "Time zone"

#: backend/db_meta/models/app.py:41
msgid "运维人员"
msgstr "Operation and maintenance personnel"

#: backend/db_meta/models/app.py:44 backend/db_meta/models/app.py:45
msgid "CMDB业务信息缓存表"
msgstr "CMDB business information cache table"

#: backend/db_meta/models/cluster.py:41
msgid "集群英文名"
msgstr "Cluster English name"

#: backend/db_meta/models/cluster.py:42
#: backend/db_services/bigdata/resources/query.py:41
#: backend/db_services/redis/resources/redis_cluster/query.py:55
msgid "集群别名"
msgstr "cluster alias"

#: backend/db_meta/models/cluster.py:47
msgid "主版本号"
msgstr "major version number"

#: backend/db_meta/models/cluster.py:51
msgid "地域"
msgstr "region"

#: backend/db_meta/models/cluster.py:52
msgid "集群所在的时区"
msgstr "The time zone in which the cluster is located"

#: backend/db_meta/models/cluster.py:53
msgid "部署方法ID"
msgstr "Deployment Method ID"

#: backend/db_meta/models/cluster.py:95
msgid "当前操作「{}」与集群{}的操作「{}」存在执行互斥"
msgstr ""
"Execution mutual exclusion exists between the current operation {} and the "
"operation {} of the cluster {}"

#: backend/db_meta/models/cluster.py:103
msgid "集群运行状态异常，请检查!"
msgstr "The cluster running status is abnormal, please check!"

#: backend/db_meta/models/cluster.py:106
msgid "集群已被禁用，请先启用!"
msgstr "The cluster has been disabled, please enable it first!"

#: backend/db_meta/models/cluster.py:152
msgid "{} 未实现 status flag"
msgstr "{} unimplemented status flag"

#: backend/db_meta/models/cluster.py:172
msgid "{} 未实现 main_storage_instance"
msgstr "{} main_storage_instance is not implemented"

#: backend/db_meta/models/cluster.py:196
msgid "{} 类型集群没有中控节点"
msgstr "{} type cluster has no central control node"

#: backend/db_meta/models/cluster.py:216
msgid "find primary show slave status failed: {}"
msgstr "find primary show slave status failed: {}"

#: backend/db_meta/models/cluster_monitor.py:204
#: backend/db_meta/models/cluster_monitor.py:205
msgid "业务监控拓扑"
msgstr "Business Monitoring Topology"

#: backend/db_meta/models/cluster_monitor.py:217
msgid "实例ID，兼容单实例存储组件influxdb"
msgstr ""
"Instance ID, compatible with single instance storage component influxdb"

#: backend/db_meta/models/cluster_monitor.py:223
#: backend/db_meta/models/cluster_monitor.py:224
msgid "CMDB模块映射"
msgstr "CMDB module mapping"

#: backend/db_meta/models/cluster_monitor.py:234
#: backend/db_meta/models/cluster_monitor.py:235
msgid "同步失败的IP"
msgstr "Sync failed IP"

#: backend/db_meta/models/group.py:23
msgid "分组名"
msgstr "group name"

#: backend/db_meta/models/group.py:26 backend/db_meta/models/group.py:27
msgid "分组表"
msgstr "group table"

#: backend/db_meta/models/group.py:34
#: backend/db_services/bigdata/influxdb/serializers.py:20
#: backend/ticket/builders/influxdb/influxdb_apply.py:34
msgid "分组ID"
msgstr "Group ID"

#: backend/db_meta/models/group.py:35
#: backend/ticket/builders/common/bigdata.py:209
#: backend/ticket/builders/common/bigdata.py:275
#: backend/ticket/models/ticket.py:300 backend/ticket/serializers.py:225
msgid "实例ID"
msgstr "Instance ID"

#: backend/db_meta/models/group.py:38 backend/db_meta/models/group.py:39
msgid "分组和实例关系绑定表"
msgstr "Grouping and instance relationship binding tables"

#: backend/db_meta/models/instance.py:52
msgid "实例结构和状态变更中，请稍后!"
msgstr "Instance structure and state changes, please wait!"

#: backend/db_meta/models/instance.py:55
msgid "实例运行状态异常，请检查!"
msgstr "The running status of the instance is abnormal, please check!"

#: backend/db_meta/models/instance.py:83 backend/db_meta/models/instance.py:156
#: backend/db_package/models.py:26
#: backend/ticket/builders/common/bigdata.py:115
#: backend/ticket/builders/influxdb/influxdb_apply.py:31
#: backend/ticket/builders/redis/redis_cluster_apply.py:37
msgid "版本号"
msgstr "version number"

#: backend/db_meta/models/instance.py:100
#: backend/db_meta/models/instance.py:174
msgid "实例所在的时区"
msgstr "The time zone where the instance is located"

#: backend/db_meta/models/instance.py:101
#: backend/db_meta/models/instance.py:175
msgid "对应在cc的服务实例的id"
msgstr "The id corresponding to the service instance in cc"

#: backend/db_meta/models/instance.py:102
msgid "多 slave 的备选标志"
msgstr "Alternate flag for multiple slaves"

#: backend/db_meta/models/machine.py:48
msgid "虚拟规格ID"
msgstr "Virtual Spec ID"

#: backend/db_meta/models/machine.py:49
msgid "当前的虚拟规格配置"
msgstr "Current virtual specification configuration"

#: backend/db_meta/models/spec.py:26
msgid "虚拟规格名称"
msgstr "virtual specification name"

#: backend/db_meta/models/spec.py:28
msgid "集群类型:MySQL、Proxy、Spider"
msgstr "Cluster type: MySQL, Proxy, Spider"

#: backend/db_meta/models/spec.py:30
msgid "机器规格类型"
msgstr "Machine specification type"

#: backend/db_meta/models/spec.py:31 backend/db_meta/models/spec.py:93
msgid "cpu规格描述:{'min':1,'max':10}"
msgstr "cpu specification description: {&#39;min&#39;:1,&#39;max&#39;:10}"

#: backend/db_meta/models/spec.py:32 backend/db_meta/models/spec.py:94
msgid "mem规格描述:{'min':100,'max':1000}"
msgstr "mem specification description: {&#39;min&#39;:100,&#39;max&#39;:1000}"

#: backend/db_meta/models/spec.py:33 backend/db_meta/models/spec.py:95
msgid "实际机器机型: ['class1','class2'] "
msgstr "Actual machine type: [&#39;class1&#39;,&#39;class2&#39;]"

#: backend/db_meta/models/spec.py:34
msgid "存储磁盘需求配置:{'mount_point':'/data','size':500,'type':'ssd'}"
msgstr ""
"Storage disk requirements configuration: {&#39;mount_point&#39;:&#39;/"
"data&#39;,&#39;size&#39;:500,&#39;type&#39;:&#39;ssd&#39;}"

#: backend/db_meta/models/spec.py:35 backend/db_meta/models/spec.py:97
msgid "资源规格描述"
msgstr "Resource specification description"

#: backend/db_meta/models/spec.py:69
msgid "集群分片总数"
msgstr "Total number of cluster shards"

#: backend/db_meta/models/spec.py:70
msgid "集群存储预估总容量/G"
msgstr "Estimated total capacity of cluster storage/G"

#: backend/db_meta/models/spec.py:71
msgid "机器组数: (每组两台)"
msgstr "Number of machine groups: (two for each group)"

#: backend/db_meta/models/spec.py:74
msgid "方案描述"
msgstr "Program description"

#: backend/db_meta/views/helper/views.py:34
msgid "drop_cluster - 方便调试，后面去掉"
msgstr "drop_cluster - convenient for debugging, removed later"

#: backend/db_meta/views/helper/views.py:68
msgid "清理集群"
msgstr "Clean up the cluster"

#: backend/db_meta/views/helper/views.py:80
msgid "drop_my_cluster - 方便调试，后面去掉"
msgstr "drop_my_cluster - convenient for debugging, removed later"

#: backend/db_monitor/constants.py:25
msgid "platform"
msgstr "platform"

#: backend/db_monitor/constants.py:26
msgid "app"
msgstr "app"

#: backend/db_monitor/constants.py:27
msgid "cluster"
msgstr "cluster"

#: backend/db_monitor/models.py:25 backend/db_monitor/models.py:49
#: backend/db_monitor/models.py:67 backend/db_monitor/models.py:87
msgid "业务ID, 0代表全业务"
msgstr "Business ID, 0 means full business"

#: backend/db_monitor/models.py:26
msgid "监控通知组ID"
msgstr "Monitoring notification group ID"

#: backend/db_monitor/models.py:28
msgid "告警通知组类别"
msgstr "Alarm notification group category"

#: backend/db_monitor/models.py:34
msgid "自动同步DBA人员配置"
msgstr "Automatic synchronization of DBA personnel configuration"

#: backend/db_monitor/models.py:37
msgid "告警通知组"
msgstr "Alarm notification group"

#: backend/db_monitor/models.py:50 backend/db_monitor/models.py:70
msgid "监控策略ID"
msgstr "Monitoring Policy ID"

#: backend/db_monitor/models.py:52 backend/db_monitor/models.py:72
msgid "策略名称"
msgstr "policy name"

#: backend/db_monitor/models.py:54 backend/db_monitor/models.py:74
#: backend/db_monitor/models.py:90 backend/db_package/filters.py:21
msgid "DB类型"
msgstr "DB type"

#: backend/db_monitor/models.py:57
msgid "模板详情"
msgstr "Template details"

#: backend/db_monitor/models.py:58 backend/db_monitor/models.py:78
msgid "是否启用"
msgstr "Whether to enable"

#: backend/db_monitor/models.py:61
msgid "告警策略模板"
msgstr "Alert Policy Template"

#: backend/db_monitor/models.py:69
msgid "监控模板ID"
msgstr "Monitoring Template ID"

#: backend/db_monitor/models.py:77
msgid "实例详情"
msgstr "Instance details"

#: backend/db_monitor/models.py:81
msgid "告警策略实例"
msgstr "Alert Policy Example"

#: backend/db_monitor/models.py:88
msgid "插件ID"
msgstr "Plug-in ID"

#: backend/db_monitor/models.py:92 backend/db_monitor/models.py:120
#: backend/db_proxy/models.py:56
msgid "详情"
msgstr "details"

#: backend/db_monitor/models.py:96 backend/db_monitor/models.py:101
msgid "采集策略模板"
msgstr "Collection policy template"

#: backend/db_monitor/models.py:107
msgid "监控插件模板ID"
msgstr "Monitoring plug-in template ID"

#: backend/db_monitor/models.py:108
msgid "监控采集策略ID"
msgstr "Monitoring collection policy ID"

#: backend/db_monitor/models.py:111
msgid "采集策略实例"
msgstr "Examples of Collection Strategies"

#: backend/db_monitor/models.py:117 backend/ticket/serializers.py:193
msgid "名称"
msgstr "name"

#: backend/db_monitor/models.py:121
msgid "变量"
msgstr "variable"

#: backend/db_monitor/models.py:124
msgid "grafana-org_id"
msgstr "grafana-org_id"

#: backend/db_monitor/models.py:125
msgid "grafana-org_name"
msgstr "grafana-org_name"

#: backend/db_monitor/models.py:126
msgid "grafana-uid"
msgstr "grafana-uid"

#: backend/db_monitor/models.py:127
msgid "grafana-url"
msgstr "grafana-url"

#: backend/db_monitor/models.py:130
msgid "仪表盘"
msgstr "dash board"

#: backend/db_monitor/serializers.py:23
#: backend/db_services/cmdb/serializers.py:51
#: backend/db_services/dbbase/resources/serializers.py:72
#: backend/db_services/dbbase/resources/serializers.py:79
#: backend/db_services/dbresource/serializers.py:202
#: backend/db_services/mysql/cluster/serializers.py:61
#: backend/db_services/mysql/fixpoint_rollback/serializers.py:19
#: backend/db_services/mysql/fixpoint_rollback/serializers.py:24
#: backend/db_services/mysql/fixpoint_rollback/serializers.py:30
#: backend/db_services/mysql/remote_service/serializers.py:36
#: backend/db_services/partition/serializers.py:44
#: backend/db_services/partition/serializers.py:98
#: backend/ticket/builders/common/bigdata.py:70
#: backend/ticket/builders/mysql/base.py:165
#: backend/ticket/builders/mysql/mysql_checksum.py:37
#: backend/ticket/builders/mysql/mysql_data_repair.py:28
#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:28
#: backend/ticket/builders/mysql/mysql_flashback.py:27
#: backend/ticket/builders/mysql/mysql_ha_backup.py:28
#: backend/ticket/builders/mysql/mysql_ha_clear.py:29
#: backend/ticket/builders/mysql/mysql_ha_rename.py:30
#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:60
#: backend/ticket/builders/mysql/mysql_partition.py:47
#: backend/ticket/builders/mysql/mysql_restore_local_slave.py:29
#: backend/ticket/builders/redis/base.py:33 backend/ticket/models/ticket.py:245
#: backend/ticket/serializers.py:217
msgid "集群ID"
msgstr "Cluster ID"

#: backend/db_monitor/serializers.py:24
#: backend/db_services/ipchooser/serializers/base.py:49
msgid "节点实例ID"
msgstr "Node instance ID"

#: backend/db_monitor/serializers.py:28
msgid "监控仪表盘地址"
msgstr "Monitoring Dashboard Address"

#: backend/db_monitor/tasks.py:79
msgid "DBA系统专用"
msgstr "Dedicated to DBA system"

#: backend/db_monitor/views/grafana.py:27
msgid "监控告警管理"
msgstr "Monitoring and alarm management"

#: backend/db_monitor/views/grafana.py:39
msgid "查询内嵌仪表盘地址"
msgstr "Query the address of the embedded dashboard"

#: backend/db_package/constants.py:20
msgid "用户定义"
msgstr "user defined"

#: backend/db_package/constants.py:21
msgid "系统内置"
msgstr "system built-in"

#: backend/db_package/exceptions.py:18
msgid "介质"
msgstr "medium"

#: backend/db_package/exceptions.py:23
msgid "介质包不存在"
msgstr "Media pack does not exist"

#: backend/db_package/exceptions.py:24
#, python-brace-format
msgid "{version}-{pkg_type}-{db_type}介质包不存在"
msgstr "{version}-{pkg_type}-{db_type} media package does not exist"

#: backend/db_package/filters.py:20
msgid "介质类型"
msgstr "media type"

#: backend/db_package/models.py:25
msgid "文件名"
msgstr "file name"

#: backend/db_package/models.py:27
msgid "安装包类型"
msgstr "Package type"

#: backend/db_package/models.py:29 backend/db_package/serializers.py:31
msgid "存储类型"
msgstr "storage type"

#: backend/db_package/models.py:31
msgid "包路径"
msgstr "package path"

#: backend/db_package/models.py:32
msgid "包大小"
msgstr "packet size"

#: backend/db_package/models.py:33
msgid "md5值"
msgstr "md5 value"

#: backend/db_package/models.py:35
msgid "允许的业务列表"
msgstr "Allowed Business List"

#: backend/db_package/models.py:36
msgid "安装包模式"
msgstr "package mode"

#: backend/db_package/models.py:39
msgid "介质包（Package）"
msgstr "Media package (Package)"

#: backend/db_package/serializers.py:28
msgid "版本包"
msgstr "version package"

#: backend/db_package/serializers.py:29
#: backend/db_services/dbconfig/serializers.py:40
#: backend/db_services/dbconfig/serializers.py:52
#: backend/db_services/dbconfig/serializers.py:65
#: backend/db_services/dbconfig/serializers.py:87
#: backend/ticket/builders/mysql/mysql_single_apply.py:65
#: backend/ticket/builders/spider/tendb_apply.py:46
msgid "数据库版本"
msgstr "database version"

#: backend/db_package/serializers.py:30
msgid "包类型"
msgstr "package type"

#: backend/db_package/views.py:43
msgid "新建版本文件"
msgstr "New version file"

#: backend/db_package/views.py:50
msgid "查询版本文件列表"
msgstr "Query version file list"

#: backend/db_package/views.py:57
msgid "删除版本文件"
msgstr "delete version file"

#: backend/db_package/views.py:65
#: backend/db_proxy/views/bkrepo/serializers.py:18
msgid "上传文件"
msgstr "upload files"

#: backend/db_proxy/constants.py:16
msgid "透传服务"
msgstr "Transparent transmission service"

#: backend/db_proxy/constants.py:26
msgid "nginx 转发服务"
msgstr "nginx forwarding service"

#: backend/db_proxy/constants.py:27
msgid "域名解析服务"
msgstr "Domain name resolution service"

#: backend/db_proxy/constants.py:28
msgid "SQL 远程执行服务"
msgstr "SQL Remote Execution Service"

#: backend/db_proxy/constants.py:29
msgid "数据库高可用服务"
msgstr "Database high availability service"

#: backend/db_proxy/constants.py:43
msgid "kibana-ES管理端"
msgstr "kibana-ES management terminal"

#: backend/db_proxy/constants.py:44
msgid "kafka_manager-Kafka管理端"
msgstr "kafka_manager-Kafka management terminal"

#: backend/db_proxy/constants.py:45
msgid "haproxy-HDFS管理端"
msgstr "haproxy-HDFS management terminal"

#: backend/db_proxy/constants.py:46
msgid "pulsar_manager管理端"
msgstr "pulsar_manager management terminal"

#: backend/db_proxy/models.py:30
msgid "代理内部地址"
msgstr "proxy internal address"

#: backend/db_proxy/models.py:31
msgid "代理外部地址"
msgstr "proxy external address"

#: backend/db_proxy/models.py:34
msgid "云区域代理"
msgstr "Cloud Zone Proxy"

#: backend/db_proxy/models.py:49
msgid "扩展类型"
msgstr "extension type"

#: backend/db_proxy/models.py:54
msgid "服务状态"
msgstr "service status"

#: backend/db_proxy/models.py:122
msgid "部署机器ip"
msgstr "deployment machine ip"

#: backend/db_proxy/models.py:123
msgid "部署机器port"
msgstr "Deployment machine port"

#: backend/db_proxy/models.py:124
msgid "服务类型"
msgstr "Service type"

#: backend/db_proxy/models.py:125
#: backend/db_proxy/views/db_meta/serializers.py:94
#: backend/db_proxy/views/db_meta/serializers.py:104
#: backend/db_services/bigdata/resources/query.py:40
#: backend/db_services/mysql/permission/authorize/serializers.py:28
#: backend/db_services/mysql/resources/spider/query.py:36
#: backend/db_services/mysql/resources/tendbha/query.py:39
#: backend/db_services/mysql/resources/tendbsingle/query.py:38
#: backend/db_services/redis/resources/redis_cluster/query.py:54
#: backend/ticket/builders/spider/tendb_apply.py:30
msgid "集群名"
msgstr "cluster name"

#: backend/db_proxy/models.py:128
#: backend/db_proxy/views/jobapi/serializers.py:20
#: backend/db_proxy/views/jobapi/serializers.py:61
#: backend/db_proxy/views/jobapi/serializers.py:71
#: backend/db_proxy/views/jobapi/serializers.py:79
#: backend/db_proxy/views/redis_dts/serializers.py:59
#: backend/db_proxy/views/redis_dts/serializers.py:68
#: backend/db_proxy/views/redis_dts/serializers.py:77
#: backend/db_proxy/views/redis_dts/serializers.py:86
#: backend/db_services/dbresource/serializers.py:51
#: backend/db_services/ipchooser/serializers/base.py:33
#: backend/db_services/mysql/cluster/serializers.py:40
#: backend/db_services/mysql/instance/serializers.py:37
#: backend/db_services/mysql/permission/clone/models.py:28
#: backend/db_services/mysql/permission/clone/serializers.py:24
#: backend/db_services/partition/serializers.py:38
#: backend/db_services/partition/serializers.py:101
#: backend/ticket/builders/cloud/dbha_add.py:29
#: backend/ticket/builders/cloud/dbha_reduce.py:30
#: backend/ticket/builders/cloud/dbha_reload.py:28
#: backend/ticket/builders/cloud/dbha_replace.py:28
#: backend/ticket/builders/cloud/dns_add.py:28
#: backend/ticket/builders/cloud/dns_reduce.py:29
#: backend/ticket/builders/cloud/dns_reload.py:28
#: backend/ticket/builders/cloud/dns_replace.py:28
#: backend/ticket/builders/cloud/drs_add.py:28
#: backend/ticket/builders/cloud/drs_reduce.py:29
#: backend/ticket/builders/cloud/drs_reload.py:28
#: backend/ticket/builders/cloud/drs_replace.py:28
#: backend/ticket/builders/cloud/nginx_reload.py:27
#: backend/ticket/builders/cloud/nginx_replace.py:32
#: backend/ticket/builders/cloud/service_apply.py:40
#: backend/ticket/builders/cloud/service_apply.py:49
#: backend/ticket/builders/common/base.py:29
#: backend/ticket/builders/common/bigdata.py:117
#: backend/ticket/builders/common/bigdata.py:211
#: backend/ticket/builders/common/bigdata.py:277
#: backend/ticket/builders/influxdb/influxdb_apply.py:37
#: backend/ticket/builders/mysql/mysql_partition.py:48
#: backend/ticket/builders/mysql/mysql_single_apply.py:46
#: backend/ticket/builders/redis/redis_cluster_apply.py:29
#: backend/ticket/builders/spider/tendb_apply.py:29
#: backend/ticket/serializers.py:234
msgid "云区域ID"
msgstr "Cloud Region ID"

#: backend/db_proxy/models.py:132
msgid "是否刷新(该条记录是否执行)"
msgstr "Whether to refresh (whether the record is executed)"

#: backend/db_proxy/models.py:133
msgid "是否删除"
msgstr "delete or not"

#: backend/db_proxy/models.py:135
msgid "服务访问地址"
msgstr "Service access address"

#: backend/db_proxy/tasks.py:47
msgid "[{}] nginx配置文件下发参数：{}"
msgstr "[{}] nginx configuration file delivery parameters: {}"

#: backend/db_proxy/tasks.py:50
msgid "下发文件job启动失败，错误信息: {}"
msgstr "The file delivery job failed to start, error message: {}"

#: backend/db_proxy/tasks.py:73
msgid "集群类型：{} 的nginx配置文件不存在，跳过对该nginx配置的下发"
msgstr ""
"Cluster type: The nginx configuration file of {} does not exist, skip the "
"distribution of the nginx configuration"

#: backend/db_proxy/views/bkrepo/views.py:31
msgid "[bkrepo]上传文件"
msgstr "[bkrepo] Upload files"

#: backend/db_proxy/views/db_meta/serializers.py:20
msgid "逻辑城市ID列表"
msgstr "List of Logical City IDs"

#: backend/db_proxy/views/db_meta/serializers.py:23
msgid "地址列表"
msgstr "address list"

#: backend/db_proxy/views/db_meta/serializers.py:26
msgid "状态列表"
msgstr "status list"

#: backend/db_proxy/views/db_meta/serializers.py:45
msgid "角色交换信息列表"
msgstr "List of role exchange information"

#: backend/db_proxy/views/db_meta/serializers.py:53
msgid "实例Port"
msgstr "Instance Port"

#: backend/db_proxy/views/db_meta/serializers.py:57
msgid "domain信息"
msgstr "domain information"

#: backend/db_proxy/views/db_meta/serializers.py:59
msgid "tendis-swap的payload信息"
msgstr "Payload information of tendis-swap"

#: backend/db_proxy/views/db_meta/serializers.py:70
msgid "更新状态的信息列表"
msgstr "List of updated status information"

#: backend/db_proxy/views/db_meta/serializers.py:76
msgid "查询的domain列表"
msgstr "Query domain list"

#: backend/db_proxy/views/db_meta/serializers.py:80
msgid "查询的Hosts列表"
msgstr "Query Hosts list"

#: backend/db_proxy/views/db_meta/serializers.py:84
msgid "查询的集群IDs"
msgstr "Cluster IDs to query"

#: backend/db_proxy/views/db_meta/serializers.py:88
msgid "逻辑城市名称"
msgstr "logical city name"

#: backend/db_proxy/views/db_meta/serializers.py:92
#: backend/db_services/mysql/resources/tendbsingle/query.py:40
#: backend/ticket/handler.py:63
msgid "实例"
msgstr "instance"

#: backend/db_proxy/views/db_meta/serializers.py:93
#: backend/db_services/mysql/cluster/serializers.py:62
#: backend/db_services/mysql/permission/clone/serializers.py:26
#: backend/db_services/partition/serializers.py:22
#: backend/db_services/partition/serializers.py:40
#: backend/db_services/partition/serializers.py:99
#: backend/ticket/builders/mysql/mysql_partition.py:49
msgid "集群域名"
msgstr "Cluster domain name"

#: backend/db_proxy/views/db_meta/serializers.py:96
#: backend/db_proxy/views/db_meta/serializers.py:106
#: backend/db_services/cmdb/serializers.py:50
msgid "模块ID"
msgstr "module ID"

#: backend/db_proxy/views/db_meta/serializers.py:100
msgid "代理列表"
msgstr "proxy list"

#: backend/db_proxy/views/db_meta/serializers.py:101
#: backend/db_proxy/views/db_meta/serializers.py:112
msgid "master实例"
msgstr "master instance"

#: backend/db_proxy/views/db_meta/serializers.py:102
#: backend/db_proxy/views/db_meta/serializers.py:113
msgid "slave实例"
msgstr "slave instance"

#: backend/db_proxy/views/db_meta/serializers.py:103
#: backend/db_proxy/views/db_meta/serializers.py:114
#: backend/db_services/bigdata/resources/query.py:44
#: backend/db_services/dbbase/resources/serializers.py:69
#: backend/db_services/redis/resources/redis_cluster/query.py:57
msgid "域名"
msgstr "domain name"

#: backend/db_proxy/views/db_meta/serializers.py:107
msgid "从库域名"
msgstr "Slave domain name"

#: backend/db_proxy/views/db_meta/serializers.py:111
msgid "proxy列表"
msgstr "proxy list"

#: backend/db_proxy/views/db_meta/serializers.py:115
msgid "slave域名"
msgstr "slave domain name"

#: backend/db_proxy/views/db_meta/views.py:45
msgid "[dbmeta]过滤实例列表"
msgstr "[dbmeta] filter instance list"

#: backend/db_proxy/views/db_meta/views.py:56
msgid "[dbmeta]实例角色交换"
msgstr "[dbmeta] instance role swap"

#: backend/db_proxy/views/db_meta/views.py:66
msgid "[dbmeta]tendis集群交换"
msgstr "[dbmeta] Tendis Cluster Exchange"

#: backend/db_proxy/views/db_meta/views.py:81
msgid "[dbmeta]状态更新"
msgstr "[dbmeta] status update"

#: backend/db_proxy/views/db_meta/views.py:93
msgid "[dbmeta]查询entry信息"
msgstr "[dbmeta] query entry information"

#: backend/db_proxy/views/db_meta/views.py:105
msgid "[dbmeta]根据逻辑城市查询具体城市名称"
msgstr "[dbmeta] Query the specific city name according to the logical city"

#: backend/db_proxy/views/db_meta/views.py:118
msgid "[dbmeta]构建测试单节点集群数据"
msgstr "[dbmeta] Build and test single-node cluster data"

#: backend/db_proxy/views/db_meta/views.py:135
msgid "[dbmeta]构建测试高可用集群数据"
msgstr "[dbmeta] Build and test high-availability cluster data"

#: backend/db_proxy/views/db_meta/views.py:153
msgid "[dbmeta]查询主机信息"
msgstr "[dbmeta] query host information"

#: backend/db_proxy/views/db_meta/views.py:169
msgid "[dbmeta]查询集群信息"
msgstr "[dbmeta] query cluster information"

#: backend/db_proxy/views/db_meta/views.py:185
msgid "[dbmeta]fake重置dbha集群"
msgstr "[dbmeta] fake reset dbha cluster"

#: backend/db_proxy/views/db_remote_service/serializers.py:19
#: backend/db_proxy/views/gcs_dns/serializers.py:42
#: backend/db_proxy/views/gcs_dns/serializers.py:86
#: backend/db_services/mysql/cluster/serializers.py:45
#: backend/db_services/mysql/instance/serializers.py:42
#: backend/ticket/builders/common/bigdata.py:213
#: backend/ticket/builders/common/bigdata.py:279
msgid "实例列表"
msgstr "instance list"

#: backend/db_proxy/views/db_remote_service/serializers.py:20
msgid "SQL命令列表"
msgstr "List of SQL commands"

#: backend/db_proxy/views/db_remote_service/serializers.py:21
#: backend/ticket/builders/mysql/mysql_ha_clear.py:35
#: backend/ticket/builders/mysql/mysql_ha_rename.py:33
msgid "是否强制执行"
msgstr "Whether to enforce"

#: backend/db_proxy/views/db_remote_service/views.py:35
msgid "[db-remote-service]SQL远程执行"
msgstr "[db-remote-service] SQL remote execution"

#: backend/db_proxy/views/db_remote_service/views.py:46
msgid "[db-remote-service]Proxy SQL远程执行"
msgstr "[db-remote-service] Proxy SQL remote execution"

#: backend/db_proxy/views/dbconfig/serializers.py:22
msgid ""
"conf_file 可以是,号分隔的多个文件名，返回结果是一个按照配置文件名组合的一个 "
"list"
msgstr ""
"conf_file can be multiple file names separated by , and the return result is "
"a list combined according to the configuration file name"

#: backend/db_proxy/views/dbconfig/serializers.py:24
msgid ""
"指定要查询的 conf_name， 多个值以,分隔，为空表示查询该 conf_file 的所有"
"conf_name"
msgstr ""
"Specify the conf_name to be queried, multiple values ​​are separated by , and "
"empty means to query all conf_names of the conf_file"

#: backend/db_proxy/views/dbconfig/serializers.py:29
#: backend/db_services/dbconfig/serializers.py:21
msgid "配置类型"
msgstr "configuration type"

#: backend/db_proxy/views/dbconfig/serializers.py:30
msgid "format格式"
msgstr "format format"

#: backend/db_proxy/views/dbconfig/serializers.py:31
msgid "上层级信息"
msgstr "upper level information"

#: backend/db_proxy/views/dbconfig/serializers.py:32
msgid "配置层级名"
msgstr "Configuration level name"

#: backend/db_proxy/views/dbconfig/serializers.py:33
msgid "配置层级值"
msgstr "configuration level value"

#: backend/db_proxy/views/dbconfig/serializers.py:34
#: backend/db_proxy/views/dbconfig/serializers.py:52
msgid "命名空间，一般指DB类型"
msgstr "Namespace, generally refers to the DB type"

#: backend/db_proxy/views/dbconfig/serializers.py:44
msgid ""
"配置文件名，一般配置类型与配置文件一一对应，但如 mysql 5.6, 5.7 两个版本同属 "
"dbconf 配置，所以有 MySQL-5.5, MySQL-5.6 两个配置文件"
msgstr ""
"Configuration file name, the general configuration type corresponds to the "
"configuration file one by one, but for example, the two versions of mysql "
"5.6 and 5.7 belong to the dbconf configuration, so there are two "
"configuration files of MySQL-5.5 and MySQL-5.6"

#: backend/db_proxy/views/dbconfig/serializers.py:46
msgid "指定要查询的 conf_name，目前仅支持一个"
msgstr "Specify the conf_name to query, currently only one is supported"

#: backend/db_proxy/views/dbconfig/serializers.py:47
msgid "配置类型，如 dbconf,backup"
msgstr "Configuration type, such as dbconf, backup"

#: backend/db_proxy/views/dbconfig/serializers.py:48
msgid "level name"
msgstr "level name"

#: backend/db_proxy/views/dbconfig/serializers.py:50
msgid "level value列表"
msgstr "level value list"

#: backend/db_proxy/views/dbconfig/views.py:40
msgid "[dbconfig]查询配置项列表"
msgstr "[dbconfig] query configuration item list"

#: backend/db_proxy/views/dbconfig/views.py:53
msgid "[dbconfig]批量获取多个对象的某一配置项"
msgstr ""
"[dbconfig] Get a certain configuration item of multiple objects in batches"

#: backend/db_proxy/views/gcs_dns/serializers.py:28
#: backend/db_proxy/views/gcs_dns/serializers.py:44
#: backend/db_proxy/views/gcs_dns/serializers.py:58
#: backend/db_proxy/views/gcs_dns/serializers.py:72
#: backend/db_proxy/views/gcs_dns/serializers.py:91
msgid "GCS业务英文缩写"
msgstr "GCS Business English Abbreviation"

#: backend/db_proxy/views/gcs_dns/serializers.py:29
msgid "查询的域名列表"
msgstr "List of domain names to query"

#: backend/db_proxy/views/gcs_dns/serializers.py:30
msgid "查询的IP列表"
msgstr "Query IP list"

#: backend/db_proxy/views/gcs_dns/serializers.py:31
msgid "返回数据列表字段"
msgstr "return data list field"

#: backend/db_proxy/views/gcs_dns/serializers.py:41
#: backend/db_proxy/views/gcs_dns/serializers.py:59
#: backend/db_proxy/views/gcs_dns/serializers.py:73
#: backend/db_proxy/views/gcs_dns/serializers.py:85
msgid "查询的域名"
msgstr "query domain name"

#: backend/db_proxy/views/gcs_dns/serializers.py:45
#: backend/db_proxy/views/gcs_dns/serializers.py:92
#: backend/ticket/builders/mysql/mysql_single_apply.py:61
msgid "域名列表"
msgstr "domain name list"

#: backend/db_proxy/views/gcs_dns/serializers.py:55
msgid "旧实例节点"
msgstr "old instance node"

#: backend/db_proxy/views/gcs_dns/serializers.py:56
msgid "新实例节点"
msgstr "new instance node"

#: backend/db_proxy/views/gcs_dns/serializers.py:60
msgid "修改数组"
msgstr "modify array"

#: backend/db_proxy/views/gcs_dns/serializers.py:70
msgid "新的实例节点"
msgstr "new instance node"

#: backend/db_proxy/views/gcs_dns/serializers.py:74
msgid "修改列列表"
msgstr "modify column list"

#: backend/db_proxy/views/gcs_dns/serializers.py:75
msgid "实例节点"
msgstr "instance node"

#: backend/db_proxy/views/gcs_dns/serializers.py:87
msgid "管理者"
msgstr "manager"

#: backend/db_proxy/views/gcs_dns/serializers.py:88
msgid "域名备注信息"
msgstr "Domain Name Remarks"

#: backend/db_proxy/views/gcs_dns/serializers.py:89
msgid "域名类型"
msgstr "domain type"

#: backend/db_proxy/views/gcs_dns/views.py:49
msgid "[gcsdns]获取所有ip、域名关系"
msgstr "[gcsdns] Get all ip, domain name relationship"

#: backend/db_proxy/views/gcs_dns/views.py:60
msgid "[gcsdns]获取域名映射关系"
msgstr "[gcsdns] Get domain name mapping relationship"

#: backend/db_proxy/views/gcs_dns/views.py:71
msgid "[gcsdns]批量更新域名映射关系"
msgstr "[gcsdns] Batch update domain name mapping relationship"

#: backend/db_proxy/views/gcs_dns/views.py:82
msgid "[gcsdns]更新域名映射关系"
msgstr "[gcsdns] Update domain name mapping relationship"

#: backend/db_proxy/views/gcs_dns/views.py:93
msgid "[gcsdns]删除域名映射"
msgstr "[gcsdns] delete domain name mapping"

#: backend/db_proxy/views/gcs_dns/views.py:104
msgid "[gcsdns]新增域名映射关系"
msgstr "[gcsdns] Add domain name mapping relationship"

#: backend/db_proxy/views/hadb/serializers.py:19
msgid "名字"
msgstr "name"

#: backend/db_proxy/views/hadb/serializers.py:20
msgid "查询参数"
msgstr "query parameters"

#: backend/db_proxy/views/hadb/serializers.py:21
msgid "设置参数"
msgstr "Setting parameters"

#: backend/db_proxy/views/hadb/views.py:30
msgid "[hadb]上报和查询ha的探测切换日志"
msgstr "[hadb] Report and query ha detection switch log"

#: backend/db_proxy/views/hadb/views.py:40
msgid "[hadb]上报和查询数据库实例的状态"
msgstr "[hadb] Report and query the status of the database instance"

#: backend/db_proxy/views/hadb/views.py:50
msgid "[hadb]上报和查询ha服务的状态"
msgstr "[hadb] Report and query the status of ha service"

#: backend/db_proxy/views/hadb/views.py:60
#: backend/db_proxy/views/hadb/views.py:70
msgid "[gcsdns]查询和上报切换队列"
msgstr "[gcsdns] query and report switch queue"

#: backend/db_proxy/views/jobapi/serializers.py:21
msgid "主机ip"
msgstr "host ip"

#: backend/db_proxy/views/jobapi/serializers.py:26
#: backend/db_proxy/views/jobapi/serializers.py:51
msgid "执行脚本的主机ip列表"
msgstr "List of host ip to execute the script"

#: backend/db_proxy/views/jobapi/serializers.py:27
msgid "脚本内容"
msgstr "Script content"

#: backend/db_proxy/views/jobapi/serializers.py:28
msgid "脚本语言类型"
msgstr "scripting language type"

#: backend/db_proxy/views/jobapi/serializers.py:29
msgid "执行脚本的账号"
msgstr "The account that executes the script"

#: backend/db_proxy/views/jobapi/serializers.py:30
#: backend/db_proxy/views/jobapi/serializers.py:78
msgid "超时时间,单位秒"
msgstr "Timeout, in seconds"

#: backend/db_proxy/views/jobapi/serializers.py:39
#: backend/db_proxy/views/jobapi/serializers.py:49
msgid "任务实例ID"
msgstr "Task instance ID"

#: backend/db_proxy/views/jobapi/serializers.py:50
msgid "步骤实例ID"
msgstr "Step Instance ID"

#: backend/db_proxy/views/jobapi/serializers.py:62
msgid "源主机ip"
msgstr "source host ip"

#: backend/db_proxy/views/jobapi/serializers.py:63
msgid "源主机账号"
msgstr "source host account"

#: backend/db_proxy/views/jobapi/serializers.py:65
msgid "文件列表"
msgstr "File List"

#: backend/db_proxy/views/jobapi/serializers.py:72
msgid "目标主机ip"
msgstr "target host ip"

#: backend/db_proxy/views/jobapi/serializers.py:74
msgid "源文件列表"
msgstr "source file list"

#: backend/db_proxy/views/jobapi/serializers.py:75
msgid "目标账号"
msgstr "target account"

#: backend/db_proxy/views/jobapi/serializers.py:76
msgid "目标目录"
msgstr "target directory"

#: backend/db_proxy/views/jobapi/serializers.py:77
msgid "目标主机ip列表"
msgstr "target host ip list"

#: backend/db_proxy/views/jobapi/serializers.py:80
msgid "db_cloud_token"
msgstr "db_cloud_token"

#: backend/db_proxy/views/jobapi/views.py:42
msgid "[jobapi]快速执行脚本"
msgstr "[jobapi] execute script quickly"

#: backend/db_proxy/views/jobapi/views.py:57
msgid "DBM 快速脚本执行"
msgstr "DBM Fast Script Execution"

#: backend/db_proxy/views/jobapi/views.py:69
msgid "[jobapi]查询任务执行状态"
msgstr "[jobapi] query task execution status"

#: backend/db_proxy/views/jobapi/views.py:91
#: backend/db_proxy/views/jobapi/views.py:114
msgid "[jobapi]查询任务执行日志"
msgstr "[jobapi] query task execution log"

#: backend/db_proxy/views/jobapi/views.py:136
msgid "DBM 快速文件分发"
msgstr "DBM Fast File Distribution"

#: backend/db_proxy/views/nameservice/serializers.py:18
#: backend/db_proxy/views/nameservice/serializers.py:25
msgid "中文区域名称"
msgstr "Chinese region name"

#: backend/db_proxy/views/nameservice/serializers.py:19
#: backend/db_proxy/views/nameservice/serializers.py:26
msgid "clb的id"
msgstr "clb&#39;s id"

#: backend/db_proxy/views/nameservice/serializers.py:20
#: backend/db_proxy/views/nameservice/serializers.py:27
msgid "clb监听器的id"
msgstr "The id of the clb listener"

#: backend/db_proxy/views/nameservice/serializers.py:21
msgid "需要解绑的后端主机端口数组"
msgstr "Array of backend host ports that need to be unbound"

#: backend/db_proxy/views/nameservice/serializers.py:31
#: backend/db_proxy/views/nameservice/serializers.py:35
msgid "北极星服务名称"
msgstr "Polaris service name"

#: backend/db_proxy/views/nameservice/serializers.py:36
msgid "北极星服务token"
msgstr "Polaris service token"

#: backend/db_proxy/views/nameservice/serializers.py:37
msgid "需要解绑的后端主机端口数组, 格式为“ip:port"
msgstr "An array of backend host ports to be unbound, in the format [ip:port]"

#: backend/db_proxy/views/nameservice/views.py:38
msgid "[name service]clb解绑部分后端主机"
msgstr "[name service]clb unbinds some backend hosts"

#: backend/db_proxy/views/nameservice/views.py:53
msgid "[name service]获取clb已绑定后端主机的IP"
msgstr "[name service] Obtain the IP of the backend host that clb is bound to"

#: backend/db_proxy/views/nameservice/views.py:68
msgid "[name service]获取polaris后端主机信息"
msgstr "[name service] Get polaris backend host information"

#: backend/db_proxy/views/nameservice/views.py:83
msgid "[name service]polaris解绑部分后端主机"
msgstr "[name service]polaris unbinds some backend hosts"

#: backend/db_proxy/views/redis_dts/serializers.py:18
#: backend/db_proxy/views/redis_dts/serializers.py:60
#: backend/db_proxy/views/redis_dts/serializers.py:69
#: backend/db_proxy/views/redis_dts/serializers.py:78
msgid "DTS_server IP"
msgstr "DTS_server IP"

#: backend/db_proxy/views/redis_dts/serializers.py:28
#: backend/db_proxy/views/redis_dts/serializers.py:34
#: backend/db_proxy/views/redis_dts/serializers.py:93
#: backend/db_proxy/views/redis_dts/serializers.py:99
#: backend/db_services/redis_dts/serializers.py:23
msgid "任务ID"
msgstr "task ID"

#: backend/db_proxy/views/redis_dts/serializers.py:29
#: backend/db_proxy/views/redis_dts/serializers.py:35
#: backend/db_proxy/views/redis_dts/serializers.py:94
#: backend/db_proxy/views/redis_dts/serializers.py:100
#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:43
#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:24
#: backend/db_services/redis_dts/serializers.py:24
msgid "源集群"
msgstr "source cluster"

#: backend/db_proxy/views/redis_dts/serializers.py:30
#: backend/db_proxy/views/redis_dts/serializers.py:36
#: backend/db_proxy/views/redis_dts/serializers.py:95
#: backend/db_proxy/views/redis_dts/serializers.py:101
#: backend/db_services/mysql/permission/authorize/models.py:28
#: backend/db_services/mysql/permission/authorize/serializers.py:28
#: backend/db_services/redis_dts/serializers.py:25
msgid "目标集群"
msgstr "target cluster"

#: backend/db_proxy/views/redis_dts/serializers.py:41
#: backend/db_proxy/views/redis_dts/serializers.py:47
#: backend/db_proxy/views/redis_dts/serializers.py:114
#: backend/db_services/redis_dts/serializers.py:30
#: backend/db_services/redis_dts/serializers.py:36
msgid "子任务ID列表"
msgstr "List of subtask IDs"

#: backend/db_proxy/views/redis_dts/serializers.py:49
#: backend/db_services/dbconfig/serializers.py:27
#: backend/db_services/dbresource/serializers.py:144
#: backend/db_services/redis_dts/serializers.py:38
#: backend/ticket/serializers.py:220 backend/ticket/serializers.py:228
msgid "操作类型"
msgstr "operation type"

#: backend/db_proxy/views/redis_dts/serializers.py:53
msgid "锁key名"
msgstr "lock key name"

#: backend/db_proxy/views/redis_dts/serializers.py:54
msgid "锁持有者"
msgstr "lock holder"

#: backend/db_proxy/views/redis_dts/serializers.py:55
msgid "锁ttl时间(seconds)"
msgstr "Lock ttl time (seconds)"

#: backend/db_proxy/views/redis_dts/serializers.py:61
#: backend/db_proxy/views/redis_dts/serializers.py:70
#: backend/db_proxy/views/redis_dts/serializers.py:79
#: backend/db_proxy/views/redis_dts/serializers.py:89
msgid "db类型"
msgstr "db type"

#: backend/db_proxy/views/redis_dts/serializers.py:63
#: backend/db_proxy/views/redis_dts/serializers.py:72
#: backend/db_proxy/views/redis_dts/serializers.py:104
msgid "task类型列表"
msgstr "task type list"

#: backend/db_proxy/views/redis_dts/serializers.py:80
#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:52
msgid "task类型"
msgstr "task type"

#: backend/db_proxy/views/redis_dts/serializers.py:81
msgid "限制条数"
msgstr "limit number"

#: backend/db_proxy/views/redis_dts/serializers.py:82
#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:55
#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:65
msgid "任务状态"
msgstr "task status"

#: backend/db_proxy/views/redis_dts/serializers.py:87
msgid "最大数据量"
msgstr "Maximum amount of data"

#: backend/db_proxy/views/redis_dts/serializers.py:88
#: backend/ticket/builders/mysql/mysql_single_apply.py:67
#: backend/ticket/builders/redis/redis_cluster_apply.py:35
#: backend/ticket/builders/spider/tendb_apply.py:48
msgid "城市名"
msgstr "city ​​name"

#: backend/db_proxy/views/redis_dts/serializers.py:102
msgid "源redis slave IP"
msgstr "Source redis slave IP"

#: backend/db_proxy/views/redis_dts/serializers.py:109
msgid "子任务ID"
msgstr "Subtask ID"

#: backend/db_proxy/views/redis_dts/views.py:62
msgid "dtsserver是否在黑名单中"
msgstr "Is dtsserver in the blacklist"

#: backend/db_proxy/views/redis_dts/views.py:77
#: backend/db_services/redis_dts/views.py:32
msgid "获取DTS历史任务以及其对应task cnt"
msgstr "Get DTS historical tasks and their corresponding task cnt"

#: backend/db_proxy/views/redis_dts/views.py:89
msgid "获取dts任务详情"
msgstr "Get dts task details"

#: backend/db_proxy/views/redis_dts/views.py:99
#: backend/db_services/redis_dts/views.py:43
msgid "获取迁移任务task列表,失败的排在前面"
msgstr "Get the list of migration tasks, the failed ones are listed first"

#: backend/db_proxy/views/redis_dts/views.py:109
#: backend/db_services/redis_dts/views.py:54
msgid ""
"dts task操作,目前支持 同步完成(syncStopTodo)、强制终止(ForceKillTaskTodo) 两"
"个操作"
msgstr ""
"The dts task operation currently supports two operations: synchronous "
"completion (syncStopTodo) and forced termination (ForceKillTaskTodo)"

#: backend/db_proxy/views/redis_dts/views.py:121
#: backend/db_services/redis_dts/views.py:65
msgid "dts tasks重新开始"
msgstr "dts tasks restart"

#: backend/db_proxy/views/redis_dts/views.py:131
#: backend/db_services/redis_dts/views.py:76
msgid "dts tasks重试当前步骤"
msgstr "dts tasks retry current step"

#: backend/db_proxy/views/redis_dts/views.py:141
msgid "dts 分布式锁,trylock,成功返回True,失败返回False"
msgstr ""
"dts distributed lock, trylock, returns True on success, returns False on "
"failure"

#: backend/db_proxy/views/redis_dts/views.py:156
msgid "dts 分布式锁,unlock"
msgstr "dts distributed lock, unlock"

#: backend/db_proxy/views/redis_dts/views.py:171
msgid "获取dts server迁移中的任务"
msgstr "Get tasks in dts server migration"

#: backend/db_proxy/views/redis_dts/views.py:186
msgid "获取DtsServer上syncPort最大的task"
msgstr "Get the task with the largest syncPort on DtsServer"

#: backend/db_proxy/views/redis_dts/views.py:201
msgid "获取最近30天内task_type类型的等待执行的tasks"
msgstr ""
"Obtain the tasks waiting to be executed of the task_type type in the last 30 "
"days"

#: backend/db_proxy/views/redis_dts/views.py:216
msgid "获取最近30天内的等待调度的jobs"
msgstr "Get the jobs waiting to be scheduled in the last 30 days"

#: backend/db_proxy/views/redis_dts/views.py:231
#: backend/db_proxy/views/redis_dts/views.py:246
#: backend/db_proxy/views/redis_dts/views.py:261
msgid "获取一个job的所有待调度的tasks"
msgstr "Get all pending tasks of a job"

#: backend/db_proxy/views/redis_dts/views.py:276
msgid "批量更新dts_tasks"
msgstr "Batch update dts_tasks"

#: backend/db_proxy/views/serialiers.py:29
msgid "调用的校验token"
msgstr "Call verification token"

#: backend/db_proxy/views/serialiers.py:30
msgid "请求服务所属的云区域ID"
msgstr "The ID of the cloud region to which the requested service belongs"

#: backend/db_proxy/views/serialiers.py:47
msgid "token:{}解密失败，请检查token是否合法"
msgstr "token: {} decryption failed, please check whether the token is legal"

#: backend/db_proxy/views/serialiers.py:49
msgid "token:{}不存在，请传入校验token"
msgstr "token: {} does not exist, please pass in the verification token"

#: backend/db_proxy/views/serialiers.py:54
msgid "解析的云区域ID{}与请求参数的云区域ID{}不相同，请检查token是否合法"
msgstr ""
"The parsed cloud region ID{} is different from the cloud region ID{} of the "
"request parameter, please check whether the token is valid"

#: backend/db_proxy/views/serialiers.py:62
msgid "作业实例ID"
msgstr "job instance ID"

#: backend/db_proxy/views/serialiers.py:63
msgid "作业状态码"
msgstr "job status code"

#: backend/db_proxy/views/serialiers.py:64
msgid "步骤块中包含的各个步骤执行状态"
msgstr "Individual step execution status contained in the step block"

#: backend/db_proxy/views/views.py:55
msgid "nginx文件下发job回调视图"
msgstr "nginx file delivery job callback view"

#: backend/db_proxy/views/views.py:66
msgid "[{}]nginx配置文件下发失败"
msgstr "[{}]Failed to deliver nginx configuration file"

#: backend/db_proxy/views/views.py:69
msgid "[{}]nginx配置文件下发成功"
msgstr "[{}]nginx configuration file delivered successfully"

#: backend/db_proxy/views/views.py:73
msgid "[{}]nginx文件下发job信息缓存已过期，请考虑是否下发时间过长"
msgstr ""
"[{}] The job information cache of the nginx file delivery has expired, "
"please consider whether the delivery time is too long"

#: backend/db_proxy/views/views.py:91
msgid "[{}] nginx重启参数：{}"
msgstr "[{}] nginx restart parameters: {}"

#: backend/db_proxy/views/views.py:96
msgid "nginx重启失败，错误信息: {}"
msgstr "nginx restart failed, error message: {}"

#: backend/db_proxy/views/views.py:101
msgid "nginx重启job回调视图"
msgstr "nginx restart job callback view"

#: backend/db_proxy/views/views.py:110
msgid "[{}]nginx重启失败，请前往作业平台查看详情"
msgstr ""
"[{}]nginx failed to restart, please go to the operation platform to check "
"the details"

#: backend/db_proxy/views/views.py:112
msgid "[{}]nginx重启成功"
msgstr "[{}]nginx restarted successfully"

#: backend/db_services/bigdata/es/query.py:34
msgid "Master节点"
msgstr "Master node"

#: backend/db_services/bigdata/es/query.py:37
msgid "代理节点"
msgstr "proxy node"

#: backend/db_services/bigdata/es/views.py:28
#: backend/db_services/bigdata/hdfs/views.py:36
#: backend/db_services/bigdata/kafka/views.py:26
#: backend/db_services/bigdata/pulsar/views.py:26
#: backend/db_services/redis/resources/redis_cluster/views.py:32
msgid "获取集群列表"
msgstr "Get a list of clusters"

#: backend/db_services/bigdata/es/views.py:37
#: backend/db_services/bigdata/hdfs/views.py:45
#: backend/db_services/bigdata/kafka/views.py:35
#: backend/db_services/bigdata/pulsar/views.py:35
#: backend/db_services/redis/resources/redis_cluster/views.py:41
msgid "获取集群详情"
msgstr "Get cluster details"

#: backend/db_services/bigdata/es/views.py:45
#: backend/db_services/bigdata/hdfs/views.py:53
#: backend/db_services/bigdata/influxdb/views.py:27
#: backend/db_services/bigdata/kafka/views.py:43
#: backend/db_services/bigdata/pulsar/views.py:43
msgid "获取实例列表"
msgstr "Get instance list"

#: backend/db_services/bigdata/es/views.py:54
#: backend/db_services/bigdata/hdfs/views.py:62
#: backend/db_services/bigdata/influxdb/views.py:36
#: backend/db_services/bigdata/kafka/views.py:52
#: backend/db_services/bigdata/pulsar/views.py:52
msgid "获取实例详情"
msgstr "Get instance details"

#: backend/db_services/bigdata/es/views.py:62
#: backend/db_services/bigdata/hdfs/views.py:70
#: backend/db_services/bigdata/influxdb/views.py:44
#: backend/db_services/bigdata/kafka/views.py:60
#: backend/db_services/bigdata/pulsar/views.py:60
msgid "获取查询返回字段"
msgstr "Get query return fields"

#: backend/db_services/bigdata/es/views.py:70
#: backend/db_services/bigdata/hdfs/views.py:78
#: backend/db_services/bigdata/influxdb/views.py:52
#: backend/db_services/bigdata/kafka/views.py:68
#: backend/db_services/bigdata/pulsar/views.py:68
#: backend/db_services/redis/resources/redis_cluster/views.py:71
msgid "获取集群拓扑"
msgstr "Get cluster topology"

#: backend/db_services/bigdata/es/views.py:78
#: backend/db_services/redis/resources/redis_cluster/views.py:79
msgid "获取集群节点"
msgstr "Get cluster nodes"

#: backend/db_services/bigdata/hdfs/query.py:34
msgid "namenode节点"
msgstr "namenode node"

#: backend/db_services/bigdata/hdfs/query.py:35
#: backend/db_services/bigdata/kafka/query.py:28
#: backend/db_services/bigdata/pulsar/query.py:27
msgid "zookeeper节点"
msgstr "zookeeper node"

#: backend/db_services/bigdata/hdfs/query.py:36
msgid "journalnode节点"
msgstr "journal node node"

#: backend/db_services/bigdata/hdfs/query.py:37
msgid "datanode节点"
msgstr "datanode node"

#: backend/db_services/bigdata/hdfs/views.py:88
msgid "获取集群访问xml配置"
msgstr "Get cluster access xml configuration"

#: backend/db_services/bigdata/influxdb/query.py:33
#: backend/db_services/bigdata/resources/query.py:45
msgid "版本"
msgstr "Version"

#: backend/db_services/bigdata/influxdb/query.py:37
#: backend/db_services/bigdata/resources/query.py:49
#: backend/db_services/dbconfig/serializers.py:67
#: backend/db_services/redis/resources/redis_cluster/query.py:63
msgid "更新人"
msgstr "updater"

#: backend/db_services/bigdata/kafka/query.py:27
#: backend/db_services/bigdata/pulsar/query.py:26
msgid "broker节点"
msgstr "broker node"

#: backend/db_services/bigdata/pulsar/query.py:28
msgid "bookkeeper节点"
msgstr "bookkeeper node"

#: backend/db_services/bigdata/resources/query.py:43
msgid "集群类型名"
msgstr "cluster type name"

#: backend/db_services/bigdata/resources/views.py:80
#: backend/db_services/redis/resources/redis_cluster/views.py:95
msgid "获取集群访问密码"
msgstr "Obtain the cluster access password"

#: backend/db_services/bigdata/resources/views.py:121
msgid "获取集群节点列表信息"
msgstr "Get cluster node list information"

#: backend/db_services/bigdata/resources/views.py:139
#: backend/db_services/mysql/resources/views.py:85
#: backend/db_services/redis/resources/views.py:83
msgid "获取资源拓扑树"
msgstr "Get resource topology tree"

#: backend/db_services/cmdb/exceptions.py:18
msgid "CMDB模块异常"
msgstr "CMDB module exception"

#: backend/db_services/cmdb/exceptions.py:23
msgid "英文缩写已存在，不允许修改"
msgstr "English abbreviation already exists, modification is not allowed"

#: backend/db_services/cmdb/serializers.py:19 backend/ticket/serializers.py:76
msgid "业务名"
msgstr "business name"

#: backend/db_services/cmdb/serializers.py:21
msgid "业务权限列表"
msgstr "Business authority list"

#: backend/db_services/cmdb/serializers.py:26
#: backend/ticket/builders/mysql/mysql_single_apply.py:51
#: backend/ticket/builders/spider/tendb_apply.py:34
msgid "DB模块ID"
msgstr "DB module ID"

#: backend/db_services/cmdb/serializers.py:27
#: backend/db_services/cmdb/serializers.py:35
#: backend/ticket/builders/mysql/mysql_single_apply.py:66
#: backend/ticket/builders/spider/tendb_apply.py:47
msgid "DB模块名"
msgstr "DB module name"

#: backend/db_services/cmdb/serializers.py:40
msgid "英文缩写"
msgstr "English abbreviations"

#: backend/db_services/cmdb/serializers.py:48
#: backend/db_services/dbresource/serializers.py:83
msgid "单页数量"
msgstr "Single page quantity"

#: backend/db_services/cmdb/serializers.py:49
msgid "页数"
msgstr "number of pages"

#: backend/db_services/cmdb/views.py:36
msgid "业务列表"
msgstr "business list"

#: backend/db_services/cmdb/views.py:37
msgid "业务信息"
msgstr "business information"

#: backend/db_services/cmdb/views.py:46
msgid "业务下的模块列表"
msgstr "Module List under Business"

#: backend/db_services/cmdb/views.py:48
msgid "模块信息"
msgstr "module information"

#: backend/db_services/cmdb/views.py:59
msgid "创建数据库模块"
msgstr "Create database module"

#: backend/db_services/cmdb/views.py:71
msgid "设置业务英文缩写"
msgstr "Set business abbreviations"

#: backend/db_services/dbbase/constants.py:31
msgid "手动录入"
msgstr "Manual entry"

#: backend/db_services/dbbase/constants.py:32
#: backend/db_services/dbresource/constants.py:15
msgid "资源池"
msgstr "resource pool"

#: backend/db_services/dbbase/resources/constants.py:18
#: backend/db_services/dbbase/resources/query.py:27
#: backend/db_services/ipchooser/constants.py:59
#: backend/db_services/ipchooser/constants.py:82
#: backend/db_services/ipchooser/mock_data.py:36
#: backend/db_services/ipchooser/mock_data.py:92
#: backend/iam_app/dataclass/resources.py:61
msgid "业务"
msgstr "business"

#: backend/db_services/dbbase/resources/constants.py:20
#: backend/db_services/ipchooser/constants.py:82
#: backend/db_services/ipchooser/mock_data.py:50
#: backend/db_services/ipchooser/mock_data.py:69
msgid "模块"
msgstr "module"

#: backend/db_services/dbbase/resources/serializers.py:47
#: backend/db_services/dbbase/resources/serializers.py:80
#: backend/db_services/mysql/resources/tendbha/yasg_slz.py:113
msgid "实例地址(ip:port)"
msgstr "Instance address (ip:port)"

#: backend/db_services/dbbase/resources/serializers.py:48
#: backend/ticket/builders/common/bigdata.py:206
#: backend/ticket/builders/common/bigdata.py:273
msgid "IP"
msgstr "IP"

#: backend/db_services/dbbase/resources/serializers.py:85
#: backend/ticket/serializers.py:199
msgid "关键字过滤"
msgstr "keyword filtering"

#: backend/db_services/dbconfig/exceptions.py:18
msgid "配置模块异常"
msgstr "configuration module exception"

#: backend/db_services/dbconfig/exceptions.py:23
msgid "查询配置异常"
msgstr "Query configuration exception"

#: backend/db_services/dbconfig/exceptions.py:28
msgid "与下层级配置存在冲突"
msgstr "There is a conflict with the lower-level configuration"

#: backend/db_services/dbconfig/mock_data.py:26
msgid "5.5配置项"
msgstr "5.5 configuration items"

#: backend/db_services/dbconfig/mock_data.py:27
msgid "5.6配置项"
msgstr "5.6 Configuration items"

#: backend/db_services/dbconfig/mock_data.py:34
#: backend/db_services/dbconfig/mock_data.py:78
msgid "MySQL5.6配置"
msgstr "MySQL5.6 configuration"

#: backend/db_services/dbconfig/mock_data.py:38
msgid "日志过期天数"
msgstr "Log expiration days"

#: backend/db_services/dbconfig/mock_data.py:49
msgid "绑定地址"
msgstr "binding address"

#: backend/db_services/dbconfig/mock_data.py:60
msgid "binlog格式"
msgstr "binlog format"

#: backend/db_services/dbconfig/mock_data.py:70
#: backend/db_services/dbconfig/mock_data.py:103
msgid "我是描述"
msgstr "I&#39;m describing"

#: backend/db_services/dbconfig/serializers.py:25
msgid "参数项"
msgstr "parameter item"

#: backend/db_services/dbconfig/serializers.py:26
msgid "是否锁定"
msgstr "Whether to lock"

#: backend/db_services/dbconfig/serializers.py:32
msgid "是否重启实例生效"
msgstr "Whether to restart the instance to take effect"

#: backend/db_services/dbconfig/serializers.py:33
msgid "参数范围"
msgstr "parameter range"

#: backend/db_services/dbconfig/serializers.py:34
#: backend/db_services/dbconfig/serializers.py:81
msgid "参数值"
msgstr "parameter value"

#: backend/db_services/dbconfig/serializers.py:35
msgid "参数值类型"
msgstr "parameter value type"

#: backend/db_services/dbconfig/serializers.py:36
msgid "参数范围类型，ENUM/REGEX"
msgstr "Parameter range type, ENUM/REGEX"

#: backend/db_services/dbconfig/serializers.py:41
#: backend/db_services/dbconfig/serializers.py:64
msgid "配置文件名"
msgstr "configuration file name"

#: backend/db_services/dbconfig/serializers.py:42
#: backend/db_services/dbconfig/serializers.py:94
msgid "配置项列表"
msgstr "List of configuration items"

#: backend/db_services/dbconfig/serializers.py:43
#: backend/db_services/dbconfig/serializers.py:95
msgid "是否确认"
msgstr "Whether to confirm"

#: backend/db_services/dbconfig/serializers.py:44
#: backend/db_services/dbconfig/serializers.py:96
msgid "配置文件描述"
msgstr "Profile description"

#: backend/db_services/dbconfig/serializers.py:45
#: backend/db_services/dbconfig/serializers.py:97
msgid "发布描述"
msgstr "release description"

#: backend/db_services/dbconfig/serializers.py:88
msgid "层级名称"
msgstr "hierarchy name"

#: backend/db_services/dbconfig/serializers.py:89
msgid "层级值"
msgstr "level value"

#: backend/db_services/dbconfig/serializers.py:90
msgid "层级关系"
msgstr "hierarchical relationship"

#: backend/db_services/dbconfig/serializers.py:114
msgid "历史版本号"
msgstr "Historical version number"

#: backend/db_services/dbconfig/views.py:35
msgid "查询配置项名称列表"
msgstr "Query the list of configuration item names"

#: backend/db_services/dbconfig/views.py:47
msgid "查询平台配置列表"
msgstr "Query the platform configuration list"

#: backend/db_services/dbconfig/views.py:59
msgid "新建平台配置"
msgstr "New platform configuration"

#: backend/db_services/dbconfig/views.py:73
msgid "编辑平台配置"
msgstr "Edit platform configuration"

#: backend/db_services/dbconfig/views.py:87
msgid "查询平台配置详情"
msgstr "Query platform configuration details"

#: backend/db_services/dbconfig/views.py:99
msgid "查询业务配置列表"
msgstr "Query the list of business configurations"

#: backend/db_services/dbconfig/views.py:112
msgid "编辑层级（业务、模块、集群）配置"
msgstr "Edit level (business, module, cluster) configuration"

#: backend/db_services/dbconfig/views.py:125
msgid "保存模块部署配置"
msgstr "Save the module deployment configuration"

#: backend/db_services/dbconfig/views.py:141
msgid "查询层级（业务、模块、集群）配置详情"
msgstr "Query level (business, module, cluster) configuration details"

#: backend/db_services/dbconfig/views.py:153
msgid "查询配置发布历史记录"
msgstr "Query configuration release history"

#: backend/db_services/dbconfig/views.py:165
msgid "查询配置发布记录详情"
msgstr "Query configuration release record details"

#: backend/db_services/dbresource/constants.py:22
msgid "导入主机"
msgstr "import host"

#: backend/db_services/dbresource/constants.py:23
msgid "消费主机"
msgstr "consumer host"

#: backend/db_services/dbresource/exceptions.py:18
msgid "资源池服务异常"
msgstr "Resource pool service exception"

#: backend/db_services/dbresource/exceptions.py:23
#: backend/db_services/dbresource/exceptions.py:24
msgid "资源池申请资源异常"
msgstr "Resource pool application resource exception"

#: backend/db_services/dbresource/exceptions.py:29
#: backend/db_services/dbresource/exceptions.py:30
msgid "规格操作失败"
msgstr "specification operation failed"

#: backend/db_services/dbresource/exceptions.py:35
#: backend/db_services/dbresource/exceptions.py:36
msgid "部署方案操作失败"
msgstr "Deployment scenario operation failed"

#: backend/db_services/dbresource/filters.py:19
msgid "规格名称"
msgstr "Specification name"

#: backend/db_services/dbresource/filters.py:21
msgid "规格集群类型"
msgstr "Specification cluster type"

#: backend/db_services/dbresource/filters.py:22
msgid "规格机器类型"
msgstr "Specification Machine Type"

#: backend/db_services/dbresource/filters.py:30
msgid "Redis部署方案名称"
msgstr "Redis deployment scheme name"

#: backend/db_services/dbresource/filters.py:31
msgid "Redis集群类型"
msgstr "Redis cluster type"

#: backend/db_services/dbresource/serializers.py:31
msgid "专属业务的ID列表"
msgstr "ID list of exclusive business"

#: backend/db_services/dbresource/serializers.py:33
#: backend/db_services/dbresource/serializers.py:52
#: backend/db_services/dbresource/serializers.py:68
#: backend/db_services/dbresource/serializers.py:133
msgid "专属DB"
msgstr "Exclusive DB"

#: backend/db_services/dbresource/serializers.py:35
msgid "机器当前所属的业务id\t"
msgstr "The business id\t to which the machine currently belongs"

#: backend/db_services/dbresource/serializers.py:36
msgid "主机"
msgstr "the host"

#: backend/db_services/dbresource/serializers.py:37
#: backend/db_services/dbresource/serializers.py:81
msgid "标签信息"
msgstr "Label Information"

#: backend/db_services/dbresource/serializers.py:42
msgid "分组类型"
msgstr "grouping type"

#: backend/db_services/dbresource/serializers.py:43
#: backend/db_services/dbresource/serializers.py:69
msgid "机型"
msgstr "model"

#: backend/db_services/dbresource/serializers.py:44
msgid "cpu&mem参数"
msgstr "cpu&amp;mem parameters"

#: backend/db_services/dbresource/serializers.py:45
msgid "磁盘参数"
msgstr "disk parameter"

#: backend/db_services/dbresource/serializers.py:46
msgid "位置匹配参数"
msgstr "position matching parameters"

#: backend/db_services/dbresource/serializers.py:48
msgid "亲和性"
msgstr "Affinity"

#: backend/db_services/dbresource/serializers.py:49
msgid "数量"
msgstr "quantity"

#: backend/db_services/dbresource/serializers.py:53
msgid "业务专属ID"
msgstr "Business exclusive ID"

#: backend/db_services/dbresource/serializers.py:54
msgid "资源申请参数"
msgstr "Resource application parameters"

#: backend/db_services/dbresource/serializers.py:64
msgid "资源最小值"
msgstr "resource minimum"

#: backend/db_services/dbresource/serializers.py:65
msgid "资源最大值"
msgstr "resource max"

#: backend/db_services/dbresource/serializers.py:67
msgid "专属业务"
msgstr "exclusive business"

#: backend/db_services/dbresource/serializers.py:70
msgid "主机IP列表"
msgstr "Host IP list"

#: backend/db_services/dbresource/serializers.py:71
msgid "城市"
msgstr "City"

#: backend/db_services/dbresource/serializers.py:72
msgid "园区"
msgstr "park"

#: backend/db_services/dbresource/serializers.py:74
msgid "cpu资源限制"
msgstr "cpu resource limitation"

#: backend/db_services/dbresource/serializers.py:75
msgid "内存资源限制"
msgstr "memory resource limit"

#: backend/db_services/dbresource/serializers.py:76
msgid "磁盘资源限制"
msgstr "disk resource limit"

#: backend/db_services/dbresource/serializers.py:77
msgid "磁盘类型"
msgstr "disk type"

#: backend/db_services/dbresource/serializers.py:78
msgid "磁盘挂载点"
msgstr "disk mount point"

#: backend/db_services/dbresource/serializers.py:80
msgid "agent状态"
msgstr "agent state"

#: backend/db_services/dbresource/serializers.py:84
msgid "偏移量"
msgstr "Offset"

#: backend/db_services/dbresource/serializers.py:119
msgid "资源申请的request_id"
msgstr "request_id of resource application"

#: backend/db_services/dbresource/serializers.py:120
#: backend/db_services/dbresource/serializers.py:124
msgid "主机ID列表"
msgstr "List of host IDs"

#: backend/db_services/dbresource/serializers.py:129
#: backend/db_services/ipchooser/serializers/topo_sers.py:78
#: backend/db_services/mysql/cluster/serializers.py:42
#: backend/db_services/mysql/instance/serializers.py:39
#: backend/ticket/builders/common/base.py:31
#: backend/ticket/builders/common/bigdata.py:210
#: backend/ticket/builders/common/bigdata.py:276
msgid "主机ID"
msgstr "host ID"

#: backend/db_services/dbresource/serializers.py:130
msgid "Labels"
msgstr "Labels"

#: backend/db_services/dbresource/serializers.py:131
msgid "专用业务ID"
msgstr "Dedicated business ID"

#: backend/db_services/dbresource/serializers.py:137
msgid "磁盘挂载点信息"
msgstr "Disk mount point information"

#: backend/db_services/dbresource/serializers.py:146
msgid "过滤的单据ID列表"
msgstr "Filtered list of ticket IDs"

#: backend/db_services/dbresource/serializers.py:147
msgid "过滤的任务ID列表"
msgstr "Filtered list of task IDs"

#: backend/db_services/dbresource/serializers.py:148
#: backend/db_services/partition/serializers.py:78
msgid "操作者"
msgstr "operator"

#: backend/db_services/dbresource/serializers.py:149
msgid "操作开始时间"
msgstr "Operation start time"

#: backend/db_services/dbresource/serializers.py:150
msgid "操作结束时间"
msgstr "Operation end time"

#: backend/db_services/dbresource/serializers.py:151
#: backend/ticket/models/ticket.py:95
msgid "单据状态"
msgstr "ticket status"

#: backend/db_services/dbresource/serializers.py:153
msgid "分页大小"
msgstr "Paging Size"

#: backend/db_services/dbresource/serializers.py:154
msgid "分页起始位置"
msgstr "page start position"

#: backend/db_services/dbresource/serializers.py:176
msgid "规格id列表"
msgstr "specification id list"

#: backend/db_services/dbresource/serializers.py:183
msgid "部署方案id列表"
msgstr "Deployment scheme id list"

#: backend/db_services/dbresource/serializers.py:190
msgid "逻辑城市"
msgstr "logic city"

#: backend/db_services/dbresource/views/deploy_plan.py:37
msgid "新建{}部署方案"
msgstr "New {} deployment plan"

#: backend/db_services/dbresource/views/deploy_plan.py:44
msgid "更新{}部署方案"
msgstr "update{} deployment scheme"

#: backend/db_services/dbresource/views/deploy_plan.py:50
msgid "部署方案: {} 正在被引用，无法修改相关参数"
msgstr ""
"Deployment plan: {} is being referenced, cannot modify related parameters"

#: backend/db_services/dbresource/views/deploy_plan.py:54
msgid "查询{}部署方案列表"
msgstr "Query the list of {} deployment schemes"

#: backend/db_services/dbresource/views/deploy_plan.py:61
msgid "删除{}部署方案"
msgstr "delete {} deployment scheme"

#: backend/db_services/dbresource/views/deploy_plan.py:67
msgid "部署方案: {} 正在被引用，无法删除"
msgstr "Deployment scheme: {} is being referenced and cannot be removed"

#: backend/db_services/dbresource/views/deploy_plan.py:72
msgid "批量删除{}部署方案"
msgstr "Batch delete {} deployment schemes"

#: backend/db_services/dbresource/views/deploy_plan.py:80
msgid "部署方案: {} 存在被引用，无法删除"
msgstr "Deployment scheme: {} exists and is referenced and cannot be deleted"

#: backend/db_services/dbresource/views/resource.py:104
msgid "获取DBA业务下的主机信息"
msgstr "Obtain host information under the DBA service"

#: backend/db_services/dbresource/views/resource.py:157
msgid "查询资源导入任务"
msgstr "Query resource import tasks"

#: backend/db_services/dbresource/views/resource.py:182
#: backend/ticket/builders/__init__.py:333 backend/ticket/constants.py:323
msgid "资源申请"
msgstr "resource application"

#: backend/db_services/dbresource/views/resource.py:218
msgid "获取机型列表"
msgstr "Get model list"

#: backend/db_services/dbresource/views/resource.py:226
msgid "资源预申请"
msgstr "Resource pre-application"

#: backend/db_services/dbresource/views/resource.py:238
msgid "资源确认"
msgstr "Resource Confirmation"

#: backend/db_services/dbresource/views/resource.py:268
msgid "获取资源导入相关链接"
msgstr "Get resource import related links"

#: backend/db_services/dbresource/views/resource.py:278
msgid "查询资源操作记录"
msgstr "Query resource operation records"

#: backend/db_services/dbresource/views/sepc.py:44
msgid "新建规格"
msgstr "new specification"

#: backend/db_services/dbresource/views/sepc.py:51
msgid "更新规格"
msgstr "update specification"

#: backend/db_services/dbresource/views/sepc.py:71
msgid "规格: {}已经被引用，只允许拓展机型"
msgstr "Specifications: {} has been quoted, only extended models are allowed"

#: backend/db_services/dbresource/views/sepc.py:74
msgid "规格: {}已经被引用，无法修改配置！(只允许拓展机型和修改描述)"
msgstr ""
"Specification: {} has been referenced, cannot modify the configuration! "
"(Only allow to expand the model and modify the description)"

#: backend/db_services/dbresource/views/sepc.py:79
msgid "查询规格列表"
msgstr "Query specification list"

#: backend/db_services/dbresource/views/sepc.py:86
msgid "删除规格"
msgstr "delete specification"

#: backend/db_services/dbresource/views/sepc.py:92
msgid "规格: {}已经被引用，无法被删除"
msgstr "Specification: {} is already referenced and cannot be deleted"

#: backend/db_services/dbresource/views/sepc.py:98
msgid "批量删除规格"
msgstr "Batch delete specifications"

#: backend/db_services/dbresource/views/sepc.py:106
msgid "规格: {}已经被引用，无法删除！"
msgstr "Specification: {} has been referenced and cannot be deleted!"

#: backend/db_services/dbresource/views/sepc.py:110
msgid "获取推荐规格"
msgstr "Get Recommended Specifications"

#: backend/db_services/group/serializers.py:20
msgid "实例数量"
msgstr "number of instances"

#: backend/db_services/group/serializers.py:28
msgid "在该业务下已存在同名的分组，请重新命名分组"
msgstr ""
"A group with the same name already exists under this business, please rename "
"the group"

#: backend/db_services/group/serializers.py:38
msgid "新分组ID"
msgstr "new group ID"

#: backend/db_services/group/serializers.py:39
msgid "待移动实例的ID列表"
msgstr "ID list of instances to be moved"

#: backend/db_services/group/views.py:29
msgid "分组"
msgstr "group"

#: backend/db_services/group/views.py:57 backend/db_services/group/views.py:58
msgid "分组详情"
msgstr "Group details"

#: backend/db_services/group/views.py:66
msgid "分组列表"
msgstr "group list"

#: backend/db_services/group/views.py:74 backend/db_services/group/views.py:76
msgid "创建新分组"
msgstr "Create a new group"

#: backend/db_services/group/views.py:83 backend/db_services/group/views.py:85
msgid "更新分组信息"
msgstr "Update group information"

#: backend/db_services/group/views.py:92 backend/db_services/group/views.py:94
msgid "删除分组"
msgstr "delete group"

#: backend/db_services/group/views.py:102
msgid "移动实例到新组"
msgstr "Move instance to new group"

#: backend/db_services/infras/constants.py:18
msgid "不足"
msgstr "insufficient"

#: backend/db_services/infras/constants.py:19
msgid "充足"
msgstr "adequate"

#: backend/db_services/infras/host.py:40 backend/db_services/infras/host.py:42
msgid "标准型SA2"
msgstr "Standard SA2"

#: backend/db_services/infras/host.py:40 backend/db_services/infras/host.py:42
#: backend/db_services/infras/host.py:44
msgid "1核"
msgstr "1 core"

#: backend/db_services/infras/host.py:41
msgid "标准型S6"
msgstr "Standard S6"

#: backend/db_services/infras/host.py:41 backend/db_services/infras/host.py:43
#: backend/db_services/infras/host.py:45
msgid "2核"
msgstr "2 cores"

#: backend/db_services/infras/host.py:43
msgid "标准型S5"
msgstr "Standard S5"

#: backend/db_services/infras/serializers.py:56
#: backend/ticket/builders/common/bigdata.py:89
#: backend/ticket/builders/common/bigdata.py:116
#: backend/ticket/builders/common/bigdata.py:169
#: backend/ticket/builders/common/bigdata.py:290
#: backend/ticket/builders/influxdb/influxdb_apply.py:32
#: backend/ticket/builders/mysql/mysql_single_apply.py:57
#: backend/ticket/builders/pulsar/pulsar_shrink.py:31
#: backend/ticket/builders/redis/redis_cluster_apply.py:44
#: backend/ticket/builders/spider/tendb_apply.py:36
msgid "主机来源"
msgstr "host source"

#: backend/db_services/infras/serializers.py:57
#: backend/ticket/builders/mysql/mysql_single_apply.py:59
#: backend/ticket/builders/redis/redis_cluster_apply.py:45
msgid "部署节点"
msgstr "deployment node"

#: backend/db_services/infras/views.py:31
msgid "查询集群类型"
msgstr "Query cluster type"

#: backend/db_services/infras/views.py:42
msgid "查询服务器资源的城市信息"
msgstr "Query the city information of server resources"

#: backend/db_services/infras/views.py:43
msgid "城市信息"
msgstr "city information"

#: backend/db_services/infras/views.py:56
msgid "服务器规格列表"
msgstr "List of Server Specifications"

#: backend/db_services/infras/views.py:57
msgid "服务器规格信息"
msgstr "Server specification information"

#: backend/db_services/infras/views.py:70
msgid "容量规格列表"
msgstr "List of capacity specifications"

#: backend/db_services/infras/views.py:72
msgid "申请容量规格信息"
msgstr "Apply for capacity specification information"

#: backend/db_services/infras/views.py:104
msgid "主机{}配置异常，无法获取到合法的cpu({})或内存({})"
msgstr ""
"The configuration of the host {} is abnormal, and the legal cpu ({}) or "
"memory ({}) cannot be obtained"

#: backend/db_services/infras/views.py:120
msgid "暂不支持该集群类型: {}"
msgstr "This cluster type is not currently supported: {}"

#: backend/db_services/ipchooser/constants.py:45
msgid "字段分隔符"
msgstr "field separator"

#: backend/db_services/ipchooser/constants.py:46
msgid "全量返回标志"
msgstr "full return sign"

#: backend/db_services/ipchooser/constants.py:47
msgid "默认模糊查询字段"
msgstr "Default fuzzy query field"

#: backend/db_services/ipchooser/constants.py:48
msgid "主机列表默认返回字段"
msgstr "host list default return field"

#: backend/db_services/ipchooser/constants.py:70
msgid "完整模式"
msgstr "full mode"

#: backend/db_services/ipchooser/constants.py:70
msgid "空闲机模式"
msgstr "idle mode"

#: backend/db_services/ipchooser/constants.py:93
msgid "存活"
msgstr "survive"

#: backend/db_services/ipchooser/constants.py:93
msgid "未存活"
msgstr "not alive"

#: backend/db_services/ipchooser/exceptions.py:21
#: backend/db_services/ipchooser/exceptions.py:22
msgid "参数校验失败"
msgstr "Parameter verification failed"

#: backend/db_services/ipchooser/exceptions.py:27
#, python-brace-format
msgid "业务【bk_biz_id: {bk_biz_id}】拓扑不存在"
msgstr "Business [bk_biz_id: {bk_biz_id}] topology does not exist"

#: backend/db_services/ipchooser/exceptions.py:28
msgid "业务拓扑不存在"
msgstr "Business topology does not exist"

#: backend/db_services/ipchooser/mock_data.py:30
#: backend/db_services/ipchooser/mock_data.py:89
#: backend/db_services/ipchooser/mock_data.py:110
#: backend/db_services/ipchooser/mock_data.py:138
#: backend/db_services/ipchooser/mock_data.py:149
#: backend/db_services/ipchooser/mock_data.py:171
#: backend/flow/plugins/components/collections/mysql/authorize_rules.py:94
#: backend/ticket/constants.py:65 backend/ticket/constants.py:75
msgid "成功"
msgstr "success"

#: backend/db_services/ipchooser/mock_data.py:34
#: backend/db_services/ipchooser/mock_data.py:92
#: backend/db_services/ipchooser/mock_data.py:124
msgid "蓝鲸"
msgstr "blue whale"

#: backend/db_services/ipchooser/mock_data.py:41
#: backend/db_services/ipchooser/mock_data.py:96
msgid "mark测试"
msgstr "mark test"

#: backend/db_services/ipchooser/mock_data.py:48
msgid "空闲机模块"
msgstr "idle machine module"

#: backend/db_services/ipchooser/mock_data.py:60
msgid "空闲机池"
msgstr "free machine pool"

#: backend/db_services/ipchooser/mock_data.py:67
#: backend/ticket/builders/common/base.py:63
msgid "空闲机"
msgstr "idle machine"

#: backend/db_services/ipchooser/query/resource.py:467
msgid "直连区域"
msgstr "Direct Mode"

#: backend/db_services/ipchooser/serializers/base.py:18
msgid "数据起始位置"
msgstr "data starting position"

#: backend/db_services/ipchooser/serializers/base.py:20
msgid "拉取数据数量，不传或传 `-1` 表示拉取所有"
msgstr ""
"The number of data to be pulled, if not passed or `-1` means to pull all"

#: backend/db_services/ipchooser/serializers/base.py:29
msgid "资源范围类型"
msgstr "resource scope type"

#: backend/db_services/ipchooser/serializers/base.py:30
msgid "资源范围ID"
msgstr "resource scope id"

#: backend/db_services/ipchooser/serializers/base.py:48
msgid "节点类型ID"
msgstr "node type ID"

#: backend/db_services/ipchooser/serializers/base.py:54
msgid "内网IP"
msgstr "Intranet IP"

#: backend/db_services/ipchooser/serializers/base.py:55
msgid "内网IPv6"
msgstr "Intranet IPv6"

#: backend/db_services/ipchooser/serializers/base.py:56
msgid "操作系统类型"
msgstr "operating system type"

#: backend/db_services/ipchooser/serializers/base.py:57
msgid "主机名称"
msgstr "host name"

#: backend/db_services/ipchooser/serializers/base.py:58
#: backend/db_services/ipchooser/serializers/base.py:68
msgid "模糊搜索内容（支持同时对`主机IP`/`主机名`/`操作系统`进行模糊搜索"
msgstr ""
"Fuzzy search content (supports fuzzy search for `host IP`/`host name`/"
"`operating system` at the same time"

#: backend/db_services/ipchooser/serializers/base.py:62
msgid "是否获取所有资源范围的拓扑结构，默认为 `false`"
msgstr ""
"Whether to get the topology of all resource scopes, the default is `false`"

#: backend/db_services/ipchooser/serializers/base.py:63
msgid "要获取拓扑结构的资源范围数组"
msgstr "Array of resource scopes to get topology"

#: backend/db_services/ipchooser/serializers/base.py:70
msgid "云区域过滤id"
msgstr "cloud region filter id"

#: backend/db_services/ipchooser/serializers/base.py:91
msgid "IPv4 协议下的主机IP"
msgstr "Host IP under IPv4 protocol"

#: backend/db_services/ipchooser/serializers/base.py:92
msgid "主机 ID，优先取 `host_id`，否则取 `ip` + `cloud_id`"
msgstr "Host ID, take `host_id` first, otherwise take `ip` + `cloud_id`"

#: backend/db_services/ipchooser/serializers/base.py:96
msgid "请传入 host_id 或者 cloud_id + ip"
msgstr "Please pass in host_id or cloud_id + ip"

#: backend/db_services/ipchooser/serializers/host_sers.py:20
#: backend/db_services/ipchooser/serializers/host_sers.py:52
#: backend/db_services/ipchooser/serializers/topo_sers.py:20
#: backend/db_services/ipchooser/serializers/topo_sers.py:46
msgid "模式"
msgstr "model"

#: backend/db_services/ipchooser/serializers/host_sers.py:23
msgid "IPv4 列表"
msgstr "IPv4 list"

#: backend/db_services/ipchooser/serializers/host_sers.py:24
msgid "IPv4，支持的输入格式：`cloud_id:ip` / `ip`"
msgstr "IPv4, supported input format: `cloud_id:ip` / `ip`"

#: backend/db_services/ipchooser/serializers/host_sers.py:29
msgid "IPv6 列表"
msgstr "IPv6 list"

#: backend/db_services/ipchooser/serializers/host_sers.py:30
msgid "IPv6，支持的输入格式：`cloud_id:ipv6` / `ipv6`"
msgstr "IPv6, supported input format: `cloud_id:ipv6` / `ipv6`"

#: backend/db_services/ipchooser/serializers/host_sers.py:35
msgid "关键字列表"
msgstr "keyword list"

#: backend/db_services/ipchooser/serializers/host_sers.py:36
msgid "关键字，解析出的`主机名`、`host_id` 等关键字信息"
msgstr "Keywords, keyword information such as `hostname`, `host_id`, etc."

#: backend/db_services/ipchooser/serializers/topo_sers.py:71
msgid "查询过滤条件"
msgstr "query filter"

#: backend/db_services/ipchooser/serializers/topo_sers.py:79
msgid "拓扑信息列表"
msgstr "Topology Information List"

#: backend/db_services/ipchooser/serializers/topo_sers.py:79
msgid "拓扑信息"
msgstr "topology information"

#: backend/db_services/ipchooser/views.py:32
msgid "批量获取含各节点主机数量的拓扑树"
msgstr "Get the topology tree with the number of hosts on each node in batches"

#: backend/db_services/ipchooser/views.py:48
msgid "根据多个拓扑节点与搜索条件批量分页查询所包含的主机信息"
msgstr ""
"According to multiple topological nodes and search conditions, batch paging "
"query contains host information"

#: backend/db_services/ipchooser/views.py:66
msgid "根据多个拓扑节点与搜索条件批量分页查询所包含的主机 ID 信息"
msgstr ""
"According to multiple topological nodes and search conditions, the host ID "
"information contained in the batch pagination query"

#: backend/db_services/ipchooser/views.py:83
msgid "根据主机过滤查询主机的拓扑信息"
msgstr "Query host topology information based on host filtering"

#: backend/db_services/ipchooser/views.py:105
msgid ""
"根据用户手动输入的`IP`/`IPv6`/`主机名`/`host_id`等关键字信息获取真实存在的机"
"器信息"
msgstr ""
"Obtain real machine information based on keyword information such as `IP`/"
"`IPv6`/`hostname`/`host_id` manually entered by the user"

#: backend/db_services/ipchooser/views.py:123
msgid "根据主机关键信息获取机器详情信息"
msgstr "Obtain machine detailed information based on host key information"

#: backend/db_services/ipchooser/views.py:164
msgid "获取自定义配置，比如表格列字段及顺序"
msgstr "Get custom configuration, such as table column fields and order"

#: backend/db_services/ipchooser/views.py:180
msgid "保存用户自定义配置"
msgstr "Save user-defined configuration"

#: backend/db_services/ipchooser/views.py:194
msgid "查询云区域的信息"
msgstr "Query information about cloud regions"

#: backend/db_services/ipchooser/views.py:203
msgid "查询磁盘类型"
msgstr "Query disk type"

#: backend/db_services/mysql/cluster/handlers.py:52
msgid "无法找到集群{}所包含实例，请检查集群相关信息"
msgstr ""
"Unable to find the instance contained in the cluster {}, please check the "
"relevant information of the cluster"

#: backend/db_services/mysql/cluster/serializers.py:27
#: backend/db_services/mysql/cluster/serializers.py:79
#: backend/db_services/mysql/instance/serializers.py:24
#: backend/db_services/mysql/remote_service/serializers.py:24
#: backend/db_services/mysql/remote_service/serializers.py:36
#: backend/db_services/mysql/sql_import/serializers.py:83
#: backend/ticket/builders/mysql/mysql_add_slave.py:33
#: backend/ticket/builders/mysql/mysql_master_slave_switch.py:29
#: backend/ticket/builders/mysql/mysql_migrate_cluster.py:34
#: backend/ticket/builders/mysql/mysql_proxy_add.py:35
#: backend/ticket/builders/mysql/mysql_proxy_switch.py:32
#: backend/ticket/builders/mysql/mysql_restore_slave.py:29
#: backend/ticket/builders/spider/tendb_master_slave_switch.py:25
msgid "集群ID列表"
msgstr "Cluster ID list"

#: backend/db_services/mysql/cluster/serializers.py:41
#: backend/db_services/mysql/instance/serializers.py:38
#: backend/ticket/builders/common/base.py:30
msgid "IP地址"
msgstr "IP address"

#: backend/db_services/mysql/cluster/serializers.py:43
#: backend/db_services/mysql/instance/serializers.py:40
#: backend/ticket/builders/common/base.py:36
#: backend/ticket/builders/common/bigdata.py:207
#: backend/ticket/builders/common/bigdata.py:274
msgid "端口号"
msgstr "The port number"

#: backend/db_services/mysql/cluster/serializers.py:66
msgid "集群过滤条件列表"
msgstr "List of cluster filter criteria"

#: backend/db_services/mysql/cluster/views.py:41
msgid "通过集群查询同机关联集群"
msgstr "Query the cluster associated with the same machine through the cluster"

#: backend/db_services/mysql/cluster/views.py:54
msgid "通过实例查询同机关联集群"
msgstr ""
"Query the cluster associated with the same machine through the instance"

#: backend/db_services/mysql/cluster/views.py:69
msgid "通过过滤条件批量查询集群"
msgstr "Query clusters in batches by filtering conditions"

#: backend/db_services/mysql/cluster/views.py:84
msgid "获取关联集群从库的交集"
msgstr "Get the intersection of associated cluster slave libraries"

#: backend/db_services/mysql/fixpoint_rollback/handlers.py:220
msgid "无法查找到在时间范围内{}-{}，主机{}的binlog日志"
msgstr "Unable to find binlog logs for host {} in the time range {}-{}"

#: backend/db_services/mysql/fixpoint_rollback/handlers.py:248
msgid "查询集群{}的备份日志"
msgstr "Query the backup log of cluster {}"

#: backend/db_services/mysql/fixpoint_rollback/handlers.py:290
msgid "作业【{}】执行失败，job_instance_id: {}"
msgstr "Job [{}] failed to execute, job_instance_id: {}"

#: backend/db_services/mysql/fixpoint_rollback/handlers.py:331
msgid "无法找到小于时间点{}附近的日志记录，请检查时间点的合法性或稍后重试"
msgstr ""
"Unable to find log records less than near the time point {}, please check "
"the legitimacy of the time point or try again later"

#: backend/db_services/mysql/fixpoint_rollback/serializers.py:20
msgid "查询时间间隔"
msgstr "query time interval"

#: backend/db_services/mysql/fixpoint_rollback/serializers.py:25
#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:32
msgid "回档时间"
msgstr "Rollback time"

#: backend/db_services/mysql/fixpoint_rollback/serializers.py:26
#: backend/db_services/mysql/fixpoint_rollback/serializers.py:31
msgid "JOB实例ID"
msgstr "JOB instance ID"

#: backend/db_services/mysql/fixpoint_rollback/views.py:36
msgid "通过日志平台获取集群备份记录"
msgstr "Obtain cluster backup records through the log platform"

#: backend/db_services/mysql/fixpoint_rollback/views.py:51
msgid "通过下发脚本到机器获取集群备份记录"
msgstr "Get the cluster backup record by sending the script to the machine"

#: backend/db_services/mysql/fixpoint_rollback/views.py:62
msgid "根据job id查询任务执行状态和执行结果"
msgstr "Query task execution status and execution results based on job id"

#: backend/db_services/mysql/fixpoint_rollback/views.py:75
msgid "查询小于回档时间点最近的备份记录"
msgstr ""
"Query the latest backup record that is less than the rollback time point"

#: backend/db_services/mysql/instance/views.py:31
msgid "根据用户手动输入的 ip:port 查询真实的实例"
msgstr ""
"Query the real instance according to the ip:port manually entered by the user"

#: backend/db_services/mysql/permission/authorize/handlers.py:79
msgid "「接口返回结果异常」{}"
msgstr "The interface returns an abnormal result {}"

#: backend/db_services/mysql/permission/authorize/handlers.py:82
#: backend/db_services/mysql/permission/clone/handlers.py:120
msgid "「接口调用异常」{}"
msgstr "Interface call exception {}"

#: backend/db_services/mysql/permission/authorize/models.py:24
#: backend/db_services/mysql/permission/clone/models.py:25
#: backend/ticket/models/ticket.py:45 backend/ticket/models/ticket.py:247
#: backend/ticket/models/ticket.py:303 backend/ticket/models/todo.py:32
msgid "关联工单"
msgstr "Associated work order"

#: backend/db_services/mysql/permission/authorize/models.py:26
#: backend/db_services/mysql/permission/authorize/serializers.py:26
#: backend/db_services/mysql/permission/authorize/serializers.py:99
#: backend/db_services/mysql/permission/db_account/serializers.py:24
#: backend/db_services/mysql/permission/db_account/serializers.py:77
#: backend/db_services/mysql/permission/db_account/serializers.py:85
#: backend/db_services/mysql/permission/db_account/serializers.py:109
#: backend/db_services/mysql/permission/db_account/serializers.py:115
msgid "账号名称"
msgstr "Account Name"

#: backend/db_services/mysql/permission/authorize/models.py:27
#: backend/db_services/mysql/permission/authorize/serializers.py:27
msgid "源ip列表"
msgstr "source ip list"

#: backend/db_services/mysql/permission/authorize/models.py:29
msgid "访问DB名列表"
msgstr "Access the list of DB names"

#: backend/db_services/mysql/permission/authorize/models.py:31
msgid "是否授权成功"
msgstr "Whether the authorization is successful"

#: backend/db_services/mysql/permission/authorize/models.py:32
#: backend/db_services/mysql/permission/constants.py:64
msgid "错误信息/提示信息"
msgstr "Error message/prompt message"

#: backend/db_services/mysql/permission/authorize/models.py:33
#: backend/db_services/mysql/permission/clone/models.py:34
msgid "记录时间"
msgstr "record time"

#: backend/db_services/mysql/permission/authorize/models.py:36
#: backend/db_services/mysql/permission/authorize/models.py:37
msgid "授权记录"
msgstr "authorization record"

#: backend/db_services/mysql/permission/authorize/serializers.py:23
msgid "ip地址"
msgstr "ip address"

#: backend/db_services/mysql/permission/authorize/serializers.py:24
msgid "资源池主机ID"
msgstr "Resource pool host ID"

#: backend/db_services/mysql/permission/authorize/serializers.py:29
#: backend/db_services/mysql/permission/db_account/serializers.py:116
msgid "访问DB列表"
msgstr "access DB list"

#: backend/db_services/mysql/permission/authorize/serializers.py:29
#: backend/db_services/mysql/permission/db_account/serializers.py:95
#: backend/db_services/mysql/permission/db_account/serializers.py:110
#: backend/db_services/mysql/permission/db_account/serializers.py:143
msgid "访问DB"
msgstr "Access DB"

#: backend/db_services/mysql/permission/authorize/serializers.py:32
msgid "集群id列表"
msgstr "list of cluster ids"

#: backend/db_services/mysql/permission/authorize/serializers.py:40
#: backend/db_services/mysql/permission/authorize/serializers.py:81
msgid "前置检查结果"
msgstr "Pre-check results"

#: backend/db_services/mysql/permission/authorize/serializers.py:41
msgid "检查结果信息"
msgstr "Check result information"

#: backend/db_services/mysql/permission/authorize/serializers.py:42
#: backend/db_services/mysql/permission/authorize/serializers.py:82
#: backend/db_services/mysql/permission/authorize/serializers.py:90
#: backend/ticket/builders/mysql/mysql_authorize_rules.py:31
#: backend/ticket/builders/mysql/mysql_authorize_rules.py:40
msgid "授权数据缓存uid"
msgstr "Authorization data cache uid"

#: backend/db_services/mysql/permission/authorize/serializers.py:43
#: backend/ticket/builders/mysql/mysql_authorize_rules.py:32
msgid "授权数据信息"
msgstr "Authorization data information"

#: backend/db_services/mysql/permission/authorize/serializers.py:50
msgid "授权excel文件"
msgstr "Authorize excel file"

#: backend/db_services/mysql/permission/authorize/serializers.py:61
msgid "excel内容解析失败, 错误信息:{}。提示: 请按照模板填写授权数据"
msgstr ""
"Excel content parsing failed, error message: {}. Tip: Please fill in the "
"authorization data according to the template"

#: backend/db_services/mysql/permission/authorize/serializers.py:65
msgid "excel表格为空!"
msgstr "The excel sheet is empty!"

#: backend/db_services/mysql/permission/authorize/serializers.py:69
msgid "excel表头校验不正确! 提示: 请按照模板填写授权数据"
msgstr ""
"The excel header verification is incorrect! Reminder: Please fill in the "
"authorization data according to the template"

#: backend/db_services/mysql/permission/authorize/serializers.py:74
#: backend/db_services/mysql/permission/clone/serializers.py:104
msgid "excel包含空的单元格！请检查数据的完整性和合法性"
msgstr ""
"excel contains empty cells! Please check the integrity and legality of the "
"data"

#: backend/db_services/mysql/permission/authorize/serializers.py:83
msgid "授权信息excel文件下载url"
msgstr "Authorization information excel file download url"

#: backend/db_services/mysql/permission/authorize/serializers.py:91
#: backend/db_services/mysql/permission/clone/serializers.py:126
#: backend/db_services/mysql/permission/constants.py:53
#: backend/db_services/mysql/permission/constants.py:77
#: backend/flow/models.py:20 backend/flow/models.py:37
#: backend/ticket/serializers.py:63
msgid "单据ID"
msgstr "Ticket ID"

#: backend/db_services/mysql/permission/authorize/serializers.py:95
msgid "授权执行错误excel"
msgstr "authorization execution error excel"

#: backend/db_services/mysql/permission/authorize/serializers.py:100
msgid "访问源ip"
msgstr "access source ip"

#: backend/db_services/mysql/permission/authorize/serializers.py:101
msgid "访问集群名称"
msgstr "access cluster name"

#: backend/db_services/mysql/permission/authorize/serializers.py:102
msgid "访问db名称"
msgstr "access db name"

#: backend/db_services/mysql/permission/authorize/serializers.py:103
#: backend/db_services/mysql/permission/db_account/serializers.py:96
#: backend/db_services/mysql/permission/db_account/serializers.py:111
msgid "规则列表"
msgstr "rule list"

#: backend/db_services/mysql/permission/authorize/serializers.py:108
msgid "现网授权列表"
msgstr "Live Network Authorization List"

#: backend/db_services/mysql/permission/authorize/serializers.py:108
msgid "授权信息"
msgstr "authorization information"

#: backend/db_services/mysql/permission/authorize/serializers.py:116
#: backend/ticket/models/ticket_result_relation.py:24
msgid "单据id"
msgstr "ticket id"

#: backend/db_services/mysql/permission/authorize/serializers.py:117
msgid "过滤搜索关键字"
msgstr "filter search keywords"

#: backend/db_services/mysql/permission/authorize/views.py:71
msgid "规则前置检查"
msgstr "Rule pre-check"

#: backend/db_services/mysql/permission/authorize/views.py:81
msgid "excel规则前置检查"
msgstr "Excel rule pre-check"

#: backend/db_services/mysql/permission/authorize/views.py:93
msgid "获得授权信息excel文件"
msgstr "Obtain the authorization information excel file"

#: backend/db_services/mysql/permission/authorize/views.py:105
msgid "现网授权查询(暂搁置)"
msgstr "Live network authorization query (temporarily put on hold)"

#: backend/db_services/mysql/permission/authorize/views.py:114
msgid "查询授权主机的信息"
msgstr "Query information about authorized hosts"

#: backend/db_services/mysql/permission/clone/models.py:27
#: backend/db_services/mysql/permission/clone/serializers.py:33
#: backend/db_services/mysql/permission/clone/serializers.py:84
#: backend/db_services/mysql/permission/clone/serializers.py:124
#: backend/ticket/builders/mysql/mysql_clone_rules.py:29
msgid "权限克隆类型"
msgstr "permission clone type"

#: backend/db_services/mysql/permission/clone/models.py:29
#: backend/db_services/mysql/permission/clone/serializers.py:22
msgid "旧实例/旧客户端IP"
msgstr "Old instance/old client IP"

#: backend/db_services/mysql/permission/clone/models.py:30
msgid "新实例/新客户端IP列表"
msgstr "New instance/new client IP list"

#: backend/db_services/mysql/permission/clone/models.py:32
msgid "是否克隆成功"
msgstr "Whether the clone is successful"

#: backend/db_services/mysql/permission/clone/models.py:33
#: backend/ticket/models/ticket.py:57
msgid "错误信息"
msgstr "error message"

#: backend/db_services/mysql/permission/clone/models.py:38
#: backend/db_services/mysql/permission/clone/models.py:39
msgid "权限克隆记录"
msgstr "Permission to clone records"

#: backend/db_services/mysql/permission/clone/serializers.py:23
msgid "新实例/新客户端IP"
msgstr "New instance/new client IP"

#: backend/db_services/mysql/permission/clone/serializers.py:25
msgid "模块名"
msgstr "module name"

#: backend/db_services/mysql/permission/clone/serializers.py:35
msgid "克隆元素列表"
msgstr "clone element list"

#: backend/db_services/mysql/permission/clone/serializers.py:35
msgid "克隆元素信息"
msgstr "clone element information"

#: backend/db_services/mysql/permission/clone/serializers.py:49
msgid "源克隆对象{}与目的克隆对象{}相同"
msgstr ""
"The source clone object {} is the same as the destination clone object {}"

#: backend/db_services/mysql/permission/clone/serializers.py:66
msgid "实例{}不属于本业务{}，请保证所有实例均在本业务下"
msgstr ""
"Instance {} does not belong to this business {}, please ensure that all "
"instances are under this business"

#: backend/db_services/mysql/permission/clone/serializers.py:73
#: backend/db_services/mysql/permission/clone/serializers.py:115
msgid "权限克隆前置检查结果"
msgstr "Permission cloning pre-check results"

#: backend/db_services/mysql/permission/clone/serializers.py:74
#: backend/db_services/mysql/permission/clone/serializers.py:116
msgid "权限克隆前置检查信息"
msgstr "Permission cloning pre-check information"

#: backend/db_services/mysql/permission/clone/serializers.py:75
#: backend/db_services/mysql/permission/clone/serializers.py:117
msgid "权限克隆数据uid"
msgstr "Permission to clone data uid"

#: backend/db_services/mysql/permission/clone/serializers.py:76
msgid "权限克隆数据列表"
msgstr "Permission to clone data list"

#: backend/db_services/mysql/permission/clone/serializers.py:83
msgid "克隆实例/客户端excel文件"
msgstr "Clone instance/client excel file"

#: backend/db_services/mysql/permission/clone/serializers.py:91
msgid "excel内容解析失败, 错误信息:{}。"
msgstr "Excel content parsing failed, error message: {}."

#: backend/db_services/mysql/permission/clone/serializers.py:95
msgid "excel表头校验不正确!"
msgstr "The excel table header check is incorrect!"

#: backend/db_services/mysql/permission/clone/serializers.py:99
msgid "excel内容为空!"
msgstr "The excel content is empty!"

#: backend/db_services/mysql/permission/clone/serializers.py:125
#: backend/ticket/builders/mysql/mysql_clone_rules.py:28
msgid "权限克隆数据缓存uid"
msgstr "Permission to clone data cache uid"

#: backend/db_services/mysql/permission/clone/views.py:65
msgid "权限克隆前置检查"
msgstr "Permission cloning pre-check"

#: backend/db_services/mysql/permission/clone/views.py:75
msgid "权限克隆excel前置检查"
msgstr "Permission to clone excel pre-check"

#: backend/db_services/mysql/permission/clone/views.py:85
msgid "获得权限克隆信息excel文件"
msgstr "Obtain permission to clone information excel file"

#: backend/db_services/mysql/permission/constants.py:22
msgid "选择"
msgstr "choose"

#: backend/db_services/mysql/permission/constants.py:23
msgid "插入"
msgstr "insert"

#: backend/db_services/mysql/permission/constants.py:30
msgid "创建表"
msgstr "create table"

#: backend/db_services/mysql/permission/constants.py:31
msgid "修改表"
msgstr "modify table"

#: backend/db_services/mysql/permission/constants.py:32
msgid "删除表"
msgstr "delete table"

#: backend/db_services/mysql/permission/constants.py:33
msgid "索引"
msgstr "index"

#: backend/db_services/mysql/permission/constants.py:34
msgid "执行"
msgstr "implement"

#: backend/db_services/mysql/permission/constants.py:39
msgid "replication client"
msgstr "replication client"

#: backend/db_services/mysql/permission/constants.py:40
msgid "replication slave"
msgstr "replication slave"

#: backend/db_services/mysql/permission/constants.py:41
msgid "file"
msgstr "file"

#: backend/db_services/mysql/permission/constants.py:54
msgid "授权数据缓存UID"
msgstr "Authorization Data Cache UID"

#: backend/db_services/mysql/permission/constants.py:60
msgid "账号(单个)"
msgstr "Account (single)"

#: backend/db_services/mysql/permission/constants.py:61
msgid "访问源(多个)"
msgstr "access source(s)"

#: backend/db_services/mysql/permission/constants.py:62
msgid "访问集群域名(多个)"
msgstr "Access cluster domain names (multiple)"

#: backend/db_services/mysql/permission/constants.py:63
msgid "访问DB名(多个)"
msgstr "Access DB name(s)"

#: backend/db_services/mysql/permission/constants.py:70
msgid "实例克隆"
msgstr "Instance cloning"

#: backend/db_services/mysql/permission/constants.py:71
msgid "客户端克隆"
msgstr "client clone"

#: backend/db_services/mysql/permission/constants.py:78
msgid "克隆数据缓存UID"
msgstr "Clone data cache UID"

#: backend/db_services/mysql/permission/db_account/serializers.py:25
msgid "账号密码"
msgstr "account password"

#: backend/db_services/mysql/permission/db_account/serializers.py:33
msgid "账号名称不符合要求, 请重新账号名"
msgstr ""
"The account name does not meet the requirements, please change the account "
"name"

#: backend/db_services/mysql/permission/db_account/serializers.py:43
msgid "密码强度不符合要求, 请重新输入密码"
msgstr ""
"The password strength does not meet the requirements, please re-enter the "
"password"

#: backend/db_services/mysql/permission/db_account/serializers.py:54
msgid "待校验密码"
msgstr "password to be verified"

#: backend/db_services/mysql/permission/db_account/serializers.py:61
msgid "密码是否满足强度"
msgstr "Whether the password meets the strength"

#: backend/db_services/mysql/permission/db_account/serializers.py:62
msgid "密码校验信息字典"
msgstr "Password verification information dictionary"

#: backend/db_services/mysql/permission/db_account/serializers.py:69
#: backend/db_services/mysql/permission/db_account/serializers.py:76
#: backend/db_services/mysql/permission/db_account/serializers.py:86
#: backend/db_services/mysql/permission/db_account/serializers.py:93
#: backend/db_services/mysql/permission/db_account/serializers.py:142
msgid "账号ID"
msgstr "Account ID"

#: backend/db_services/mysql/permission/db_account/serializers.py:87
#: backend/db_services/mysql/permission/db_account/serializers.py:97
#: backend/db_services/partition/serializers.py:51
msgid "创建者"
msgstr "creator"

#: backend/db_services/mysql/permission/db_account/serializers.py:92
#: backend/db_services/mysql/permission/db_account/serializers.py:151
#: backend/db_services/mysql/permission/db_account/serializers.py:158
msgid "规则ID"
msgstr "rule ID"

#: backend/db_services/mysql/permission/db_account/serializers.py:102
msgid "账号信息"
msgstr "account information"

#: backend/db_services/mysql/permission/db_account/serializers.py:104
msgid "权限列表信息"
msgstr "Permission list information"

#: backend/db_services/mysql/permission/db_account/serializers.py:120
msgid "规则数量"
msgstr "number of rules"

#: backend/db_services/mysql/permission/db_account/serializers.py:122
msgid "规则信息"
msgstr "rule information"

#: backend/db_services/mysql/permission/db_account/serializers.py:131
#: backend/db_services/mysql/permission/db_account/serializers.py:134
msgid "dml"
msgstr "dml"

#: backend/db_services/mysql/permission/db_account/serializers.py:137
msgid "glob"
msgstr "glob"

#: backend/db_services/mysql/permission/db_account/views.py:82
msgid "校验密码强度"
msgstr "Verify password strength"

#: backend/db_services/mysql/permission/db_account/views.py:94
msgid "添加账号规则"
msgstr "Add Account Rules"

#: backend/db_services/mysql/permission/db_account/views.py:101
msgid "查询账号规则清单"
msgstr "Query the list of account rules"

#: backend/db_services/mysql/permission/db_account/views.py:113
msgid "查询账号规则"
msgstr "Query Account Rules"

#: backend/db_services/mysql/permission/db_account/views.py:125
msgid "修改账号规则"
msgstr "Modify Account Rules"

#: backend/db_services/mysql/permission/db_account/views.py:134
msgid "删除账号规则"
msgstr "delete account rules"

#: backend/db_services/mysql/permission/exceptions.py:41
msgid "权限模块异常"
msgstr "Permission module exception"

#: backend/db_services/mysql/permission/exceptions.py:45
msgid "授权EXCEL表校验异常"
msgstr "Authorized EXCEL table verification exception"

#: backend/db_services/mysql/permission/exceptions.py:49
msgid "权限克隆EXCEL表校验异常"
msgstr "The verification exception of the permission cloning EXCEL table"

#: backend/db_services/mysql/permission/exceptions.py:53
msgid "授权数据已过期"
msgstr "Authorization data has expired"

#: backend/db_services/mysql/permission/exceptions.py:57
msgid "权限克隆数据已过期"
msgstr "Permission to clone data has expired"

#: backend/db_services/mysql/remote_service/serializers.py:37
msgid "DB名列表"
msgstr "DB name list"

#: backend/db_services/mysql/remote_service/serializers.py:37
msgid "DB名"
msgstr "DB name"

#: backend/db_services/mysql/remote_service/views.py:35
msgid "查询集群数据库列表"
msgstr "Query the list of cluster databases"

#: backend/db_services/mysql/remote_service/views.py:48
msgid "校验DB是否在集群内"
msgstr "Check whether the DB is in the cluster"

#: backend/db_services/mysql/resources/spider/query.py:37
#: backend/db_services/mysql/resources/tendbha/query.py:40
#: backend/db_services/mysql/resources/tendbsingle/query.py:39
msgid "主域名"
msgstr "primary domain name"

#: backend/db_services/mysql/resources/spider/query.py:38
#: backend/db_services/mysql/resources/tendbha/query.py:41
msgid "从域名"
msgstr "from domain name"

#: backend/db_services/mysql/resources/spider/query.py:43
msgid "运维节点"
msgstr "Operation and maintenance node"

#: backend/db_services/mysql/resources/spider/query.py:44
#: backend/db_services/mysql/resources/tendbha/query.py:45
#: backend/db_services/mysql/resources/tendbsingle/query.py:41
msgid "所属db模块"
msgstr "Belonging to the db module"

#: backend/db_services/mysql/resources/tendbha/yasg_slz.py:113
msgid "实例地址列表"
msgstr "instance address list"

#: backend/db_services/mysql/resources/tendbha/yasg_slz.py:141
msgid "测试业务"
msgstr "test business"

#: backend/db_services/mysql/sql_import/constants.py:25
msgid "DEFAULT"
msgstr "DEFAULT"

#: backend/db_services/mysql/sql_import/constants.py:26
msgid "UTF8"
msgstr "UTF8"

#: backend/db_services/mysql/sql_import/constants.py:27
msgid "UTF8MB4"
msgstr "UTF8MB4"

#: backend/db_services/mysql/sql_import/constants.py:28
msgid "LATIN1"
msgstr "LATIN 1"

#: backend/db_services/mysql/sql_import/constants.py:29
msgid "gbk"
msgstr "gbk"

#: backend/db_services/mysql/sql_import/constants.py:30
msgid "gb2312"
msgstr "GB2312"

#: backend/db_services/mysql/sql_import/constants.py:38
msgid "手动执行"
msgstr "Manual execution"

#: backend/db_services/mysql/sql_import/constants.py:39
msgid "自动执行"
msgstr "automatic execution"

#: backend/db_services/mysql/sql_import/constants.py:40
#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:184
msgid "定时执行"
msgstr "Timed execution"

#: backend/db_services/mysql/sql_import/constants.py:48
msgid "文件上传"
msgstr "File Upload"

#: backend/db_services/mysql/sql_import/constants.py:49
msgid "手动输入"
msgstr "manual input"

#: backend/db_services/mysql/sql_import/mock_data.py:22
msgid "存在高危命令:drop_table"
msgstr "There are high-risk commands: drop_table"

#: backend/db_services/mysql/sql_import/serializers.py:31
msgid "sql语句"
msgstr "sql statement"

#: backend/db_services/mysql/sql_import/serializers.py:33
msgid "sql文件列表"
msgstr "sql file list"

#: backend/db_services/mysql/sql_import/serializers.py:33
msgid "sql文件"
msgstr "sql file"

#: backend/db_services/mysql/sql_import/serializers.py:41
msgid "不允许sql_content和sql_file同时为空，请至少填写一项"
msgstr ""
"Both sql_content and sql_file are not allowed to be empty at the same time, "
"please fill in at least one item"

#: backend/db_services/mysql/sql_import/serializers.py:47
msgid "语法错误"
msgstr "Grammatical errors"

#: backend/db_services/mysql/sql_import/serializers.py:48
msgid "高危警告"
msgstr "High risk warning"

#: backend/db_services/mysql/sql_import/serializers.py:49
msgid "禁止命令"
msgstr "prohibition order"

#: backend/db_services/mysql/sql_import/serializers.py:53
msgid "语法检查结果"
msgstr "grammar check result"

#: backend/db_services/mysql/sql_import/serializers.py:61
msgid "目标变更DB"
msgstr "target change DB"

#: backend/db_services/mysql/sql_import/serializers.py:62
msgid "忽略DB"
msgstr "ignore DB"

#: backend/db_services/mysql/sql_import/serializers.py:65
msgid "单据执行模式"
msgstr "Ticket Execution Mode"

#: backend/db_services/mysql/sql_import/serializers.py:66
msgid "定时任务触发时间"
msgstr "Timing task trigger time"

#: backend/db_services/mysql/sql_import/serializers.py:69
#: backend/ticket/builders/mysql/mysql_add_slave.py:35
#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:30
#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:81
#: backend/ticket/builders/mysql/mysql_restore_local_slave.py:31
#: backend/ticket/builders/mysql/mysql_restore_slave.py:30
msgid "备份源"
msgstr "backup source"

#: backend/db_services/mysql/sql_import/serializers.py:70
#: backend/ticket/builders/mysql/mysql_checksum.py:33
#: backend/ticket/builders/mysql/mysql_ha_backup.py:29
#: backend/ticket/builders/mysql/mysql_ha_clear.py:30
msgid "匹配DB列表"
msgstr "match DB list"

#: backend/db_services/mysql/sql_import/serializers.py:71
#: backend/ticket/builders/mysql/mysql_checksum.py:35
#: backend/ticket/builders/mysql/mysql_ha_backup.py:31
#: backend/ticket/builders/mysql/mysql_ha_clear.py:32
msgid "匹配Table列表"
msgstr "Match Table list"

#: backend/db_services/mysql/sql_import/serializers.py:73
#: backend/ticket/builders/mysql/mysql_checksum.py:34
#: backend/ticket/builders/mysql/mysql_ha_backup.py:30
#: backend/ticket/builders/mysql/mysql_ha_clear.py:31
msgid "忽略DB列表"
msgstr "ignore DB list"

#: backend/db_services/mysql/sql_import/serializers.py:76
#: backend/ticket/builders/mysql/mysql_checksum.py:36
#: backend/ticket/builders/mysql/mysql_ha_backup.py:32
#: backend/ticket/builders/mysql/mysql_ha_clear.py:33
msgid "忽略Table列表"
msgstr "Ignore the Table list"

#: backend/db_services/mysql/sql_import/serializers.py:80
#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:58
#: backend/ticket/builders/mysql/mysql_single_apply.py:64
#: backend/ticket/builders/spider/tendb_apply.py:45
msgid "字符集"
msgstr "character set"

#: backend/db_services/mysql/sql_import/serializers.py:82
msgid "SQL文件路径"
msgstr "SQL file path"

#: backend/db_services/mysql/sql_import/serializers.py:84
msgid "sql执行文件"
msgstr "sql execution file"

#: backend/db_services/mysql/sql_import/serializers.py:85
msgid "sql执行的DB信息"
msgstr "DB information executed by sql"

#: backend/db_services/mysql/sql_import/serializers.py:86
#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:67
msgid "高危信息提示"
msgstr "High-risk information reminder"

#: backend/db_services/mysql/sql_import/serializers.py:87
#: backend/flow/models.py:21 backend/ticket/models/ticket.py:88
#: backend/ticket/serializers.py:65
msgid "单据类型"
msgstr "Ticket Type"

#: backend/db_services/mysql/sql_import/serializers.py:89
#: backend/db_services/mysql/sql_import/serializers.py:185
#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:62
msgid "sql导入模式"
msgstr "sql import mode"

#: backend/db_services/mysql/sql_import/serializers.py:90
msgid "备份信息"
msgstr "backup information"

#: backend/db_services/mysql/sql_import/serializers.py:102
msgid "时间{}格式解析失败: {}，请按照{}格式输入时间"
msgstr ""
"Time {} format parsing failed: {}, please enter time according to {} format"

#: backend/db_services/mysql/sql_import/serializers.py:108
#: backend/db_services/mysql/sql_import/serializers.py:116
#: backend/db_services/mysql/sql_import/serializers.py:142
#: backend/db_services/mysql/sql_import/serializers.py:161
#: backend/db_services/mysql/sql_import/serializers.py:177
msgid "流程id"
msgstr "process id"

#: backend/db_services/mysql/sql_import/serializers.py:109
msgid "语义测试的node_id"
msgstr "The node_id of the semantic test"

#: backend/db_services/mysql/sql_import/serializers.py:117
#: backend/db_services/mysql/sql_import/serializers.py:125
msgid "是否自动创建单据"
msgstr "Whether to automatically create tickets"

#: backend/db_services/mysql/sql_import/serializers.py:118
#: backend/db_services/mysql/sql_import/serializers.py:126
msgid "是否自动跳过确认"
msgstr "Whether to automatically skip confirmation"

#: backend/db_services/mysql/sql_import/serializers.py:144
msgid "执行状态"
msgstr "execution state"

#: backend/db_services/mysql/sql_import/serializers.py:146
msgid "语义检查执行信息列表"
msgstr "Semantic check execution information list"

#: backend/db_services/mysql/sql_import/serializers.py:154
msgid "语义执行的root id列表"
msgstr "List of root ids for semantic execution"

#: backend/db_services/mysql/sql_import/serializers.py:168
msgid "是否撤销成功"
msgstr "Is the cancellation successful?"

#: backend/db_services/mysql/sql_import/serializers.py:169
msgid "撤销相关信息"
msgstr "Withdraw related information"

#: backend/db_services/mysql/sql_import/serializers.py:170
msgid "撤销相关数据"
msgstr "Withdraw related data"

#: backend/db_services/mysql/sql_import/serializers.py:184
msgid "语义执行数据"
msgstr "semantic execution data"

#: backend/db_services/mysql/sql_import/serializers.py:186
msgid "sql数据是否成功录入到pipeline"
msgstr "Whether the sql data is successfully entered into the pipeline"

#: backend/db_services/mysql/sql_import/views.py:77
msgid "sql语义检查"
msgstr "sql semantic check"

#: backend/db_services/mysql/sql_import/views.py:87
msgid "改变流程配置"
msgstr "Change process configuration"

#: backend/db_services/mysql/sql_import/views.py:98
msgid "查询流程配置"
msgstr "Query process configuration"

#: backend/db_services/mysql/sql_import/views.py:110
msgid "获取用户语义检查任务列表"
msgstr "Get user semantic check task list"

#: backend/db_services/mysql/sql_import/views.py:122
msgid "删除用户语义检查任务列表"
msgstr "Delete User Semantic Check Task List"

#: backend/db_services/mysql/sql_import/views.py:133
msgid "终止语义检查流程"
msgstr "Terminate the semantic checking process"

#: backend/db_services/mysql/sql_import/views.py:145
msgid "根据语义执行id查询语义执行的数据"
msgstr ""
"Query the data of semantic execution according to the semantic execution id"

#: backend/db_services/partition/exceptions.py:18
msgid "分区管理创建异常"
msgstr "Partition management creation exception"

#: backend/db_services/partition/handlers.py:31
msgid "分区管理创建失败，创建参数:{}, 错误信息: {}"
msgstr "Partition management creation failed, creation parameter: {}, error message: {}"

#: backend/db_services/partition/handlers.py:45
msgid "创建分区后自动执行的分区单据"
msgstr "Partition ticket executed automatically after partition creation"

#: backend/db_services/partition/serializers.py:23
msgid "匹配库"
msgstr "matching database"

#: backend/db_services/partition/serializers.py:24
msgid "匹配表"
msgstr "match table"

#: backend/db_services/partition/serializers.py:33
#: backend/db_services/partition/serializers.py:79
#: backend/db_services/partition/serializers.py:91
msgid "分区策略ID"
msgstr "Partition policy ID"

#: backend/db_services/partition/serializers.py:42
msgid "PORT"
msgstr "PORT"

#: backend/db_services/partition/serializers.py:45
msgid "匹配库列表(支持通配)"
msgstr "List of matching libraries (supports wildcards)"

#: backend/db_services/partition/serializers.py:46
msgid "匹配表列表(不支持通配)"
msgstr "List of matching tables (wildcards are not supported)"

#: backend/db_services/partition/serializers.py:47
msgid "分区字段"
msgstr "partition field"

#: backend/db_services/partition/serializers.py:48
msgid "分区字段类型"
msgstr "Partition field type"

#: backend/db_services/partition/serializers.py:49
msgid "过期时间"
msgstr "Expiration"

#: backend/db_services/partition/serializers.py:50
msgid "分区间隔"
msgstr "partition interval"

#: backend/db_services/partition/serializers.py:52
msgid "更新者"
msgstr "updater"

#: backend/db_services/partition/serializers.py:67
msgid "分区表不支持通配"
msgstr "Partition table does not support wildcarding"

#: backend/db_services/partition/serializers.py:97
msgid "分区配置ID"
msgstr "Partition Configuration ID"

#: backend/db_services/partition/serializers.py:100
msgid "分区使用的端口"
msgstr "The port used by the partition"

#: backend/db_services/partition/views.py:43
msgid "获取分区策略列表"
msgstr "Get list of partition strategies"

#: backend/db_services/partition/views.py:52
msgid "修改分区策略"
msgstr "Modify partition strategy"

#: backend/db_services/partition/views.py:61
msgid "增加分区策略"
msgstr "Add partition strategy"

#: backend/db_services/partition/views.py:70
msgid "批量删除分区策略"
msgstr "Delete partition policies in batches"

#: backend/db_services/partition/views.py:80
msgid "禁用分区策略"
msgstr "disable partition policy"

#: backend/db_services/partition/views.py:90
msgid "启用分区策略"
msgstr "enable partition strategy"

#: backend/db_services/partition/views.py:100
msgid "查询分区策略日志"
msgstr "Query partition policy logs"

#: backend/db_services/partition/views.py:110
msgid "分区策略前置执行"
msgstr "Pre-execution of partition strategy"

#: backend/db_services/redis/constants.py:18
msgid "基于正则"
msgstr "Regex-based"

#: backend/db_services/redis/constants.py:19
msgid "基于文件"
msgstr "file based"

#: backend/db_services/redis_dts/constants.py:19
msgid "tendis ssd备份任务"
msgstr "tendis ssd backup task"

#: backend/db_services/redis_dts/constants.py:20
msgid "tendis ssd备份拉取任务"
msgstr "tendis ssd backup pull task"

#: backend/db_services/redis_dts/constants.py:21
msgid "tendis ssd备份解析任务"
msgstr "Tendis ssd backup analysis task"

#: backend/db_services/redis_dts/constants.py:22
msgid "tendis ssd数据导入任务"
msgstr "Tendis ssd data import task"

#: backend/db_services/redis_dts/constants.py:23
msgid "tendis ssd拉起sync任务"
msgstr "Tendis ssd pulls up the sync task"

#: backend/db_services/redis_dts/constants.py:24
#: backend/db_services/redis_dts/constants.py:28
msgid "tendis ssd监视sync任务"
msgstr "Tendis ssd monitor sync task"

#: backend/db_services/redis_dts/constants.py:27
msgid "redis cache拉起redis-shake任务"
msgstr "Redis cache pulls up the redis-shake task"

#: backend/db_services/redis_dts/constants.py:31
msgid "tendisplus拉起reids-sync任务"
msgstr "Tendisplus pulls up the reids-sync task"

#: backend/db_services/redis_dts/constants.py:33
msgid "tendisplus全量数据同步"
msgstr "Tendisplus full data synchronization"

#: backend/db_services/redis_dts/constants.py:34
msgid "tendisplus增量数据同步"
msgstr "Tendisplus incremental data synchronization"

#: backend/db_services/redis_dts/constants.py:40
msgid "停止数据同步todo"
msgstr "stop data sync todo"

#: backend/db_services/redis_dts/constants.py:41
msgid "停止数据同步失败"
msgstr "Failed to stop data sync"

#: backend/db_services/redis_dts/constants.py:42
msgid "停止数据同步成功"
msgstr "Stop data synchronization successfully"

#: backend/db_services/redis_dts/constants.py:44
msgid "强制暂停任务todo"
msgstr "Forcibly suspend task todo"

#: backend/db_services/redis_dts/constants.py:45
msgid "强制暂停任务失败"
msgstr "Failed to force suspend task"

#: backend/db_services/redis_dts/constants.py:46
msgid "强制暂停任务成功"
msgstr "Succeeded in forcing the task to suspend"

#: backend/db_services/redis_dts/constants.py:52
msgid "集群节点数变更"
msgstr "Change in the number of cluster nodes"

#: backend/db_services/redis_dts/constants.py:53
msgid "集群类型变更"
msgstr "Cluster type change"

#: backend/db_services/redis_dts/constants.py:54
msgid "数据复制"
msgstr "data replication"

#: backend/db_services/redis_dts/constants.py:60
msgid "同一业务不同集群"
msgstr "Different clusters of the same business"

#: backend/db_services/redis_dts/constants.py:61
msgid "不同业务不同集群"
msgstr "Different business clusters"

#: backend/db_services/redis_dts/constants.py:62
msgid "复制到其他系统"
msgstr "copy to other system"

#: backend/db_services/redis_dts/constants.py:63
msgid "从回档临时环境复制数据"
msgstr "Copy data from the archive staging environment"

#: backend/db_services/redis_dts/constants.py:64
msgid "用户自建redis迁移到DBM"
msgstr "Migrating user-built redis to DBM"

#: backend/db_services/redis_dts/constants.py:70
msgid "自动切换"
msgstr "auto switch"

#: backend/db_services/redis_dts/constants.py:71
msgid "用户确认切换"
msgstr "User confirmation switch"

#: backend/db_services/redis_dts/constants.py:77
#: backend/ticket/builders/common/constants.py:79
msgid "自动修复"
msgstr "automatic repair"

#: backend/db_services/redis_dts/constants.py:78
msgid "用户确认修复"
msgstr "User confirms the fix"

#: backend/db_services/redis_dts/exceptions.py:18
msgid "DBDts模块异常"
msgstr "DBDts module exception"

#: backend/db_services/redis_dts/exceptions.py:23
msgid "获取DTS任务列表异常"
msgstr "Obtaining the DTS task list is abnormal"

#: backend/db_services/redis_dts/exceptions.py:29
msgid "DTS task操作异常"
msgstr "DTS task operation is abnormal"

#: backend/db_services/redis_dts/models/tb_dts_distribute_lock.py:17
msgid "锁的唯一标识"
msgstr "Unique ID of the lock"

#: backend/db_services/redis_dts/models/tb_dts_distribute_lock.py:18
msgid "锁的持有者"
msgstr "lock holder"

#: backend/db_services/redis_dts/models/tb_dts_distribute_lock.py:20
msgid "锁的过期时间"
msgstr "lock expiration time"

#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:17
#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:19
msgid "单据号"
msgstr "ticket No"

#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:18
#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:21
msgid "业务bk_biz_id"
msgstr "Business bk_biz_id"

#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:19
#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:22
msgid "云区域id"
msgstr "cloud region id"

#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:20
#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:20
msgid "申请人"
msgstr "applicant"

#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:25
msgid "DTS单据类型"
msgstr "DTS ticket type"

#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:32
msgid "DTS数据复制类型"
msgstr "DTS data replication type"

#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:36
msgid "在线切换类型"
msgstr "Online switch type"

#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:37
msgid "是否数据校验"
msgstr "Whether data verification"

#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:38
msgid "是否数据修复"
msgstr "Data repair Execution"

#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:42
msgid "数据修复模式"
msgstr "Data Repair Mode"

#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:45
msgid "源集群类型"
msgstr "source cluster type"

#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:46
msgid "回滚单据号"
msgstr "Rollback ticket number"

#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:47
msgid "回滚临时环境实例"
msgstr "Rollback a temporary environment instance"

#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:48
msgid "目标业务id"
msgstr "target business id"

#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:49
#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:49
msgid "目的集群"
msgstr "destination cluster"

#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:51
msgid "目标集群类型"
msgstr "target cluster type"

#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:52
msgid "key正则(包含key)"
msgstr "key regular (including key)"

#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:53
msgid "key正则(排除key)"
msgstr "key regularization (exclude key)"

#: backend/db_services/redis_dts/models/tb_tendis_dts_job.py:56
msgid "bill备注"
msgstr "Bill Remarks"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:23
msgid "执行迁移任务的dts_server"
msgstr "dts_server that executes migration tasks"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:25
msgid "源集群优先级,值越大,优先级越高"
msgstr "Source cluster priority, the larger the value, the higher the priority"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:26
msgid "源slave_ip"
msgstr "source slave ip"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:27
msgid "源slave_port"
msgstr "source slave_port"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:28
msgid "源实例密码base64值"
msgstr "Source instance password base64 value"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:30
msgid "源slave db类型"
msgstr "Source slave db type"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:32
msgid "源实例数据量大小,单位Byte"
msgstr "Source instance data size, unit Byte"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:34
msgid "源实例所属segment_start"
msgstr "The segment_start to which the source instance belongs"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:35
msgid "源实例所属segment_end"
msgstr "The segment_end to which the source instance belongs"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:37
msgid "源实例权重"
msgstr "Source Instance Weight"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:39
msgid "源slave_ip上task并发数控制"
msgstr "Task concurrency control on the source slave_ip"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:40
msgid "源实例所在城市"
msgstr "The time zone where the instance is located"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:42
msgid "源实例slave-keep-log-count的旧值"
msgstr "Old value of source instance slave-keep-log-count"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:43
msgid "源实例slave-keep-log-count的新值"
msgstr "The new value of the source instance slave-keep-log-count"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:44
msgid "源实例slave-keep-log-count是否恢复"
msgstr "Whether the source instance slave-keep-log-count is restored"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:45
msgid "srcRedis是否包含list类型key"
msgstr "Whether srcRedis contains list type key"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:46
msgid "包含key(正则)"
msgstr "Contains key (regular)"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:47
msgid "排除key(正则)"
msgstr "Exclude key (regular)"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:50
msgid "目的密码base64值"
msgstr "Destination password base64 value"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:53
msgid "tendisssd slave上bakup文件位置"
msgstr "bakup file location on tendisssd slave"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:54
msgid "backup文件拉取到dts_server本地位置"
msgstr "The backup file is pulled to the local location of dts_server"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:55
msgid "tendisdumper得到的sql文件夹"
msgstr "The sql folder obtained by tendisdumper"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:56
msgid "redis-sync端口"
msgstr "redis-sync port"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:57
msgid "sync的进程id"
msgstr "sync process id"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:59
msgid "task重试次数"
msgstr "task retries"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:61
msgid "sync操作"
msgstr "sync operation"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:63
msgid "杀死syncer"
msgstr "kill syncer"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:66
msgid "信息"
msgstr "information"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:68
msgid "被忽略的错误"
msgstr "ignored errors"

#: backend/db_services/redis_dts/models/tb_tendis_dts_task.py:69
msgid "sync从该时间点重新同步"
msgstr "sync resynchronizes from this point in time"

#: backend/db_services/taskflow/exceptions.py:18
msgid "任务流程模块异常"
msgstr "Task process module exception"

#: backend/db_services/taskflow/exceptions.py:23
msgid "重试节点异常"
msgstr "retry node exception"

#: backend/db_services/taskflow/exceptions.py:28
msgid "回调节点异常"
msgstr "callback node exception"

#: backend/db_services/taskflow/exceptions.py:33
msgid "跳过节点异常"
msgstr "skip node exception"

#: backend/db_services/taskflow/exceptions.py:38
msgid "强制失败节点异常"
msgstr "Force failure node exception"

#: backend/db_services/taskflow/exceptions.py:43
msgid "撤销流程异常"
msgstr "Abnormal cancellation process"

#: backend/db_services/taskflow/handlers.py:78
msgid "人工强制失败"
msgstr "Manual forced failure"

#: backend/db_services/taskflow/handlers.py:125
msgid "节点尚未运行，请稍后查看"
msgstr "The node is not running yet, please check later"

#: backend/db_services/taskflow/handlers.py:127
msgid "节点日志仅保留7天"
msgstr "Node logs are only kept for 7 days"

#: backend/db_services/taskflow/handlers.py:152
msgid "日志上报中，请稍后查看"
msgstr "The log is being reported, please check it later"

#: backend/db_services/taskflow/serializers.py:21
#: backend/ticket/serializers.py:73
msgid "单据类型名称"
msgstr "ticket type name"

#: backend/db_services/taskflow/serializers.py:22
#: backend/ticket/serializers.py:75 backend/ticket/serializers.py:113
#: backend/ticket/serializers.py:166
msgid "耗时"
msgstr "time consuming"

#: backend/db_services/taskflow/serializers.py:48 backend/flow/models.py:39
msgid "节点ID"
msgstr "Node ID"

#: backend/db_services/taskflow/serializers.py:52
msgid "回调描述"
msgstr "callback description"

#: backend/db_services/taskflow/serializers.py:56
msgid "版本ID"
msgstr "version ID"

#: backend/db_services/taskflow/serializers.py:57
msgid "是否下载日志"
msgstr "Whether to download logs"

#: backend/db_services/taskflow/serializers.py:67
msgid "目标目录列表"
msgstr "target directory listing"

#: backend/db_services/taskflow/task.py:54
msgid "存在执行互斥，正在进行重试，当前重试次数为{}"
msgstr ""
"There is an execution mutex, and retrying is in progress, and the current "
"number of retries is {}"

#: backend/db_services/taskflow/task.py:58
msgid "自动重试次数已超过最大重试次数{}, 请重新手动重试"
msgstr ""
"The number of automatic retries has exceeded the maximum number of retries "
"{}, please try again manually"

#: backend/db_services/taskflow/task.py:72
msgid "执行互斥错误信息: {}"
msgstr "Execution mutex error message: {}"

#: backend/db_services/taskflow/task.py:79
msgid "存在执行互斥将自动进行重试..."
msgstr "Execution mutexes will automatically be retried..."

#: backend/db_services/taskflow/task.py:89
msgid "重试成功"
msgstr "successful retry"

#: backend/db_services/taskflow/views/flow.py:61
msgid "任务列表"
msgstr "task list"

#: backend/db_services/taskflow/views/flow.py:68
msgid "任务详情"
msgstr "Task details"

#: backend/db_services/taskflow/views/flow.py:78
msgid "撤销流程"
msgstr "Rollback process"

#: backend/db_services/taskflow/views/flow.py:87
msgid "重试节点"
msgstr "retry node"

#: backend/db_services/taskflow/views/flow.py:94
msgid "非超级用户，暂不允许调用此接口"
msgstr "Non-super users are not allowed to call this interface"

#: backend/db_services/taskflow/views/flow.py:101
msgid "跳过节点"
msgstr "skip node"

#: backend/db_services/taskflow/views/flow.py:111
msgid "强制失败节点"
msgstr "force failure node"

#: backend/db_services/taskflow/views/flow.py:121
msgid "节点版本列表"
msgstr "List of node versions"

#: backend/db_services/taskflow/views/flow.py:132
msgid "节点日志"
msgstr "node log"

#: backend/db_services/taskflow/views/flow.py:154
msgid "回调节点"
msgstr "callback node"

#: backend/db_services/taskflow/views/redis.py:49
msgid "结果文件列表"
msgstr "Result file list"

#: backend/db_services/taskflow/views/redis.py:94
msgid "打包下载结果文件列表"
msgstr "Package download result file list"

#: backend/db_services/taskflow/views/redis.py:122
msgid "指定目录下载（返回下载链接）"
msgstr "Specify directory to download (return to download link)"

#: backend/db_services/user/serializers.py:16
msgid "模糊搜索"
msgstr "fuzzy search"

#: backend/db_services/user/serializers.py:18
msgid "不分页，即将下架，请不要使用，并尽快迁移"
msgstr ""
"No pagination, it will be discontinued soon, please do not use it, and "
"migrate as soon as possible"

#: backend/db_services/version/constants.py:23
msgid "MySQL-5.6"
msgstr "MySQL-5.6"

#: backend/db_services/version/constants.py:24
msgid "MySQL-5.7"
msgstr "MySQL-5.7"

#: backend/db_services/version/constants.py:25
msgid "MySQL-8.0"
msgstr "MySQL-8.0"

#: backend/db_services/version/constants.py:31
msgid "Redis-6"
msgstr "Redis-6"

#: backend/db_services/version/constants.py:37
msgid "Tendisplus-2.5"
msgstr "Tendisplus-2.5"

#: backend/db_services/version/constants.py:38
msgid "Tendisplus-2.6"
msgstr "Tendisplus-2.6"

#: backend/db_services/version/constants.py:44
msgid "TendisSSD-1.2"
msgstr "TendisSSD-1.2"

#: backend/db_services/version/constants.py:45
msgid "TendisSSD-1.3"
msgstr "TendisSSD-1.3"

#: backend/db_services/version/constants.py:51
msgid "TwemproxyLatest"
msgstr "TwemproxyLatest"

#: backend/db_services/version/constants.py:57
msgid "PredixyLatest"
msgstr "PredixyLatest"

#: backend/db_services/version/serializers.py:20
msgid "查询关键字"
msgstr "query keywords"

#: backend/db_services/version/views.py:27
msgid "查询数据库版本列表"
msgstr "Query the list of database versions"

#: backend/dbm_init/management/commands/cloud_component.py:38
msgid "云区域组件初始化失败，错误信息:{}"
msgstr "Cloud zone component initialization failed, error message: {}"

#: backend/exceptions.py:48
msgid "系统异常"
msgstr "System exception"

#: backend/exceptions.py:103
msgid "系统错误"
msgstr "system error"

#: backend/exceptions.py:113
msgid "参数验证失败"
msgstr "Parameter validation failed"

#: backend/exceptions.py:118
msgid "远程服务请求结果异常"
msgstr "The result of the remote service request is abnormal"

#: backend/exceptions.py:123
msgid "组件调用异常"
msgstr "Component call exception"

#: backend/exceptions.py:128
msgid "业务不存在"
msgstr "business does not exist"

#: backend/exceptions.py:133
msgid "语言不支持"
msgstr "language not supported"

#: backend/exceptions.py:138
msgid "权限不足"
msgstr "Insufficient permissions"

#: backend/exceptions.py:165
msgid "服务不稳定，请检查组件健康状况"
msgstr "The service is unstable, please check the component health status"

#: backend/flow/consts.py:107
msgid "创建态"
msgstr "creation state"

#: backend/flow/consts.py:108
msgid "准备态"
msgstr "ready state"

#: backend/flow/consts.py:109
msgid "运行态"
msgstr "running state"

#: backend/flow/consts.py:110
msgid "暂停态"
msgstr "pause state"

#: backend/flow/consts.py:111
msgid "闭塞态"
msgstr "Blocked state"

#: backend/flow/consts.py:112
msgid "完成态"
msgstr "Completion"

#: backend/flow/consts.py:113
msgid "失败态"
msgstr "failure state"

#: backend/flow/consts.py:114
msgid "取消态"
msgstr "cancel state"

#: backend/flow/consts.py:122
msgid "共用参数"
msgstr "Shared parameters"

#: backend/flow/consts.py:123
msgid "redis共用参数"
msgstr "redis shared parameters"

#: backend/flow/consts.py:124
msgid "TenDBHA"
msgstr "TenDBHA"

#: backend/flow/consts.py:125
msgid "RedisCache 主从版"
msgstr "RedisCache master-slave version"

#: backend/flow/consts.py:126
msgid "twemproxy + RedisInstance架构"
msgstr "twemproxy + RedisInstance architecture"

#: backend/flow/consts.py:127
msgid "predixy + tendisplus架构"
msgstr "predixy + tendisplus architecture"

#: backend/flow/consts.py:128
msgid "Es"
msgstr "Es"

#: backend/flow/consts.py:129
msgid "tendb"
msgstr "tendb"

#: backend/flow/consts.py:131
msgid "Hdfs"
msgstr "Hdfs"

#: backend/flow/consts.py:133
msgid "Influxdb"
msgstr "Influxdb"

#: backend/flow/consts.py:138
msgid "初始化帐户"
msgstr "Initialize account"

#: backend/flow/consts.py:139
msgid "实例和帐户"
msgstr "instance and account"

#: backend/flow/consts.py:140
msgid "系统配置"
msgstr "System Configuration"

#: backend/flow/consts.py:141
msgid "实例配置"
msgstr "instance configuration"

#: backend/flow/consts.py:142
msgid "默认配置"
msgstr "default allocation"

#: backend/flow/consts.py:143
msgid "proxyconfig"
msgstr "proxyconfig"

#: backend/flow/consts.py:144
msgid "ES实例配置"
msgstr "ES instance configuration"

#: backend/flow/consts.py:145
msgid "act配置"
msgstr "act configuration"

#: backend/flow/consts.py:146
msgid "系统配置类型"
msgstr "system configuration type"

#: backend/flow/consts.py:147
msgid "Kafka实例配置"
msgstr "Kafka instance configuration"

#: backend/flow/consts.py:148
msgid "HDFS集群配置"
msgstr "HDFS cluster configuration"

#: backend/flow/consts.py:149
msgid "HDFS实例hdfs-site配置"
msgstr "HDFS instance hdfs-site configuration"

#: backend/flow/consts.py:150
msgid "HDFS实例core-site配置"
msgstr "HDFS instance core-site configuration"

#: backend/flow/consts.py:151
msgid "HDFS实例安装配置"
msgstr "HDFS instance installation configuration"

#: backend/flow/consts.py:155
msgid "系统"
msgstr "system"

#: backend/flow/consts.py:156
msgid "twemproxy config file"
msgstr "twemproxy config file"

#: backend/flow/consts.py:157
msgid "predixy config file"
msgstr "predixy config file"

#: backend/flow/consts.py:158
msgid "redis config file"
msgstr "redis config file"

#: backend/flow/consts.py:159
msgid "全备配置"
msgstr "full configuration"

#: backend/flow/consts.py:160
msgid "增备配置"
msgstr "Additional configuration"

#: backend/flow/consts.py:161
msgid "心跳配置"
msgstr "heartbeat configuration"

#: backend/flow/consts.py:162
msgid "监控配置"
msgstr "monitoring configuration"

#: backend/flow/consts.py:163
msgid "基本配置"
msgstr "basic configuration"

#: backend/flow/consts.py:164
msgid "热key配置"
msgstr "Hot key configuration"

#: backend/flow/consts.py:165
msgid "大key配置"
msgstr "Big key configuration"

#: backend/flow/consts.py:169
msgid "MASTER"
msgstr "MASTER"

#: backend/flow/consts.py:170
msgid "SLAVE"
msgstr "SLAVE"

#: backend/flow/consts.py:174 backend/flow/consts.py:252
#: backend/flow/consts.py:750
msgid "mysql"
msgstr "mysql"

#: backend/flow/consts.py:175
msgid "mysql-proxy"
msgstr "mysql-proxy"

#: backend/flow/consts.py:179
msgid "dbbackup"
msgstr "dbbackup"

#: backend/flow/consts.py:180
msgid "actuator"
msgstr "actuator"

#: backend/flow/consts.py:181
msgid "最新版本"
msgstr "The latest version"

#: backend/flow/consts.py:184
msgid "redis_tools"
msgstr "redis_tools"

#: backend/flow/consts.py:185 backend/flow/consts.py:258
msgid "es"
msgstr "es"

#: backend/flow/consts.py:186 backend/flow/consts.py:259
msgid "kafka"
msgstr "kafka"

#: backend/flow/consts.py:187 backend/flow/consts.py:260
msgid "hdfs"
msgstr "hdfs"

#: backend/flow/consts.py:188 backend/flow/consts.py:261
msgid "pulsar"
msgstr "pulsar"

#: backend/flow/consts.py:190
msgid "dbmon"
msgstr "dbmon"

#: backend/flow/consts.py:191
msgid "mysql-checksum"
msgstr "mysql-checksum"

#: backend/flow/consts.py:192
msgid "Binlog 滚动备份工具"
msgstr "Binlog rotate tool"

#: backend/flow/consts.py:193
msgid "DBA 工具集"
msgstr "DBA toolkit"

#: backend/flow/consts.py:194
msgid "mysql-crond"
msgstr "mysql-crond"

#: backend/flow/consts.py:195
msgid "MySQL 监控"
msgstr "MySQL monitoring"

#: backend/flow/consts.py:196
msgid "nginx 服务"
msgstr "nginx service"

#: backend/flow/consts.py:197
msgid "dns-bind 服务"
msgstr "dns-bind service"

#: backend/flow/consts.py:198
msgid "dns-pull-crond服务"
msgstr "dns-pull-crond service"

#: backend/flow/consts.py:199
msgid "cloud-dbha服务"
msgstr "cloud-dbha service"

#: backend/flow/consts.py:200
msgid "cloud-drs服务"
msgstr "cloud-drs service"

#: backend/flow/consts.py:201
msgid "cloud-drs-tmysqlparse服务"
msgstr "cloud-drs-tmysqlparse service"

#: backend/flow/consts.py:202
msgid "spider节点名称"
msgstr "spider node name"

#: backend/flow/consts.py:203
msgid "spider中控节点名称"
msgstr "Spider control node name"

#: backend/flow/consts.py:208
msgid "nginx服务"
msgstr "nginx-service"

#: backend/flow/consts.py:209
msgid "dns服务"
msgstr "dns service"

#: backend/flow/consts.py:210
msgid "drs服务"
msgstr "drs service"

#: backend/flow/consts.py:211
msgid "dbha服务"
msgstr "dbha service"

#: backend/flow/consts.py:215
msgid "pull-crond.conf"
msgstr "pull-crond.conf"

#: backend/flow/consts.py:216
msgid "ha-gm.conf"
msgstr "ha-gm.conf"

#: backend/flow/consts.py:217
msgid "ha-agent.conf"
msgstr "ha-agent.conf"

#: backend/flow/consts.py:218
msgid "drs.env"
msgstr "drs.env"

#: backend/flow/consts.py:222
msgid "GM"
msgstr "GM"

#: backend/flow/consts.py:223
msgid "AGENT"
msgstr "AGENT"

#: backend/flow/consts.py:224
msgid "mysql-monitor"
msgstr "mysql-monitor"

#: backend/flow/consts.py:234
msgid "nginx服务模块"
msgstr "nginx service module"

#: backend/flow/consts.py:235
msgid "dns服务模块"
msgstr "dns service module"

#: backend/flow/consts.py:236
msgid "drs服务模块"
msgstr "drs service module"

#: backend/flow/consts.py:237
msgid "dbha服务模块"
msgstr "dbha service module"

#: backend/flow/consts.py:242
msgid "蓝盾制品库"
msgstr "Blue Shield Product database"

#: backend/flow/consts.py:247
msgid "V1"
msgstr "V1"

#: backend/flow/consts.py:255
msgid "tendis"
msgstr "tending"

#: backend/flow/consts.py:263
msgid "bkdbmon"
msgstr "bkdbmon"

#: backend/flow/consts.py:264
msgid "download"
msgstr "download"

#: backend/flow/consts.py:266
msgid "spiderctl"
msgstr "spiderctl"

#: backend/flow/consts.py:271 backend/flow/consts.py:315
msgid "sysinit"
msgstr "sysinit"

#: backend/flow/consts.py:272 backend/flow/consts.py:419
msgid "deploy"
msgstr "deploy"

#: backend/flow/consts.py:273
msgid "find-local-backup"
msgstr "find-local-backup"

#: backend/flow/consts.py:274
msgid "restore-dr"
msgstr "restore-dr"

#: backend/flow/consts.py:275
msgid "recover-binlog"
msgstr "recover-binlog"

#: backend/flow/consts.py:276
msgid "grant-repl"
msgstr "grant-repl"

#: backend/flow/consts.py:277
msgid "change-master"
msgstr "change-master"

#: backend/flow/consts.py:278
msgid "set-backend"
msgstr "set-backend"

#: backend/flow/consts.py:279 backend/flow/consts.py:427
msgid "uninstall"
msgstr "uninstall"

#: backend/flow/consts.py:280
msgid "deploy-dbbackup"
msgstr "deploy-dbbackup"

#: backend/flow/consts.py:281 backend/flow/consts.py:424
msgid "install-monitor"
msgstr "install-monitor"

#: backend/flow/consts.py:282
msgid "deploy-rotate"
msgstr "deploy-rotate"

#: backend/flow/consts.py:283 backend/flow/consts.py:289
msgid "semantic-dumpschema"
msgstr "semantic-dumpschema"

#: backend/flow/consts.py:284
msgid "import-sqlfile"
msgstr "import-sqlfile"

#: backend/flow/consts.py:285
msgid "clone-client-grant"
msgstr "clone-client-grant"

#: backend/flow/consts.py:286
msgid "clone-proxy-user"
msgstr "clone-proxy-user"

#: backend/flow/consts.py:287 backend/flow/consts.py:426
msgid "clear-crontab"
msgstr "clear-crontab"

#: backend/flow/consts.py:288
msgid "semantic-check"
msgstr "semantic-check"

#: backend/flow/consts.py:290
msgid "backup-truncate-database"
msgstr "backup-truncate-database"

#: backend/flow/consts.py:291
msgid "restart"
msgstr "restart"

#: backend/flow/consts.py:292
msgid "clean-mysql"
msgstr "clean-mysql"

#: backend/flow/consts.py:293
msgid "backup-database-table"
msgstr "backup-database-table"

#: backend/flow/consts.py:294
msgid "set-backend-toward-slave"
msgstr "set-backend-toward-slave"

#: backend/flow/consts.py:295
msgid "pt-table-checksum"
msgstr "pt-table-checksum"

#: backend/flow/consts.py:296
msgid "执行分区"
msgstr "execution partition"

#: backend/flow/consts.py:297
msgid "ibs-recover"
msgstr "ibs-recover"

#: backend/flow/consts.py:298
msgid "数据修复指令"
msgstr "Data Repair Instructions"

#: backend/flow/consts.py:299
msgid "flashback-binlog"
msgstr "flashback-binlog"

#: backend/flow/consts.py:300
msgid "full-backup"
msgstr "full-backup"

#: backend/flow/consts.py:301
msgid "install-checksum"
msgstr "install-checksum"

#: backend/flow/consts.py:302
msgid "mycnf-change"
msgstr "mycnf-change"

#: backend/flow/consts.py:303
msgid "安装mysql-rotatebinlog程序"
msgstr "Install the mysql-rotatebinlog program"

#: backend/flow/consts.py:304
msgid "安装dba-toolkit程序"
msgstr "Install the dba-toolkit program"

#: backend/flow/consts.py:305
msgid "deploy-mysql-crond"
msgstr "deploy-mysql-crond"

#: backend/flow/consts.py:306
msgid "mysql实例的周边配置清理"
msgstr "Clean up the surrounding configuration of the mysql instance"

#: backend/flow/consts.py:307
msgid "初始化spider集群节点关系"
msgstr "Initialize the spider cluster node relationship"

#: backend/flow/consts.py:308
msgid "添加spider临时节点"
msgstr "Add spider temporary node"

#: backend/flow/consts.py:309
msgid "restart-spider"
msgstr "restart-spider"

#: backend/flow/consts.py:310
msgid "添加spider-slave集群的相关路由信息"
msgstr "Add the relevant routing information of the spider-slave cluster"

#: backend/flow/consts.py:311
msgid "mysql备份请求"
msgstr "mysql backup request"

#: backend/flow/consts.py:316
msgid "install"
msgstr "install"

#: backend/flow/consts.py:317
msgid "replica_batch"
msgstr "replica_batch"

#: backend/flow/consts.py:318
msgid "replicaof"
msgstr "replicaof"

#: backend/flow/consts.py:319
msgid "clustermeet_slotsassign"
msgstr "clustermeet_slotassign"

#: backend/flow/consts.py:320
msgid "keyspattern"
msgstr "keyspattern"

#: backend/flow/consts.py:321
msgid "keysdelete_regex"
msgstr "keysdelete_regex"

#: backend/flow/consts.py:322
msgid "keysdelete_files"
msgstr "keysdelete_files"

#: backend/flow/consts.py:323
msgid "backup"
msgstr "backup"

#: backend/flow/consts.py:324
msgid "flush_data"
msgstr "flush_data"

#: backend/flow/consts.py:325
msgid "shutdown"
msgstr "shutdown"

#: backend/flow/consts.py:326
msgid "open"
msgstr "open"

#: backend/flow/consts.py:327
msgid "close"
msgstr "close"

#: backend/flow/consts.py:328
msgid "operate"
msgstr "operate"

#: backend/flow/consts.py:329
msgid "capturer"
msgstr "capture"

#: backend/flow/consts.py:330
msgid "kill_conn"
msgstr "kill_conn"

#: backend/flow/consts.py:331
msgid "param_sync"
msgstr "param_sync"

#: backend/flow/consts.py:332
msgid "sync_check"
msgstr "sync_check"

#: backend/flow/consts.py:333
msgid "dts_datacheck"
msgstr "dts_datacheck"

#: backend/flow/consts.py:334
msgid "dts_datarepaire"
msgstr "dts_datarepaire"

#: backend/flow/consts.py:338 backend/flow/consts.py:361
#: backend/flow/consts.py:381 backend/flow/consts.py:400
#: backend/flow/consts.py:575
msgid "init"
msgstr "init"

#: backend/flow/consts.py:339 backend/flow/consts.py:362
#: backend/flow/consts.py:382 backend/flow/consts.py:401
#: backend/flow/consts.py:576
msgid "decompress_pkg"
msgstr "decompress_pkg"

#: backend/flow/consts.py:340 backend/flow/consts.py:363
#: backend/flow/consts.py:383 backend/flow/consts.py:402
msgid "install_supervisor"
msgstr "install_supervisor"

#: backend/flow/consts.py:341
msgid "install_master"
msgstr "install_master"

#: backend/flow/consts.py:342
msgid "install_hot"
msgstr "install_hot"

#: backend/flow/consts.py:343
msgid "install_cold"
msgstr "install_cold"

#: backend/flow/consts.py:344
msgid "install_client"
msgstr "install_client"

#: backend/flow/consts.py:345
msgid "init_grant"
msgstr "init_grant"

#: backend/flow/consts.py:346
msgid "install_exporter"
msgstr "install_exporter"

#: backend/flow/consts.py:347
msgid "install_kibana"
msgstr "install_kibana"

#: backend/flow/consts.py:348 backend/flow/consts.py:385
msgid "install_telegraf"
msgstr "install_telegraf"

#: backend/flow/consts.py:349 backend/flow/consts.py:368
#: backend/flow/consts.py:387 backend/flow/consts.py:409
msgid "start_process"
msgstr "start_process"

#: backend/flow/consts.py:350 backend/flow/consts.py:369
#: backend/flow/consts.py:388 backend/flow/consts.py:410
msgid "stop_process"
msgstr "stop_process"

#: backend/flow/consts.py:351 backend/flow/consts.py:370
#: backend/flow/consts.py:389 backend/flow/consts.py:411
msgid "restart_process"
msgstr "restart_process"

#: backend/flow/consts.py:352 backend/flow/consts.py:371
#: backend/flow/consts.py:390 backend/flow/consts.py:412
msgid "clean_data"
msgstr "clean_data"

#: backend/flow/consts.py:353
msgid "exclude_node"
msgstr "exclude_node"

#: backend/flow/consts.py:354
msgid "check_shards"
msgstr "check_shards"

#: backend/flow/consts.py:355
msgid "check_connections"
msgstr "check_connections"

#: backend/flow/consts.py:356
msgid "check_nodes"
msgstr "check_nodes"

#: backend/flow/consts.py:357
msgid "replace_master"
msgstr "replace_master"

#: backend/flow/consts.py:364 backend/flow/consts.py:403
msgid "install_zookeeper"
msgstr "install_zookeeper"

#: backend/flow/consts.py:365
msgid "init_kafkaUser"
msgstr "init_kafkaUser"

#: backend/flow/consts.py:366 backend/flow/consts.py:406
msgid "install_broker"
msgstr "install_broker"

#: backend/flow/consts.py:367
msgid "install_manager"
msgstr "install_manager"

#: backend/flow/consts.py:372
msgid "reduce_broker"
msgstr "reduce_broker"

#: backend/flow/consts.py:373
msgid "check_reassign"
msgstr "check_reassign"

#: backend/flow/consts.py:374
msgid "reconfig_add"
msgstr "reconfig_add"

#: backend/flow/consts.py:375
msgid "restart_broker"
msgstr "restart_broker"

#: backend/flow/consts.py:376
msgid "reconfig_remove"
msgstr "reconfig_remove"

#: backend/flow/consts.py:377
msgid "replace_broker"
msgstr "replace_broker"

#: backend/flow/consts.py:384
msgid "install_influxdb"
msgstr "install_influxdb"

#: backend/flow/consts.py:386
msgid "init_user"
msgstr "init_user"

#: backend/flow/consts.py:394
msgid "check_broker_config"
msgstr "check_broker_config"

#: backend/flow/consts.py:395
msgid "check_namespace_config"
msgstr "check_namespace_config"

#: backend/flow/consts.py:396
msgid "check_under_replicated"
msgstr "check_under_replicated"

#: backend/flow/consts.py:397
msgid "check_ledger_metadata"
msgstr "check_ledger_metadata"

#: backend/flow/consts.py:398
msgid "set_bookie_readonly"
msgstr "set_bookie_readonly"

#: backend/flow/consts.py:399
msgid "decommission_bookie"
msgstr "decommission_bookie"

#: backend/flow/consts.py:404
msgid "init_cluster"
msgstr "init_cluster"

#: backend/flow/consts.py:405
msgid "install_bookkeeper"
msgstr "install_bookkeeper"

#: backend/flow/consts.py:407
msgid "install_pulsar_manager"
msgstr "install_pulsar_manager"

#: backend/flow/consts.py:408
msgid "init_pulsar_manager"
msgstr "init_pulsar_manager"

#: backend/flow/consts.py:413
msgid "add_hosts"
msgstr "add_hosts"

#: backend/flow/consts.py:414
msgid "modify_hosts"
msgstr "modify_hosts"

#: backend/flow/consts.py:418
msgid "sysinit-riak"
msgstr "sysinits"

#: backend/flow/consts.py:420
msgid "join-cluster"
msgstr "join-cluster"

#: backend/flow/consts.py:421
msgid "commit-cluster-change"
msgstr "commit-cluster-change"

#: backend/flow/consts.py:422
msgid "init-bucket-type"
msgstr "init-bucket-type"

#: backend/flow/consts.py:423
msgid "remove-node"
msgstr "remove-node"

#: backend/flow/consts.py:425
msgid "deploy-riak-crond"
msgstr "deploy-ripple-crond"

#: backend/flow/consts.py:435
msgid "聊天历史记录"
msgstr "chat history"

#: backend/flow/consts.py:436
msgid "用户战绩数据"
msgstr "User record data"

#: backend/flow/consts.py:437
msgid "玩家按键快捷键信息"
msgstr "Player key shortcut key information"

#: backend/flow/consts.py:438
msgid "test"
msgstr "test"

#: backend/flow/consts.py:439
msgid "mixed"
msgstr "mixed"

#: backend/flow/consts.py:443
msgid "NOT_RUNNING"
msgstr "NOT_RUNNING"

#: backend/flow/consts.py:444 backend/flow/consts.py:502
msgid "RUNNING"
msgstr "RUNNING"

#: backend/flow/consts.py:445 backend/flow/consts.py:503
msgid "SUCCESS"
msgstr "SUCCESS"

#: backend/flow/consts.py:446 backend/flow/consts.py:504
msgid "FAILED"
msgstr "FAILED"

#: backend/flow/consts.py:447
msgid "SKIPPED"
msgstr "SKIPPED"

#: backend/flow/consts.py:448
msgid "IGNORED"
msgstr "IGNORED"

#: backend/flow/consts.py:449
msgid "WAITING"
msgstr "WAITING"

#: backend/flow/consts.py:450
msgid "NORMAL"
msgstr "NORMAL"

#: backend/flow/consts.py:452
msgid "步骤强制终止中"
msgstr "The step is forcibly terminated"

#: backend/flow/consts.py:453
msgid "步骤强制终止成功"
msgstr "Step force terminated successfully"

#: backend/flow/consts.py:457
msgid "准备中"
msgstr "preparing"

#: backend/flow/consts.py:458
msgid "运行中"
msgstr "running"

#: backend/flow/consts.py:459
msgid "完成"
msgstr "Finish"

#: backend/flow/consts.py:460
#: backend/flow/plugins/components/collections/mysql/authorize_rules.py:94
#: backend/ticket/constants.py:66 backend/ticket/constants.py:76
msgid "失败"
msgstr "fail"

#: backend/flow/consts.py:465
msgid "available"
msgstr "available"

#: backend/flow/consts.py:467
msgid "locked"
msgstr "locked"

#: backend/flow/consts.py:471
msgid "cluster no"
msgstr "cluster no"

#: backend/flow/consts.py:472
msgid "cluster yes"
msgstr "cluster yes"

#: backend/flow/consts.py:476 backend/flow/consts.py:484
msgid "create"
msgstr "create"

#: backend/flow/consts.py:477
msgid "cluster_delete"
msgstr "cluster_delete"

#: backend/flow/consts.py:478
msgid "recycle_record"
msgstr "recycle_record"

#: backend/flow/consts.py:479 backend/flow/consts.py:485
msgid "update"
msgstr "update"

#: backend/flow/consts.py:480
msgid "select"
msgstr "select"

#: backend/flow/consts.py:486
msgid "delete"
msgstr "delete"

#: backend/flow/consts.py:490
msgid "kibana"
msgstr "kibana"

#: backend/flow/consts.py:491
msgid "kafka_manager"
msgstr "kafka_manager"

#: backend/flow/consts.py:492
msgid "pulsar_manager"
msgstr "pulsar_manager"

#: backend/flow/consts.py:493
msgid "ha_proxy"
msgstr "ha_proxy"

#: backend/flow/consts.py:497
msgid "KIBANA_PORT"
msgstr "KIBANA_PORT"

#: backend/flow/consts.py:498
msgid "KAFKA_MANAGER_PORT"
msgstr "KAFKA_MANAGER_PORT"

#: backend/flow/consts.py:508
msgid "proxy默认实例个数"
msgstr "The number of proxy default instances"

#: backend/flow/consts.py:509
msgid "redis角色数"
msgstr "Number of redis roles"

#: backend/flow/consts.py:513
msgid "DB安装目录"
msgstr "DB installation directory"

#: backend/flow/consts.py:517
msgid "gcs 安装路径"
msgstr "gcs installation path"

#: backend/flow/consts.py:518
msgid "key生命周期路径"
msgstr "key lifecycle path"

#: backend/flow/consts.py:522
msgid "truncate_table"
msgstr "truncate_table"

#: backend/flow/consts.py:523
msgid "drop_database"
msgstr "drop_database"

#: backend/flow/consts.py:524
msgid "drop_table"
msgstr "drop_table"

#: backend/flow/consts.py:547
msgid "TendataModuleDefault"
msgstr "TendataModuleDefault"

#: backend/flow/consts.py:551 backend/ticket/builders/common/constants.py:38
msgid "hot"
msgstr "hot"

#: backend/flow/consts.py:552 backend/ticket/builders/common/constants.py:39
msgid "cold"
msgstr "cold"

#: backend/flow/consts.py:553 backend/ticket/builders/common/constants.py:40
msgid "client"
msgstr "client"

#: backend/flow/consts.py:558
msgid "redis key删除正则方式"
msgstr "Redis key deletion regular method"

#: backend/flow/consts.py:559
msgid "redis key删除文件方式"
msgstr "Redis key delete file method"

#: backend/flow/consts.py:563
msgid "get"
msgstr "get"

#: backend/flow/consts.py:564
msgid "release"
msgstr "release"

#: backend/flow/consts.py:568
msgid "覆盖写入上下文变量"
msgstr "overwriting context variables"

#: backend/flow/consts.py:569
msgid "追加写入上下文变量"
msgstr "append to context variable"

#: backend/flow/consts.py:573
msgid "install-supervisor"
msgstr "install-supervisor"

#: backend/flow/consts.py:574
msgid "render-config"
msgstr "render-config"

#: backend/flow/consts.py:577
msgid "install-zookeeper"
msgstr "install-zookeeper"

#: backend/flow/consts.py:578
msgid "install-journalnode"
msgstr "install-journalnode"

#: backend/flow/consts.py:579
msgid "install-nn1"
msgstr "install-nn1"

#: backend/flow/consts.py:580
msgid "install-nn2"
msgstr "install-nn2"

#: backend/flow/consts.py:581
msgid "install-dn"
msgstr "install-dn"

#: backend/flow/consts.py:582
msgid "install-zkfc"
msgstr "install-zkfc"

#: backend/flow/consts.py:583
msgid "install-telegraf"
msgstr "install-telegraf"

#: backend/flow/consts.py:584
msgid "install-haproxy"
msgstr "install-haproxy"

#: backend/flow/consts.py:585
msgid "update-hosts"
msgstr "update-hosts"

#: backend/flow/consts.py:586
msgid "stop-process"
msgstr "stop-process"

#: backend/flow/consts.py:587
msgid "start-component"
msgstr "start-component"

#: backend/flow/consts.py:588
msgid "clean-data"
msgstr "clean-data"

#: backend/flow/consts.py:589
msgid "dfs-host"
msgstr "dfs-host"

#: backend/flow/consts.py:600 backend/ticket/builders/common/constants.py:45
msgid "namenode"
msgstr "namenode"

#: backend/flow/consts.py:601 backend/ticket/builders/common/constants.py:44
msgid "datanode"
msgstr "datanode"

#: backend/flow/consts.py:602
msgid "journalnode"
msgstr "journalnode"

#: backend/flow/consts.py:604
msgid "zkfc"
msgstr "zkfc"

#: backend/flow/consts.py:608 backend/ticket/builders/common/constants.py:54
msgid "bookkeeper"
msgstr "bookkeeper"

#: backend/flow/consts.py:615
msgid "常规备份"
msgstr "regular backup"

#: backend/flow/consts.py:616
msgid "长期备份"
msgstr "long-term backup"

#: backend/flow/consts.py:620
msgid "KAFKA_REPLACE"
msgstr "KAFKA_REPLACE"

#: backend/flow/consts.py:621
msgid "KAFKA_SCALE_UP"
msgstr "KAFKA_SCALE_UP"

#: backend/flow/consts.py:625
msgid "INFLUXDB_REPLACE"
msgstr "INFLUXDB_REPLACE"

#: backend/flow/consts.py:629
msgid "逻辑备份"
msgstr "logical backup"

#: backend/flow/consts.py:630
msgid "物理备份"
msgstr "physical backup"

#: backend/flow/consts.py:634
msgid "全备-保留25天"
msgstr "Fully Prepared - Reserved for 25 days"

#: backend/flow/consts.py:635
msgid "长久存储-保留三年"
msgstr "Long-term storage - keep for three years"

#: backend/flow/consts.py:643
msgid "Mysql的进程名称"
msgstr "Mysql process name"

#: backend/flow/consts.py:644
msgid "Mysql-proxy进程名称"
msgstr "Mysql-proxy process name"

#: backend/flow/consts.py:645
msgid "ES的进程名称"
msgstr "ES process name"

#: backend/flow/consts.py:646
msgid "HDFS-NameNode的进程名称"
msgstr "HDFS-NameNode process name"

#: backend/flow/consts.py:647
msgid "HDFS-DataNode的进程名称"
msgstr "HDFS-DataNode process name"

#: backend/flow/consts.py:648
msgid "Pulsar的进程名称"
msgstr "Pulsar process name"

#: backend/flow/consts.py:656
msgid "远程备份+时间"
msgstr "remote backup + time"

#: backend/flow/consts.py:657
msgid "远程备份+备份ID"
msgstr "Remote Backup + Backup ID"

#: backend/flow/consts.py:658
msgid "本地备份+时间"
msgstr "local backup + time"

#: backend/flow/consts.py:659
msgid "本地备份+备份ID"
msgstr "Local backup + backup ID"

#: backend/flow/consts.py:667
msgid "手动单据发起"
msgstr "Manual ticket initiation"

#: backend/flow/consts.py:668
msgid "例行校验单据发起"
msgstr "Routine verification ticket initiation"

#: backend/flow/consts.py:674
msgid "ms"
msgstr "ms"

#: backend/flow/consts.py:684
msgid "redis slot分隔符"
msgstr "redis slot separator"

#: backend/flow/consts.py:685
msgid "redis slot导入分隔符"
msgstr "redis slot import delimiter"

#: backend/flow/consts.py:686
msgid "redis slot迁移分隔符"
msgstr "redis slot migration delimiter"

#: backend/flow/consts.py:694
msgid "redis min slot"
msgstr "redis min slot"

#: backend/flow/consts.py:695
msgid "redis max slot"
msgstr "redis max slot"

#: backend/flow/consts.py:696
msgid "redis total slot"
msgstr "redis total slot"

#: backend/flow/consts.py:704
msgid "redis PFAIL state"
msgstr "redis PFAIL state"

#: backend/flow/consts.py:705
msgid "redis fail state"
msgstr "redis fail state"

#: backend/flow/consts.py:706
msgid "redis handshake state"
msgstr "redis handshake state"

#: backend/flow/consts.py:707
msgid "redis noaddr state"
msgstr "redis noaddr state"

#: backend/flow/consts.py:708
msgid "redis noflags state"
msgstr "redis noflags state"

#: backend/flow/consts.py:716
msgid "redis master role"
msgstr "redis master role"

#: backend/flow/consts.py:717
msgid "redis slave role"
msgstr "redis slave role"

#: backend/flow/consts.py:718
msgid "redis unknown role"
msgstr "redis unknown role"

#: backend/flow/consts.py:726
msgid "redis master link status up"
msgstr "redis master link status up"

#: backend/flow/consts.py:727
msgid "redis master link status down"
msgstr "redis master link status down"

#: backend/flow/consts.py:728
msgid "redis ssd incrSync state"
msgstr "redis ssd incrSync state"

#: backend/flow/consts.py:729
msgid "redis ssd REPL_FOLLOW state"
msgstr "redis ssd REPL_FOLLOW state"

#: backend/flow/consts.py:730
msgid "redis connected status"
msgstr "redis connected status"

#: backend/flow/consts.py:731
msgid "redis disconnected status"
msgstr "redis disconnected status"

#: backend/flow/consts.py:739
msgid ""
"redis cluster state ok,all slots are covered. 通过 cluster info 命令获取"
msgstr ""
"redis cluster state ok, all slots are covered. Obtained by cluster info "
"command"

#: backend/flow/consts.py:740
msgid ""
"redis cluster state fail,not all slots are covered.通过 cluster info 命令获取"
msgstr ""
"redis cluster state fail, not all slots are covered. Obtained through the "
"cluster info command"

#: backend/flow/consts.py:749
msgid "tdbctl"
msgstr "tdbctl"

#: backend/flow/engine/bamboo/engine.py:245
msgid "获取流程失败"
msgstr "Get process failed"

#: backend/flow/engine/bamboo/engine.py:248
msgid "获取流程节点失败"
msgstr "Failed to get process node"

#: backend/flow/engine/bamboo/engine.py:251
msgid "获取节点运行版本失败"
msgstr "Failed to get node running version"

#: backend/flow/engine/bamboo/scene/cloud/base_service_flow.py:127
msgid "下发{}可执行文件包"
msgstr "Deliver {} executable file package"

#: backend/flow/engine/bamboo/scene/cloud/base_service_flow.py:136
msgid "部署{}服务进程"
msgstr "Deploy {} service process"

#: backend/flow/engine/bamboo/scene/cloud/base_service_flow.py:185
msgid "下发{}配置文件"
msgstr "Send {} configuration file"

#: backend/flow/engine/bamboo/scene/cloud/base_service_flow.py:311
msgid "存量集群的权限更新"
msgstr "Permission update for existing clusters"

#: backend/flow/engine/bamboo/scene/cloud/base_service_flow.py:339
msgid "更新服务元信息"
msgstr "Update service meta information"

#: backend/flow/engine/bamboo/scene/cloud/base_service_flow.py:364
msgid "裁撤{}的服务"
msgstr "Cancel {} service"

#: backend/flow/engine/bamboo/scene/cloud/base_service_flow.py:387
msgid "重启nginx服务"
msgstr "Restart the nginx service"

#: backend/flow/engine/bamboo/scene/cloud/dbha_service_flow.py:40
msgid "主机{}部署gm服务"
msgstr "Host{} deploys gm service"

#: backend/flow/engine/bamboo/scene/cloud/dbha_service_flow.py:59
msgid "主机{}部署agent服务"
msgstr "Host {} deploys the agent service"

#: backend/flow/engine/bamboo/scene/cloud/dbha_service_flow.py:76
msgid "部署dbha-gm服务"
msgstr "Deploy dbha-gm service"

#: backend/flow/engine/bamboo/scene/cloud/dbha_service_flow.py:82
msgid "部署dbha-agent服务"
msgstr "Deploy dbha-agent service"

#: backend/flow/engine/bamboo/scene/cloud/dns_service_flow.py:46
#: backend/flow/engine/bamboo/scene/cloud/nginx_service_flow.py:75
msgid "主机{}部署dns服务"
msgstr "Host{} deploys dns service"

#: backend/flow/engine/bamboo/scene/cloud/dns_service_flow.py:50
msgid "部署dns服务"
msgstr "Deploy dns service"

#: backend/flow/engine/bamboo/scene/cloud/dns_service_flow.py:65
msgid "对存量机器的nameserver刷新"
msgstr "Refresh the nameserver of the stock machine"

#: backend/flow/engine/bamboo/scene/cloud/dns_service_flow.py:154
msgid "部署新dns服务流程"
msgstr "Deploy new dns service process"

#: backend/flow/engine/bamboo/scene/cloud/dns_service_flow.py:173
msgid "裁撤旧dns服务流程"
msgstr "Abolish the old dns service process"

#: backend/flow/engine/bamboo/scene/cloud/drs_service_flow.py:34
msgid "部署"
msgstr "deploy"

#: backend/flow/engine/bamboo/scene/cloud/drs_service_flow.py:43
msgid "主机{}部署drs服务"
msgstr "host{} deploy drs service"

#: backend/flow/engine/bamboo/scene/cloud/drs_service_flow.py:47
msgid "{}drs服务"
msgstr "{}drs service"

#: backend/flow/engine/bamboo/scene/cloud/drs_service_flow.py:75
msgid "重装"
msgstr "reinstall"

#: backend/flow/engine/bamboo/scene/cloud/drs_service_flow.py:83
msgid "安装"
msgstr "Install"

#: backend/flow/engine/bamboo/scene/cloud/drs_service_flow.py:153
msgid "部署新drs服务"
msgstr "Deploy new drs service"

#: backend/flow/engine/bamboo/scene/cloud/drs_service_flow.py:187
msgid "裁撤旧drs服务"
msgstr "Abolition of the old drs service"

#: backend/flow/engine/bamboo/scene/cloud/nginx_service_flow.py:84
msgid "串行化部署DNS服务"
msgstr "Serialized deployment of DNS services"

#: backend/flow/engine/bamboo/scene/cloud/nginx_service_flow.py:85
msgid "部署DBHA服务"
msgstr "Deploy DBHA service"

#: backend/flow/engine/bamboo/scene/common/builder.py:118
msgid "传入的acts_list参数不合法，请检测"
msgstr "The passed acts_list parameter is illegal, please check"

#: backend/flow/engine/bamboo/scene/common/builder.py:185
msgid "部署bamboo流程任务创建失败，任务结束"
msgstr "Deploying bamboo process task creation failed, the task ended"

#: backend/flow/engine/bamboo/scene/common/machine_os_init.py:44
msgid "执行sa空闲检查"
msgstr "Perform sa idle check"

#: backend/flow/engine/bamboo/scene/common/machine_os_init.py:57
msgid "执行sa初始化"
msgstr "Execute sa initialization"

#: backend/flow/engine/bamboo/scene/common/machine_os_init.py:64
#: backend/ticket/constants.py:240
msgid "资源池导入"
msgstr "Resource pool import"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:81
#: backend/flow/engine/bamboo/scene/es/es_destroy_flow.py:59
#: backend/flow/engine/bamboo/scene/es/es_disable_flow.py:55
#: backend/flow/engine/bamboo/scene/es/es_enable_flow.py:55
#: backend/flow/engine/bamboo/scene/es/es_reboot_flow.py:66
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:65
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:71
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:72
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_destroy_flow.py:69
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_disable_flow.py:65
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:67
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_reboot_flow.py:60
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:111
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:204
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:69
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_shrink_flow.py:72
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:86
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_destroy_flow.py:71
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_disable_flow.py:61
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_enable_flow.py:61
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_reboot_flow.py:60
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:72
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_scale_up_flow.py:63
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_shrink_flow.py:55
msgid "获取集群部署配置"
msgstr "Get cluster deployment configuration"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:86
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:98
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:70
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:77
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:74
#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:102
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:190
#: backend/flow/engine/bamboo/scene/kafka/kafka_scale_up_flow.py:106
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:90
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:76
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_scale_up_flow.py:68
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_shrink_flow.py:59
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:79
msgid "获取机器信息"
msgstr "Get machine information"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:91
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:103
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:202
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:75
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:83
msgid "下发ES介质"
msgstr "Issue ES media"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:104
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:116
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:88
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:167
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:214
msgid "节点初始化-{}"
msgstr "node init - {}"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:113
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:125
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:97
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:173
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:220
msgid "解压缩介质包-{}"
msgstr "unzip media package - {}"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:122
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:134
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:106
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:180
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:227
msgid "安装supervisor-{}"
msgstr "install supervisor-{}"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:133
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:145
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:117
msgid "安装ES {}-{}节点"
msgstr "install ES {}-{} node"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:138
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:150
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:122
msgid "安装ES {}-{}子流程"
msgstr "install ES {}-{} subprocess"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:146
msgid "初始化鉴权插件"
msgstr "Initialize the authentication plugin"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:154
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:239
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:120
msgid "安装kibana"
msgstr "install kibana"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:166
msgid "插入kibana实例信息"
msgstr "Insert kibana instance information"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:173
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:214
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:127
msgid "回写集群配置信息"
msgstr "Write back cluster configuration information"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:184
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:187
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_enable_flow.py:77
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:152
msgid "添加域名"
msgstr "add domain name"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:191
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:156
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:128
msgid "添加到DBMeta"
msgstr "Add to DBMeta"

#: backend/flow/engine/bamboo/scene/es/es_destroy_flow.py:65
#: backend/flow/engine/bamboo/scene/es/es_disable_flow.py:61
#: backend/flow/engine/bamboo/scene/es/es_enable_flow.py:61
#: backend/flow/engine/bamboo/scene/es/es_reboot_flow.py:71
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_reboot_flow.py:58
#: backend/flow/engine/bamboo/scene/kafka/kafka_reboot_flow.py:61
msgid "下发actuator"
msgstr "Issue the actuator"

#: backend/flow/engine/bamboo/scene/es/es_destroy_flow.py:74
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:295
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:177
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_destroy_flow.py:64
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:187
#: backend/flow/engine/bamboo/scene/kafka/kafka_destroy_flow.py:74
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:293
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:410
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:170
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:115
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:222
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_shrink_flow.py:99
msgid "节点清理-{}"
msgstr "node cleanup -{}"

#: backend/flow/engine/bamboo/scene/es/es_destroy_flow.py:89
msgid "删除kibana实例信息"
msgstr "Delete kibana instance information"

#: backend/flow/engine/bamboo/scene/es/es_destroy_flow.py:97
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_destroy_flow.py:107
#: backend/flow/engine/bamboo/scene/kafka/kafka_destroy_flow.py:96
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_destroy_flow.py:97
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_shutdown.py:157
msgid "删除域名"
msgstr "delete domain name"

#: backend/flow/engine/bamboo/scene/es/es_destroy_flow.py:103
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_destroy_flow.py:74
#: backend/flow/engine/bamboo/scene/kafka/kafka_destroy_flow.py:103
msgid "清理Meta"
msgstr "Clean up Meta"

#: backend/flow/engine/bamboo/scene/es/es_disable_flow.py:70
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_disable_flow.py:64
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:178
#: backend/flow/engine/bamboo/scene/kafka/kafka_disable_flow.py:68
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:285
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:402
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:153
msgid "停止进程-{}"
msgstr "stop process - {}"

#: backend/flow/engine/bamboo/scene/es/es_disable_flow.py:79
#: backend/flow/engine/bamboo/scene/es/es_enable_flow.py:79
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_destroy_flow.py:114
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_disable_flow.py:90
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:144
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_disable_flow.py:74
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_enable_flow.py:74
#: backend/flow/engine/bamboo/scene/kafka/kafka_disable_flow.py:78
#: backend/flow/engine/bamboo/scene/kafka/kafka_enable_flow.py:78
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_destroy_flow.py:127
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_disable_flow.py:89
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_enable_flow.py:87
msgid "修改Meta"
msgstr "Modify Meta"

#: backend/flow/engine/bamboo/scene/es/es_enable_flow.py:70
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_enable_flow.py:64
#: backend/flow/engine/bamboo/scene/kafka/kafka_enable_flow.py:68
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_enable_flow.py:77
msgid "启动进程-{}"
msgstr "start process - {}"

#: backend/flow/engine/bamboo/scene/es/es_reboot_flow.py:81
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_reboot_flow.py:69
#: backend/flow/engine/bamboo/scene/kafka/kafka_reboot_flow.py:72
msgid "重启实例-{}"
msgstr "restart instance - {}"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:91
msgid "获取扩容流程集群部署配置"
msgstr "Obtain the cluster deployment configuration of the expansion process"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:167
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:221
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:139
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:102
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:208
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_shrink_flow.py:85
msgid "更新域名映射"
msgstr "update domain mapping"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:176
msgid "校验扩容结果"
msgstr "Verify expansion results"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:181
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:183
msgid "扩容子流程"
msgstr "Expansion sub-process"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:191
msgid "获取缩容流程集群部署配置"
msgstr "Obtain the cluster deployment configuration of the shrinking process"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:208
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:89
msgid "排斥缩容节点"
msgstr "Repulsion and shrinkage nodes"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:253
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:134
msgid "更新kibana实例信息"
msgstr "Update kibana instance information"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:261
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:142
msgid "校验搬迁状态"
msgstr "Check relocation status"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:272
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:153
msgid "校验连接状态"
msgstr "Check connection status"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:281
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:162
msgid "停止节点-{}"
msgstr "stop-node-{}"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:286
msgid "停止ES子流程"
msgstr "Stop the ES subprocess"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:305
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:185
msgid "清理DBMeta"
msgstr "Clean up DBMeta"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:320
msgid "{}-替换master ip"
msgstr "{} - replace master ip"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:327
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:235
msgid "缩容子流程"
msgstr "Shrink subprocess"

#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:166
msgid "停止ES-{}子流程"
msgstr "stop ES-{} subprocess"

#: backend/flow/engine/bamboo/scene/hdfs/exceptions.py:18
msgid "Flow模块HDFS异常"
msgstr "Flow module HDFS exception"

#: backend/flow/engine/bamboo/scene/hdfs/exceptions.py:29
msgid "手动部署选择机器数量异常"
msgstr "The number of machines selected for manual deployment is abnormal"

#: backend/flow/engine/bamboo/scene/hdfs/exceptions.py:30
#, python-brace-format
msgid "HDFS集群角色{hdfs_role}数量不能为{machine_count}"
msgstr "The number of HDFS cluster roles {hdfs_role} cannot be {machine_count}"

#: backend/flow/engine/bamboo/scene/hdfs/exceptions.py:35
msgid "替换旧机器不能为空"
msgstr "replace old machine cannot be empty"

#: backend/flow/engine/bamboo/scene/hdfs/exceptions.py:36
msgid "HDFS集群替换旧机器不能为空"
msgstr "HDFS cluster to replace the old machine cannot be empty"

#: backend/flow/engine/bamboo/scene/hdfs/exceptions.py:41
msgid "HDFS替换新旧机器数量不一致"
msgstr "The number of new and old machines replaced by HDFS is inconsistent"

#: backend/flow/engine/bamboo/scene/hdfs/exceptions.py:42
#, python-brace-format
msgid "HDFS集群替换角色{hdfs_role}数量不一致"
msgstr ""
"The number of HDFS cluster replacement roles {hdfs_role} is inconsistent"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:83
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:119
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:82
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_shrink_flow.py:76
msgid "下发hdfs介质包"
msgstr "Deliver hdfs media package"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:87
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:123
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:88
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:159
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:139
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:145
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:343
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_apply_flow.py:120
#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:140
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:89
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:227
#: backend/flow/engine/bamboo/scene/spider/spider_add_tmp_node.py:99
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:223
msgid "初始化机器"
msgstr "Initialize the machine"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:92
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:127
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:93
msgid "解压缩文件"
msgstr "unzip the file"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:97
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:131
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:98
msgid "渲染集群配置"
msgstr "Rendering cluster configuration"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:102
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:135
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:103
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_apply_flow.py:98
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:113
#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:130
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:218
#: backend/flow/engine/bamboo/scene/kafka/kafka_scale_up_flow.py:135
msgid "安装supervisor"
msgstr "install supervisor"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:112
#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:147
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:238
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:138
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:128
msgid "安装zookeeper-{}"
msgstr "install zookeeper-{}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:122
msgid "安装JournalNode"
msgstr "Install JournalNodes"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:130
msgid "安装NN1"
msgstr "Install NN1"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:136
msgid "安装NN2"
msgstr "Install NN2"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:142
msgid "安装ZKFC"
msgstr "Install ZKFC"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:150
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:168
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:138
msgid "安装DataNode-{}"
msgstr "Install DataNodes - {}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:160
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:178
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:148
msgid "安装HAProxy"
msgstr "Install HAProxy"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:174
msgid "插入haproxy实例信息"
msgstr "Insert haproxy instance information"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:194
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:195
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:210
msgid "添加元数据到DBMeta"
msgstr "Add metadata to DBMeta"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:199
msgid "回写集群部署配置"
msgstr "Write back cluster deployment configuration"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:210
msgid "NameNode主机数不为2"
msgstr "The number of NameNode hosts is not 2"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:214
msgid "ZooKeeper主机数不为3"
msgstr "The number of ZooKeeper hosts is not 3"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:218
msgid "DataNode主机数少于2"
msgstr "The number of DataNode hosts is less than 2"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:245
msgid "复用NN主机 {} 作为ZK"
msgstr "Reuse NN host{} as ZK"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_destroy_flow.py:65
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_disable_flow.py:61
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:63
msgid "检查集群状态"
msgstr "Check cluster status"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_destroy_flow.py:75
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_disable_flow.py:71
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:73
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_reboot_flow.py:65
msgid "下发hdfs actuator"
msgstr "Issue hdfs actuator"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_destroy_flow.py:84
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:261
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_shrink_flow.py:156
msgid "HDFS集群节点清理-{}"
msgstr "HDFS cluster node cleaning -{}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_destroy_flow.py:99
msgid "删除haproxy实例信息"
msgstr "Delete haproxy instance information"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_disable_flow.py:80
msgid "停止HDFS集群进程-{}"
msgstr "Stop HDFS cluster process -{}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:83
msgid "启动HDFS集群ZK-{}"
msgstr "Start HDFS cluster ZK-{}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:97
msgid "启动HDFS集群JN-{}"
msgstr "Start HDFS cluster JN-{}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:112
msgid "启动HDFS集群NN-{}"
msgstr "Start HDFS cluster NN-{}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:121
msgid "启动HDFS集群ZKFC-{}"
msgstr "Start HDFS cluster ZKFC-{}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:125
msgid "启动HDFS集群NN服务-{}子流程"
msgstr "Start HDFS cluster NN service-{} sub-process"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:135
msgid "启动HDFS集群DN-{}"
msgstr "Start HDFS cluster DN-{}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_reboot_flow.py:76
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_reboot_flow.py:76
msgid "重启实例-{}-{}"
msgstr "restart instance-{}-{}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:77
msgid "集群DN替换-扩容DN"
msgstr "Cluster DN replacement - expansion DN"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:80
msgid "集群DN替换-缩容DN"
msgstr "Cluster DN replacement - shrinking DN"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:99
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_shrink_flow.py:145
msgid "更新haproxy实例信息"
msgstr "Update haproxy instance information"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:115
msgid "添加DN获取机器信息"
msgstr "Add DN to get machine information"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:143
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:112
msgid "更新主机映射"
msgstr "Update host mapping"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:151
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:121
msgid "include增加数据节点"
msgstr "include to increase the data node"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:159
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:217
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:239
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:252
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:129
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_shrink_flow.py:90
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_shrink_flow.py:112
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_shrink_flow.py:125
msgid "刷新节点配置"
msgstr "Refresh node configuration"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:190
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:161
msgid "添加新DN到域名"
msgstr "Add new DN to domain name"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:209
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_shrink_flow.py:82
msgid "添加数据节点到exclude"
msgstr "Add data nodes to exclude"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:223
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_shrink_flow.py:96
msgid "检查节点退役信息"
msgstr "Check node decommissioning information"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:231
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_shrink_flow.py:104
msgid "include剔除数据节点"
msgstr "include removes data nodes"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:244
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_shrink_flow.py:117
msgid "exclude剔除数据节点"
msgstr "exclude removes data nodes"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:276
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_shrink_flow.py:172
#: backend/flow/engine/bamboo/scene/kafka/kafka_scale_up_flow.py:163
msgid "更新域名"
msgstr "update domain name"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:283
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_shrink_flow.py:179
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:231
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_shrink_flow.py:108
msgid "DBMeta删除下架IP"
msgstr "DBMeta deletes the off-the-shelf IP"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:349
msgid "没有需要替换的角色IP"
msgstr "There are no character IPs to replace"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:355
msgid "替换HDFS DataNode角色IP不一致"
msgstr "Inconsistent IP addresses for replacing HDFS DataNode roles"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:167
msgid "元数据DBMeta更新及转移主机"
msgstr "Metadata DBMeta update and transfer host"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_apply_flow.py:74
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:79
msgid "下发influxdb介质"
msgstr "Deliver influxdb media"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_apply_flow.py:80
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:87
#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:114
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:202
#: backend/flow/engine/bamboo/scene/kafka/kafka_scale_up_flow.py:119
msgid "初始化节点"
msgstr "initialize node"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_apply_flow.py:88
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:103
msgid "解压influxdb包"
msgstr "Unzip the influxdb package"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_apply_flow.py:113
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:130
msgid "安装influxdb-{}"
msgstr "install influxdb-{}"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_apply_flow.py:130
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:146
msgid "{}-初始化User"
msgstr "{} - Initialize User"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_apply_flow.py:146
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:162
msgid "安装telegraf-{}"
msgstr "install telegraf-{}"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_apply_flow.py:154
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:196
#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:223
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:418
#: backend/flow/engine/bamboo/scene/kafka/kafka_scale_up_flow.py:169
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:214
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:290
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:181
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_scale_up_flow.py:120
#: backend/flow/engine/bamboo/scene/spider/spider_add_nodes.py:125
#: backend/flow/engine/bamboo/scene/spider/spider_add_nodes.py:162
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:348
#: backend/flow/engine/bamboo/scene/spider/spider_slave_cluster_deploy.py:91
msgid "更新DBMeta元信息"
msgstr "Update DBMeta meta information"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_apply_flow.py:158
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:200
msgid "回写influxdb集群配置"
msgstr "Write back the influxdb cluster configuration"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_destroy_flow.py:68
msgid "清理Influxdb {}子流程"
msgstr "Clean up Influxdb{} subprocesses"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_disable_flow.py:68
msgid "禁用Influxdb {}子流程"
msgstr "disable influxdb{} subprocess"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_enable_flow.py:68
msgid "启用Influxdb {}子流程"
msgstr "enable influxdb{} subprocess"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:167
msgid "安装Influxdb {}子流程"
msgstr "install influxdb {} subprocess"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:191
msgid "下架Influxdb {}子流程"
msgstr "Delist Influxdb{} subprocess"

#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:108
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:196
#: backend/flow/engine/bamboo/scene/kafka/kafka_scale_up_flow.py:112
msgid "下发kafka介质"
msgstr "Send kafka media"

#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:122
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:210
#: backend/flow/engine/bamboo/scene/kafka/kafka_scale_up_flow.py:127
msgid "解压kafka包"
msgstr "Unzip the kafka package"

#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:158
msgid "初始化系统kafkaUser"
msgstr "Initialize the system kafkaUser"

#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:165
msgid "初始化kafkaUser"
msgstr "Initialize kafkaUser"

#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:179
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:315
#: backend/flow/engine/bamboo/scene/kafka/kafka_scale_up_flow.py:149
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:256
msgid "安装broker-{}"
msgstr "install broker-{}"

#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:192
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:338
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:194
msgid "安装kafka manager"
msgstr "install kafka-manager"

#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:205
msgid "插入manager实例信息"
msgstr "Insert manager instance information"

#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:217
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_apply_flow.py:145
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:176
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_scale_up_flow.py:114
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:164
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:332
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:335
msgid "添加集群域名"
msgstr "Add cluster domain name"

#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:227
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:301
msgid "回写kafka集群配置"
msgstr "Write back kafka cluster configuration"

#: backend/flow/engine/bamboo/scene/kafka/kafka_destroy_flow.py:78
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:174
msgid "清理Kafka {}子流程"
msgstr "Clean up Kafka{} subprocesses"

#: backend/flow/engine/bamboo/scene/kafka/kafka_destroy_flow.py:88
msgid "删除manager实例信息"
msgstr "Delete manager instance information"

#: backend/flow/engine/bamboo/scene/kafka/kafka_disable_flow.py:72
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:157
msgid "禁用Kafka {}子流程"
msgstr "Disable Kafka{} subprocess"

#: backend/flow/engine/bamboo/scene/kafka/kafka_enable_flow.py:72
msgid "启用Kafka {}子流程"
msgstr "Enable Kafka {} subprocess"

#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:249
msgid "增加zookeeper节点"
msgstr "Add zookeeper nodes"

#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:259
#, python-brace-format
msgid "滚动重启broker节点-{ip}"
msgstr "Rolling restart broker node -{ip}"

#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:270
msgid "移除zookeeper节点"
msgstr "Remove the zookeeper node"

#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:297
msgid "下架zookeeper-{}子流程"
msgstr "Remove zookeeper-{} sub-process"

#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:351
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:207
msgid "更新manager实例信息"
msgstr "Update manager instance information"

#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:364
msgid "更新集群域名"
msgstr "Update the cluster domain name"

#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:377
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:114
msgid "Kafka搬迁数据"
msgstr "Kafka migration data"

#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:387
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:124
msgid "Kafka检查搬迁进度"
msgstr "Kafka checks the progress of the relocation"

#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:414
msgid "下架broker-{}子流程"
msgstr "Remove broker-{} sub-process"

#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:104
msgid "下发dbacuator"
msgstr "Issue dbacuator"

#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:137
msgid "删除broker的域名记录"
msgstr "Delete the domain name record of the broker"

#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:144
msgid "停止进程"
msgstr "stop process"

#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:162
msgid "清理数据"
msgstr "clean data"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:61
msgid "执行ip信息为空"
msgstr "The execution ip information is empty"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:69
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:366
msgid "下发MySQL周边程序介质"
msgstr "Distribute MySQL peripheral program media"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:86
msgid "Master[{}]安装备份程序"
msgstr "Master[{}] install backup program"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:99
msgid "Master[{}]安装rotate_binlog程序"
msgstr "Master[{}] installs the rotate_binlog program"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:112
msgid "Master[{}]安装mysql-monitor"
msgstr "Master[{}] install mysql-monitor"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:131
msgid "Master[{}]安装校验程序"
msgstr "Master[{}] installs the verification program"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:148
msgid "Master[{}]安装DBATools工具箱"
msgstr "Master[{}] installs the DBATools toolbox"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:167
msgid "Slave[{}]安装备份程序"
msgstr "Slave[{}] install backup program"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:180
msgid "Slave[{}]安装rotate_binlog程序"
msgstr "Slave[{}] installs the rotate_binlog program"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:193
msgid "Slave[{}]安装mysql-monitor"
msgstr "Slave[{}] install mysql-monitor"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:212
msgid "Slave[{}]安装校验程序"
msgstr "Slave[{}] installation verification program"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:229
msgid "Slave[{}]安装DBATools工具箱"
msgstr "Slave[{}] installs the DBATools toolbox"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:247
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:260
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:291
msgid "Proxy安装mysql-monitor"
msgstr "Proxy install mysql-monitor"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:262
msgid "安装MySql周边程序"
msgstr "Install MySql peripheral program"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:297
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:219
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:450
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:400
msgid "新增repl帐户"
msgstr "Add repl account"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:312
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:228
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_apply_flow.py:149
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:465
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:415
msgid "建立主从关系"
msgstr "Establish a master-slave relationship"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:324
msgid "建立主从同步[{}]"
msgstr "Create master-slave synchronization[{}]"

#: backend/flow/engine/bamboo/scene/mysql/common/exceptions.py:17
msgid "Flow模块TenDB 异常"
msgstr "Flow module TenDB exception"

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:77
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_destroy_flow.py:110
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_disable_flow.py:97
#: backend/flow/engine/bamboo/scene/mysql/mysql_master_fail_over.py:73
#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:180
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:178
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:191
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:334
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_destroy_flow.py:96
#: backend/flow/engine/bamboo/scene/mysql/pt_table_sync.py:88
#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:79
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_destroy.py:117
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_disable_deploy.py:88
msgid "下发db-actuator介质"
msgstr "Deliver db-actuator media"

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:90
#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:92
msgid "下发SQL文件"
msgstr "Send the SQL file"

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:108
#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:110
msgid "执行SQL导入"
msgstr "Execute SQL import"

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:119
#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:121
msgid "[{}]执行SQL变更"
msgstr "[{}] Execute SQL Alteration"

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:143
#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:139
msgid "给模板集群下发db-actuator"
msgstr "Deliver db-actuator to the template cluster"

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:155
#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:151
msgid "备份测试库表结构"
msgstr "Backup test database table structure"

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:168
#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:164
msgid "对SQL文件进行语义测试"
msgstr "Semantic testing of SQL files"

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:186
#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:182
msgid "创建SQL执行单据"
msgstr "Create SQL execution tickets"

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:198
msgid "查询不到可执行的实例！！！"
msgstr "Executable instance could not be found! ! !"

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:251
msgid "获取字符集为空..."
msgstr "Get charset is empty..."

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:252
msgid "获取字符集为空"
msgstr "get character set is empty"

#: backend/flow/engine/bamboo/scene/mysql/mysql_authorize_rules.py:42
msgid "添加mysql规则授权"
msgstr "Add mysql rule authorization"

#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:119
msgid "检查元数据信息是否存在主备关系"
msgstr ""
"Check whether the metadata information has a master-backup relationship"

#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:124
#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:133
#: backend/flow/plugins/components/collections/common/sleep_timer_service.py:140
#: backend/ticket/constants.py:321
msgid "定时"
msgstr "timing"

#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:142
msgid "创建临时用户"
msgstr "create temporary user"

#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:149
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_db_table_backup.py:129
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_full_backup_flow.py:102
#: backend/flow/engine/bamboo/scene/mysql/mysql_partition.py:119
#: backend/flow/engine/bamboo/scene/mysql/mysql_rename_database_flow.py:173
#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:171
#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:139
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:172
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:262
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:317
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:155
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:226
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:273
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:258
#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:90
#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:270
msgid "下发actuator介质"
msgstr "Deliver the actuator medium"

#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:161
#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:174
msgid "actuator执行checksum"
msgstr "Actuator executes checksum"

#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:183
#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:196
msgid "删除临时用户"
msgstr "delete temporary user"

#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:202
#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:215
msgid "生成校验报告"
msgstr "Generate verification report"

#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:208
msgid "master[{}{}{}],slave[{}{}{}]的校验结果"
msgstr "Check result of master[{}{}{}],slave[{}{}{}]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:221
msgid "master[{}{}{}]的校验任务"
msgstr "Verification task of master[{}{}{}]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:227
#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:247
msgid "构建checksum流程成功"
msgstr "Build the checksum process successfully"

#: backend/flow/engine/bamboo/scene/mysql/mysql_clone_rules.py:42
msgid "添加mysql权限克隆"
msgstr "Add mysql permission to clone"

#: backend/flow/engine/bamboo/scene/mysql/mysql_edit_config_flow.py:58
msgid "下发db-actor到集群主从节点{}"
msgstr "Send db-actor to the master and slave nodes of the cluster {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_edit_config_flow.py:72
msgid "修改mysql实例配置{}"
msgstr "Modify the mysql instance configuration {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_edit_config_flow.py:87
msgid "开始修改mysql配置"
msgstr "Start to modify the mysql configuration"

#: backend/flow/engine/bamboo/scene/mysql/mysql_fake_sql_semantic_check.py:42
msgid "串行1"
msgstr "serial 1"

#: backend/flow/engine/bamboo/scene/mysql/mysql_fake_sql_semantic_check.py:43
msgid "串行2"
msgstr "serial 2"

#: backend/flow/engine/bamboo/scene/mysql/mysql_fake_sql_semantic_check.py:44
msgid "串行3"
msgstr "Serial 3"

#: backend/flow/engine/bamboo/scene/mysql/mysql_fake_sql_semantic_check.py:48
msgid "并行1"
msgstr "Parallel 1"

#: backend/flow/engine/bamboo/scene/mysql/mysql_fake_sql_semantic_check.py:53
msgid "并行2"
msgstr "Parallel 2"

#: backend/flow/engine/bamboo/scene/mysql/mysql_fake_sql_semantic_check.py:58
msgid "错误并行3"
msgstr "error parallel 3"

#: backend/flow/engine/bamboo/scene/mysql/mysql_fake_sql_semantic_check.py:65
msgid "串行结束"
msgstr "end of serial"

#: backend/flow/engine/bamboo/scene/mysql/mysql_flashback_flow.py:58
msgid "下发db-actor到集群主节点{}"
msgstr "Send db-actor to the cluster master node {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_flashback_flow.py:70
msgid "flashback启动恢复数据中{}"
msgstr "flashback starts restoring data {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_flashback_flow.py:81
msgid "flash开始恢复数据"
msgstr "flash starts to restore data"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:118
msgid "空闲检查"
msgstr "idle check"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:129
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:189
msgid "下发MySQL介质包"
msgstr "Deliver the MySQL media package"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:142
msgid "下发Proxy介质包"
msgstr "Deliver the proxy media package"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:170
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:141
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:145
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:152
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:597
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:350
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_apply_flow.py:127
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:98
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:236
#: backend/flow/engine/bamboo/scene/spider/spider_add_tmp_node.py:110
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:234
msgid "部署mysql-crond"
msgstr "Deploy mysql-crond"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:184
msgid "安装proxy实例"
msgstr "Install proxy instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:194
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:357
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_apply_flow.py:134
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:248
msgid "安装MySQL实例"
msgstr "Install MySQL instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:239
msgid "proxy配置后端实例"
msgstr "proxy configuration backend instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:249
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_enable_flow.py:98
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_enable_deploy.py:93
msgid "添加主集群域名"
msgstr "Add the main cluster domain name"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:261
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_enable_flow.py:117
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_enable_deploy.py:112
msgid "添加从集群域名"
msgstr "Add slave cluster domain name"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:276
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:383
msgid "{}集群部署"
msgstr "{} cluster deployment"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:315
msgid "部署MySQL高可用集群"
msgstr "Deploy MySQL HA Cluster"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_db_table_backup.py:97
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_full_backup_flow.py:83
msgid "{} standby slave 不存在"
msgstr "{} standby slave does not exist"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_db_table_backup.py:117
msgid "构造mydumper正则"
msgstr "Construct mydumper regular"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_db_table_backup.py:123
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:166
msgid "检查正则匹配"
msgstr "Check for regular matches"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_db_table_backup.py:141
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_full_backup_flow.py:114
msgid "执行库表备份"
msgstr "Execute database table backup"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_db_table_backup.py:155
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_full_backup_flow.py:128
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:124
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:123
msgid "关联备份id"
msgstr "Associated backup id"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_db_table_backup.py:160
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:130
msgid "{} 库表备份"
msgstr "{} database table backup"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_db_table_backup.py:163
msgid "构建库表备份流程成功"
msgstr "Build database table backup process successfully"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_destroy_flow.py:98
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_destroy_flow.py:85
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_destroy.py:105
msgid "删除注册CC系统的服务实例"
msgstr "Delete the service instance registered with the CC system"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_destroy_flow.py:142
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:356
msgid "卸载proxy实例"
msgstr "Uninstall proxy instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_destroy_flow.py:155
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_destroy_flow.py:122
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_destroy.py:164
msgid "卸载mysql实例"
msgstr "Uninstall mysql instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_destroy_flow.py:164
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_destroy_flow.py:136
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_destroy.py:173
msgid "清理db_meta元信息"
msgstr "Clean up db_meta meta information"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_destroy_flow.py:178
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_destroy.py:187
msgid "清理机器级别配置"
msgstr "Clean up machine-level configuration"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_destroy_flow.py:184
msgid "下架MySQL高可用集群[{}]"
msgstr "Remove MySQL HA Cluster[{}]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_disable_flow.py:85
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_disable_deploy.py:77
msgid "删除集群域名"
msgstr "Delete the cluster domain name"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_disable_flow.py:112
msgid "重启proxy实例"
msgstr "Restart the proxy instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_disable_flow.py:129
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_disable_flow.py:67
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_disable_deploy.py:119
msgid "集群变更OFFLINE状态"
msgstr "Cluster changes to OFFLINE state"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_disable_flow.py:140
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_disable_deploy.py:130
msgid "禁用MySQL高可用集群[{}]"
msgstr "Disable MySQL HA Cluster[{}]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_enable_flow.py:133
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_enable_flow.py:93
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_enable_deploy.py:127
msgid "集群变更ONLINE状态"
msgstr "Change the status of the cluster to ONLINE"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_enable_flow.py:144
msgid "启动MySQL高可用集群[{}]"
msgstr "Start MySQL high availability cluster[{}]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_full_backup_flow.py:133
msgid "{} 全库备份"
msgstr "{} full database backup"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_full_backup_flow.py:136
msgid "构建全库备份流程成功"
msgstr "The process of building a full database backup is successful"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_fail_over.py:119
msgid "执行集群主故障转移"
msgstr "Perform cluster master failover"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_fail_over.py:134
#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:274
msgid "salve节点同步新master数据"
msgstr "The salve node synchronizes the new master data"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_fail_over.py:153
msgid "{}集群执行主故障切换"
msgstr "{} cluster performs master failover"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_fail_over.py:160
#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:300
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:278
msgid "变更db_meta元信息"
msgstr "Change db_meta meta information"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_fail_over.py:183
msgid "主故障切换流程[整机切换]"
msgstr "Main failover process [whole machine switchover]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:87
msgid "the is_stand_by of new-master-instance [{}] is False "
msgstr "the is_stand_by of new-master-instance [{}] is False"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:129
msgid "回收新master的域名映射"
msgstr "Recycle the domain name mapping of the new master"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:144
msgid "对旧master添加域名映射"
msgstr "Add domain name mapping to the old master"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:224
msgid "旧master添加切换临时账号"
msgstr "Old master add switch temporary account"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:239
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:453
msgid "新master克隆旧master权限"
msgstr "The new master clones the old master permission"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:260
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:461
msgid "执行集群切换"
msgstr "Perform a cluster switchover"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:293
msgid "{}集群执行主从切换"
msgstr "{} Cluster performs master-slave switchover"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:323
msgid "主从切换流程[整机切换]"
msgstr "Master-slave switching process [whole machine switching]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:112
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:575
msgid "下发MySQL介质{}"
msgstr "Send MySQL media {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:129
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:590
msgid "初始化机器{}"
msgstr "init machine{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:155
msgid "安装MySQL实例:{}"
msgstr "Install the MySQL instance: {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:164
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:611
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:364
msgid "写入初始化实例的db_meta元信息"
msgstr "Write the db_meta meta information of the initialized instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:213
msgid "下发db-actor到新节点{}"
msgstr "Send db-actor to the new node {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:228
msgid "获取MASTER节点备份介质{}"
msgstr "Get the MASTER node backup media{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:237
msgid "获取SLAVE节点备份介质{}"
msgstr "Get SLAVE node backup media {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:245
msgid "判断备份文件来源,并传输备份文件新机器"
msgstr "Determine the source of the backup file, and transfer the backup file to a new machine"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:264
msgid "恢复新主节点数据{}:{}"
msgstr "Restore new primary node data{}:{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:275
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:189
msgid "恢复新从节点数据{}:{}"
msgstr "Restore new slave node data {}:{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:286
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:304
msgid "新增repl帐户{}"
msgstr "add repl account{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:295
msgid "建立主从关系{}"
msgstr "Create a master-slave relationship {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:313
msgid "建立主从关系 {}"
msgstr "Create a master-slave relationship {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:320
msgid "数据恢复完毕,写入新主节点和旧主节点的关系链元数据"
msgstr ""
"After the data is restored, write the metadata of the relationship chain "
"between the new master node and the old master node"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:330
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:205
msgid "恢复实例数据"
msgstr "restore instance data"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:341
msgid "写入切换集群 {} 的元信息"
msgstr "Write meta information for switch cluster {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:351
msgid "切换实例"
msgstr "switch instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:360
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:582
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:302
msgid "卸载实例"
msgstr "uninstall instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:364
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:378
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:164
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:261
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:305
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:318
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:306
#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:195
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:301
#: backend/ticket/builders/__init__.py:316
#: backend/ticket/builders/common/constants.py:80
#: backend/ticket/builders/mysql/mysql_checksum.py:168
msgid "人工确认"
msgstr "manual confirmation"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:380
msgid "成对迁移集群的主从节点"
msgstr "Migrating the master and slave nodes of the cluster in pairs"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:424
msgid "给master添加切换临时账号"
msgstr "Add and switch temporary account to master"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:432
msgid "给新slave添加切换临时账号"
msgstr "Add and switch temporary account to new slave"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:476
msgid "其余slave节点同步新master数据"
msgstr "The rest of the slave nodes synchronize the new master data"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:486
msgid "回收旧slave的域名映射"
msgstr "Recycle the domain name mapping of the old slave"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:501
msgid "对新slave添加域名映射"
msgstr "Add domain name mapping to new slave"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:516
msgid "{}集群执行成对切换"
msgstr "{} cluster performs pairwise switchover"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:528
msgid "清理实例周边配置"
msgstr "Clean up the configuration around the instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:546
msgid "卸载MySQL实例:{}:{}"
msgstr "Uninstall the MySQL instance: {}:{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:561
msgid "卸载主从实例完毕，修改元数据"
msgstr "After uninstalling the master-slave instance, modify the metadata"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:573
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:300
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_destroy_flow.py:147
msgid "清理机器配置"
msgstr "Clean up machine configuration"

#: backend/flow/engine/bamboo/scene/mysql/mysql_partition.py:93
msgid "上传sql文件"
msgstr "upload sql file"

#: backend/flow/engine/bamboo/scene/mysql/mysql_partition.py:104
#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:124
msgid "下发sql文件"
msgstr "Send sql file"

#: backend/flow/engine/bamboo/scene/mysql/mysql_partition.py:133
#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:145
msgid "actuator执行partition"
msgstr "Actuator executes partition"

#: backend/flow/engine/bamboo/scene/mysql/mysql_partition.py:146
#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:163
msgid "cluster[{}]的分区任务"
msgstr "Partition task of cluster[{}]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_partition.py:149
msgid "构建mysql partition流程成功"
msgstr "Build mysql partition process successfully"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:126
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:132
msgid "下发proxy安装介质"
msgstr "Deliver proxy installation media"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:152
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:159
msgid "部署proxy实例"
msgstr "Deploy proxy instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:192
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:205
msgid "新的proxy配置后端实例"
msgstr "New proxy configuration backend instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:200
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:215
msgid "克隆proxy用户白名单"
msgstr "Clone proxy user whitelist"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:213
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:228
msgid "集群对新的proxy添加权限"
msgstr "The cluster adds permissions to the new proxy"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:225
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:240
msgid "增加新proxy域名映射"
msgstr "Add new proxy domain name mapping"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:240
msgid "{}集群添加proxy实例"
msgstr "{}Cluster add proxy instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:247
msgid "添加db_meta元信息"
msgstr "Add db_meta meta information"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:265
msgid "添加proxy子流程"
msgstr "Add proxy subprocess"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:255
msgid "{}集群替换proxy实例"
msgstr "{} cluster replaces the proxy instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:305
msgid "替换proxy子流程"
msgstr "Replace proxy subprocess"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:349
msgid "清理proxy实例级别周边配置"
msgstr "Clean up proxy instance level peripheral configuration"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:362
msgid "回收对应proxy集群映射"
msgstr "Recycle the corresponding proxy cluster mapping"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:373
msgid "[{}:{}]下线"
msgstr "[{}:{}] offline"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rename_database_flow.py:133
#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:139
#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:240
msgid "准备重命名参数"
msgstr "Prepare to rename parameters"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rename_database_flow.py:139
#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:126
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:137
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:228
#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:145
#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:246
msgid "构造过滤正则"
msgstr "Construct filter regular"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rename_database_flow.py:145
#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:151
#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:252
msgid "获得源目标的库表"
msgstr "Get the db table of the source target"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rename_database_flow.py:155
msgid "检查源数据库是否在用"
msgstr "Check if the source database is in use"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rename_database_flow.py:161
#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:258
msgid "建立目标数据库"
msgstr "Build target database"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rename_database_flow.py:167
#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:264
msgid "表迁移"
msgstr "table migration"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rename_database_flow.py:185
#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:282
msgid "迁移源库中其他对象"
msgstr "Migrate other objects in the source instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rename_database_flow.py:198
#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:295
msgid "确认源数据库已空"
msgstr "Confirm the source database is empty"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rename_database_flow.py:203
#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:300
msgid "删除源数据库"
msgstr "delete source database"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rename_database_flow.py:210
msgid "{} {} 重命名数据库"
msgstr "{} {} rename database"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rename_database_flow.py:216
msgid "{} 重命名数据库"
msgstr "{} rename database"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rename_database_flow.py:220
msgid "构建重命名数据库流程成功"
msgstr "build rename database process succeeded"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:106
#, python-format
msgid "%s slave 节点不存在"
msgstr "%s slave node does not exist"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:128
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:373
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:477
msgid "下发db-actor到集群主从节点"
msgstr "Send db-actor to the master and slave nodes of the cluster"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:146
msgid "slave重建之新增repl帐户{}"
msgstr "New repl account {} for slave reconstruction"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:157
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:387
msgid "slave重建之获取MASTER节点备份介质{}"
msgstr "Slave reconstruction to obtain MASTER node backup media {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:166
msgid "slave重建之获取SLAVE节点备份介质{}"
msgstr "Obtain SLAVE node backup media {} for slave reconstruction"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:173
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:402
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:522
msgid "判断备份文件来源,并传输备份文件到新slave节点{}"
msgstr ""
"Determine the source of the backup file, and transfer the backup file to the "
"new slave node{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:195
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:544
msgid "slave恢复完毕，修改元数据"
msgstr "After the slave recovery is complete, modify the metadata"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:222
msgid "克隆主节点账号权限到新从节点"
msgstr "Clone the master node account permissions to the new slave node"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:228
msgid "先添加新从库域名{}"
msgstr "First add a new slave domain name {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:241
msgid "再删除旧从库域名{}"
msgstr "Then delete the old slave domain name {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:254
msgid "slave切换完毕，修改集群 {} 数据"
msgstr "After the slave switch is complete, modify the cluster {} data"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:264
msgid "实例切换"
msgstr "instance switching"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:278
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_destroy_flow.py:108
msgid "清理实例级别周边配置"
msgstr "Clean up instance-level perimeter configuration"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:286
msgid "卸载mysql实例{}:{}"
msgstr "Uninstall mysql instance {}:{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:292
msgid "old slave卸载完毕，修改元数据"
msgstr "After the old slave is uninstalled, modify the metadata"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:325
msgid "Restore Slave 重建从库"
msgstr "Restore Slave rebuilds the slave "

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:396
msgid "slave重建之清理从库{}"
msgstr "Slave reconstruction to clean up the slave {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:418
msgid "slave 原地恢复数据{}"
msgstr "slave restore data in place{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:423
msgid "Restore local Slave 本地重建"
msgstr "Restore local Slave local reconstruction"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:495
msgid "添加slave之新增repl帐户{}"
msgstr "Add a new repl account {} for slave"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:506
msgid "添加slave之获取MASTER节点备份介质{}"
msgstr "Add slave to obtain MASTER node backup media{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:515
msgid "添加slave之获取SLAVE节点备份介质{}"
msgstr "Add slave to obtain SLAVE node backup media{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:538
msgid "添加slave之恢复数据{}"
msgstr "Add recovery data of slave {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:555
msgid "添加Slave之恢复slave"
msgstr "Add Slave recovery slave"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:558
msgid "添加从库flow"
msgstr "Add slave flow"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:604
msgid "安装MySQL实例{}"
msgstr "install mysql instance{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:634
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:381
msgid "安装实例flow"
msgstr "Installation example flow"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:641
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:417
msgid "清理机器配置{}"
msgstr "clean up machine config{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:651
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:422
msgid "清理机器flow"
msgstr "Clean up machine flow"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:129
msgid "下发db_actuator介质"
msgstr "Deliver db_actuator media"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:143
msgid "定点恢复之获取MASTER节点备份介质{}"
msgstr "Obtain the MASTER node backup media {} for fixed-point recovery"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:152
msgid "定点恢复之获取SLAVE节点备份介质{}"
msgstr "Obtaining backup media of SLAVE nodes for fixed-point recovery {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:159
msgid "判断备份文件来源,并传输备份文件到新定点恢复节点{}"
msgstr ""
"Determine the source of the backup file, and transfer the backup file to the "
"new designated recovery node{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:178
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:233
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:299
msgid "定点恢复之恢复数据{}"
msgstr "Fixed-point recovery restore data{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:225
msgid "下载定点恢复的全库备份介质到{}"
msgstr "Download the full database backup media of fixed-point recovery to {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:282
msgid "传输文件{}"
msgstr "transfer file{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:310
msgid "定点恢复"
msgstr "fixed point recovery"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:328
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_apply_flow.py:105
msgid "下发MySQL介质"
msgstr "Deliver MySQL media"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:377
msgid "安装备份程序"
msgstr "Install a backup program"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:398
msgid "卸载rollback实例{}"
msgstr "unload rollback instance{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:404
msgid "卸载rollback实例完毕，修改元数据"
msgstr "After uninstalling the rollback instance, modify the metadata"

#: backend/flow/engine/bamboo/scene/mysql/mysql_single_apply_flow.py:162
msgid "录入db_meta元信息"
msgstr "Enter db_meta meta information"

#: backend/flow/engine/bamboo/scene/mysql/mysql_single_apply_flow.py:185
msgid "部署单节点集群"
msgstr "Deploy a single-node cluster"

#: backend/flow/engine/bamboo/scene/mysql/mysql_single_destroy_flow.py:160
msgid "下架MySQL单节点集群[{}]"
msgstr "Remove MySQL single-node cluster[{}]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_single_disable_flow.py:56
msgid "回收集群域名"
msgstr "Recycle the cluster domain name"

#: backend/flow/engine/bamboo/scene/mysql/mysql_single_disable_flow.py:77
msgid "禁用MySQL单节点集群[{}]"
msgstr "Disable MySQL single-node cluster[{}]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_single_enable_flow.py:104
msgid "启动MySQL单节点集群[{}]"
msgstr "Start MySQL single-node cluster[{}]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:132
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:142
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:234
msgid "获得清档目标"
msgstr "get clearance target"

#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:139
msgid "检查清档目标是否在用"
msgstr "Check if the cleanup target is in use"

#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:145
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:155
msgid "生成备份库名"
msgstr "Generate backup database name"

#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:151
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:159
#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:165
msgid "建立备份库"
msgstr "Create a backup database"

#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:157
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:252
msgid "备份清档表"
msgstr "backup cleanup table"

#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:164
msgid "重建空表"
msgstr "rebuild empty table"

#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:183
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:269
msgid "备份库中其他对象"
msgstr "Other objects in the backup db"

#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:198
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:303
msgid "删除备份库"
msgstr "delete backup repository"

#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:205
msgid "{} {} 清档"
msgstr "{} {} clear file"

#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:210
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:308
msgid "{} 清档"
msgstr "{} clear file"

#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:213
msgid "构建清档流程成功"
msgstr "Build clearance process succeeded"

#: backend/flow/engine/bamboo/scene/mysql/pt_table_sync.py:100
msgid "执行数据修复"
msgstr "perform data repair"

#: backend/flow/engine/bamboo/scene/mysql/pt_table_sync.py:113
msgid "{}:{}做数据修复"
msgstr "{}:{} do data repair"

#: backend/flow/engine/bamboo/scene/mysql/pt_table_sync.py:118
msgid "{}数据修复"
msgstr "{} data repair"

#: backend/flow/engine/bamboo/scene/name_service/name_service.py:50
msgid "创建clb"
msgstr "create clb"

#: backend/flow/engine/bamboo/scene/name_service/name_service.py:68
msgid "删除clb"
msgstr "delete clb"

#: backend/flow/engine/bamboo/scene/name_service/name_service.py:87
msgid "创建polaris"
msgstr "create polaris"

#: backend/flow/engine/bamboo/scene/name_service/name_service.py:107
msgid "删除polaris"
msgstr "remove polaris"

#: backend/flow/engine/bamboo/scene/pulsar/exceptions.py:18
msgid "Flow模块Pulsar集群异常"
msgstr "Flow module Pulsar cluster exception"

#: backend/flow/engine/bamboo/scene/pulsar/exceptions.py:29
msgid "Pulsar-Broker异常"
msgstr "Pulsar-Broker exception"

#: backend/flow/engine/bamboo/scene/pulsar/exceptions.py:30
msgid "Pulsar集群Broker数量不能为0"
msgstr "The number of Brokers in the Pulsar cluster cannot be 0"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:96
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:86
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:142
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_scale_up_flow.py:73
msgid "下发pulsar介质"
msgstr "Issue Pulsar media"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:112
msgid "添加ZK域名"
msgstr "Add ZK domain name"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:124
msgid "仅非DNS环境使用-添加broker hosts"
msgstr "Only used in non-DNS environments - add broker hosts"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:161
msgid "初始化集群配置-{}"
msgstr "Init cluster config-{}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:176
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:163
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_scale_up_flow.py:98
msgid "分发密钥及token"
msgstr "Distribute secretkey and token"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:192
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:286
msgid "安装pulsar manager"
msgstr "Install pulsar-manager"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:205
msgid "插入pulsar manager实例信息"
msgstr "Insert pulsar manager instance information"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:221
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:294
msgid "初始化pulsar manager"
msgstr "Initialize pulsar-manager"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:187
msgid "仅非DNS环境使用-添加zookeeper hosts"
msgstr "Only used in non-DNS environment - add zookeeper hosts"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:192
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:231
msgid "安装Pulsar-{}-common子流程"
msgstr "Install Pulsar-{}-common subprocess"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:241
msgid "安装bookkeeper-{}"
msgstr "Install bookkeeper-{}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:271
msgid "缩容Pulsar-Broker-{}"
msgstr "Shrink Pulsar-Broker-{}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:301
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:193
msgid "检查Broker配置-{}"
msgstr "Check Broker Configuration - {}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:312
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:205
msgid "检查NameSpace配置-{}"
msgstr "Check NameSpace Configuration - {}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:319
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:216
msgid "检查未复制ledger-{}"
msgstr "check not replicated ledger-{}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:326
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:274
msgid "停止BookKeeper服务-{}"
msgstr "Stop BookKeeper service - {}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:332
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:280
msgid "退役BookKeeper-{}"
msgstr "Decommissioned BookKeeper-{}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:337
msgid "缩容Pulsar-BookKeeper-{}-子流程"
msgstr "Shrinking Pulsar-BookKeeper-{}-subprocesses"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_destroy_flow.py:77
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_disable_flow.py:67
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_enable_flow.py:67
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_reboot_flow.py:65
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_shrink_flow.py:66
msgid "下发pulsar actuator"
msgstr "Issue the pulsar actuator"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_destroy_flow.py:86
msgid "Pulsar集群节点清理-{}"
msgstr "Pulsar cluster node cleanup -{}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_destroy_flow.py:110
msgid "删除ZK域名"
msgstr "Delete ZK domain name"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_destroy_flow.py:121
msgid "删除PULSAR_MANAGER实例信息"
msgstr "Delete PULSAR_MANAGER instance information"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_disable_flow.py:78
msgid "停止Pulsar集群进程-{}-{}"
msgstr "Stop Pulsar cluster process -{}-{}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:105
msgid "替换pulsar manager子流程"
msgstr "Replace pulsar manager subprocess"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:123
msgid "更新DBMeta"
msgstr "Update DBMeta"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:132
msgid "替换ZooKeeper子流程"
msgstr "Replace ZooKeeper subprocess"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:195
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_shrink_flow.py:73
msgid "缩容BookKeeper子流程"
msgstr "Shrink the BookKeeper sub-process"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:262
msgid "更新pulsar_manager实例信息"
msgstr "Update pulsar_manager instance information"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:275
msgid "仅非DNS环境使用-添加broker域名"
msgstr "Only used in non-DNS environment - add broker domain name"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:86
msgid "停止ZooKeeper服务-{}"
msgstr "stop ZooKeeper service - {}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:100
msgid "更新ZK域名"
msgstr "Update ZK domain name"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:117
msgid "仅非DNS环境使用-更新ZK映射"
msgstr "Only used in non-DNS environments - update ZK mapping"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:133
msgid "替换Pulsar-ZooKeeper-{}-子流程"
msgstr "Replace Pulsar-ZooKeeper-{}-subprocess"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:230
msgid "检查Ledger Metadata-{}"
msgstr "Check Ledger Metadata - {}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:243
msgid "修改Bookie参数为ReadOnly-{}"
msgstr "Modify the Bookie parameter to ReadOnly-{}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:257
msgid "滚动重启BookKeeper-{}"
msgstr "Rolling Restart BookKeeper -{}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:264
msgid "等待数据过期"
msgstr "wait for data to expire"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_install.py:68
msgid "Proxy-001-{}-下发介质包"
msgstr "Proxy-001-{}-deliver media package"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_install.py:75
msgid "Proxy-002-{}-初始化机器"
msgstr "Proxy-002-{}-initialize machine"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_install.py:100
msgid "Proxy-003-{}-安装实例"
msgstr "Proxy-003-{}-Installation example"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_install.py:109
msgid "Proxy-004-{}-写入元数据"
msgstr "Proxy-004-{}-write metadata"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_install.py:130
msgid "Proxy-005-{}-安装监控"
msgstr "Proxy-005-{}-installation monitoring"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_install.py:135
msgid "Proxy-{}-安装原子任务"
msgstr "Proxy-{}-install atomic tasks"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dbmon.py:57
msgid "Redis-201-{}-下发介质包"
msgstr "Redis-201-{}-deliver media package"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dbmon.py:77
msgid "Redis-202-{}-安装监控"
msgstr "Redis-202-{}-install monitoring"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dbmon.py:83
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_install.py:129
msgid "Redis-{}-安装原子任务"
msgstr "Redis-{}-install atomic tasks"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_install.py:63
msgid "Redis-001-{}-下发介质包"
msgstr "Redis-001-{}-deliver media package"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_install.py:71
msgid "Redis-002-{}-初始化机器"
msgstr "redis-002-{}-initialize-machine"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_install.py:90
msgid "Redis-003-{}-安装实例"
msgstr "Redis-003-{}-installation example"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_install.py:104
msgid "Redis-004-{}-写入元数据"
msgstr "Redis-004-{}-write metadata"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_install.py:124
msgid "Redis-005-{}-安装监控"
msgstr "Redis-005-{}-install monitoring"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_makesync.py:56
msgid "Redis-101-{}-下发介质包"
msgstr "Redis-101-{}-deliver media package"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_makesync.py:76
msgid "Redis-102-{}-卸载dbmon"
msgstr "Redis-102-{}-uninstall dbmon"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_makesync.py:112
msgid "Redis-{}-拉起dbmon"
msgstr "Redis-{}-pulls dbmon"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_makesync.py:117
msgid "Redis-{}-创建同步关系原子任务"
msgstr "Redis-{}-Create a synchronization relational atomic task"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_makesync.py:142
msgid "Redis-103-{}-建立主从关系"
msgstr "Redis-103-{}-establish master-slave relationship"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_makesync.py:162
msgid "Redis-104-{}-建立主从关系"
msgstr "Redis-104-{}-establish master-slave relationship"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_makesync.py:237
msgid "Redis-103-{}-发起备份"
msgstr "Redis-103-{}-initiate backup"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_repair.py:55
msgid "Redis-301-{}-下发介质包"
msgstr "Redis-301-{}-deliver media package"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_repair.py:70
msgid "Redis-302-{}-检查同步状态"
msgstr "Redis-302-{}-check sync status"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_shutdown.py:51
msgid "Redis-801-{}-下发介质包"
msgstr "Redis-801-{}-deliver media package"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_shutdown.py:66
msgid "Redis-802-{}-请求检查"
msgstr "redis-802-{}-request-check"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_shutdown.py:78
msgid "Redis-803-{}-干掉非活跃链接"
msgstr "Redis-803-{}-kill inactive links"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_shutdown.py:89
msgid "Redis-804-{}-下架实例"
msgstr "Redis-804-{}-delist instance"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_shutdown.py:104
msgid "Redis-805-{}-卸载监控"
msgstr "redis-805-{}-offload monitoring"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_shutdown.py:118
msgid "Redis-806-{}-清理元数据"
msgstr "redis-806 - {} - cleanup metadata"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_shutdown.py:123
msgid "Redis-{}-下架原子任务"
msgstr "Redis-{}-offset atomic task"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_switch.py:73
msgid "Redis-501-元数据加入集群"
msgstr "Redis-501-metadata join cluster"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_switch.py:77
msgid "Redis-502-人工确认"
msgstr "Redis-502-manual confirmation"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_switch.py:84
msgid "Redis-003-{}-下发介质包"
msgstr "Redis-003-{}-deliver media package"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_switch.py:114
msgid "Redis-504-{}-实例切换"
msgstr "Redis-504-{}-instance switching"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_switch.py:137
msgid "Redis-505-元数据切换"
msgstr "Redis-505 - Metadata toggle"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_switch.py:140
msgid "Redis-{}-实例切换"
msgstr "Redis-{}-instance switching"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_apply_flow.py:98
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_backup.py:98
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_dts.py:114
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_open_close.py:104
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_master.py:137
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_slave.py:135
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_shutdown.py:118
#: backend/flow/engine/bamboo/scene/redis/redis_dbmon.py:78
#: backend/flow/engine/bamboo/scene/redis/redis_flush_data.py:102
#: backend/flow/engine/bamboo/scene/redis/redis_keys_delete.py:100
#: backend/flow/engine/bamboo/scene/redis/redis_keys_extract.py:88
#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:128
#: backend/flow/engine/bamboo/scene/redis/tendis_plus_apply_flow.py:88
msgid "初始化配置"
msgstr "Initial configuration"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_apply_flow.py:160
#: backend/flow/engine/bamboo/scene/redis/tendis_plus_apply_flow.py:157
msgid "redis建立主从 元数据"
msgstr "Redis establishes master-slave metadata"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_apply_flow.py:186
#: backend/flow/engine/bamboo/scene/redis/tendis_plus_apply_flow.py:184
msgid "建立集群 元数据"
msgstr "Create cluster metadata"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_apply_flow.py:210
#: backend/flow/engine/bamboo/scene/redis/tendis_plus_apply_flow.py:197
msgid "回写集群配置[Redis]"
msgstr "Write back cluster configuration [Redis]"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_apply_flow.py:226
msgid "回写集群配置[Twemproxy]"
msgstr "Write back cluster configuration [Twemproxy]"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_apply_flow.py:241
#: backend/flow/engine/bamboo/scene/redis/tendis_plus_apply_flow.py:228
msgid "注册域名"
msgstr "Domain name registration"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_backup.py:103
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_dts.py:119
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_open_close.py:109
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_shutdown.py:123
#: backend/flow/engine/bamboo/scene/redis/redis_flush_data.py:107
#: backend/flow/engine/bamboo/scene/redis/redis_keys_delete.py:105
#: backend/flow/engine/bamboo/scene/redis/redis_keys_extract.py:94
#: backend/flow/engine/bamboo/scene/redis/singele_redis_shutdown.py:98
msgid "下发介质包"
msgstr "Deliver the media package"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_backup.py:112
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_shutdown.py:146
#: backend/flow/engine/bamboo/scene/redis/redis_flush_data.py:133
msgid "redis备份: {}"
msgstr "redis backup: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_backup.py:119
msgid "集群[{}]备份"
msgstr "cluster[{}] backup"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_dts.py:79
msgid "获取源集群、目的集群信息"
msgstr "Obtain information about the source and destination clusters"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_dts.py:95
#: backend/flow/engine/bamboo/scene/redis/redis_keys_delete.py:139
msgid "获取磁盘使用情况: {}"
msgstr "Get disk usage: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_dts.py:104
msgid "redis dts前置检查"
msgstr "redis dts pre-check"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_dts.py:109
msgid "redis dts发起任务并等待至增量同步阶段"
msgstr ""
"redis dts initiates a task and waits until the incremental synchronization "
"phase"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_dts.py:128
msgid "redis dts数据校验: {}"
msgstr "Redis dts data verification: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_dts.py:136
msgid "源集群:{} 数据迁移到 目的集群:{}"
msgstr "Source cluster: {} Data migration to destination cluster: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_open_close.py:118
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_shutdown.py:132
#: backend/flow/engine/bamboo/scene/redis/redis_flush_data.py:118
#: backend/flow/engine/bamboo/scene/redis/singele_redis_shutdown.py:111
msgid "redis请求检查: {}"
msgstr "redis request check: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_open_close.py:138
msgid "更新实例状态"
msgstr "update instance status"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_open_close.py:162
msgid "[{}]卸载bkdbmon"
msgstr "[{}] uninstall bkdbmon"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_open_close.py:164
msgid "[{}]安装bkdbmon"
msgstr "[{}] install bkdbmon"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_open_close.py:179
msgid "集群[{}]启停"
msgstr "Cluster[{}] starts and stops"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_open_close.py:188
msgid "更新集群状态"
msgstr "update cluster status"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_master.py:148
msgid "REDIS_MASTER-裁撤替换"
msgstr "REDIS_MASTER - undo replace"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_master.py:249
msgid "REDIS_MASTER-故障自愈"
msgstr "REDIS_MASTER - fault self-healing"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_slave.py:146
msgid "REDIS_SLAVE-裁撤替换"
msgstr "REDIS_SLAVE - undo replace"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_slave.py:204
msgid "Redis-新节点加入集群"
msgstr "Redis-new node joins the cluster"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_slave.py:224
msgid "REDIS_SLAVE-故障自愈"
msgstr "REDIS_SLAVE - failure self-healing"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_shutdown.py:169
#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:234
msgid "{}下架proxy实例"
msgstr "{}Remove the proxy instance"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_shutdown.py:180
#: backend/flow/engine/bamboo/scene/redis/singele_redis_shutdown.py:125
msgid "{}下架redis实例"
msgstr "{}Remove the redis instance"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_shutdown.py:205
msgid "[redis]卸载bkdbmon"
msgstr "[redis] uninstall bkdbmon"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_shutdown.py:225
msgid "清理Redis配置"
msgstr "Clean up Redis configuration"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_shutdown.py:242
msgid "清理Proxy配置"
msgstr "Clean up the Proxy configuration"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_shutdown.py:255
msgid "删除集群元数据"
msgstr "delete cluster metadata"

#: backend/flow/engine/bamboo/scene/redis/redis_dbmon.py:89
msgid "REDIS-重装DBMON"
msgstr "REDIS-Reinstall DBMON"

#: backend/flow/engine/bamboo/scene/redis/redis_flush_data.py:146
msgid "redis清档: {}"
msgstr "redis file clear: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_flush_data.py:154
msgid "集群[{}]清档"
msgstr "Cluster[{}] clear file"

#: backend/flow/engine/bamboo/scene/redis/redis_keys_delete.py:115
msgid "按正则删除key: {}"
msgstr "Delete key according to regex: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_keys_delete.py:123
msgid "集群[{}]按正则删除keys"
msgstr "Cluster[{}] deletes keys according to the rules"

#: backend/flow/engine/bamboo/scene/redis/redis_keys_delete.py:148
msgid "获取磁盘空闲最大机器"
msgstr "Get disk free max machine"

#: backend/flow/engine/bamboo/scene/redis/redis_keys_delete.py:158
msgid "按文件删除key"
msgstr "Delete key by file"

#: backend/flow/engine/bamboo/scene/redis/redis_keys_delete.py:163
msgid "集群[{}]按文件删除keys"
msgstr "cluster[{}] delete keys by file"

#: backend/flow/engine/bamboo/scene/redis/redis_keys_extract.py:103
msgid "提取key: {}"
msgstr "Extract key: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_keys_extract.py:110
msgid "集群[{}提取keys"
msgstr "cluster[{} extract keys"

#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:136
#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:211
msgid "proxy下发介质包"
msgstr "The proxy delivers the media package"

#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:151
msgid "{}安装proxy实例"
msgstr "{} install proxy instance"

#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:158
msgid "{}部署bkdbmon"
msgstr "{} deploy bkdbmon"

#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:171
msgid "{}proxy扩容 元数据"
msgstr "{} proxy expansion metadata"

#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:184
msgid "{}添加域名"
msgstr "{} add domain name"

#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:200
msgid "主机转移"
msgstr "host transfer"

#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:203
msgid "新增proxy实例"
msgstr "Add proxy instance"

#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:226
msgid "{}删除域名"
msgstr "{} delete domain name"

#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:244
#: backend/flow/engine/bamboo/scene/redis/singele_redis_shutdown.py:136
msgid "主机转移到空闲机"
msgstr "Host transfer to idle machine"

#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:249
msgid "下架proxy实例"
msgstr "Remove the proxy instance"

#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:259
msgid "proxy下架元数据"
msgstr "Proxy removal metadata"

#: backend/flow/engine/bamboo/scene/redis/tendis_plus_apply_flow.py:140
msgid "建立集群meet关系"
msgstr "Establish a cluster meet relationship"

#: backend/flow/engine/bamboo/scene/redis/tendis_plus_apply_flow.py:213
msgid "回写集群配置[predixy]"
msgstr "Write back cluster configuration [predixy]"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:82
msgid "下发actuator以及riak介质"
msgstr "Deliver actuator and riak media"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:93
msgid "actuator_riak系统配置初始化"
msgstr "actuator_riak system configuration initialization"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:107
msgid "actuator_riak部署节点"
msgstr "actuator_riak deployment node"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:121
msgid "actuator_riak节点加入集群"
msgstr "The actuator_riak node joins the cluster"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:135
msgid "actuator_集群变更生效"
msgstr "actuator_cluster changes take effect"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:149
msgid "actuator_初始化bucket_type"
msgstr "actuator_init bucket_type"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:162
msgid "riak修改元数据"
msgstr "riak modify metadata"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:172
msgid "部署Riak集群"
msgstr "Deploy the Riak cluster"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:72
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:210
msgid "下发spider安装介质"
msgstr "Deliver the spider installation media"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:114
msgid "安装Spider_slave实例"
msgstr "Install the spider_slave instance"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:130
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:284
msgid "克隆权限到spider节点[{}]"
msgstr "Clone permissions to the spider node [{}]"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:149
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:307
msgid "添加对应路由关系"
msgstr "Add corresponding routing relationship"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:176
msgid "集群[{}]添加spider slave节点"
msgstr "Cluster [{}] add spider slave node"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:252
#: backend/flow/engine/bamboo/scene/spider/spider_add_tmp_node.py:129
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:268
msgid "安装Spider实例"
msgstr "Install the Spider instance"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:267
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:284
msgid "安装Spider集群中控实例"
msgstr "Install the control instance of the Spider cluster"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:344
msgid "集群[{}]添加spider master节点"
msgstr "Cluster [{}] add spider master node"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:382
msgid "spider[{}]安装DBATools工具箱"
msgstr "spider[{}] installs the DBATools toolbox"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:398
msgid "spider[{}]安装mysql-monitor"
msgstr "spider[{}] install mysql-monitor"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:415
msgid "spider[{}]安装备份程序"
msgstr "spider[{}] install backup program"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:429
msgid "安装Spider周边程序"
msgstr "Install the Spider peripheral program"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:479
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:429
msgid "部署spider-ctl集群"
msgstr "Deploy the spider-ctl cluster"

#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:17
msgid "Flow模块TenDB Cluster异常"
msgstr "Flow Module TenDB Cluster Abnormal"

#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:28
msgid "添加spider-master节点是分配incr初始值失败"
msgstr "Adding a spider-master node fails to assign the initial value of incr"

#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:34
msgid "添加spider节点路由失败"
msgstr "Failed to add spider node route"

#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:209
msgid "查询remotedb version 失败"
msgstr "Query remotedb version failed"

#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:215
#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:231
#, python-brace-format
msgid "存在多个版本{version}"
msgstr "Multiple versions {version} exist"

#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:225
msgid "查询spider version 失败"
msgstr "Query spider version failed"

#: backend/flow/engine/bamboo/scene/spider/spider_add_nodes.py:87
msgid "[{}]The cluster has not added a slave cluster, skip"
msgstr "[{}]The cluster has not added a slave cluster, skip"

#: backend/flow/engine/bamboo/scene/spider/spider_add_nodes.py:96
msgid "[{}]This type of role addition is not supported"
msgstr "[{}]This type of role addition is not supported"

#: backend/flow/engine/bamboo/scene/spider/spider_add_nodes.py:140
msgid "[{}]添加spider-master节点流程"
msgstr "[{}] Add spider-master node process"

#: backend/flow/engine/bamboo/scene/spider/spider_add_nodes.py:177
msgid "[{}]添加spider-slave节点流程"
msgstr "[{}] Add spider-slave node process"

#: backend/flow/engine/bamboo/scene/spider/spider_add_tmp_node.py:79
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:202
msgid "下发Spider/tdbCtl介质包"
msgstr "Deliver the Spider/tdbCtl media package"

#: backend/flow/engine/bamboo/scene/spider/spider_add_tmp_node.py:140
msgid "spider上对中控主节点进行授权"
msgstr "Authorize the central control master node on the spider"

#: backend/flow/engine/bamboo/scene/spider/spider_add_tmp_node.py:150
msgid "中控主节点注册临时spider节点路由信息"
msgstr ""
"The central control master node registers the routing information of the "
"temporary spider node"

#: backend/flow/engine/bamboo/scene/spider/spider_add_tmp_node.py:155
msgid "{}添加临时spider节点"
msgstr "{}Add a temporary spider node"

#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:167
msgid "分片{}:创建临时用户"
msgstr "Shard{}: create temporary user"

#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:221
msgid "分片{}:master[{}{}{}],slave[{}{}{}]的校验结果"
msgstr "Verification results of fragment {}:master[{}{}{}],slave[{}{}{}]"

#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:236
msgid "分片{}:master[{}{}{}]的校验任务"
msgstr "Fragment {}:master[{}{}{}] verification task"

#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:244
msgid "集群[{}]的校验任务"
msgstr "Validation task for cluster [{}]"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:121
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:120
msgid "不支持的备份位置 {}"
msgstr "Unsupported backup location {}"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:134
msgid "构造库表备份流程成功"
msgstr "The database table backup process is successful"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:160
msgid "构造 spider/ctl mydumper正则"
msgstr "Construct spider/ctl mydumper regular"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:184
msgid "spider 执行库表备份"
msgstr "spider performs database table backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:197
msgid "ctl 执行库表备份"
msgstr "ctl perform database table backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:208
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:191
msgid "spider/ctl备份库表结构"
msgstr "spider/ctl backup database table structure"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:256
msgid "构造remote mydumper正则"
msgstr "Construct remote mydumper regular"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:274
msgid "remote 执行库表备份"
msgstr "Remote performs database table backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:286
msgid "remote 备份库表"
msgstr "remote backup database table"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:311
msgid "构造运维节点正则"
msgstr "Construct operation and maintenance node rules"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:329
msgid "运维节点执行库表备份"
msgstr "The operation and maintenance node performs database table backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:340
msgid "spider_mnt库表备份"
msgstr "spider_mnt database table backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:84
msgid "存入的存储节点数量不是偶数，请检查！"
msgstr ""
"The number of stored storage nodes is not an even number, please check!"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:316
msgid "集群内部节点间授权"
msgstr "Inter-node authorization within the cluster"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:328
msgid "初始化集群节点间关系"
msgstr "Initialize the relationship between cluster nodes"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_destroy.py:136
msgid "卸载spider实例"
msgstr "Uninstall the spider instance"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_destroy.py:150
msgid "卸载中控实例"
msgstr "Uninstall the central control instance"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_destroy.py:193
msgid "下架TenDB-Cluster集群[{}]"
msgstr "Remove the TenDB-Cluster cluster[{}]"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_disable_deploy.py:103
msgid "重启spider实例"
msgstr "Restart the spider instance"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_enable_deploy.py:137
msgid "启用spider集群[{}]"
msgstr "Enable spider cluster[{}]"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:128
msgid "{} 全备"
msgstr "{} full recovery"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:131
msgid "构造全库备份流程成功"
msgstr "The process of constructing the full database backup is successful"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:167
msgid "spider 执行全库备份"
msgstr "The spider performs a full database backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:180
msgid "ctl 执行全库备份"
msgstr "ctl perform full database backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:238
msgid "remote 执行全库备份"
msgstr "remote perform full database backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:250
msgid "remote 全库备份"
msgstr "remote full database backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:285
msgid "运维节点执行全库备份"
msgstr "The operation and maintenance node performs full database backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:296
msgid "spider_mnt全库备份"
msgstr "spider_mnt full database backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:182
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:186
#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:190
#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:194
msgid "预清理备份库"
msgstr "Preclean the backup repository"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:240
msgid "适配备份库映射"
msgstr "Adapt backup database mapping"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:246
msgid "重建备份库"
msgstr "Rebuild the backup database"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:283
msgid "{} on remote {} 清档"
msgstr "{} on remote {} clear file"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:294
msgid "处理集群表"
msgstr "Working with clustered tables"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:311
msgid "构造清档流程成功"
msgstr "Construction cleanup process succeeded"

#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:110
msgid "partition_sql_file_{}_{}_{}_{}.txt"
msgstr "partition_sql_file_{}_{}_{}_{}.txt"

#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:113
#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:124
#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:145
msgid "{}: {}"
msgstr "{}: {}"

#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:167
msgid "构建spider partition流程成功"
msgstr "Build the spider partition process successfully"

#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:307
msgid "{} on remote {} 重命名数据库"
msgstr "{} on remote {} rename database"

#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:315
msgid "删除集群源库"
msgstr "Delete the cluster source database"

#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:323
msgid "构造数据库重命名流程成功"
msgstr "Construction database renaming process succeeded"

#: backend/flow/engine/bamboo/scene/spider/spider_slave_cluster_deploy.py:106
msgid "[{}]添加slave集群"
msgstr "[{}]Add slave cluster"

#: backend/flow/engine/exceptions.py:28
msgid "组件服务未部署"
msgstr "Component Services is not deployed"

#: backend/flow/engine/exceptions.py:32
msgid "MySQL备份位置异常"
msgstr "The MySQL backup location is abnormal"

#: backend/flow/engine/exceptions.py:37
msgid "MySQL备份方式和位置不兼容"
msgstr "MySQL backup method and location are incompatible"

#: backend/flow/engine/exceptions.py:38
#, python-brace-format
msgid "MySQL备份方式{backup_type}和位置{backup_local}不兼容"
msgstr "MySQL backup method {backup_type} and location {backup_local} are incompatible"

#: backend/flow/models.py:22 backend/flow/models.py:38
msgid "流程ID"
msgstr "Process ID"

#: backend/flow/models.py:23
msgid "流程树"
msgstr "process tree"

#: backend/flow/models.py:25 backend/ticket/serializers.py:108
msgid "流程状态"
msgstr "process status"

#: backend/flow/models.py:27
msgid "流程创建人"
msgstr "Process Creator"

#: backend/flow/models.py:28
msgid "启动时间"
msgstr "Start Time"

#: backend/flow/models.py:29
msgid "流程结束时间"
msgstr "process end time"

#: backend/flow/models.py:40
msgid "当前版本ID"
msgstr "current version id"

#: backend/flow/models.py:42
msgid "节点状态"
msgstr "node status"

#: backend/flow/models.py:44
msgid "节点运行时IP"
msgstr "Node runtime IP"

#: backend/flow/models.py:46
msgid "开始执行时间"
msgstr "start execution time"

#: backend/flow/plugins/components/collections/cloud/exec_service_script.py:58
msgid "该节点{}获取到执行ip信息为空，请联系系统管理员"
msgstr "The execution ip information obtained by the node {} is empty, please contact the system administrator"

#: backend/flow/plugins/components/collections/cloud/push_config_file.py:56
#: backend/flow/plugins/components/collections/cloud/trans_files.py:59
#: backend/flow/plugins/components/collections/es/trans_files.py:63
#: backend/flow/plugins/components/collections/hdfs/trans_flies.py:70
#: backend/flow/plugins/components/collections/mysql/trans_flies.py:99
#: backend/flow/plugins/components/collections/pulsar/trans_files.py:85
#: backend/flow/plugins/components/collections/redis/trans_flies.py:79
#: backend/flow/plugins/components/collections/riak/trans_files.py:63
msgid "[{}] 下发介质包参数：{}"
msgstr "[{}] Delivery media package parameters: {}"

#: backend/flow/plugins/components/collections/cloud/trans_files.py:44
msgid "该节点{}获取到执行ip信息为空，请联系系统管理员{}"
msgstr "The execution ip information obtained by the node {} is empty, please contact the system administrator {}"

#: backend/flow/plugins/components/collections/common/base_service.py:83
msgid "[{}] 运行成功"
msgstr "[{}] ran successfully"

#: backend/flow/plugins/components/collections/common/base_service.py:87
msgid "[{}] 失败: {}"
msgstr "[{}] fail: {}"

#: backend/flow/plugins/components/collections/common/base_service.py:216
msgid "[写入上下文结果失败] failed: {}"
msgstr "[Failed to write context result] failed: {}"

#: backend/flow/plugins/components/collections/common/base_service.py:253
msgid "[{}] 任务正在执行🤔"
msgstr "[{}] Task is executing 🤔"

#: backend/flow/plugins/components/collections/common/base_service.py:262
msgid "[{}]  任务调度失败😱"
msgstr "[{}] Task scheduling failed 😱"

#: backend/flow/plugins/components/collections/common/base_service.py:273
msgid "[{}]任务调度成功🥳︎"
msgstr "[{}] Task scheduling succeeded 🥳︎"

#: backend/flow/plugins/components/collections/common/base_service.py:279
msgid "[{}]该节点需要获取执行后日志，赋值到trans_data"
msgstr ""
"[{}] This node needs to obtain the post-execution log and assign it to "
"trans_data"

#: backend/flow/plugins/components/collections/common/base_service.py:290
msgid "[{}] 获取执行后日志失败，获取ip[{}]"
msgstr "[{}] Failed to get log after execution, get ip[{}]"

#: backend/flow/plugins/components/collections/common/bigdata_manager_service.py:123
msgid "无法找到Manager处理类型,请联系系统管理员:{}"
msgstr "Unable to find Manager processing type, please contact the system administrator: {}"

#: backend/flow/plugins/components/collections/common/create_ticket.py:36
msgid "未知单据类型, {}不存在于已知单据类型中"
msgstr "Unknown ticket type, {} does not exist in known ticket types"

#: backend/flow/plugins/components/collections/common/create_ticket.py:41
msgid "不允许自动创建单据，单据创建流程结束"
msgstr ""
"Automatic ticket creation is not allowed, and the ticket creation process "
"ends"

#: backend/flow/plugins/components/collections/common/external_service.py:36
msgid "第三方接口: {} 请求成功! 返回参数为: {}"
msgstr ""
"Third-party interface: {} The request is successful! The return parameter "
"is: {}"

#: backend/flow/plugins/components/collections/common/external_service.py:38
msgid "第三方接口:{} 调用失败！错误信息为: {}"
msgstr "Third-party interface: {} call failed! The error message is: {}"

#: backend/flow/plugins/components/collections/common/external_service.py:40
msgid "请求遇到未知错误！错误信息为: {}"
msgstr "The request encountered an unknown error! The error message is: {}"

#: backend/flow/plugins/components/collections/common/pause.py:44
msgid "【{}】自动化流程待确认,是否继续？"
msgstr ""
"【{}】The automated process is pending confirmation. Do you want to continue?"

#: backend/flow/plugins/components/collections/common/pause.py:78
msgid "回调数据"
msgstr "callback data"

#: backend/flow/plugins/components/collections/common/pause.py:87
#: backend/ticket/constants.py:315
msgid "暂停"
msgstr "pause"

#: backend/flow/plugins/components/collections/common/sa_idle_check.py:38
msgid "{}-空闲检查"
msgstr "{} - idle check"

#: backend/flow/plugins/components/collections/common/sa_idle_check.py:70
#: backend/flow/plugins/components/collections/common/sa_init.py:66
msgid "空闲检查失败"
msgstr "idle check failed"

#: backend/flow/plugins/components/collections/common/sa_idle_check.py:72
#: backend/flow/plugins/components/collections/common/sa_init.py:68
msgid "任务状态异常{}"
msgstr "The task status is abnormal {}"

#: backend/flow/plugins/components/collections/common/sa_idle_check.py:85
msgid "错误详情{}"
msgstr "error details{}"

#: backend/flow/plugins/components/collections/common/sa_idle_check.py:90
msgid "sa空闲检查"
msgstr "sa idle check"

#: backend/flow/plugins/components/collections/common/sa_init.py:35
msgid "SA初始化"
msgstr "SA initialization"

#: backend/flow/plugins/components/collections/common/sa_init.py:82
msgid "sa初始化"
msgstr "sa initialization"

#: backend/flow/plugins/components/collections/common/sleep_timer_service.py:50
msgid "定时时间"
msgstr "Timing"

#: backend/flow/plugins/components/collections/common/sleep_timer_service.py:53
#, python-format
msgid "定时时间，格式为秒(s) 或 (%%Y-%%m-%%d %%H:%%M:%%S)"
msgstr "Timing time, the format is seconds (s) or (%%Y-%%m-%%d %%H:%%M:%%S)"

#: backend/flow/plugins/components/collections/common/sleep_timer_service.py:56
msgid "是否强制晚于当前时间"
msgstr "Whether to force later than the current time"

#: backend/flow/plugins/components/collections/common/sleep_timer_service.py:59
msgid ""
"用户输入日期格式时是否强制要求时间晚于当前时间，只对日期格式定时输入有效"
msgstr ""
"Whether to force the time to be later than the current time when the user "
"enters the date format, only valid for timing input in the date format"

#: backend/flow/plugins/components/collections/common/sleep_timer_service.py:83
#, python-format
msgid "输入参数%s不符合【时区(+08:00、-08:00)】格式"
msgstr ""
"The input parameter %s does not conform to the [time zone (+08:00, -08:00)] "
"format"

#: backend/flow/plugins/components/collections/common/sleep_timer_service.py:98
msgid "定时时间需晚于当前时间"
msgstr "The timing time needs to be later than the current time"

#: backend/flow/plugins/components/collections/common/sleep_timer_service.py:106
#, python-format
msgid "输入参数%s不符合【秒(s) 或 时间(%%Y-%%m-%%d %%H:%%M:%%S)】格式"
msgstr ""
"The input parameter %s does not conform to the [second (s) or time (%%Y-%%m-"
"%%d %%H:%%M:%%S)] format"

#: backend/flow/plugins/components/collections/es/es_dns_manage.py:61
#: backend/flow/plugins/components/collections/kafka/dns_manage.py:37
#: backend/flow/plugins/components/collections/kafka/dns_manage.py:48
#: backend/flow/plugins/components/collections/kafka/dns_manage.py:75
#: backend/flow/plugins/components/collections/mysql/dns_manage.py:57
#: backend/flow/plugins/components/collections/mysql/dns_manage.py:69
#: backend/flow/plugins/components/collections/pulsar/pulsar_dns_manage.py:29
#: backend/flow/plugins/components/collections/redis/dns_manage.py:43
#: backend/flow/plugins/components/collections/redis/dns_manage.py:78
#: backend/flow/plugins/components/collections/redis/exec_shell_script.py:44
msgid "该节点获取到执行ip信息为空，请联系系统管理员"
msgstr ""
"The node obtained execution ip information is empty, please contact the "
"system administrator"

#: backend/flow/plugins/components/collections/es/es_dns_manage.py:146
#: backend/flow/plugins/components/collections/hdfs/hdfs_dns_manage.py:71
#: backend/flow/plugins/components/collections/kafka/dns_manage.py:93
#: backend/flow/plugins/components/collections/mysql/dns_manage.py:84
#: backend/flow/plugins/components/collections/pulsar/pulsar_dns_manage.py:61
#: backend/flow/plugins/components/collections/pulsar/pulsar_zk_dns_manage.py:51
#: backend/flow/plugins/components/collections/redis/dns_manage.py:84
msgid "无法适配到传入的域名处理类型,请联系系统管理员:{}"
msgstr ""
"Unable to adapt to the incoming domain name processing type, please contact "
"the system administrator: {}"

#: backend/flow/plugins/components/collections/es/exec_es_actuator_script.py:65
#: backend/flow/plugins/components/collections/es/trans_files.py:47
#: backend/flow/plugins/components/collections/hdfs/exec_actuator_script.py:69
#: backend/flow/plugins/components/collections/hdfs/trans_flies.py:53
#: backend/flow/plugins/components/collections/influxdb/exec_actuator_script.py:62
#: backend/flow/plugins/components/collections/kafka/exec_actuator_script.py:62
#: backend/flow/plugins/components/collections/mysql/exec_actuator_script.py:103
#: backend/flow/plugins/components/collections/mysql/trans_flies.py:60
#: backend/flow/plugins/components/collections/pulsar/exec_actuator_script.py:66
#: backend/flow/plugins/components/collections/pulsar/trans_files.py:46
#: backend/flow/plugins/components/collections/redis/exec_actuator_script.py:82
#: backend/flow/plugins/components/collections/redis/trans_flies.py:61
#: backend/flow/plugins/components/collections/riak/exec_actuator_script.py:80
#: backend/flow/plugins/components/collections/riak/trans_files.py:47
msgid "该节点获取到执行ip信息为空，请联系系统管理员{}"
msgstr ""
"The execution ip information obtained by this node is empty, please contact "
"the system administrator {}"

#: backend/flow/plugins/components/collections/es/get_es_resource.py:57
#: backend/flow/plugins/components/collections/kafka/get_kafka_resource.py:50
msgid "获取机器资源成功成功。 {}"
msgstr "Acquiring the machine resource was successful. {}"

#: backend/flow/plugins/components/collections/hdfs/get_hdfs_resource.py:61
#: backend/flow/plugins/components/collections/riak/get_riak_resource.py:48
msgid "获取机器资源成功。 {}"
msgstr "Acquiring machine resource successfully. {}"

#: backend/flow/plugins/components/collections/hdfs/hdfs_dns_manage.py:48
msgid "获取DNS操作IP为空"
msgstr "Get DNS operation IP is empty"

#: backend/flow/plugins/components/collections/hdfs/update_hdfs_resource.py:67
msgid "更新机器资源成功成功。 {}"
msgstr "Updating the machine resource succeeded successfully. {}"

#: backend/flow/plugins/components/collections/influxdb/trans_flies.py:52
#: backend/flow/plugins/components/collections/kafka/trans_flies.py:52
msgid " 下发介质包参数：{}"
msgstr "Send media package parameters: {}"

#: backend/flow/plugins/components/collections/mysql/authorize_rules.py:64
msgid "{}. 账号规则: {}-{}, 来源ip: {}, 目标集群: {}"
msgstr "{}. Account rule: {}-{}, source ip: {}, target cluster: {}"

#: backend/flow/plugins/components/collections/mysql/authorize_rules.py:70
msgid ""
"授权规则明细:\n"
"{}\n"
msgstr ""
"Authorization rule details:\n"
"{}\n"

#: backend/flow/plugins/components/collections/mysql/authorize_rules.py:83
msgid "「授权接口返回结果异常」{}"
msgstr "Authorization interface returns abnormal result {}"

#: backend/flow/plugins/components/collections/mysql/authorize_rules.py:85
msgid "「授权接口调用异常」{}"
msgstr "Authorization interface call exception {}"

#: backend/flow/plugins/components/collections/mysql/authorize_rules.py:88
msgid "授权异常，相关信息: {}\n"
msgstr "Authorization exception, related information: {}\n"

#: backend/flow/plugins/components/collections/mysql/authorize_rules.py:95
msgid "授权整体结果{}"
msgstr "Authorization overall result{}"

#: backend/flow/plugins/components/collections/mysql/authorize_rules.py:99
msgid "Excel导入授权行数:{}，成功授权数目:{}，失败授权数目:{}"
msgstr ""
"The number of Excel import authorization lines: {}, the number of successful "
"authorization: {}, the number of failed authorization: {}"

#: backend/flow/plugins/components/collections/mysql/authorize_rules.py:108
msgid ""
"授权结果详情请下载excel: <a href='{}/apis/mysql/bizs/{}/permission/authorize/"
"get_authorize_info_excel/?ticket_id={}'>excel 下载</a>"
msgstr ""
"For details of authorization results, please download excel: <a href='{}/"
"apis/mysql/bizs/{}/permission/authorize/get_authorize_info_excel/?"
"ticket_id={}'>excel download</a>"

#: backend/flow/plugins/components/collections/mysql/build_database_table_filter_regex.py:47
msgid "[{}] 成功: db_table_filter_regex: {}, db_filter_regex: {}"
msgstr "[{}] Success: db_table_filter_regex: {}, db_filter_regex: {}"

#: backend/flow/plugins/components/collections/mysql/clear_machine.py:45
msgid "机器还在系统中注册，暂不用清理[{}]"
msgstr ""
"The machine is still registered in the system, there is no need to clean "
"up[{}]"

#: backend/flow/plugins/components/collections/mysql/clear_machine.py:50
msgid "本次操作没有机器可以清理，提前结束活动节点"
msgstr ""
"There is no machine to clean up in this operation, and the active node is "
"terminated early"

#: backend/flow/plugins/components/collections/mysql/clone_rules.py:92
#: backend/flow/plugins/components/collections/mysql/clone_user.py:61
msgid "「权限克隆返回结果异常」{}"
msgstr "The return result of permission cloning is abnormal {}"

#: backend/flow/plugins/components/collections/mysql/clone_rules.py:94
#: backend/flow/plugins/components/collections/mysql/clone_user.py:63
msgid "「权限克隆调用异常」{}"
msgstr "Privilege clone call exception {}"

#: backend/flow/plugins/components/collections/mysql/clone_rules.py:98
msgid "权限克隆失败，错误信息: {}\n"
msgstr "Permission clone failed, error message: {}\n"

#: backend/flow/plugins/components/collections/mysql/clone_rules.py:105
msgid "权限克隆整体执行结果——总数:{}，成功数:{}，失败数:{}\n"
msgstr ""
"The overall execution result of permission cloning—total: {}, success: {}, "
"failure: {}\n"

#: backend/flow/plugins/components/collections/mysql/clone_rules.py:111
msgid ""
"详情请下载excel: <a href='{}/apis/mysql/bizs/{}/permission/clone/"
"get_clone_info_excel/?ticket_id={}&clone_type={}'>excel 下载</a>"
msgstr ""
"For details, please download excel: <a href='{}/apis/mysql/bizs/{}/"
"permission/clone/get_clone_info_excel/?ticket_id={}&clone_type={}'>excel "
"download</a>"

#: backend/flow/plugins/components/collections/mysql/clone_user.py:64
msgid "执行克隆失败!"
msgstr "Failed to execute clone!"

#: backend/flow/plugins/components/collections/mysql/create_user.py:52
msgid "在「{}」创建临时用户「{}@{}」成功"
msgstr "Successfully created temporary user {}@{} at {}"

#: backend/flow/plugins/components/collections/mysql/create_user.py:54
msgid "创建用户接口异常，相关信息: {}"
msgstr "Create user interface exception, related information: {}"

#: backend/flow/plugins/components/collections/mysql/drop_user.py:38
msgid "在「{}」执行sql失败，相关信息: {}"
msgstr "Failed to execute sql in \"{}\", related information: {}"

#: backend/flow/plugins/components/collections/mysql/drop_user.py:42
msgid "在「{}」执行sql{}失败，相关信息: {}"
msgstr "Failed to execute sql{} in \"{}\", related information: {}"

#: backend/flow/plugins/components/collections/mysql/drop_user.py:49
msgid "删除用户接口异常，相关信息: {}"
msgstr "Delete user interface exception, related information: {}"

#: backend/flow/plugins/components/collections/mysql/drop_user.py:52
msgid "在「{}」删除临时用户「{}@{}」成功"
msgstr "Successfully deleted temporary user {}@{} at {}"

#: backend/flow/plugins/components/collections/mysql/fake_semantic_check.py:58
msgid "这是一个fake的模拟执行"
msgstr "This is a simulated execution of a fake"

#: backend/flow/plugins/components/collections/mysql/fake_semantic_check.py:65
msgid "语义检查执行成功"
msgstr "Semantic check performed successfully"

#: backend/flow/plugins/components/collections/mysql/filter_database_table_from_regex.py:91
msgid "[{}] 过滤所得库表: {}"
msgstr "[{}] Filtered database table: {}"

#: backend/flow/plugins/components/collections/mysql/filter_database_table_from_regex.py:94
msgid "[{}] 未匹配到任何库"
msgstr "[{}] did not match any libraries"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:56
msgid "在{}执行sql失败，相关信息: {}"
msgstr "Failed to execute sql in {}, related information: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:61
#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:68
msgid "在{}执行sql{}失败，相关信息: {}"
msgstr "Failed to execute sql{} in {}, related information: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:87
msgid "查询数据库接口异常，相关信息: {}"
msgstr "Query database interface exception, related information: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:90
msgid "uid:{}"
msgstr "uid:{}"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:119
msgid "ERROR 数据不一致的表的数量: {}"
msgstr "ERROR Number of tables with inconsistent data: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:120
msgid "WARNING 被跳过校验的表的数量: {}"
msgstr "WARNING Number of tables skipped for validation: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:121
msgid "SUCCESS 数据一致的表的数量: {}"
msgstr "Number of tables with consistent SUCCESS data: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:126
msgid "ERROR 校验失败，数据不一致的表:"
msgstr "ERROR Validation failed, table with inconsistent data:"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:132
msgid "WARNING 校验程序没有校验的表:"
msgstr "WARNING Table not validated by validator:"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:138
msgid "SUCCESS 校验成功，数据一致的表:"
msgstr "SUCCESS verification is successful, the table with consistent data:"

#: backend/flow/plugins/components/collections/mysql/mysql_db_meta.py:41
#: backend/flow/plugins/components/collections/redis/get_redis_payload.py:45
#: backend/flow/plugins/components/collections/redis/redis_db_meta.py:45
#: backend/flow/plugins/components/collections/spider/spider_db_meta.py:40
msgid "集群元信息:{}"
msgstr "Cluster meta information: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_link_backup_id_bill_id.py:28
msgid "[{}] 备份 id: {}"
msgstr "[{}] backup id: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_master_slave_relationship_check.py:72
msgid "主备关系校验成功"
msgstr "Master-standby relationship verification succeeded"

#: backend/flow/plugins/components/collections/mysql/mysql_partition_check.py:40
msgid "分区管理服务api异常，相关信息: {}"
msgstr "Partition management service api exception, related information: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_partition_check.py:45
#: backend/flow/plugins/components/collections/mysql/upload_file.py:43
msgid "单据id{}"
msgstr "ticket id {}"

#: backend/flow/plugins/components/collections/mysql/mysql_partition_check.py:46
msgid "获取分区语句成功"
msgstr "Get partition statement succeeded"

#: backend/flow/plugins/components/collections/mysql/rename_database_confirm_empty_from.py:69
msgid "确认源数据库已空完成"
msgstr "Confirm that the source database is empty"

#: backend/flow/plugins/components/collections/mysql/rename_database_drop_from.py:51
msgid "删除源数据库完成"
msgstr "Delete source database complete"

#: backend/flow/plugins/components/collections/mysql/rename_database_prepare_param.py:28
msgid "[{}] 构造 old_new_map 完成: {}"
msgstr "[{}] Construct old_new_map completed: {}"

#: backend/flow/plugins/components/collections/mysql/rollback_trans_flies.py:53
#: backend/flow/plugins/components/collections/mysql/slave_trans_flies.py:63
msgid "没有符合的备份文件提供定点恢复"
msgstr "There is no matching backup file to provide fixed-point recovery"

#: backend/flow/plugins/components/collections/mysql/semantic_check.py:56
msgid "创建模拟执行任务resp{}"
msgstr "Create a simulated execution task resp{}"

#: backend/flow/plugins/components/collections/mysql/semantic_check.py:60
msgid "创建模拟任务失败:{}"
msgstr "Failed to create mock task: {}"

#: backend/flow/plugins/components/collections/mysql/semantic_check.py:62
msgid "创建模拟任务成功"
msgstr "Create mock task successfully"

#: backend/flow/plugins/components/collections/mysql/semantic_check.py:66
#: backend/flow/plugins/components/collections/mysql/semantic_check.py:68
msgid "「执行语义分析任务异常」{}"
msgstr "Execution of semantic analysis task exception {}"

#: backend/flow/plugins/components/collections/mysql/semantic_check.py:69
msgid "创建模拟任务失败!"
msgstr "Failed to create simulation task!"

#: backend/flow/plugins/components/collections/mysql/semantic_check.py:119
msgid "语义检查出发的自动创建单据"
msgstr "Automatic creation of tickets starting from semantic check"

#: backend/flow/plugins/components/collections/mysql/slave_trans_flies.py:42
msgid "仅在主库查找备份源"
msgstr "Find the backup source only in the master"

#: backend/flow/plugins/components/collections/mysql/slave_trans_flies.py:46
msgid "在主、从库查找备份源"
msgstr "Find the backup source in the master and slave libraries"

#: backend/flow/plugins/components/collections/mysql/slave_trans_flies.py:50
msgid "从备份源中筛选符合的备份"
msgstr "Filter matching backups from backup sources"

#: backend/flow/plugins/components/collections/mysql/trans_flies.py:66
#: backend/flow/plugins/components/collections/pulsar/trans_files.py:52
msgid ""
"选择服务器之间文件传输模式，应当源文件的机器ip列表不能为空，请联系系统管理员"
"{}"
msgstr ""
"Select the file transfer mode between servers. The machine ip list that "
"should be the source file cannot be empty. Please contact the system "
"administrator{}"

#: backend/flow/plugins/components/collections/mysql/truncate_data_create_stage_database.py:55
msgid "建立备份库完成"
msgstr "Create a backup db complete"

#: backend/flow/plugins/components/collections/mysql/truncate_data_drop_stage_database.py:49
msgid "删除备份库完成"
msgstr "Deleting the backup repository is complete"

#: backend/flow/plugins/components/collections/mysql/truncate_data_generate_stage_database_name.py:31
msgid "生成备份库名完成"
msgstr "Generate backup db name complete"

#: backend/flow/plugins/components/collections/mysql/truncate_data_recreate_table.py:60
msgid "重建表成功"
msgstr "rebuild table successfully"

#: backend/flow/plugins/components/collections/mysql/truncate_data_rename_table.py:88
msgid "[{}] 备份清档表完成"
msgstr "[{}] Backup cleanup table completed"

#: backend/flow/plugins/components/collections/mysql/upload_file.py:38
msgid "分区sql为空无需上传"
msgstr "Partition sql is empty and no need to upload"

#: backend/flow/plugins/components/collections/mysql/upload_file.py:44
msgid "分区sql文件上传成功"
msgstr "Partition sql file uploaded successfully"

#: backend/flow/plugins/components/collections/pulsar/blank_schedule_service.py:66
msgid "successfully enter blank schedule, interval times: {}"
msgstr "successfully enter blank schedule, interval times: {}"

#: backend/flow/plugins/components/collections/redis/exec_actuator_script.py:100
msgid "[{}] kwargs['payload'] 是不完整，需要将{}内容加到payload中"
msgstr ""
"[{}] kwargs[&#39;payload&#39;] is incomplete, you need to add {} content to "
"payload"

#: backend/flow/plugins/components/collections/redis/exec_shell_script.py:113
msgid "无符合要求机器"
msgstr "No matching machine"

#: backend/flow/plugins/components/collections/redis/exec_shell_script.py:117
msgid "获取最大磁盘空闲机器失败：{}"
msgstr "Failed to get max disk free machines: {}"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:393
msgid "源redis集群{}存在{}个非running状态的slave"
msgstr "There are {} non-running slaves in the source redis cluster {}"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:450
msgid "所有源redis slave机器:{} 磁盘空间检查通过"
msgstr "All source redis slave machines: {} disk space check passed"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:461
msgid "src_cluster:{} type:{} 无需检查cluster nodes是否ok"
msgstr ""
"src_cluster:{} type:{} No need to check whether the cluster nodes are ok"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:523
msgid "src_cluster:{} 类型是:{} 无需检查cluster state"
msgstr "src_cluster: {} type is: {} no need to check cluster state"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:696
msgid "bill_id:{} src_cluster:{} dst_cluster:{} 某些tasks迁移失败"
msgstr "bill_id:{} src_cluster:{} dst_cluster:{} Some tasks migration failed"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:705
msgid ""
"bill_id:{} src_cluster:{} dst_cluster:{} 所有tasks都成功且终止了迁移进程"
msgstr ""
"bill_id:{} src_cluster:{} dst_cluster:{} All tasks are successful and the "
"migration process is terminated"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:715
msgid "bill_id:{} src_cluster:{} dst_cluster:{} 所有tasks都是增量同步"
msgstr ""
"bill_id:{} src_cluster:{} dst_cluster:{} All tasks are incremental "
"synchronization"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:797
msgid "task:{} {}:{} 迁移失败"
msgstr "task:{} {}:{} migration failed"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:862
msgid "{}中有{}个proxy不是running状态"
msgstr "{} proxy in {} is not running"

#: backend/flow/plugins/components/collections/redis/trans_flies.py:87
msgid "下发介质包失败: [{}/{}] resp:{}"
msgstr "Failed to deliver media package: [{}/{}] resp:{}"

#: backend/flow/plugins/components/collections/riak/get_riak_resource.py:43
msgid "获取机器资源失败，新建集群至少3台机器，添加节点至少1台机器"
msgstr "Failed to obtain machine resources, create a new cluster with at least 3 machines, add a node with at least 1 machine"

#: backend/flow/plugins/components/collections/spider/add_spider_routing.py:60
msgid "select mysql.servers failed: {}"
msgstr "select mysql.servers failed: {}"

#: backend/flow/plugins/components/collections/spider/add_spider_routing.py:94
msgid "TdbCtl-create-node failed: {}"
msgstr "TdbCtl-create-node failed: {}"

#: backend/flow/plugins/components/collections/spider/add_spider_routing.py:142
#: backend/flow/plugins/components/collections/spider/add_spider_routing.py:148
#: backend/flow/plugins/components/collections/spider/add_system_user_in_cluster.py:23
msgid "在[{}]创建添加内置账号成功"
msgstr "Created and added built-in account in [{}] successfully"

#: backend/flow/plugins/components/collections/spider/add_spider_routing.py:151
#: backend/flow/plugins/components/collections/spider/add_system_user_in_cluster.py:25
msgid "[{}]添加用户接口异常，相关信息: {}"
msgstr "[{}] Add user interface exception, related information: {}"

#: backend/flow/plugins/components/collections/spider/add_spider_routing.py:186
msgid "This spider-role is not supported,check"
msgstr "This spider-role is not supported,check"

#: backend/flow/plugins/components/collections/spider/check_cluster_table_using_sub.py:45
msgid "{} {} 检查库表是否在用"
msgstr "{} {} Check if the database table is in use"

#: backend/flow/plugins/components/collections/spider/check_cluster_table_using_sub.py:50
msgid "{} 检查库表是否在用"
msgstr "{} Check if the database table is in use"

#: backend/flow/plugins/components/collections/spider/clear_database_on_remote_service.py:56
msgid "remote drop 新库完成"
msgstr "remote drop new database completed"

#: backend/flow/plugins/components/collections/spider/create_database_like_via_ctl.py:110
msgid "建立集群备份库表完成"
msgstr "The establishment of the cluster backup database table is completed"

#: backend/flow/plugins/components/collections/spider/drop_spider_table_via_ctl.py:49
msgid "删除老数据库完成"
msgstr "Delete the old database complete"

#: backend/flow/plugins/components/collections/spider/truncate_database_drop_stage_db_via_ctl.py:47
msgid "清理备份库完成"
msgstr "Clean up the backup database is complete"

#: backend/flow/plugins/components/collections/spider/truncate_database_on_spider_via_ctl.py:145
msgid "处理集群表完成"
msgstr "Processing cluster table complete"

#: backend/flow/signal/handlers.py:35
msgid "【状态信号捕获】{} root_id={}, node_id={}, status:{}"
msgstr "【Status signal capture】{} root_id={}, node_id={}, status:{}"

#: backend/flow/signal/handlers.py:68
msgid "【状态信号捕获】未查找到FlowTree root_id={}"
msgstr "[Status signal capture] FlowTree root_id={} not found"

#: backend/flow/utils/cc_manage.py:55
msgid "查询主机bk_host_id失败[数量不匹配]"
msgstr "Failed to query host bk_host_id [number does not match]"

#: backend/flow/utils/cc_manage.py:67
msgid "查询空闲机模块ID bk_module_id 失败"
msgstr "Failed to query the idle machine module ID bk_module_id"

#: backend/flow/utils/cloud/cloud_act_payload.py:42
msgid "单据中不包含DRS的部署信息"
msgstr "The ticket does not contain the deployment information of DRS"

#: backend/flow/utils/cloud/cloud_act_payload.py:50
msgid "DNS服务未部署，请在DNS服务部署后再进行该服务的部署"
msgstr ""
"The DNS service has not been deployed, please deploy the service after the "
"DNS service is deployed"

#: backend/flow/utils/cloud/cloud_act_payload.py:58
msgid "Nginx服务未部署，请在Nginx服务部署后再进行该服务的部署"
msgstr ""
"The Nginx service is not deployed, please deploy the service after the Nginx "
"service is deployed"

#: backend/flow/utils/cloud/cloud_db_proxy.py:52
msgid "找不到单据类型需要变更的proxy函数，服务信息入库失败"
msgstr "The proxy function that needs to be changed in the ticket type cannot be found, and the service information storage fails"

#: backend/flow/utils/cloud/cloud_module_operate.py:135
msgid "主机{}转移{}失败，转移参数:{}, 错误信息:{}"
msgstr "Host {} transfer {} failed, transfer parameters: {}, error message: {}"

#: backend/flow/utils/cloud/cloud_module_operate.py:196
msgid "主机{}转移待回收失败，错误信息:{}"
msgstr "The transfer of host {} to be recycled failed, error message: {}"

#: backend/flow/utils/es/es_db_meta.py:94
msgid "找不到单据类型需要变更的cmdb函数{}，请联系系统管理员"
msgstr ""
"The cmdb function {} that needs to be changed cannot be found, please "
"contact the system administrator"

#: backend/flow/utils/hdfs/hdfs_db_meta.py:52
#: backend/flow/utils/influxdb/influxdb_db_meta.py:114
#: backend/flow/utils/kafka/kafka_db_meta.py:160
#: backend/flow/utils/redis/redis_db_meta.py:48
msgid "找不到单据类型需要变更的cmdb函数，请联系系统管理员"
msgstr ""
"The cmdb function that needs to be changed cannot be found, please contact "
"the system administrator"

#: backend/flow/utils/mysql/db_resource.py:106
msgid " 获取资源失败: {}"
msgstr "Failed to fetch resource: {}"

#: backend/flow/utils/mysql/db_table_filter/exception.py:18
msgid "库表过滤异常"
msgstr "Database table filtering exception"

#: backend/flow/utils/mysql/db_table_filter/exception.py:23
msgid "输入校验异常"
msgstr "input validation exception"

#: backend/flow/utils/mysql/db_table_filter/filter.py:42
msgid "include patterns 不能为空"
msgstr "include patterns cannot be empty"

#: backend/flow/utils/mysql/db_table_filter/filter.py:48
msgid "exclude patterns 要么同时为空, 要么都不为空"
msgstr ""
"exclude patterns are either empty at the same time, or none of them are empty"

#: backend/flow/utils/mysql/db_table_filter/tools.py:30
msgid "使用通配符时, 只能有一个模式: {}"
msgstr "When using wildcards, there can only be one pattern: {}"

#: backend/flow/utils/mysql/db_table_filter/tools.py:33
msgid "% ? 不能独立使用"
msgstr "% ? cannot be used independently"

#: backend/flow/utils/mysql/db_table_filter/tools.py:36
msgid "* 只能独立使用"
msgstr "* can only be used independently"

#: backend/flow/utils/mysql/mysql_act_dataclass_validator.py:27
msgid "exec_ip变量和get_trans_data_ip_var变量不能同时赋值"
msgstr ""
"The exec_ip variable and the get_trans_data_ip_var variable cannot be "
"assigned at the same time"

#: backend/flow/utils/mysql/mysql_act_dataclass_validator.py:29
msgid "exec_ip变量和get_trans_data_ip_var变量不能同时为None"
msgstr ""
"The exec_ip variable and the get_trans_data_ip_var variable cannot be None "
"at the same time"

#: backend/flow/utils/mysql/mysql_act_playload.py:305
msgid "传入的安装mysql端口列表为空或者非法值，请联系系统管理员"
msgstr ""
"The incoming mysql port list is empty or an illegal value, please contact "
"the system administrator"

#: backend/flow/utils/mysql/mysql_act_playload.py:349
msgid "传入的安装spider端口列表为空或者非法值，请联系系统管理员"
msgstr "The incoming installation spider port list is empty or an illegal value, please contact the system administrator"

#: backend/flow/utils/mysql/mysql_act_playload.py:676
msgid "不支持的机器类型: {}"
msgstr "Unsupported machine type: {}"

#: backend/flow/utils/pulsar/consts.py:20
msgid "broker默认分区数"
msgstr "broker default number of partitions"

#: backend/flow/utils/pulsar/consts.py:21
msgid "broker认证配置"
msgstr "Broker authentication configuration"

#: backend/flow/utils/pulsar/consts.py:22
msgid "默认bookie池大小"
msgstr "Default bookie pool size"

#: backend/flow/utils/pulsar/consts.py:23
msgid "写入副本数"
msgstr "Write replicas"

#: backend/flow/utils/pulsar/consts.py:24
msgid "确认写入副本数"
msgstr "Acknowledge the number of replicas written"

#: backend/flow/utils/pulsar/consts.py:25
msgid "数据保留时间，单位为分钟"
msgstr "Data retention time, in minutes"

#: backend/flow/utils/pulsar/consts.py:26
msgid "broker服务端口"
msgstr "broker service port"

#: backend/flow/utils/pulsar/consts.py:27
msgid "访问Pulsar Manager账户名"
msgstr "Access Pulsar Manager account name"

#: backend/flow/utils/pulsar/consts.py:28
msgid "访问Pulsar Manager密码"
msgstr "Access Pulsar Manager Password"

#: backend/flow/utils/redis/redis_db_meta.py:56
msgid "找不到单据类型需要查询的cmdb函数，请联系系统管理员"
msgstr ""
"The cmdb function that needs to be queried for the ticket type cannot be "
"found, please contact the system administrator"

#: backend/flow/utils/spider/get_spider_incr.py:45
msgid "select spider_auto_increment failed: {}"
msgstr "select spider_auto_increment failed: {}"

#: backend/flow/utils/spider/get_spider_incr.py:49
msgid "select spider_auto_increment is null, check "
msgstr "select spider_auto_increment is null, check"

#: backend/flow/utils/spider/get_spider_incr.py:65
msgid "The obtained incr is greater than MAX_SPIDER_MASTER_COUNT, check"
msgstr "The obtained incr is greater than MAX_SPIDER_MASTER_COUNT, check"

#: backend/flow/views/cloud_dbha_apply.py:39
#: backend/flow/views/cloud_dns_bind_apply.py:39
msgid "开始部署dns-bind服务场景"
msgstr "Start deploying the dns-bind service scenario"

#: backend/flow/views/cloud_drs_apply.py:44
msgid "开始部署drs服务场景"
msgstr "Start deploying the drs service scenario"

#: backend/flow/views/cloud_nginx_apply.py:44
msgid "开始部署nginx服务场景"
msgstr "Start deploying nginx service scenarios"

#: backend/flow/views/cloud_nginx_apply.py:54
msgid "开始替换nginx服务场景"
msgstr "Start to replace the nginx service scenario"

#: backend/flow/views/es_apply.py:63
msgid "开始部署ES场景"
msgstr "Start deploying ES scenarios"

#: backend/flow/views/es_destroy.py:39
msgid "开始下架ES场景"
msgstr "Start to remove the ES scene"

#: backend/flow/views/es_disable.py:39
msgid "开始禁用ES场景"
msgstr "Start disabling ES scenes"

#: backend/flow/views/es_enable.py:39
msgid "开始启用ES场景"
msgstr "Start to enable ES scene"

#: backend/flow/views/es_reboot.py:47
msgid "开始重启ES节点场景"
msgstr "Start restarting the ES node scenario"

#: backend/flow/views/es_replace.py:63 backend/flow/views/es_scale_up.py:52
msgid "开始扩容ES场景"
msgstr "Start to expand the ES scene"

#: backend/flow/views/es_shrink.py:52
msgid "开始缩容ES场景"
msgstr "Start shrinking the ES scene"

#: backend/flow/views/hdfs_apply.py:61
msgid "开始部署HDFS场景"
msgstr "Start deploying HDFS scenarios"

#: backend/flow/views/hdfs_destroy.py:39
msgid "开始HDFS集群销毁场景"
msgstr "Start the HDFS cluster destruction scenario"

#: backend/flow/views/hdfs_disable.py:39
msgid "开始HDFS集群禁用场景"
msgstr "Start HDFS cluster disable scenario"

#: backend/flow/views/hdfs_enable.py:39
msgid "开始HDFS集群启用场景"
msgstr "Start the HDFS cluster enablement scenario"

#: backend/flow/views/hdfs_reboot.py:55
msgid "开始重启HDFS场景"
msgstr "Start to restart the HDFS scene"

#: backend/flow/views/hdfs_replace.py:65
msgid "开始替换HDFS场景"
msgstr "Start to replace the HDFS scene"

#: backend/flow/views/hdfs_scale_up.py:42
msgid "开始扩容HDFS场景"
msgstr "Start expanding the HDFS scene"

#: backend/flow/views/hdfs_shrink.py:42
msgid "开始HDFS集群缩容场景"
msgstr "Start the HDFS cluster shrinking scenario"

#: backend/flow/views/influxdb_apply.py:57
msgid "开始部署influxdb场景"
msgstr "Start deploying the influxdb scene"

#: backend/flow/views/influxdb_destroy.py:39
msgid "开始下架Influxdb场景"
msgstr "Start to remove the Influxdb scene"

#: backend/flow/views/influxdb_disable.py:39
msgid "开始禁用Influxdb场景"
msgstr "Start disabling the Influxdb scene"

#: backend/flow/views/influxdb_enable.py:39
msgid "开始启用Influxdb场景"
msgstr "Start enabling the Influxdb scene"

#: backend/flow/views/influxdb_reboot.py:47
msgid "开始重启Influxdb节点场景"
msgstr "Start restarting the Influxdb node scenario"

#: backend/flow/views/influxdb_replace.py:49
msgid "开始替换influxdb场景"
msgstr "Start to replace the influxdb scene"

#: backend/flow/views/kafka_apply.py:70
msgid "开始部署kafka场景"
msgstr "Start deploying kafka scenarios"

#: backend/flow/views/kafka_destroy.py:39
msgid "开始下架Kafka场景"
msgstr "Start to remove the Kafka scene"

#: backend/flow/views/kafka_disable.py:39
msgid "开始禁用Kafka场景"
msgstr "Start disabling the Kafka scene"

#: backend/flow/views/kafka_enable.py:39
msgid "开始启用Kafka场景"
msgstr "Start to enable the Kafka scene"

#: backend/flow/views/kafka_reboot.py:47
msgid "开始重启Kafka节点场景"
msgstr "Start restarting the Kafka node scenario"

#: backend/flow/views/kafka_replace.py:51
msgid "开始替换kafka场景"
msgstr "Start to replace the kafka scene"

#: backend/flow/views/kafka_scale_up.py:49
msgid "开始扩容kafka场景"
msgstr "Start to expand the kafka scene"

#: backend/flow/views/kafka_shrink.py:44
msgid "开始缩容kafka场景"
msgstr "Start shrinking the kafka scene"

#: backend/flow/views/mysql_add_slave.py:44
msgid "开始添加slave"
msgstr "Start adding slaves"

#: backend/flow/views/mysql_edit_config.py:60
msgid "开始下发修改的参数"
msgstr "Start sending the modified parameters"

#: backend/flow/views/mysql_flashback.py:49
msgid "开始flashback"
msgstr "start flashback"

#: backend/flow/views/mysql_ha_db_table_backup.py:32
msgid "开始库表备份场景"
msgstr "Start database table backup scenario"

#: backend/flow/views/mysql_ha_destroy.py:31
msgid "开始回收mysql主从版场景"
msgstr "Start to recycle the mysql master-slave version scenario"

#: backend/flow/views/mysql_ha_destroy.py:49
msgid "开始禁用mysql主从版场景"
msgstr "Start to disable the mysql master-slave version scenario"

#: backend/flow/views/mysql_ha_destroy.py:65
msgid "开始启动mysql主从版场景"
msgstr "Start the mysql master-slave version scenario"

#: backend/flow/views/mysql_ha_full_backup.py:32
msgid "开始全库备份场景"
msgstr "Start the full database backup scenario"

#: backend/flow/views/mysql_ha_master_fail_over.py:30
msgid "开始执行主故障切换[整机切换]的任务"
msgstr "Start the task of performing the main failover [whole machine switchover]"

#: backend/flow/views/mysql_ha_rename_database.py:30
#: backend/flow/views/mysql_ha_truncate_data.py:30
msgid "开始TenDBHA清档场景"
msgstr "Start the TenDBHA clearing scene"

#: backend/flow/views/mysql_ha_switch.py:30
msgid "开始执行主从切换[整机切换]的任务"
msgstr "Start the task of master-slave switching [whole machine switching]"

#: backend/flow/views/mysql_migrate_cluster.py:46
#: backend/flow/views/mysql_restore_slave.py:49
msgid "开始重建slave"
msgstr "Start rebuilding the slave"

#: backend/flow/views/mysql_proxy_add.py:30
msgid "开始添加mysql_proxy实例场景"
msgstr "Start adding mysql_proxy instance scenarios"

#: backend/flow/views/mysql_proxy_reduce.py:30
msgid "开始回收mysql_proxy实例场景"
msgstr "Start to recycle the mysql_proxy instance scenario"

#: backend/flow/views/mysql_proxy_switch.py:30
msgid "开始替换mysql_proxy实例场景"
msgstr "Start to replace the mysql_proxy instance scenario"

#: backend/flow/views/mysql_pt_table_sync.py:30
msgid "开始执行数据修复"
msgstr "Start data recovery"

#: backend/flow/views/mysql_restore_local_slave.py:44
msgid "开始原地重建slave"
msgstr "Start rebuilding the slave in situ"

#: backend/flow/views/mysql_rollback_data.py:48
msgid "开始重建定点回档数据"
msgstr "Start to rebuild the fixed-point archive data"

#: backend/flow/views/mysql_single_apply.py:57
msgid "开始部署mysql单实例场景"
msgstr "Start deploying mysql single instance scenario"

#: backend/flow/views/mysql_single_destroy.py:30
msgid "开始回收mysql单节点版场景"
msgstr "Start to recycle mysql single-node version scenario"

#: backend/flow/views/mysql_single_destroy.py:46
msgid "开始禁用mysql单节点版场景"
msgstr "Start disabling the mysql single-node version scenario"

#: backend/flow/views/mysql_single_destroy.py:62
msgid "开始启动mysql单节点版场景"
msgstr "Start the mysql single-node version scenario"

#: backend/flow/views/mysql_single_rename_database.py:30
#: backend/flow/views/mysql_single_truncate_data.py:30
msgid "开始TenDBSingle清档场景"
msgstr "Start the TenDBSingle clearing scene"

#: backend/flow/views/pulsar_destroy.py:39
msgid "开始pulsar集群销毁场景"
msgstr "Start the pulsar cluster destruction scenario"

#: backend/flow/views/pulsar_disable.py:39
msgid "开始PULSAR集群禁用场景"
msgstr "Start PULSAR cluster disable scenario"

#: backend/flow/views/pulsar_enable.py:39
msgid "开始PULSAR集群启用场景"
msgstr "Start the PULSAR cluster enablement scenario"

#: backend/flow/views/pulsar_reboot.py:55
msgid "开始重启PULSAR场景"
msgstr "Start restarting the PULSAR scene"

#: backend/flow/views/pulsar_replace.py:28
msgid "开始PULSAR集群替换场景"
msgstr "Start the PULSAR cluster replacement scenario"

#: backend/flow/views/pulsar_shrink.py:28
msgid "开始PULSAR集群缩容场景"
msgstr "Start the PULSAR cluster shrinking scenario"

#: backend/flow/views/rollback_pipeline.py:151
msgid "导入资源池失败"
msgstr "Failed to import resource pool"

#: backend/flow/views/rollback_pipeline.py:171
msgid "高可用架构"
msgstr "High availability architecture"

#: backend/flow/views/rollback_pipeline.py:172
msgid "单实例架构"
msgstr "single instance architecture"

#: backend/flow/views/spider_cluster_database_table_backup.py:30
msgid "开始TenDBCluster库表备份场景"
msgstr "Start TenDBCluster database table backup scenario"

#: backend/flow/views/spider_cluster_destroy.py:34
msgid "开始禁用spider集群场景"
msgstr "Start to disable the spider cluster scenario"

#: backend/flow/views/spider_cluster_destroy.py:53
msgid "开始启用spider集群场景"
msgstr "Start to enable the spider cluster scenario"

#: backend/flow/views/spider_cluster_full_backup.py:30
msgid "开始TenDBCluster全库备份场景"
msgstr "Start TenDBCluster full database backup scenario"

#: backend/flow/views/spider_cluster_rename_database.py:30
msgid "开始TenDBCluster数据库重命名场景"
msgstr "Start the TenDBCluster database renaming scenario"

#: backend/flow/views/spider_cluster_truncate_database.py:30
msgid "开始TenDBCluster清档场景"
msgstr "Start the TenDBCluster clearing scene"

#: backend/iam_app/dataclass/actions.py:47
msgid "业务访问"
msgstr "business visit"

#: backend/iam_app/dataclass/actions.py:56
msgid "数据库管理"
msgstr "database management"

#: backend/iam_app/dataclass/actions.py:65
msgid "平台管理"
msgstr "platform management"

#: backend/iam_app/dataclass/actions.py:78
msgid "动作ID不存在: {}"
msgstr "Action ID does not exist: {}"

#: backend/iam_app/dataclass/resources.py:94
msgid "资源类型ID不存在: {}"
msgstr "Resource type ID does not exist: {}"

#: backend/iam_app/exceptions.py:51
#, python-brace-format
msgid "当前用户无 [{action_name}] 权限"
msgstr "The current user does not have permission for [{action_name}]"

#: backend/iam_app/handlers/drf_perm.py:162
msgid "JWT鉴权错误，错误信息: {}"
msgstr "JWT authentication error, error message: {}"

#: backend/iam_app/handlers/permission.py:74
#, python-brace-format
msgid "获取系统信息错误：{message}"
msgstr "Error getting system information: {message}"

#: backend/iam_app/serializers.py:18
msgid "资源类型"
msgstr "Resource Type"

#: backend/iam_app/serializers.py:19
msgid "资源ID"
msgstr "Resource ID"

#: backend/iam_app/serializers.py:21
msgid "动作ID列表"
msgstr "action id list"

#: backend/iam_app/serializers.py:22
msgid "资源列表"
msgstr "resource list"

#: backend/iam_app/views/views.py:27
msgid "获取系统权限中心信息"
msgstr "Obtaining system authority center information"

#: backend/iam_app/views/views.py:34
msgid "检查当前用户对该动作是否有权限"
msgstr "Check if the current user has permission for the action"

#: backend/iam_app/views/views.py:51
msgid "获取权限申请数据"
msgstr "Obtain permission application data"

#: backend/ticket/builders/__init__.py:149
#, python-brace-format
msgid "{creator}提交了{title}的单据，请查看详情后进行审批"
msgstr ""
"{creator} has submitted the ticket for {title}, please review the details "
"before approval"

#: backend/ticket/builders/__init__.py:154
msgid "单据链接"
msgstr "ticket link"

#: backend/ticket/builders/__init__.py:159
msgid "需求信息"
msgstr "demand information"

#: backend/ticket/builders/__init__.py:305
#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:176
#: backend/ticket/constants.py:307
msgid "单据审批"
msgstr "Ticket approval"

#: backend/ticket/builders/cloud/dbha_add.py:30
msgid "新DBHA-GM机器的部署信息"
msgstr "Deployment information for new DBHA-GM machines"

#: backend/ticket/builders/cloud/dbha_add.py:31
msgid "新DBHA-AGENT机器的部署信息"
msgstr "Deployment information for new DBHA-AGENT machines"

#: backend/ticket/builders/cloud/dbha_add.py:47
msgid "DBHA 服务新增"
msgstr "DBHA service added"

#: backend/ticket/builders/cloud/dbha_reduce.py:32
msgid "裁撤的DBHA-GM列表"
msgstr "List of abolished DBHA-GMs"

#: backend/ticket/builders/cloud/dbha_reduce.py:35
msgid "裁撤的DBHA-AGENT列表"
msgstr "List of abolished DBHA-AGENTs"

#: backend/ticket/builders/cloud/dbha_reduce.py:44
msgid "请至少保证一个agent/gm存活"
msgstr "Please keep at least one agent/gm alive"

#: backend/ticket/builders/cloud/dbha_reduce.py:61
msgid "DBHA 服务裁撤"
msgstr "DBHA service abolition"

#: backend/ticket/builders/cloud/dbha_reload.py:29
msgid "重装的GM ID列表"
msgstr "List of Reloaded GM IDs"

#: backend/ticket/builders/cloud/dbha_reload.py:30
msgid "重装的AGENT ID列表"
msgstr "Reloaded AGENT ID list"

#: backend/ticket/builders/cloud/dbha_reload.py:46
msgid "DBHA 服务重装"
msgstr "DBHA service reload"

#: backend/ticket/builders/cloud/dbha_replace.py:30
msgid "被替换旧DBHA-GM服务ID"
msgstr "Replaced by the old DBHA-GM service ID"

#: backend/ticket/builders/cloud/dbha_replace.py:31
msgid "替换后的新的DBHA-GM服务信息"
msgstr "New DBHA-GM service information after replacement"

#: backend/ticket/builders/cloud/dbha_replace.py:33
msgid "被替换旧DBHA-AGENT服务ID"
msgstr "Replaced by the old DBHA-AGENT service ID"

#: backend/ticket/builders/cloud/dbha_replace.py:34
msgid "替换后的新的DBHA-AGENT服务信息"
msgstr "New DBHA-AGENT service information after replacement"

#: backend/ticket/builders/cloud/dbha_replace.py:38
msgid "不允许同时对agent和gm进行替换"
msgstr "It is not allowed to replace agent and gm at the same time"

#: backend/ticket/builders/cloud/dbha_replace.py:62
msgid "DBHA 服务替换"
msgstr "DBHA service replacement"

#: backend/ticket/builders/cloud/dns_add.py:29
msgid "新DNS机器的部署信息"
msgstr "Deployment information for the new DNS machine"

#: backend/ticket/builders/cloud/dns_add.py:43
#: backend/ticket/builders/cloud/drs_add.py:43
msgid "DNS 服务新增"
msgstr "DNS service added"

#: backend/ticket/builders/cloud/dns_reduce.py:30
msgid "裁撤的DNS列表"
msgstr "Retired DNS list"

#: backend/ticket/builders/cloud/dns_reduce.py:36
msgid "请至少保证一个dns服务存活"
msgstr "Please ensure that at least one dns service is alive"

#: backend/ticket/builders/cloud/dns_reduce.py:52
msgid "DNS 服务裁撤"
msgstr "DNS service down"

#: backend/ticket/builders/cloud/dns_reload.py:29
msgid "重装的DNSID列表"
msgstr "Reloaded DNSID list"

#: backend/ticket/builders/cloud/dns_reload.py:43
msgid "DNS 服务重装"
msgstr "DNS service reinstallation"

#: backend/ticket/builders/cloud/dns_replace.py:29
msgid "被替换旧DNS服务ID"
msgstr "Replaced by the old DNS service ID"

#: backend/ticket/builders/cloud/dns_replace.py:30
msgid "替换后的新的DNS服务信息"
msgstr "New DNS service information after replacement"

#: backend/ticket/builders/cloud/dns_replace.py:44
msgid "DNS 服务替换"
msgstr "DNS service replacement"

#: backend/ticket/builders/cloud/drs_add.py:29
msgid "新drs机器的部署信息"
msgstr "Deployment information for new drs machines"

#: backend/ticket/builders/cloud/drs_reduce.py:30
msgid "裁撤的drs列表"
msgstr "abolished drs list"

#: backend/ticket/builders/cloud/drs_reduce.py:36
msgid "请至少保证一个drs服务存活"
msgstr "Please ensure that at least one drs service is alive"

#: backend/ticket/builders/cloud/drs_reduce.py:52
msgid "DRS 服务裁撤"
msgstr "DRS service abolition"

#: backend/ticket/builders/cloud/drs_reload.py:29
msgid "重装的drsID列表"
msgstr "Reloaded drsID list"

#: backend/ticket/builders/cloud/drs_reload.py:43
msgid "DRS 服务重装"
msgstr "DRS Service Reload"

#: backend/ticket/builders/cloud/drs_replace.py:29
msgid "被替换旧DRS服务ID"
msgstr "Replaced by the old DRS Service ID"

#: backend/ticket/builders/cloud/drs_replace.py:30
msgid "替换后的新的DRS服务信息"
msgstr "New DRS service information after replacement"

#: backend/ticket/builders/cloud/drs_replace.py:44
msgid "DRS 服务替换"
msgstr "DRS Service Replacement"

#: backend/ticket/builders/cloud/nginx_reload.py:28
msgid "重装的nginx id"
msgstr "Reloaded nginx id"

#: backend/ticket/builders/cloud/nginx_reload.py:49
msgid "Nginx 服务重装"
msgstr "Nginx service reinstallation"

#: backend/ticket/builders/cloud/nginx_replace.py:30
#: backend/ticket/builders/cloud/service_apply.py:31
msgid "部署nginx服务主机信息"
msgstr "Deploy nginx service host information"

#: backend/ticket/builders/cloud/nginx_replace.py:33
msgid "替换的nginx id"
msgstr "Replaced nginx id"

#: backend/ticket/builders/cloud/nginx_replace.py:34
#: backend/ticket/builders/cloud/service_apply.py:42
#: backend/ticket/builders/cloud/service_apply.py:51
msgid "nginx服务部署信息"
msgstr "nginx service deployment information"

#: backend/ticket/builders/cloud/nginx_replace.py:53
msgid "Nginx 服务替换"
msgstr "Nginx service replacement"

#: backend/ticket/builders/cloud/service_apply.py:28
msgid "部署drs服务主机信息"
msgstr "Deploy drs service host information"

#: backend/ticket/builders/cloud/service_apply.py:34
msgid "部署dns服务主机信息"
msgstr "Deploy dns service host information"

#: backend/ticket/builders/cloud/service_apply.py:37
msgid "部署dbha-agent服务主机信息"
msgstr "Deploy dbha-agent service host information"

#: backend/ticket/builders/cloud/service_apply.py:38
msgid "部署dbha-gm服务主机信息"
msgstr "Deploy dbha-gm service host information"

#: backend/ticket/builders/cloud/service_apply.py:41
#: backend/ticket/builders/cloud/service_apply.py:50
msgid "drs服务部署信息"
msgstr "drs service deployment information"

#: backend/ticket/builders/cloud/service_apply.py:43
#: backend/ticket/builders/cloud/service_apply.py:52
msgid "dns服务部署信息"
msgstr "DNS service deployment information"

#: backend/ticket/builders/cloud/service_apply.py:44
#: backend/ticket/builders/cloud/service_apply.py:53
msgid "dbha服务部署信息"
msgstr "dbha service deployment information"

#: backend/ticket/builders/cloud/service_apply.py:115
msgid "Nginx 服务部署"
msgstr "Nginx service deployment"

#: backend/ticket/builders/cloud/service_apply.py:121
msgid "DNS 服务部署"
msgstr "DNS service deployment"

#: backend/ticket/builders/cloud/service_apply.py:127
msgid "DRS 服务部署"
msgstr "DRS Service Deployment"

#: backend/ticket/builders/cloud/service_apply.py:133
msgid "DBHA 服务部署"
msgstr "DBHA service deployment"

#: backend/ticket/builders/common/base.py:76
msgid "请输入主机的云区域信息"
msgstr "Please enter the cloud region information of the host"

#: backend/ticket/builders/common/base.py:137
msgid ""
"新DB名字{}格式不合法，请保证数据库名以小写字母开头且只能包含字母、数字、连接"
"符-和下划线_，并且长度在1到39字符之间"
msgstr ""
"The format of the new DB name {} is invalid. Please ensure that the database "
"name starts with a lowercase letter and can only contain letters, numbers, "
"hyphens - and underscores _, and the length is between 1 and 39 characters"

#: backend/ticket/builders/common/base.py:141
msgid "DB名{}不能以stage_truncate开头"
msgstr "DB name {} cannot start with stage_truncate"

#: backend/ticket/builders/common/base.py:144
msgid "DB名{}不能以dba_rollback结尾"
msgstr "DB name {} cannot end with dba_rollback"

#: backend/ticket/builders/common/base.py:153
msgid "业务{}下已经存在同类型: {}, 同名: {} 集群，请重新命名"
msgstr "A cluster of the same type: {}, with the same name: {} already exists under business {}, please rename it"

#: backend/ticket/builders/common/base.py:173
msgid "不允许%单独使用，不允许*组合使用"
msgstr ""
"% is not allowed to be used alone, and * is not allowed to be used in "
"combination"

#: backend/ticket/builders/common/base.py:176
msgid "包含通配符时，每一个输入框只能允许单一对象"
msgstr ""
"When wildcards are included, each input box can only allow a single object"

#: backend/ticket/builders/common/base.py:179
msgid "字符不允许只包含空格"
msgstr "Characters are not allowed to contain only spaces"

#: backend/ticket/builders/common/base.py:182
msgid "DB选择框不允许为空"
msgstr "The DB selection box is not allowed to be empty"

#: backend/ticket/builders/common/base.py:185
msgid "table选择框不允许为空"
msgstr "The table selection box is not allowed to be empty"

#: backend/ticket/builders/common/base.py:188
msgid "忽略DB选择框和忽略table选择框要么同时为空，要么同时不为空"
msgstr ""
"Ignore the DB selection box and ignore the table selection box are either "
"empty or not empty at the same time"

#: backend/ticket/builders/common/base.py:200
msgid "数据库{}不在所属集群{}中，请重新查验"
msgstr "The database {} does not belong to the cluster {}, please check again"

#: backend/ticket/builders/common/bigdata.py:38
msgid "节点列表信息"
msgstr "Node List Information"

#: backend/ticket/builders/common/bigdata.py:52
#: backend/ticket/builders/redis/redis_cluster_apply.py:96
msgid "主机{}不在空闲机池，请保证所选的主机均来自空闲机"
msgstr ""
"The host {} is not in the idle machine pool, please ensure that the selected "
"hosts are all from idle machines"

#: backend/ticket/builders/common/bigdata.py:61
msgid "主机{}已经被使用，请重新选择主机"
msgstr "The host {} is already in use, please reselect the host"

#: backend/ticket/builders/common/bigdata.py:82
#: backend/ticket/builders/mysql/base.py:175
msgid "集群{}状态转移不合法：{}--->{} is invalid"
msgstr "Cluster {} state transfer is invalid: {}---&gt;{} is invalid"

#: backend/ticket/builders/common/bigdata.py:90
msgid "资源池规格"
msgstr "Resource pool specification"

#: backend/ticket/builders/common/bigdata.py:110
#: backend/ticket/builders/influxdb/influxdb_apply.py:29
#: backend/ticket/builders/mysql/mysql_single_apply.py:48
#: backend/ticket/builders/redis/redis_cluster_apply.py:33
#: backend/ticket/builders/spider/tendb_apply.py:32
msgid "城市代码"
msgstr "city ​​code"

#: backend/ticket/builders/common/bigdata.py:112
#: backend/ticket/builders/redis/redis_cluster_apply.py:31
#: backend/ticket/serializers.py:77
msgid "业务英文缩写"
msgstr "business abbreviation"

#: backend/ticket/builders/common/bigdata.py:113
msgid "集群名称（英文数字及下划线）"
msgstr "Cluster name (alphanumeric and underscore)"

#: backend/ticket/builders/common/bigdata.py:114
#: backend/ticket/builders/redis/redis_cluster_apply.py:42
msgid "集群别名（一般为中文别名）"
msgstr "Cluster alias (usually Chinese alias)"

#: backend/ticket/builders/common/bigdata.py:118
msgid "资源申请规格"
msgstr "Resource Application Specifications"

#: backend/ticket/builders/common/bigdata.py:156
msgid "主机{}出现角色互斥，{}与{}冲突"
msgstr "Host {} has a role mutual exclusion, and {} conflicts with {}"

#: backend/ticket/builders/common/bigdata.py:170
#: backend/ticket/builders/common/bigdata.py:291
msgid "旧节点信息集合"
msgstr "Collection of old node information"

#: backend/ticket/builders/common/bigdata.py:170
#: backend/ticket/builders/common/bigdata.py:172
#: backend/ticket/builders/common/bigdata.py:291
#: backend/ticket/builders/common/bigdata.py:293
msgid "节点信息"
msgstr "node information"

#: backend/ticket/builders/common/bigdata.py:172
#: backend/ticket/builders/common/bigdata.py:293
msgid "新节点信息集合"
msgstr "New node information collection"

#: backend/ticket/builders/common/bigdata.py:174
msgid "规格类型"
msgstr "Specification type"

#: backend/ticket/builders/common/bigdata.py:181
#: backend/ticket/builders/common/bigdata.py:302
msgid "替换前后角色类型不一致，请保证替换前后角色类型和数量一致！"
msgstr ""
"The types of characters before and after the replacement are inconsistent, "
"please ensure that the types and numbers of characters before and after the "
"replacement are the same!"

#: backend/ticket/builders/common/bigdata.py:189
#: backend/ticket/builders/common/bigdata.py:310
msgid "角色{}替换前后数量不一致，请保证替换前后角色类型和数量一致！"
msgstr ""
"The number of roles {} before and after replacement is inconsistent, please "
"ensure that the type and number of characters before and after replacement "
"are consistent!"

#: backend/ticket/builders/common/bigdata.py:208
msgid "实例名"
msgstr "instance name"

#: backend/ticket/builders/common/bigdata.py:219
#: backend/ticket/builders/common/bigdata.py:285
msgid "实例{}不存在, 请重新确认实例的合法性"
msgstr ""
"Instance {} does not exist, please reconfirm the legitimacy of the instance"

#: backend/ticket/builders/common/bigdata.py:224
msgid "无法进行重启操作，原因:{}"
msgstr "Unable to perform restart operation, reason: {}"

#: backend/ticket/builders/common/bigdata.py:295
msgid "规格"
msgstr "Specification"

#: backend/ticket/builders/common/constants.py:70
msgid "本地"
msgstr "local"

#: backend/ticket/builders/common/constants.py:71
msgid "远程"
msgstr "Remotely"

#: backend/ticket/builders/common/constants.py:88
msgid "手动提单修复"
msgstr "Manual Bill of Lading Repair"

#: backend/ticket/builders/common/constants.py:89
msgid "例行校验修复"
msgstr "Routine check repair"

#: backend/ticket/builders/common/constants.py:97
msgid "远程备份 + 时间"
msgstr "remote backup + time"

#: backend/ticket/builders/common/constants.py:98
msgid "远程备份 + backupid"
msgstr "remote backup + backupid"

#: backend/ticket/builders/common/constants.py:99
msgid "本地备份 + 时间"
msgstr "local backup + time"

#: backend/ticket/builders/common/constants.py:100
msgid "本地备份 + backupid"
msgstr "local backup + backupid"

#: backend/ticket/builders/es/es_apply.py:45
msgid "master节点数不为3台! 请保证master的部署节点为3"
msgstr ""
"The number of master nodes is not 3! Please ensure that the deployment nodes "
"of the master are 3"

#: backend/ticket/builders/es/es_apply.py:52
msgid "请保证在部署client节点的情况下，部署至少一台hot/cold节点"
msgstr ""
"Please ensure that at least one hot/cold node is deployed when the client "
"node is deployed"

#: backend/ticket/builders/es/es_apply.py:125
msgid "ES集群部署"
msgstr "ES cluster deployment"

#: backend/ticket/builders/es/es_destroy.py:36
msgid "ES集群删除"
msgstr "ES cluster deletion"

#: backend/ticket/builders/es/es_disable.py:36
msgid "ES集群停用"
msgstr "ES cluster deactivated"

#: backend/ticket/builders/es/es_enable.py:36
msgid "ES集群启用"
msgstr "ES cluster enabled"

#: backend/ticket/builders/es/es_reboot.py:38
msgid "ES实例重启"
msgstr "ES instance restart"

#: backend/ticket/builders/es/es_replace.py:47
msgid "ES集群替换"
msgstr "ES cluster replacement"

#: backend/ticket/builders/es/es_scale_up.py:44
msgid "实例数必须为正数，请确保实例的合法性"
msgstr ""
"The number of instances must be a positive number, please ensure the "
"legitimacy of the instance"

#: backend/ticket/builders/es/es_scale_up.py:98
msgid "ES集群扩容"
msgstr "ES cluster expansion"

#: backend/ticket/builders/es/es_shrink.py:30
msgid "hot信息列表"
msgstr "hot information list"

#: backend/ticket/builders/es/es_shrink.py:31
msgid "cold信息列表"
msgstr "cold information list"

#: backend/ticket/builders/es/es_shrink.py:32
msgid "client信息列表"
msgstr "client information list"

#: backend/ticket/builders/es/es_shrink.py:34
msgid "nodes节点列表"
msgstr "nodes node list"

#: backend/ticket/builders/es/es_shrink.py:59
#: backend/ticket/builders/kafka/kafka_shrink.py:58
msgid "{}: 至少保留1台!"
msgstr "{}: Keep at least 1 unit!"

#: backend/ticket/builders/es/es_shrink.py:62
msgid "缩容仅支持hot、cold和client"
msgstr "Scaling only supports hot, cold and client"

#: backend/ticket/builders/es/es_shrink.py:78
msgid "ES集群缩容"
msgstr "ES cluster shrinkage"

#: backend/ticket/builders/hdfs/hdfs_apply.py:40
msgid "Datanode节点数量<2台，请增加Datanode节点数量"
msgstr ""
"The number of Datanode nodes is less than 2, please increase the number of "
"Datanode nodes"

#: backend/ticket/builders/hdfs/hdfs_apply.py:45
msgid "Namenode节点数量不等于2台，请确保Namenode数量为2台"
msgstr ""
"The number of Namenode nodes is not equal to 2, please ensure that the "
"number of Namenodes is 2"

#: backend/ticket/builders/hdfs/hdfs_apply.py:50
msgid ""
"ZooKeeper/JournalNode节点数量不等于3台，请确保ZooKeeper/JournalNode数量为3台"
msgstr ""
"The number of ZooKeeper/JournalNode nodes is not equal to 3, please ensure "
"that the number of ZooKeeper/JournalNode is 3"

#: backend/ticket/builders/hdfs/hdfs_apply.py:139
#: backend/ticket/constants.py:184
msgid "HDFS 集群部署"
msgstr "HDFS cluster deployment"

#: backend/ticket/builders/hdfs/hdfs_destroy.py:36
#: backend/ticket/constants.py:191
msgid "HDFS 集群删除"
msgstr "HDFS cluster deletion"

#: backend/ticket/builders/hdfs/hdfs_disable.py:36
#: backend/ticket/constants.py:190
msgid "HDFS 集群禁用"
msgstr "HDFS cluster disabled"

#: backend/ticket/builders/hdfs/hdfs_enable.py:36
#: backend/ticket/constants.py:189
msgid "HDFS 集群启用"
msgstr "HDFS cluster enabled"

#: backend/ticket/builders/hdfs/hdfs_reboot.py:39
msgid "HDFS实例重启"
msgstr "HDFS instance restart"

#: backend/ticket/builders/hdfs/hdfs_replace.py:37
msgid "hdfs替换只支持datanode角色"
msgstr "hdfs replacement only supports datanode role"

#: backend/ticket/builders/hdfs/hdfs_replace.py:57
#: backend/ticket/constants.py:188
msgid "HDFS 集群替换"
msgstr "HDFS cluster replacement"

#: backend/ticket/builders/hdfs/hdfs_scale_up.py:64
#: backend/ticket/constants.py:185
msgid "HDFS 集群扩容"
msgstr "HDFS cluster expansion"

#: backend/ticket/builders/hdfs/hdfs_shrink.py:30
#: backend/ticket/builders/kafka/kafka_shrink.py:31
#: backend/ticket/builders/pulsar/pulsar_shrink.py:34
msgid "broker信息列表"
msgstr "broker information list"

#: backend/ticket/builders/hdfs/hdfs_shrink.py:32
#: backend/ticket/builders/kafka/kafka_shrink.py:33
msgid "nodes节点信息"
msgstr "nodesNode information"

#: backend/ticket/builders/hdfs/hdfs_shrink.py:56
msgid "{}: 至少保留2台!"
msgstr "{}: Keep at least 2 units!"

#: backend/ticket/builders/hdfs/hdfs_shrink.py:59
msgid "缩容仅支持DataNode角色"
msgstr "Scaling only supports the DataNode role"

#: backend/ticket/builders/hdfs/hdfs_shrink.py:75
#: backend/ticket/constants.py:186
msgid "HDFS 集群缩容"
msgstr "HDFS cluster shrink"

#: backend/ticket/builders/influxdb/influxdb_apply.py:35
msgid "分组名字"
msgstr "group name"

#: backend/ticket/builders/influxdb/influxdb_apply.py:36
#: backend/ticket/builders/mysql/mysql_add_slave.py:37
#: backend/ticket/builders/mysql/mysql_migrate_cluster.py:33
#: backend/ticket/builders/mysql/mysql_proxy_add.py:34
#: backend/ticket/builders/mysql/mysql_proxy_switch.py:35
msgid "资源规格"
msgstr "resource specification"

#: backend/ticket/builders/influxdb/influxdb_apply.py:75
#: backend/ticket/constants.py:211
msgid "InfluxDB 实例部署"
msgstr "InfluxDB instance deployment"

#: backend/ticket/builders/influxdb/influxdb_destroy.py:37
#: backend/ticket/constants.py:215
msgid "InfluxDB 实例删除"
msgstr "InfluxDB instance deletion"

#: backend/ticket/builders/influxdb/influxdb_disable.py:37
#: backend/ticket/constants.py:214
msgid "InfluxDB 实例禁用"
msgstr "InfluxDB instance disabled"

#: backend/ticket/builders/influxdb/influxdb_enable.py:37
#: backend/ticket/constants.py:213
msgid "InfluxDB 实例启用"
msgstr "InfluxDB instance enabled"

#: backend/ticket/builders/influxdb/influxdb_reboot.py:39
#: backend/ticket/constants.py:212
msgid "InfluxDB 实例重启"
msgstr "InfluxDB instance restart"

#: backend/ticket/builders/influxdb/influxdb_replace.py:46
#: backend/ticket/constants.py:216
msgid "InfluxDB 实例替换"
msgstr "InfluxDB instance replacement"

#: backend/ticket/builders/kafka/kafka_apply.py:73
#: backend/ticket/builders/pulsar/pulsar_apply.py:29
msgid "副本数量"
msgstr "number of copies"

#: backend/ticket/builders/kafka/kafka_apply.py:76
#: backend/ticket/builders/pulsar/pulsar_apply.py:30
msgid "分区数量"
msgstr "number of partitions"

#: backend/ticket/builders/kafka/kafka_apply.py:79
#: backend/ticket/builders/pulsar/pulsar_apply.py:31
msgid "保留时长（小时）"
msgstr "Hold time (hours)"

#: backend/ticket/builders/kafka/kafka_apply.py:101
msgid "Zookeeper节点数量不等于3台，请确保Zookeeper节点数量为3"
msgstr ""
"The number of Zookeeper nodes is not equal to 3, please ensure that the "
"number of Zookeeper nodes is 3"

#: backend/ticket/builders/kafka/kafka_apply.py:107
msgid ""
"Broker节点与副本节点数量有误，请确保Broker节点至少为1且副本数量<=Broker数量"
msgstr ""
"The number of Broker nodes and copy nodes is wrong, please ensure that the "
"number of Broker nodes is at least 1 and the number of copies is &lt;= the "
"number of Brokers"

#: backend/ticket/builders/kafka/kafka_apply.py:133
#: backend/ticket/constants.py:175
msgid "Kafka 集群部署"
msgstr "Kafka cluster deployment"

#: backend/ticket/builders/kafka/kafka_destroy.py:37
msgid "Kafka 集群销毁"
msgstr "Kafka cluster destruction"

#: backend/ticket/builders/kafka/kafka_disable.py:37
msgid "Kafka 集群停用"
msgstr "Kafka cluster down"

#: backend/ticket/builders/kafka/kafka_enable.py:37
#: backend/ticket/constants.py:180
msgid "Kafka 集群启用"
msgstr "Kafka cluster enabled"

#: backend/ticket/builders/kafka/kafka_reboot.py:39
#: backend/ticket/constants.py:178
msgid "Kafka 实例重启"
msgstr "Kafka instance restart"

#: backend/ticket/builders/kafka/kafka_replace.py:48
#: backend/ticket/constants.py:179
msgid "Kafka 集群替换"
msgstr "Kafka cluster replacement"

#: backend/ticket/builders/kafka/kafka_scale_up.py:65
#: backend/ticket/constants.py:176
msgid "Kafka 集群扩容"
msgstr "Kafka cluster expansion"

#: backend/ticket/builders/kafka/kafka_shrink.py:61
msgid "缩容仅支持Broker"
msgstr "Scaling only supports Broker"

#: backend/ticket/builders/kafka/kafka_shrink.py:77
#: backend/ticket/constants.py:177
msgid "Kafka 集群缩容"
msgstr "Kafka cluster shrink"

#: backend/ticket/builders/mysql/base.py:98
msgid "matser实例状态异常，暂时无法执行该单据类型：{}"
msgstr ""
"The state of the matser instance is abnormal, and this ticket type cannot "
"be executed temporarily: {}"

#: backend/ticket/builders/mysql/base.py:104
msgid "slave实例状态异常，暂时无法执行该单据类型：{}"
msgstr ""
"The status of the slave instance is abnormal, and the ticket type cannot "
"be executed temporarily: {}"

#: backend/ticket/builders/mysql/base.py:110
msgid "proxy实例状态异常，暂时无法执行该单据类型：{}"
msgstr ""
"The status of the proxy instance is abnormal, and the ticket type cannot "
"be executed temporarily: {}"

#: backend/ticket/builders/mysql/base.py:120
msgid "请保证所选集群{}与新增机器{}在同一云区域下"
msgstr ""
"Please ensure that the selected cluster {} and the newly added machine {} "
"are in the same cloud region"

#: backend/ticket/builders/mysql/base.py:129
msgid "请保证实例f{}的角色类型为{}"
msgstr "Please ensure that the role type of the instance f{} is {}"

#: backend/ticket/builders/mysql/base.py:136
msgid "请保证所选集群{}都是{}集群"
msgstr "Please ensure that the selected clusters {} are all {} clusters"

#: backend/ticket/builders/mysql/base.py:148
msgid "请保证所选实例{}的关联集群为{}"
msgstr ""
"Please ensure that the associated cluster of the selected instance {} is {}"

#: backend/ticket/builders/mysql/base.py:166
msgid "是否强制下架"
msgstr "Is it mandatory to take off the shelves"

#: backend/ticket/builders/mysql/mysql_add_slave.py:32
msgid "新从库机器信息"
msgstr "New slave machine information"

#: backend/ticket/builders/mysql/mysql_add_slave.py:39
msgid "添加从库信息"
msgstr "Add slave information"

#: backend/ticket/builders/mysql/mysql_add_slave.py:41
#: backend/ticket/builders/mysql/mysql_migrate_cluster.py:37
#: backend/ticket/builders/mysql/mysql_proxy_add.py:38
#: backend/ticket/builders/mysql/mysql_proxy_switch.py:38
msgid "机器来源"
msgstr "machine source"

#: backend/ticket/builders/mysql/mysql_add_slave.py:87
msgid "添加从库执行"
msgstr "Add slave execution"

#: backend/ticket/builders/mysql/mysql_authorize_rules.py:41
msgid "用户输入的excel下载文件地址"
msgstr "The excel download file address entered by the user"

#: backend/ticket/builders/mysql/mysql_authorize_rules.py:43
msgid "授权数据信息列表"
msgstr "List of authorized data information"

#: backend/ticket/builders/mysql/mysql_authorize_rules.py:55
msgid "授权数据已过期，请重新提交授权表单或excel文件"
msgstr ""
"The authorization data has expired, please resubmit the authorization form "
"or excel file"

#: backend/ticket/builders/mysql/mysql_authorize_rules.py:73
msgid "授权执行"
msgstr "authorized execution"

#: backend/ticket/builders/mysql/mysql_authorize_rules.py:83
msgid "Excel 授权执行"
msgstr "Excel authorization execution"

#: backend/ticket/builders/mysql/mysql_checksum.py:32
msgid "slave信息列表"
msgstr "slave information list"

#: backend/ticket/builders/mysql/mysql_checksum.py:39
msgid "超时时间"
msgstr "overtime time"

#: backend/ticket/builders/mysql/mysql_checksum.py:40
msgid "定时触发时间"
msgstr "Timing trigger time"

#: backend/ticket/builders/mysql/mysql_checksum.py:41
msgid "全备信息列表"
msgstr "Full information list"

#: backend/ticket/builders/mysql/mysql_checksum.py:42
#: backend/ticket/builders/mysql/mysql_data_repair.py:32
msgid "数据修复信息"
msgstr "Data Repair Information"

#: backend/ticket/builders/mysql/mysql_checksum.py:43
#: backend/ticket/builders/mysql/mysql_data_repair.py:34
msgid "非innodb表是否修复"
msgstr "Are non-innodb tables repaired?"

#: backend/ticket/builders/mysql/mysql_checksum.py:156
msgid "数据校验执行"
msgstr "Data validation execution"

#: backend/ticket/builders/mysql/mysql_checksum.py:173
msgid "手动"
msgstr "manual"

#: backend/ticket/builders/mysql/mysql_checksum.py:175
msgid "自动"
msgstr "automatic"

#: backend/ticket/builders/mysql/mysql_checksum.py:183
msgid "数据修复{}执行"
msgstr "datafix{} execute"

#: backend/ticket/builders/mysql/mysql_clone_rules.py:51
msgid "客户端权限克隆执行"
msgstr "Client permission clone execution"

#: backend/ticket/builders/mysql/mysql_clone_rules.py:64
msgid "权限克隆数据已过期，请重新提交权限克隆表单或excel文件"
msgstr ""
"The permission clone data has expired, please resubmit the permission clone "
"form or excel file"

#: backend/ticket/builders/mysql/mysql_clone_rules.py:71
msgid "DB实例权限克隆执行"
msgstr "DB instance permission clone execution"

#: backend/ticket/builders/mysql/mysql_data_repair.py:29
msgid "master信息"
msgstr "master information"

#: backend/ticket/builders/mysql/mysql_data_repair.py:30
msgid "slaves信息"
msgstr "slaves information"

#: backend/ticket/builders/mysql/mysql_data_repair.py:33
msgid "校验单据结果表名"
msgstr "Verification ticket result table name"

#: backend/ticket/builders/mysql/mysql_data_repair.py:35
msgid "校验结果是否一致"
msgstr "Whether the verification result is consistent"

#: backend/ticket/builders/mysql/mysql_data_repair.py:38
msgid "数据修复触发类型"
msgstr "Data Repair Trigger Type"

#: backend/ticket/builders/mysql/mysql_data_repair.py:51
msgid "数据修复执行"
msgstr "Data Repair Execution"

#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:29
msgid "备份新机器"
msgstr "backup new machine"

#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:35
msgid "备份文件信息"
msgstr "Backup file information"

#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:37
#: backend/ticket/builders/mysql/mysql_flashback.py:30
msgid "目标库列表"
msgstr "target db list"

#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:38
#: backend/ticket/builders/mysql/mysql_flashback.py:31
msgid "忽略库列表"
msgstr "ignore db list"

#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:39
#: backend/ticket/builders/mysql/mysql_flashback.py:32
msgid "目标table列表"
msgstr "target table list"

#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:40
#: backend/ticket/builders/mysql/mysql_flashback.py:33
msgid "忽略table列表"
msgstr "ignore table list"

#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:42
msgid "定点回档信息"
msgstr "Fixed-point rollback information"

#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:52
msgid "请保证rollback_time或backupinfo参数至少存在一个"
msgstr ""
"Please ensure that there is at least one rollback_time or backupinfo "
"parameter"

#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:60
msgid "定点时间{}不能晚于当前时间{}"
msgstr "Fixed time {} cannot be later than current time {}"

#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:81
msgid "定点回档执行"
msgstr "Fixed-point rollback execution"

#: backend/ticket/builders/mysql/mysql_flashback.py:35
msgid "flashback工具地址"
msgstr "flashback tool address"

#: backend/ticket/builders/mysql/mysql_flashback.py:37
msgid "记录文件"
msgstr "log file"

#: backend/ticket/builders/mysql/mysql_flashback.py:39
msgid "flashback信息"
msgstr "flashback information"

#: backend/ticket/builders/mysql/mysql_flashback.py:51
msgid "flash的起止时间{}--{}不合法，请保证开始时间小于结束时间，并且二者不大于当前时间"
msgstr "The start and end time of flash {}--{} is invalid, please ensure that the start time is less than the end time, and the two are not greater than the current time"

#: backend/ticket/builders/mysql/mysql_flashback.py:68
msgid "闪回执行"
msgstr "flashback execution"

#: backend/ticket/builders/mysql/mysql_ha_apply.py:37
msgid "容灾级别"
msgstr "Disaster recovery level"

#: backend/ticket/builders/mysql/mysql_ha_apply.py:39
msgid "Proxy起始端口"
msgstr "Proxy start port"

#: backend/ticket/builders/mysql/mysql_ha_apply.py:59
msgid ""
"机器输入数量有误，期待输入{}台proxy和backend机器，但实际输入{}台proxy机器和{}"
"台backend机器"
msgstr ""
"The number of machines entered is wrong. Expected to input {} proxy and "
"backend machines, but actually entered {} proxy machines and {} backend "
"machines"

#: backend/ticket/builders/mysql/mysql_ha_apply.py:126
msgid "MySQL高可用部署执行"
msgstr "MySQL high availability deployment execution"

#: backend/ticket/builders/mysql/mysql_ha_apply.py:145
#: backend/ticket/builders/mysql/mysql_single_apply.py:203
msgid "获取数据库字符集或版本失败，请检查获取参数, db_config: {}"
msgstr ""
"Failed to get the database character set or version, please check the "
"parameters, db_config: {}"

#: backend/ticket/builders/mysql/mysql_ha_backup.py:36
msgid "备份信息列表"
msgstr "Backup Information List"

#: backend/ticket/builders/mysql/mysql_ha_backup.py:58
msgid "库表备份执行"
msgstr "Database table backup execution"

#: backend/ticket/builders/mysql/mysql_ha_clear.py:34
msgid "清档类型"
msgstr "Clearance type"

#: backend/ticket/builders/mysql/mysql_ha_clear.py:37
msgid "清档信息列表"
msgstr "List of clearance information"

#: backend/ticket/builders/mysql/mysql_ha_clear.py:63
msgid "清档执行"
msgstr "Clear file execution"

#: backend/ticket/builders/mysql/mysql_ha_destroy.py:36
msgid "MySQL高可用销毁执行"
msgstr "MySQL high availability destruction execution"

#: backend/ticket/builders/mysql/mysql_ha_disable.py:36
msgid "MySQL高可用禁用执行"
msgstr "MySQL high availability disable execution"

#: backend/ticket/builders/mysql/mysql_ha_enable.py:36
msgid "MySQL高可用启用执行"
msgstr "MySQL HA Enabled Execution"

#: backend/ticket/builders/mysql/mysql_ha_full_backup.py:30
msgid "备份类型"
msgstr "backup type"

#: backend/ticket/builders/mysql/mysql_ha_full_backup.py:31
msgid "备份文件tag"
msgstr "backup file tag"

#: backend/ticket/builders/mysql/mysql_ha_full_backup.py:32
msgid "集群列表"
msgstr "cluster list"

#: backend/ticket/builders/mysql/mysql_ha_full_backup.py:47
msgid "全库备份执行"
msgstr "Full database backup execution"

#: backend/ticket/builders/mysql/mysql_ha_rename.py:31
msgid "源数据库名"
msgstr "source database name"

#: backend/ticket/builders/mysql/mysql_ha_rename.py:32
msgid "目标数据库名"
msgstr "target database name"

#: backend/ticket/builders/mysql/mysql_ha_rename.py:35
msgid "重命名数据库列表"
msgstr "Rename database list"

#: backend/ticket/builders/mysql/mysql_ha_rename.py:58
msgid "系统内置数据库[{}]，不允许重命名"
msgstr "System built-in database [{}], renaming is not allowed"

#: backend/ticket/builders/mysql/mysql_ha_rename.py:61
msgid "请保证集群{}中源数据库名{}的名字唯一"
msgstr ""
"Please ensure that the name of the source database name {} in the cluster {} "
"is unique"

#: backend/ticket/builders/mysql/mysql_ha_rename.py:64
msgid "请保证集群{}中新数据库名{}的名字唯一"
msgstr ""
"Please ensure that the name of the new database name {} in the cluster {} is "
"unique"

#: backend/ticket/builders/mysql/mysql_ha_rename.py:68
msgid "请保证源数据库名{}不要出现在新数据库名列表中"
msgstr ""
"Please ensure that the source database name {} does not appear in the list "
"of new database names"

#: backend/ticket/builders/mysql/mysql_ha_rename.py:84
msgid "DB重命名执行"
msgstr "DB rename execution"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:37
msgid "语义执行的流程ID"
msgstr "Process ID for semantic execution"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:45
msgid "无法获取语义执行id:{}的上下文数据，请检查语义执行任务是否成功完成"
msgstr ""
"Failed to get the context data of semantic execution id: {}, please check "
"whether the semantic execution task is successfully completed"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:59
msgid "sql文件路径"
msgstr "sql file path"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:61
msgid "执行模式"
msgstr "execution mode"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:63
msgid "模拟执行node_id"
msgstr "Simulate the execution of node_id"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:64
#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:93
msgid "模拟执行root_id"
msgstr "Simulate the execution of root_id"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:71
msgid "sql文件名"
msgstr "sql file name"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:72
msgid "目标变更db"
msgstr "target change db"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:73
msgid "忽略db"
msgstr "ignore db"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:77
msgid "sql执行体信息"
msgstr "sql execution body information"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:82
msgid "备份匹配DB列表"
msgstr "Backup matching DB list"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:83
msgid "备份匹配Table列表"
msgstr "Backup matching Table list"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:87
msgid "sql备份信息"
msgstr "sql backup information"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:95
msgid "模拟执行链接"
msgstr "Simulation Execution Link"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:140
msgid "模拟执行的pipeline数据还未准备好，请检查celery状态并稍后重试单据。"
msgstr ""
"The pipeline data for simulated execution is not ready yet, please check the "
"celery status and try again later."

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:170
msgid "SQL模拟执行状态查询"
msgstr "SQL simulation execution status query"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:182
msgid "人工确认执行"
msgstr "Manual confirmation execution"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:193
msgid "库表备份"
msgstr "Database table backup"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:203
msgid "变更SQL执行"
msgstr "Change SQL execution"

#: backend/ticket/builders/mysql/mysql_master_fail_over.py:40
msgid "主库故障切换执行"
msgstr "Primary database failover execution"

#: backend/ticket/builders/mysql/mysql_master_slave_switch.py:27
#: backend/ticket/builders/spider/tendb_master_slave_switch.py:23
msgid "主库 IP"
msgstr "Master IP"

#: backend/ticket/builders/mysql/mysql_master_slave_switch.py:28
#: backend/ticket/builders/spider/tendb_master_slave_switch.py:24
msgid "从库 IP"
msgstr "Slave IP"

#: backend/ticket/builders/mysql/mysql_master_slave_switch.py:31
#: backend/ticket/builders/spider/tendb_master_slave_switch.py:27
msgid "单据信息"
msgstr "Ticket information"

#: backend/ticket/builders/mysql/mysql_master_slave_switch.py:63
msgid "主从互换执行"
msgstr "Master-slave swap execution"

#: backend/ticket/builders/mysql/mysql_migrate_cluster.py:31
msgid "新主库主机"
msgstr "New master database host"

#: backend/ticket/builders/mysql/mysql_migrate_cluster.py:32
msgid "新从库主机"
msgstr "new slave master"

#: backend/ticket/builders/mysql/mysql_migrate_cluster.py:39
msgid "克隆主从信息"
msgstr "Clone master-slave information"

#: backend/ticket/builders/mysql/mysql_migrate_cluster.py:40
msgid "安全模式"
msgstr "safe mode"

#: backend/ticket/builders/mysql/mysql_migrate_cluster.py:85
msgid "克隆主从执行"
msgstr "Clone master-slave execution"

#: backend/ticket/builders/mysql/mysql_partition.py:24
msgid "初始化分区语句"
msgstr "initialize partition statement"

#: backend/ticket/builders/mysql/mysql_partition.py:25
msgid "所需空间Byte"
msgstr "Required space Byte"

#: backend/ticket/builders/mysql/mysql_partition.py:29
msgid "配置ID"
msgstr "Configuration ID"

#: backend/ticket/builders/mysql/mysql_partition.py:30
msgid "库名匹配规则"
msgstr "database Name Matching Rules"

#: backend/ticket/builders/mysql/mysql_partition.py:31
msgid "表明匹配规则"
msgstr "show matching rules"

#: backend/ticket/builders/mysql/mysql_partition.py:32
msgid "初始化分区表"
msgstr "Initialize the partition table"

#: backend/ticket/builders/mysql/mysql_partition.py:33
msgid "添加分区"
msgstr "add partition"

#: backend/ticket/builders/mysql/mysql_partition.py:34
msgid "删除分区"
msgstr "delete partition"

#: backend/ticket/builders/mysql/mysql_partition.py:38
msgid "ip"
msgstr "ip"

#: backend/ticket/builders/mysql/mysql_partition.py:39
msgid "port"
msgstr "port"

#: backend/ticket/builders/mysql/mysql_partition.py:40
msgid "分片名"
msgstr "slice name"

#: backend/ticket/builders/mysql/mysql_partition.py:41
msgid "执行对象列表"
msgstr "Execution object list"

#: backend/ticket/builders/mysql/mysql_partition.py:46
msgid "配置ID列表"
msgstr "Configuration ID list"

#: backend/ticket/builders/mysql/mysql_partition.py:50
msgid "分区执行对象列表"
msgstr "Partition execution object list"

#: backend/ticket/builders/mysql/mysql_partition.py:52
msgid "分区信息"
msgstr "partition information"

#: backend/ticket/builders/mysql/mysql_partition.py:66
#: backend/ticket/builders/spider/spider_partition.py:38
msgid "分区管理执行"
msgstr "Partition Management Execution"

#: backend/ticket/builders/mysql/mysql_proxy_add.py:33
msgid "Proxy IP + 云区域"
msgstr "Proxy IP + cloud region"

#: backend/ticket/builders/mysql/mysql_proxy_add.py:40
msgid "添加信息"
msgstr "add information"

#: backend/ticket/builders/mysql/mysql_proxy_add.py:84
msgid "添加PROXY执行"
msgstr "Add PROXY execution"

#: backend/ticket/builders/mysql/mysql_proxy_switch.py:33
msgid "旧Proxy实例信息"
msgstr "Old Proxy instance information"

#: backend/ticket/builders/mysql/mysql_proxy_switch.py:34
msgid "新Proxy机器信息"
msgstr "New Proxy machine information"

#: backend/ticket/builders/mysql/mysql_proxy_switch.py:40
msgid "是否强制替换"
msgstr "Whether to force replacement"

#: backend/ticket/builders/mysql/mysql_proxy_switch.py:41
msgid "替换信息"
msgstr "replacement information"

#: backend/ticket/builders/mysql/mysql_proxy_switch.py:94
msgid "替换PROXY执行"
msgstr "Replace PROXY execution"

#: backend/ticket/builders/mysql/mysql_restore_local_slave.py:28
msgid "从库实例信息"
msgstr "Information of the slave instance"

#: backend/ticket/builders/mysql/mysql_restore_local_slave.py:34
msgid "重建从库列表"
msgstr "Rebuild slave list"

#: backend/ticket/builders/mysql/mysql_restore_local_slave.py:67
msgid "Slave原地重建执行"
msgstr "Slave in-place reconstruction execution"

#: backend/ticket/builders/mysql/mysql_restore_slave.py:27
msgid "旧从库 IP"
msgstr "Old slave IP"

#: backend/ticket/builders/mysql/mysql_restore_slave.py:28
msgid "新从库 IP"
msgstr "New slave IP"

#: backend/ticket/builders/mysql/mysql_restore_slave.py:32
msgid "集群重建信息"
msgstr "Cluster rebuild information"

#: backend/ticket/builders/mysql/mysql_restore_slave.py:70
msgid "Slave重建执行"
msgstr "Slave reconstruction execution"

#: backend/ticket/builders/mysql/mysql_single_apply.py:42
msgid "域名关键字"
msgstr "domain name keywords"

#: backend/ticket/builders/mysql/mysql_single_apply.py:50
msgid "机器规格"
msgstr "Machine Specifications"

#: backend/ticket/builders/mysql/mysql_single_apply.py:52
msgid "申请数量"
msgstr "Number of applications"

#: backend/ticket/builders/mysql/mysql_single_apply.py:54
msgid "每台机器部署的实例数量"
msgstr "Number of instances deployed per machine"

#: backend/ticket/builders/mysql/mysql_single_apply.py:60
#: backend/ticket/builders/spider/tendb_apply.py:38
msgid "部署规格"
msgstr "deployment specification"

#: backend/ticket/builders/mysql/mysql_single_apply.py:68
msgid "机器规格展示名"
msgstr "Machine specification display name"

#: backend/ticket/builders/mysql/mysql_single_apply.py:71
msgid "MySQL起始端口"
msgstr "MySQL starting port"

#: backend/ticket/builders/mysql/mysql_single_apply.py:90
#, python-brace-format
msgid "不允许存在重复的域名关键字[{duplicates}]"
msgstr "Duplicate domain name keywords are not allowed [{duplicates}]"

#: backend/ticket/builders/mysql/mysql_single_apply.py:184
msgid "MySQL单节点部署执行"
msgstr "MySQL standalone deployment execution"

#: backend/ticket/builders/mysql/mysql_single_destroy.py:32
msgid "MySQL单节点销毁执行"
msgstr "MySQL standalone destruction execution"

#: backend/ticket/builders/mysql/mysql_single_disable.py:32
msgid "MySQL单节点禁用执行"
msgstr "MySQL standalone disable execution"

#: backend/ticket/builders/mysql/mysql_single_enable.py:32
msgid "MySQL单节点启用执行"
msgstr "MySQL standalone enable execution"

#: backend/ticket/builders/pulsar/pulsar_apply.py:32
msgid "至少写入成功副本数"
msgstr "At least the number of successfully written replicas"

#: backend/ticket/builders/pulsar/pulsar_apply.py:54
msgid "bookkeeper节点数小于2台! 请保证bookkeeper的部署节点数至少为2"
msgstr "The number of bookkeeper nodes is less than 2! Please ensure that the number of bookkeeper deployment nodes is at least 2"

#: backend/ticket/builders/pulsar/pulsar_apply.py:59
msgid "zookeeper节点数不为3台! 请保证zookeeper的部署节点数等于为3"
msgstr "The number of zookeeper nodes is not 3! Please ensure that the number of zookeeper deployment nodes is equal to 3"

#: backend/ticket/builders/pulsar/pulsar_apply.py:64
msgid "broker节点数小于1台! 请保证broker的部署节点数至少为1"
msgstr "The number of broker nodes is less than 1! Please ensure that the number of broker deployment nodes is at least 1"

#: backend/ticket/builders/pulsar/pulsar_apply.py:68
msgid "请保证副本数量至少为2，且不超过bookkeeper数量"
msgstr ""
"Please ensure that the number of copies is at least 2 and does not exceed "
"the number of bookkeepers"

#: backend/ticket/builders/pulsar/pulsar_apply.py:71
msgid "最小成功写入副本数量不得大于副本数量"
msgstr ""
"The minimum number of successfully written replicas must not be greater than "
"the number of replicas"

#: backend/ticket/builders/pulsar/pulsar_apply.py:98
#: backend/ticket/constants.py:202
msgid "Pulsar 集群部署"
msgstr "Pulsar cluster deployment"

#: backend/ticket/builders/pulsar/pulsar_destroy.py:37
#: backend/ticket/constants.py:209
msgid "Pulsar 集群删除"
msgstr "Pulsar cluster deletion"

#: backend/ticket/builders/pulsar/pulsar_disable.py:37
#: backend/ticket/constants.py:208
msgid "Pulsar 集群禁用"
msgstr "Pulsar cluster disabled"

#: backend/ticket/builders/pulsar/pulsar_enable.py:37
#: backend/ticket/constants.py:207
msgid "Pulsar 集群启用"
msgstr "Pulsar cluster enabled"

#: backend/ticket/builders/pulsar/pulsar_reboot.py:39
msgid "Pulsar 集群重启"
msgstr "Pulsar cluster restart"

#: backend/ticket/builders/pulsar/pulsar_replace.py:47
#: backend/ticket/constants.py:206
msgid "Pulsar 集群替换"
msgstr "Pulsar cluster replacement"

#: backend/ticket/builders/pulsar/pulsar_scale_up.py:47
#: backend/ticket/constants.py:203
msgid "Pulsar 集群扩容"
msgstr "Pulsar cluster expansion"

#: backend/ticket/builders/pulsar/pulsar_shrink.py:35
msgid "bookkeeper信息列表"
msgstr "bookkeeper information list"

#: backend/ticket/builders/pulsar/pulsar_shrink.py:61
msgid "{}: 至少保留{}台!"
msgstr "{}: Keep at least {} units!"

#: backend/ticket/builders/pulsar/pulsar_shrink.py:64
msgid "请选择Broker和BookKeeper实例进行缩容"
msgstr "Please select Broker and BookKeeper instances for shrinking"

#: backend/ticket/builders/pulsar/pulsar_shrink.py:69
msgid "缩容不支持ZooKeeper"
msgstr "Scaling does not support ZooKeeper"

#: backend/ticket/builders/pulsar/pulsar_shrink.py:85
#: backend/ticket/constants.py:204
msgid "Pulsar 集群缩容"
msgstr "Pulsar cluster shrink"

#: backend/ticket/builders/redis/base.py:50
msgid "集群【{}({})】锁定中，请等待"
msgstr "Cluster [{}({})] is locked, please wait"

#: backend/ticket/builders/redis/base.py:52
msgid "集群【{}】不存在"
msgstr "Cluster {{}] does not exist"

#: backend/ticket/builders/redis/base.py:59
msgid "提取/删除/备份规则列表"
msgstr "Extract/delete/backup rule list"

#: backend/ticket/builders/redis/redis_backup.py:79
msgid "集群备份"
msgstr "cluster backup"

#: backend/ticket/builders/redis/redis_close.py:45
msgid "禁用集群"
msgstr "disable cluster"

#: backend/ticket/builders/redis/redis_cluster_apply.py:30
msgid "集群端口"
msgstr "cluster port"

#: backend/ticket/builders/redis/redis_cluster_apply.py:38
msgid "申请容量"
msgstr "Application capacity"

#: backend/ticket/builders/redis/redis_cluster_apply.py:39
msgid "申请容量详情"
msgstr "Application Capacity Details"

#: backend/ticket/builders/redis/redis_cluster_apply.py:41
msgid "集群ID（英文数字及下划线）"
msgstr "Cluster ID (English numbers and underscores)"

#: backend/ticket/builders/redis/redis_cluster_apply.py:47
msgid "proxy部署方案"
msgstr "Proxy deployment scheme"

#: backend/ticket/builders/redis/redis_cluster_apply.py:48
msgid "后台部署方案"
msgstr "Background deployment scheme"

#: backend/ticket/builders/redis/redis_cluster_apply.py:87
msgid "主机【{}】已经被注册到了集群元数据，请检查"
msgstr ""
"The host [{}] has been registered in the cluster metadata, please check"

#: backend/ticket/builders/redis/redis_cluster_apply.py:100
msgid "master和slave中存在重复节点"
msgstr "There are duplicate nodes in master and slave"

#: backend/ticket/builders/redis/redis_cluster_apply.py:103
msgid "master和proxy中存在重复节点"
msgstr "There are duplicate nodes in master and proxy"

#: backend/ticket/builders/redis/redis_cluster_apply.py:106
msgid "slave和proxy中存在重复节点"
msgstr "There are duplicate nodes in slave and proxy"

#: backend/ticket/builders/redis/redis_cluster_apply.py:110
msgid "至少提供1台master节点和1台slave节点，且master与slave节点数要保持一致"
msgstr ""
"Provide at least 1 master node and 1 slave node, and the number of master "
"and slave nodes should be consistent"

#: backend/ticket/builders/redis/redis_cluster_apply.py:113
msgid "proxy至少提供2台机器"
msgstr "The proxy provides at least 2 machines"

#: backend/ticket/builders/redis/redis_cluster_apply.py:270
msgid "集群部署"
msgstr "cluster deployment"

#: backend/ticket/builders/redis/redis_destroy.py:46
msgid "下架集群"
msgstr "Take off the cluster"

#: backend/ticket/builders/redis/redis_key_delete.py:31
msgid "删除方式"
msgstr "delete method"

#: backend/ticket/builders/redis/redis_key_delete.py:103
msgid "删除Key"
msgstr "delete key"

#: backend/ticket/builders/redis/redis_key_extract.py:87
msgid "提取Key"
msgstr "extract key"

#: backend/ticket/builders/redis/redis_open.py:42
msgid "启用集群"
msgstr "enable cluster"

#: backend/ticket/builders/redis/redis_purge.py:56
msgid "集群清档"
msgstr "Cluster cleanup"

#: backend/ticket/builders/spider/spider_destory.py:34
msgid "TenDB Cluster 下架执行"
msgstr "TenDB Cluster delisting execution"

#: backend/ticket/builders/spider/spider_disable.py:34
msgid "TenDB Cluster 禁用执行"
msgstr "TenDB Cluster disable execution"

#: backend/ticket/builders/spider/tendb_apply.py:39
msgid "部署方案"
msgstr "deployment plan"

#: backend/ticket/builders/spider/tendb_apply.py:40
msgid "集群访问端口"
msgstr "cluster access port"

#: backend/ticket/builders/spider/tendb_apply.py:41
msgid "集群访问域名"
msgstr "Cluster access domain name"

#: backend/ticket/builders/spider/tendb_apply.py:44
msgid "云区域"
msgstr "cloud area"

#: backend/ticket/builders/spider/tendb_apply.py:49
msgid "集群分片数"
msgstr "Number of cluster fragments"

#: backend/ticket/builders/spider/tendb_apply.py:50
msgid "机器数"
msgstr "Number of machines"

#: backend/ticket/builders/spider/tendb_apply.py:113
msgid "TenDB Cluster 集群部署执行"
msgstr "TenDB Cluster deployment execution"

#: backend/ticket/builders/spider/tendb_enable.py:34
msgid "TenDB Cluster 启用执行"
msgstr "TenDB Cluster enable execution"

#: backend/ticket/builders/spider/tendb_master_fail_over.py:33
msgid "TendbCluster 主故障切换"
msgstr "TendbCluster Master Failover"

#: backend/ticket/builders/spider/tendb_master_slave_switch.py:28
msgid "是否检测连接"
msgstr "Whether to detect the connection"

#: backend/ticket/builders/spider/tendb_master_slave_switch.py:29
msgid "是否检测数据同步延时情况"
msgstr "Whether to detect data synchronization delay"

#: backend/ticket/builders/spider/tendb_master_slave_switch.py:30
msgid "是否检测历史数据检验结果"
msgstr "Whether to detect historical data inspection results"

#: backend/ticket/builders/spider/tendb_master_slave_switch.py:46
msgid "TendbCluster 主从互换执行"
msgstr "TendbCluster master-slave swap execution"

#: backend/ticket/constants.py:31
msgid "主流程-人工确认"
msgstr "Main Process - Manual Confirmation"

#: backend/ticket/constants.py:32
msgid "自动化流程-人工确认"
msgstr "Automated Process - Manual Confirmation"

#: backend/ticket/constants.py:40
msgid "我的待办"
msgstr "my to do"

#: backend/ticket/constants.py:41
msgid "我的申请"
msgstr "My application"

#: backend/ticket/constants.py:51
msgid "待处理"
msgstr "Pending"

#: backend/ticket/constants.py:53
msgid "已处理"
msgstr "processed"

#: backend/ticket/constants.py:54
msgid "已终止"
msgstr "terminated"

#: backend/ticket/constants.py:63 backend/ticket/constants.py:73
msgid "等待中"
msgstr "Waiting"

#: backend/ticket/constants.py:64 backend/ticket/constants.py:74
msgid "执行中"
msgstr "in execution"

#: backend/ticket/constants.py:67 backend/ticket/constants.py:77
msgid "撤销"
msgstr "revoke"

#: backend/ticket/constants.py:78
msgid "跳过"
msgstr "jump over"

#: backend/ticket/constants.py:108
msgid "MySQL 单节点部署"
msgstr "MySQL standalone deployment"

#: backend/ticket/constants.py:109
msgid "MySQL 添加从库"
msgstr "MySQL Add Slave Instance"

#: backend/ticket/constants.py:110
msgid "MySQL Slave重建"
msgstr "MySQL Slave Rebuild"

#: backend/ticket/constants.py:111
msgid "MySQL Slave原地重建"
msgstr "MySQL Slave reconstruction in place"

#: backend/ticket/constants.py:112
msgid "MySQL 克隆主从"
msgstr "MySQL clone master-slave"

#: backend/ticket/constants.py:113
msgid "MySQL 主从互换"
msgstr "MySQL master-slave swap"

#: backend/ticket/constants.py:114
msgid "MySQL 主库故障切换"
msgstr "MySQL master database failover"

#: backend/ticket/constants.py:115
msgid "MySQL 高可用部署"
msgstr "MySQL high availability deployment"

#: backend/ticket/constants.py:116
msgid "MySQL 变更SQL执行"
msgstr "MySQL changes SQL execution"

#: backend/ticket/constants.py:117
msgid "MySQL 模拟执行"
msgstr "MySQL simulation execution"

#: backend/ticket/constants.py:118
msgid "MySQL 添加Proxy"
msgstr "MySQL add Proxy"

#: backend/ticket/constants.py:119
msgid "MySQL 替换Proxy"
msgstr "MySQL replaces Proxy"

#: backend/ticket/constants.py:120
msgid "MySQL 单节点删除"
msgstr "MySQL standalone deletion"

#: backend/ticket/constants.py:121
msgid "MySQL 单节点启用"
msgstr "MySQL standalone enabled"

#: backend/ticket/constants.py:122
msgid "MySQL 单节点禁用"
msgstr "MySQL standalone disabled"

#: backend/ticket/constants.py:123
msgid "MySQL 高可用删除"
msgstr "MySQL high availability deletion"

#: backend/ticket/constants.py:124
msgid "MySQL 高可用禁用"
msgstr "MySQL high availability disabled"

#: backend/ticket/constants.py:125
msgid "MySQL 高可用启用"
msgstr "MySQL high availability enabled"

#: backend/ticket/constants.py:126
msgid "MySQL 授权"
msgstr "MySQL Authorization"

#: backend/ticket/constants.py:127
msgid "MySQL EXCEL-授权"
msgstr "MySQL EXCEL-Authorization"

#: backend/ticket/constants.py:128
msgid "MySQL 客户端权限克隆"
msgstr "MySQL Client Privileged Clone"

#: backend/ticket/constants.py:129
msgid "MySQL DB实例权限克隆"
msgstr "Clone MySQL DB Instance Privileges"

#: backend/ticket/constants.py:130
msgid "MySQL 高可用DB重命名"
msgstr "MySQL high availability DB renaming"

#: backend/ticket/constants.py:131
msgid "MySQL 高可用清档"
msgstr "MySQL HA Clear File"

#: backend/ticket/constants.py:132
msgid "MySQL 高可用库表备份"
msgstr "MySQL high availability database table backup"

#: backend/ticket/constants.py:133
msgid "MySQL 数据校验修复"
msgstr "MySQL Data Inconsistency Repair"

#: backend/ticket/constants.py:134
msgid "MySQL 分区"
msgstr "MySQL partition"

#: backend/ticket/constants.py:135
msgid "MySQL 数据修复"
msgstr "MySQL data repair"

#: backend/ticket/constants.py:136
msgid "MySQL 闪回"
msgstr "MySQL flashback"

#: backend/ticket/constants.py:137
msgid "MySQL 定点回档"
msgstr "MySQL fixed-point rollback"

#: backend/ticket/constants.py:138
msgid "MySQL 高可用全库备份"
msgstr "MySQL high availability full database backup"

#: backend/ticket/constants.py:139
msgid "MySQL 单节点清档"
msgstr "MySQL standalone clear file"

#: backend/ticket/constants.py:140
msgid "MySQL 单节点DB重命名"
msgstr "MySQL standalone DB rename"

#: backend/ticket/constants.py:143
msgid "Spider 数据校验修复"
msgstr "Spider data check fix"

#: backend/ticket/constants.py:144
msgid "Spider 分区管理"
msgstr "Spider partition management"

#: backend/ticket/constants.py:145
msgid "Spider 库表备份"
msgstr "Spider database table backup"

#: backend/ticket/constants.py:146
msgid "Spider 数据库重命名"
msgstr "Spider database rename"

#: backend/ticket/constants.py:147
msgid "Spider 清档"
msgstr "Spider Cleanup"

#: backend/ticket/constants.py:149
msgid "TenDB Cluster 主故障切换"
msgstr "TenDB Cluster primary failover"

#: backend/ticket/constants.py:150
msgid "TenDB Cluster 主从互切"
msgstr "TenDB Cluster master-slave switch"

#: backend/ticket/constants.py:151
msgid "TenDB Cluster 集群部署"
msgstr "TenDB Cluster deployment"

#: backend/ticket/constants.py:152
msgid "TenDB Cluster 集群启用"
msgstr "TenDB Cluster enabled"

#: backend/ticket/constants.py:153
msgid "TenDB Cluster 集群禁用"
msgstr "TenDB Cluster disabled"

#: backend/ticket/constants.py:154
msgid "TenDB Cluster 集群销毁"
msgstr "TenDB Cluster destruction"

#: backend/ticket/constants.py:155
msgid "Spider 全备"
msgstr "Spider fully prepared"

#: backend/ticket/constants.py:158
msgid "Redis 单节点部署"
msgstr "Redis standalone deployment"

#: backend/ticket/constants.py:159
msgid "Redis 集群部署"
msgstr "Redis cluster deployment"

#: backend/ticket/constants.py:160
msgid "Redis 提取 Key"
msgstr "Redis Extract Key"

#: backend/ticket/constants.py:161
msgid "Redis 删除 key"
msgstr "Redis delete key"

#: backend/ticket/constants.py:162
msgid "Redis 集群备份"
msgstr "Redis cluster backup"

#: backend/ticket/constants.py:163
msgid "Redis 集群启用"
msgstr "Redis cluster enabled"

#: backend/ticket/constants.py:164
msgid "Redis 集群禁用"
msgstr "Redis cluster disabled"

#: backend/ticket/constants.py:165
msgid "Redis 集群删除"
msgstr "Redis cluster deletion"

#: backend/ticket/constants.py:166
msgid "Redis 集群清档"
msgstr "Redis cluster clear file"

#: backend/ticket/constants.py:167
msgid "Redis 扩缩容"
msgstr "Redis scaling"

#: backend/ticket/constants.py:168
msgid "Proxy 扩缩容"
msgstr "Proxy expansion and contraction"

#: backend/ticket/constants.py:169
msgid "redis集群 slave 裁撤替换"
msgstr "redis cluster slave abolition and replacement"

#: backend/ticket/constants.py:170
msgid "redis集群 master 裁撤替换"
msgstr "redis cluster master abolition and replacement"

#: backend/ticket/constants.py:171
msgid "redis集群 proxy 裁撤替换"
msgstr "redis cluster proxy abolition and replacement"

#: backend/ticket/constants.py:172
msgid "Redis 新建DTS任务"
msgstr "Redis new DTS task"

#: backend/ticket/constants.py:181
msgid "Kafka 集群禁用"
msgstr "Kafka cluster disabled"

#: backend/ticket/constants.py:182
msgid "Kafka 集群删除"
msgstr "Kafka cluster deletion"

#: backend/ticket/constants.py:187
msgid "HDFS 实例重启"
msgstr "HDFS instance restart"

#: backend/ticket/constants.py:193
msgid "ES 集群部署"
msgstr "ES cluster deployment"

#: backend/ticket/constants.py:194
msgid "ES 集群扩容"
msgstr "ES cluster expansion"

#: backend/ticket/constants.py:195
msgid "ES 集群缩容"
msgstr "ES cluster shrinkage"

#: backend/ticket/constants.py:196
msgid "ES 实例重启"
msgstr "ES instance restart"

#: backend/ticket/constants.py:197
msgid "ES 集群替换"
msgstr "ES cluster replacement"

#: backend/ticket/constants.py:198
msgid "ES 集群启用"
msgstr "ES cluster enabled"

#: backend/ticket/constants.py:199
msgid "ES 集群禁用"
msgstr "ES cluster disabled"

#: backend/ticket/constants.py:200
msgid "ES 集群删除"
msgstr "ES cluster deletion"

#: backend/ticket/constants.py:205
msgid "Pulsar 实例重启"
msgstr "Pulsar instance restart"

#: backend/ticket/constants.py:219
msgid "云区域服务部署"
msgstr "Cloud Region Service Deployment"

#: backend/ticket/constants.py:220
msgid "云区域Nginx 服务部署"
msgstr "Nginx Service Deployment in Cloud Regions"

#: backend/ticket/constants.py:221
msgid "云区域nginx 服务重装"
msgstr "Cloud area nginx service reinstallation"

#: backend/ticket/constants.py:222
msgid "云区域nginx 服务替换"
msgstr "Cloud zone nginx service replacement"

#: backend/ticket/constants.py:223
msgid "云区域dns 服务部署"
msgstr "Cloud zone dns service deployment"

#: backend/ticket/constants.py:224
msgid "云区域dns 服务添加"
msgstr "cloud zone dns service added"

#: backend/ticket/constants.py:225
msgid "云区域dns 服务裁撤"
msgstr "Cloud zone dns service abolition"

#: backend/ticket/constants.py:226
msgid "云区域dns 服务替换"
msgstr "Cloud zone dns service replacement"

#: backend/ticket/constants.py:227
msgid "云区域dns 服务重装"
msgstr "Cloud zone dns service reinstallation"

#: backend/ticket/constants.py:228
msgid "云区域dbha 服务部署"
msgstr "Cloud region dbha service deployment"

#: backend/ticket/constants.py:229
msgid "云区域dbha 服务重装"
msgstr "Cloud region dbha service reinstallation"

#: backend/ticket/constants.py:230
msgid "云区域dbha 服务替换"
msgstr "Cloud zone dbha service replacement"

#: backend/ticket/constants.py:231
msgid "云区域dbha 服务新增"
msgstr "Cloud region dbha service added"

#: backend/ticket/constants.py:232
msgid "云区域dbha 服务删除"
msgstr "cloud zone dbha service delete"

#: backend/ticket/constants.py:233
msgid "云区域drs 服务部署"
msgstr "Cloud zone drs service deployment"

#: backend/ticket/constants.py:234
msgid "云区域drs 服务重启"
msgstr "Cloud zone drs service restart"

#: backend/ticket/constants.py:235
msgid "云区域drs 服务新增"
msgstr "Cloud zone drs service added"

#: backend/ticket/constants.py:236
msgid "云区域drs 服务删除"
msgstr "cloud zone drs service deletion"

#: backend/ticket/constants.py:237
msgid "云区域drs 服务替换"
msgstr "cloud zone drs service replacement"

#: backend/ticket/constants.py:309
msgid "生产部署"
msgstr "production deployment"

#: backend/ticket/constants.py:311
msgid "快速执行"
msgstr "fast execution"

#: backend/ticket/constants.py:313
msgid "结果忽略执行"
msgstr "result ignore execution"

#: backend/ticket/constants.py:317
msgid "交付"
msgstr "Deliver"

#: backend/ticket/constants.py:319
msgid "描述任务信息"
msgstr "Describe task information"

#: backend/ticket/constants.py:325
msgid "资源交付"
msgstr "resource delivery"

#: backend/ticket/constants.py:327
msgid "资源批量申请"
msgstr "Resource Batch Application"

#: backend/ticket/constants.py:329
msgid "资源批量交付"
msgstr "Batch delivery of resources"

#: backend/ticket/constants.py:335
msgid "前置动作"
msgstr "pre-action"

#: backend/ticket/constants.py:336
msgid "后继动作"
msgstr "subsequent action"

#: backend/ticket/constants.py:342
msgid "自动重试"
msgstr "automatic retry"

#: backend/ticket/constants.py:343
msgid "手动重试"
msgstr "Manual retry"

#: backend/ticket/constants.py:349
msgid "通用错误代码"
msgstr "generic error code"

#: backend/ticket/constants.py:350
msgid "自动互斥重试错误代码"
msgstr "Automatic mutex retry error code"

#: backend/ticket/constants.py:351
msgid "手动互斥重试错误代码"
msgstr "Manual mutex retry error code"

#: backend/ticket/exceptions.py:18
msgid "单据模块异常"
msgstr "Ticket module exception"

#: backend/ticket/exceptions.py:23
msgid "ITSM单据不存在"
msgstr "ITSM ticket does not exist"

#: backend/ticket/exceptions.py:24
#, python-brace-format
msgid "ITSM单据[{sn}]不存在"
msgstr "ITSM ticket [{sn}] does not exist"

#: backend/ticket/exceptions.py:29
msgid "单据类型不支持"
msgstr "Ticket type does not support"

#: backend/ticket/exceptions.py:30
#, python-brace-format
msgid "单据类型不支持{ticket_type}"
msgstr "Ticket type does not support {ticket_type}"

#: backend/ticket/exceptions.py:35
msgid "单据参数校验异常"
msgstr "Ticket parameter verification exception"

#: backend/ticket/exceptions.py:36
#, python-brace-format
msgid "单据{ticket_type}参数校验异常"
msgstr "Ticket {ticket_type} parameter verification exception"

#: backend/ticket/exceptions.py:41
msgid "单据执行互斥"
msgstr "Mutual Execution of Tickets"

#: backend/ticket/exceptions.py:42
#, python-brace-format
msgid "单据{ticket_type}执行互斥"
msgstr "Ticket {ticket_type} executes mutual exclusion"

#: backend/ticket/exceptions.py:47
msgid "单据提交重复"
msgstr "Duplicate ticket submission"

#: backend/ticket/exceptions.py:48
msgid "单据{ticket_type}提交重复"
msgstr "Duplicate submission of ticket {ticket_type}"

#: backend/ticket/flow_manager/base.py:94
msgid "{}流程已跳过"
msgstr "{} process skipped"

#: backend/ticket/flow_manager/delivery.py:42
msgid "交付成功"
msgstr "successful delivery"

#: backend/ticket/flow_manager/delivery.py:79
msgid "{}执行{}"
msgstr "{}implement{}"

#: backend/ticket/flow_manager/inner.py:82
#, python-brace-format
msgid "任务{status_display}"
msgstr "task {status_display}"

#: backend/ticket/flow_manager/inner.py:206
msgid "该任务流程跳过，相关信息可在历史任务中查看"
msgstr ""
"The task process is skipped, and relevant information can be viewed in the "
"historical task"

#: backend/ticket/flow_manager/inner.py:226
#, python-brace-format
msgid "(执行结果可忽略)任务状态: {status_display}"
msgstr "(The execution result can be ignored) Task status: {status_display}"

#: backend/ticket/flow_manager/itsm.py:65
msgid "审批中"
msgstr "Approval"

#: backend/ticket/flow_manager/itsm.py:66
msgid "已撤销"
msgstr "Revoked"

#: backend/ticket/flow_manager/itsm.py:67
msgid "已通过"
msgstr "passed"

#: backend/ticket/flow_manager/itsm.py:68
msgid "被拒绝"
msgstr "be rejected"

#: backend/ticket/flow_manager/pause.py:43
#, python-brace-format
msgid "暂停状态{status_display}"
msgstr "pause status {status_display}"

#: backend/ticket/flow_manager/pause.py:65
msgid "【{}】流程待确认，是否继续？"
msgstr "【{}】The process is pending confirmation. Do you want to continue?"

#: backend/ticket/flow_manager/resource.py:52
msgid "资源申请状态{status_display}"
msgstr "Resource application status {status_display}"

#: backend/ticket/flow_manager/resource.py:129
msgid "资源申请失败，错误信息: {}"
msgstr "Resource application failed, error message: {}"

#: backend/ticket/flow_manager/resource.py:166
#: backend/ticket/flow_manager/resource.py:206
msgid "资源申请下一个节点不为部署节点，请重新编排"
msgstr ""
"The next node for resource application is not a deployment node, please re-"
"arrange"

#: backend/ticket/flow_manager/timer.py:56
msgid "定时时间{}，已超时{}，需手动触发。暂停状态:{}"
msgstr ""
"Timing time {}, has timed out {} and needs to be triggered manually. "
"Suspended state: {}"

#: backend/ticket/flow_manager/timer.py:63
msgid "定时节点已触发"
msgstr "Timing node has been triggered"

#: backend/ticket/flow_manager/timer.py:65
msgid "定时时间{}，倒计时:{}"
msgstr "Timing time {}, countdown: {}"

#: backend/ticket/flow_manager/timer.py:96
msgid "【{}】定时流程待确认,是否继续？"
msgstr ""
"【{}】The scheduled process is to be confirmed. Do you want to continue?"

#: backend/ticket/mock_data.py:60
msgid "测试创建es集群"
msgstr "Test to create an es cluster"

#: backend/ticket/mock_data.py:65 backend/ticket/mock_data.py:92
#: backend/ticket/mock_data.py:121 backend/ticket/mock_data.py:158
msgid "深圳"
msgstr "Shenzhen"

#: backend/ticket/mock_data.py:87
msgid "测试创建kafka集群"
msgstr "Test to create a kafka cluster"

#: backend/ticket/mock_data.py:116
msgid "测试创建hdfs集群"
msgstr "Test to create hdfs cluster"

#: backend/ticket/mock_data.py:156
msgid "测试集群"
msgstr "test cluster"

#: backend/ticket/models/ticket.py:46
msgid "流程类型"
msgstr "Process type"

#: backend/ticket/models/ticket.py:47
msgid "流程别名"
msgstr "process alias"

#: backend/ticket/models/ticket.py:49
msgid "单据流程对象ID"
msgstr "Ticket process object ID"

#: backend/ticket/models/ticket.py:50
msgid "单据流程详情"
msgstr "Ticket process details"

#: backend/ticket/models/ticket.py:52
msgid "单据流程状态"
msgstr "Ticket process status"

#: backend/ticket/models/ticket.py:58
msgid "错误代码"
msgstr "error code"

#: backend/ticket/models/ticket.py:60
msgid "重试类型(专用于inner_flow)"
msgstr "retry type (specific to inner_flow)"

#: backend/ticket/models/ticket.py:64 backend/ticket/models/ticket.py:65
msgid "单据流程"
msgstr "ticket flow"

#: backend/ticket/models/ticket.py:93 backend/ticket/serializers.py:70
msgid "单据分组类型"
msgstr "Ticket grouping type"

#: backend/ticket/models/ticket.py:101
msgid "单据差异化详情"
msgstr "Ticket Differentiation Details"

#: backend/ticket/models/ticket.py:102
msgid "单据是否审阅过"
msgstr "Have the tickets been reviewed"

#: backend/ticket/models/ticket.py:105 backend/ticket/models/ticket.py:106
msgid "单据"
msgstr "tickets"

#: backend/ticket/models/ticket.py:187
msgid "正在自动创建单据，单据详情: {}"
msgstr "Ticket is being created automatically, ticket details: {}"

#: backend/ticket/models/ticket.py:196
msgid "单据{}正在初始化流程"
msgstr "Ticket {} is initializing the process"

#: backend/ticket/models/ticket.py:246 backend/ticket/models/ticket.py:302
#: backend/ticket/models/todo.py:31
msgid "关联流程任务"
msgstr "Associate Process Task"

#: backend/ticket/models/ticket_result_relation.py:25
msgid "第三方系统id"
msgstr "Third-party system id"

#: backend/ticket/models/todo.py:30
msgid "待办标题"
msgstr "to do title"

#: backend/ticket/models/todo.py:33
msgid "待办人"
msgstr "to-do person"

#: backend/ticket/models/todo.py:35
msgid "待办类型"
msgstr "to-do type"

#: backend/ticket/models/todo.py:40
msgid "上下文"
msgstr "the context"

#: backend/ticket/models/todo.py:42
msgid "待办状态"
msgstr "pending status"

#: backend/ticket/models/todo.py:47
msgid "待办完成人"
msgstr "to-do completion person"

#: backend/ticket/models/todo.py:48
msgid "待办完成时间"
msgstr "to-do completion time"

#: backend/ticket/models/todo.py:72 backend/ticket/models/todo.py:73
msgid "待办"
msgstr "Upcoming"

#: backend/ticket/models/todo.py:81
msgid "关联待办"
msgstr "Associated to-do"

#: backend/ticket/models/todo.py:82
msgid "操作"
msgstr "operate"

#: backend/ticket/models/todo.py:85 backend/ticket/models/todo.py:86
msgid "待办操作记录"
msgstr "To-do operation record"

#: backend/ticket/serializers.py:71 backend/ticket/views.py:172
#: backend/ticket/views.py:173
msgid "单据详情"
msgstr "Ticket details"

#: backend/ticket/serializers.py:74
msgid "状态名称"
msgstr "state name"

#: backend/ticket/serializers.py:80
msgid "是否忽略重复提交"
msgstr "Whether to ignore duplicate submissions"

#: backend/ticket/serializers.py:109
msgid "流程待办"
msgstr "process to do"

#: backend/ticket/serializers.py:110
msgid "跳转链接"
msgstr "jump link"

#: backend/ticket/serializers.py:114
msgid "流程类型显示名"
msgstr "Process type display name"

#: backend/ticket/serializers.py:115
msgid "概览"
msgstr "overview"

#: backend/ticket/serializers.py:165
msgid "待办人列表"
msgstr "to-do list"

#: backend/ticket/serializers.py:183
msgid "待办ID"
msgstr "to-do ID"

#: backend/ticket/serializers.py:184
msgid "动作"
msgstr "action"

#: backend/ticket/serializers.py:185
msgid "动作参数"
msgstr "action parameters"

#: backend/ticket/serializers.py:203
msgid "单据流程的ID"
msgstr "ID of the ticket process"

#: backend/ticket/serializers.py:218 backend/ticket/serializers.py:226
msgid "查询起始时间"
msgstr "Query start time"

#: backend/ticket/serializers.py:219 backend/ticket/serializers.py:227
msgid "查询终止时间"
msgstr "query end time"

#: backend/ticket/serializers.py:221 backend/ticket/serializers.py:229
msgid "操作状态"
msgstr "operating state"

#: backend/ticket/serializers.py:233
msgid "主机所在业务"
msgstr "host business"

#: backend/ticket/serializers.py:235
msgid "IP列表"
msgstr "IP list"

#: backend/ticket/serializers.py:239
msgid "请至少提供两台机器来部署云区域组件"
msgstr "Please provide at least two machines to deploy cloud zone components"

#: backend/ticket/tasks/ticket_tasks.py:104
msgid "无法在dbm meta中查询到集群{}的相关信息，请排查该集群的状态"
msgstr ""
"The relevant information of the cluster {} cannot be queried in dbm meta, "
"please check the status of the cluster"

#: backend/ticket/tasks/ticket_tasks.py:176
msgid "集群{}数据校验正确，不需要进行数据修复"
msgstr "Cluster {} data verification is correct, no data repair is required"

#: backend/ticket/tasks/ticket_tasks.py:200
msgid "集群{}存在数据不一致，自动创建的数据修复单据"
msgstr ""
"There is data inconsistency in the cluster {}, the automatically created "
"data repair ticket"

#: backend/ticket/tasks/ticket_tasks.py:216
msgid "任务{}立即执行"
msgstr "Task {} executes immediately"

#: backend/ticket/tasks/ticket_tasks.py:219
msgid "任务{}定时执行，定时触发时间:{}"
msgstr "The task {} is executed regularly, and the timing trigger time: {}"

#: backend/ticket/todos/__init__.py:100
msgid "确认执行"
msgstr "Confirm execution"

#: backend/ticket/todos/__init__.py:101
msgid "终止单据"
msgstr "Termination ticket"

#: backend/ticket/views.py:136
msgid "实例{}已存在相同类型的单据[{}]正在运行，请确认是否重复提交"
msgstr "The same type of ticket [{}] already exists in the instance {} and is running, please confirm whether to submit it repeatedly"

#: backend/ticket/views.py:149
msgid "集群{}已存在相同类型的单据[{}]正在运行，请确认是否重复提交"
msgstr ""
"The same type of ticket [{}] already exists in the cluster {} and is "
"running, please confirm whether to submit it repeatedly"

#: backend/ticket/views.py:189
msgid "单据列表"
msgstr "Ticket list"

#: backend/ticket/views.py:208
msgid "获取单据流程"
msgstr "Obtain ticket process"

#: backend/ticket/views.py:210
msgid "流程信息"
msgstr "process information"

#: backend/ticket/views.py:221
msgid "单据回调"
msgstr "Ticket callback"

#: backend/ticket/views.py:234
msgid "单据流程重试"
msgstr "Ticket process retry"

#: backend/ticket/views.py:248
msgid "获取单据类型列表"
msgstr "Get a list of ticket types"

#: backend/ticket/views.py:257
msgid "节点列表"
msgstr "node list"

#: backend/ticket/views.py:286
msgid "待办单据列表"
msgstr "To-Do List"

#: backend/ticket/views.py:325
msgid "待办处理"
msgstr "pending"

#: backend/ticket/views.py:346
msgid "待办单据数"
msgstr "Number of pending tickets"

#: backend/ticket/views.py:370
msgid "查询集群变更单据事件"
msgstr "Query cluster change ticket events"

#: backend/ticket/views.py:406
msgid "查询集群实例变更单据事件"
msgstr "Query cluster instance change ticket events"

#: backend/ticket/views.py:442
msgid "快速部署云区域组件"
msgstr "Quickly deploy cloud zone components"

#: backend/ticket/views.py:514
msgid "云区域组件快速部署单据"
msgstr "Quick Deployment ticket for Cloud Region Components"

#: backend/utils/time.py:127
msgid "类型{}与类型{}之间不允许进行比较"
msgstr "Comparison not allowed between type {} and type {}"

#: backend/utils/time.py:135
msgid "无法找到合适的附近时间点"
msgstr "Unable to find a suitable nearby time point"

#: backend/version_log/config.py:30
msgid "版本日志"
msgstr "version log"

#: backend/version_log/models.py:43
msgid "访问版本"
msgstr "access version"

#: backend/version_log/models.py:48
msgid "版本日志访问记录"
msgstr "Version log access records"

#: backend/version_log/views.py:45
msgid "访问出错，请联系管理员。"
msgstr "System error, please contact administrator"

#: backend/version_log/views.py:49
msgid "日志列表获取成功"
msgstr "Log list obtained successfully"

#: backend/version_log/views.py:65
msgid "日志版本文件没找到，请联系管理员"
msgstr "The log version file was not found, please contact the administrator"

#: backend/version_log/views.py:69
msgid "日志详情获取成功"
msgstr "Log details obtained successfully"
