# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-13 20:40+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: backend/bk_dataview/grafana/views.py:209
#: backend/db_monitor/models/dashboard.py:29
msgid "集群监控视图"
msgstr "Cluster monitoring view"

#: backend/bk_web/exceptions.py:19
msgid "外部路由转发异常"
msgstr "External route forwarding exception"

#: backend/bk_web/exceptions.py:24
msgid "外部用户不存在"
msgstr "External user does not exist"

#: backend/bk_web/exceptions.py:29
msgid "转发路由非法"
msgstr "Illegal forwarding route"

#: backend/bk_web/handlers.py:41
msgid "捕获未处理异常, 请求URL->{}, 请求方法->{} 请求参数->{}"
msgstr ""
"Catch unhandled exception, request URL-&gt;{}, request method-&gt;{} request "
"parameter-&gt;{}"

#: backend/bk_web/handlers.py:61
msgid "用户未登录或登录态失效，请重新登录"
msgstr ""
"The user is not logged in or the login status is invalid, please log in again"

#: backend/bk_web/handlers.py:74
#, python-brace-format
msgid "【APP 自定义异常】{message}, code={code}, args={args}"
msgstr "【APP custom exception】{message}, code={code}, args={args}"

#: backend/bk_web/handlers.py:90
msgid "捕获未处理异常, 请求URL->[{}], 请求方法->[{}] 请求参数->[{}]"
msgstr ""
"Catch unhandled exception, request URL-&gt;[{}], request method-&gt;[{}] "
"request parameter-&gt;[{}]"

#: backend/bk_web/handlers.py:94
#, python-brace-format
msgid "系统错误，请联系管理员({error})"
msgstr "System error, please contact administrator({error})"

#: backend/bk_web/middleware.py:137
msgid "外部请求失败，错误原因:{}"
msgstr "External request failed, error reason: {}"

#: backend/bk_web/middleware.py:168
msgid "单据类型[{}]非法，未开通白名单"
msgstr "The document type [{}] is illegal and the whitelist has not been activated."

#: backend/bk_web/middleware.py:202
msgid "路由{}非法，未开通白名单"
msgstr "Route {} is illegal and the whitelist is not activated."

#: backend/bk_web/models.py:22 backend/db_monitor/views/policy.py:49
#: backend/db_services/bigdata/influxdb/query.py:36
#: backend/db_services/bigdata/influxdb/query.py:37
#: backend/db_services/bigdata/resources/query.py:44
#: backend/db_services/bigdata/resources/query.py:45
#: backend/db_services/mongodb/resources/query.py:37
#: backend/db_services/mysql/resources/tendbcluster/query.py:49
#: backend/db_services/mysql/resources/tendbha/query.py:41
#: backend/db_services/mysql/resources/tendbsingle/query.py:36
#: backend/db_services/redis/resources/redis_cluster/query.py:65
#: backend/db_services/sqlserver/resources/sqlserver_ha/query.py:37
#: backend/db_services/sqlserver/resources/sqlserver_single/query.py:34
msgid "创建人"
msgstr "founder"

#: backend/bk_web/models.py:23 backend/core/storages/models.py:28
#: backend/core/storages/models.py:47 backend/db_package/models.py:42
#: backend/db_services/bigdata/influxdb/query.py:38
#: backend/db_services/bigdata/resources/query.py:46
#: backend/db_services/dbpermission/db_account/serializers.py:89
#: backend/db_services/dbpermission/db_account/serializers.py:98
#: backend/db_services/mysql/resources/tendbcluster/query.py:50
#: backend/db_services/mysql/resources/tendbha/query.py:42
#: backend/db_services/mysql/resources/tendbsingle/query.py:37
#: backend/db_services/mysql/sql_import/serializers.py:164
#: backend/db_services/redis/autofix/models.py:92
#: backend/db_services/redis/redis_dts/models/tb_dts_distribute_lock.py:19
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:91
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:75
#: backend/db_services/redis/resources/redis_cluster/query.py:66
#: backend/db_services/sqlserver/resources/sqlserver_ha/query.py:38
#: backend/db_services/sqlserver/resources/sqlserver_single/query.py:35
#: backend/flow/models.py:49 backend/ticket/models/ticket.py:44
msgid "创建时间"
msgstr "creation time"

#: backend/bk_web/models.py:24
msgid "修改人"
msgstr "Edited by"

#: backend/bk_web/models.py:25 backend/core/storages/models.py:27
#: backend/core/storages/models.py:46 backend/db_package/models.py:43
#: backend/db_services/bigdata/influxdb/query.py:40
#: backend/db_services/bigdata/resources/query.py:48
#: backend/db_services/dbconfig/serializers.py:66
#: backend/db_services/redis/maxmemory_set/models/tb_tendis_maxmemory_backends.py:28
#: backend/db_services/redis/redis_dts/models/tb_dts_server.py:23
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:92
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:76
#: backend/db_services/redis/resources/redis_cluster/query.py:68
#: backend/flow/models.py:51 backend/ticket/models/ticket.py:45
msgid "更新时间"
msgstr "update time"

#: backend/bk_web/models.py:34
msgid "外部用户名"
msgstr "external username"

#: backend/bk_web/models.py:35
msgid "内部用户名"
msgstr "internal username"

#: backend/bk_web/models.py:43
msgid "外部用户{}没有注册到DBM平台，请联系管理员注册"
msgstr "External user {} has not registered to the DBM platform, please contact the administrator to register."

#: backend/components/base.py:175
#, python-brace-format
msgid "请求已达到最大重试次数{max_retry_times}"
msgstr ""
"The request has reached the maximum number of retries {max_retry_times}"

#: backend/components/base.py:214
msgid "{}-接口调用异常: {}"
msgstr "{}-Interface call exception: {}"

#: backend/components/base.py:245
#, python-brace-format
msgid "[{module}]API请求异常：({error_message})"
msgstr "[{module}] API request exception: ({error_message})"

#: backend/components/base.py:303
msgid "返回数据格式不正确，结果格式非json."
msgstr ""
"The format of the returned data is incorrect, and the result format is not "
"json."

#: backend/components/base.py:375
#, python-brace-format
msgid "[BKAPI] {info}"
msgstr "[BKAPI] {info}"

#: backend/components/base.py:501
#, python-brace-format
msgid "异常请求方式，{method}"
msgstr "Abnormal request method, {method}"

#: backend/components/bk.py:100
msgid "请求[{}]失败：{}"
msgstr "Request failed:{}"

#: backend/components/bklog/client.py:18
msgid "蓝鲸日志平台"
msgstr "Blue Whale Log Platform"

#: backend/components/bklog/client.py:26
msgid "查询索引"
msgstr "query index"

#: backend/components/bklog/client.py:31
msgid "简易创建采集配置"
msgstr "Easy creation of acquisition configurations"

#: backend/components/bklog/client.py:38
msgid "简易更新采集配置"
msgstr "Easy update of acquisition configurations"

#: backend/components/bklog/client.py:43
msgid "创建采集项的前置检查"
msgstr "Pre check before create collection"

#: backend/components/bklog/client.py:48
msgid "获取采集项列表"
msgstr "Get a list of collection items"

#: backend/components/bklog/client.py:53
msgid "查询索引集列表"
msgstr "Query index set list"

#: backend/components/bkmonitorv3/client.py:19
msgid "监控"
msgstr "monitor"

#: backend/components/bkmonitorv3/client.py:31
msgid "获取 data id"
msgstr "get data id"

#: backend/components/bkmonitorv3/client.py:36
msgid "保存通知组"
msgstr "save notification group"

#: backend/components/bkmonitorv3/client.py:41
msgid "获取业务下自定义事件列表"
msgstr "Get a list of custom events under business"

#: backend/components/bkmonitorv3/client.py:46
msgid "获取自定义指标列表"
msgstr "Get a list of custom indicators"

#: backend/components/bkmonitorv3/client.py:51
msgid "获取自定义指标详情"
msgstr "Get custom indicator details"

#: backend/components/bkmonitorv3/client.py:56
msgid "获取业自定义事件详情"
msgstr "Get industry custom event details"

#: backend/components/bkmonitorv3/client.py:61
msgid "创建自定义指标"
msgstr "Create custom metrics"

#: backend/components/bkmonitorv3/client.py:66
msgid "创建自定义事件"
msgstr "Create custom events"

#: backend/components/bkmonitorv3/client.py:71
msgid "保存告警策略"
msgstr "Save alert policy"

#: backend/components/bkmonitorv3/client.py:76
msgid "启停告警策略"
msgstr "Start and stop alarm strategy"

#: backend/components/bkmonitorv3/client.py:81
msgid "批量更新策略局部配置"
msgstr "Batch update policy local configuration"

#: backend/components/bkmonitorv3/client.py:86
msgid "删除告警策略"
msgstr "Delete alert policy"

#: backend/components/bkmonitorv3/client.py:91
msgid "查询告警策略"
msgstr "Querying the Alarm Policy"

#: backend/components/bkmonitorv3/client.py:96
msgid "保存采集策略"
msgstr "Save collection strategy"

#: backend/components/bkmonitorv3/client.py:101
msgid "查询采集策略"
msgstr "Query collection strategy"

#: backend/components/bkmonitorv3/client.py:106
msgid "查询采集配置列表"
msgstr "Query the collection configuration list"

#: backend/components/bkmonitorv3/client.py:111
msgid "查询采集策略详情"
msgstr "Querying Collection Policy Details"

#: backend/components/bkmonitorv3/client.py:116
msgid "查询用户组列表"
msgstr "Query user group list"

#: backend/components/bkmonitorv3/client.py:121
msgid "查询用户组详情"
msgstr "Query user group details"

#: backend/components/bkmonitorv3/client.py:126
msgid "删除用户组"
msgstr "Delete user group"

#: backend/components/bkmonitorv3/client.py:131
msgid "保存用户组"
msgstr "Save user group"

#: backend/components/bkmonitorv3/client.py:136
msgid "保存轮值规则"
msgstr "Save rotation rules"

#: backend/components/bkmonitorv3/client.py:141
#: backend/db_monitor/views/duty_rule.py:34
msgid "查询轮值规则列表"
msgstr "Query the list of rotation rules"

#: backend/components/bkmonitorv3/client.py:146
#: backend/db_monitor/views/duty_rule.py:60
msgid "删除轮值规则"
msgstr "Delete rotation rules"

#: backend/components/bkmonitorv3/client.py:151
msgid "保存分派组"
msgstr "save dispatch group"

#: backend/components/bkmonitorv3/client.py:156
msgid "查询分派组"
msgstr "Query dispatch group"

#: backend/components/bkmonitorv3/client.py:161
msgid "删除分派组"
msgstr "Delete a dispatch group"

#: backend/components/bkmonitorv3/client.py:166
msgid "查询事件"
msgstr "Query events"

#: backend/components/bkmonitorv3/client.py:171
msgid "统一查询时序数据"
msgstr "Unified query of time series data"

#: backend/components/bkmonitorv3/client.py:176
msgid "获取自定义上报的 proxy 主机信息"
msgstr "Get custom reported proxy host information"

#: backend/components/bknodeman/client.py:19
msgid "节点管理"
msgstr "Node management"

#: backend/components/bknodeman/client.py:31
msgid "插件操作任务"
msgstr "Plug-in operation tasks"

#: backend/components/bknodeman/client.py:35
msgid "查询任务详情"
msgstr "Query task details"

#: backend/components/bknodeman/client.py:38
msgid "查询agent状态"
msgstr "Query agent status"

#: backend/components/cc/client.py:19 backend/iam_app/handlers/permission.py:97
msgid "配置平台"
msgstr "Configure the platform"

#: backend/components/cc/client.py:32
msgid "没有业务信息的主机查询"
msgstr "Host query without business information"

#: backend/components/cc/client.py:35
msgid "查询业务"
msgstr "Query business"

#: backend/components/cc/client.py:40
msgid "查询模块"
msgstr "query module"

#: backend/components/cc/client.py:45
msgid "创建集群"
msgstr "create cluster"

#: backend/components/cc/client.py:50
msgid "查询集群"
msgstr "query cluster"

#: backend/components/cc/client.py:55
msgid "创建模块"
msgstr "create module"

#: backend/components/cc/client.py:60 backend/components/cc/client.py:190
msgid "删除模块"
msgstr "delete module"

#: backend/components/cc/client.py:65
msgid "跨业务转移主机"
msgstr "Transfer hosts across businesses"

#: backend/components/cc/client.py:70
msgid "业务内主机转移模块"
msgstr "Intra-business host transfer module"

#: backend/components/cc/client.py:72
msgid "修改业务"
msgstr "modify business"

#: backend/components/cc/client.py:73
msgid "修改主机"
msgstr "modify host"

#: backend/components/cc/client.py:75
msgid "批量修改主机"
msgstr "Modify hosts in batches"

#: backend/components/cc/client.py:80
msgid "创建自定义字段"
msgstr "Create custom fields"

#: backend/components/cc/client.py:83
msgid "获取模型属性"
msgstr "Get model properties"

#: backend/components/cc/client.py:88
msgid "创建模型属性"
msgstr "Create model properties"

#: backend/components/cc/client.py:93
msgid "主机移动到空闲机模块"
msgstr "The host moves to the idle machine module"

#: backend/components/cc/client.py:98
msgid "主机移动到待回收模块"
msgstr "The host moves to the module to be recycled"

#: backend/components/cc/client.py:101
msgid "查询业务实例拓扑"
msgstr "Querying the Topology of a Service Instance"

#: backend/components/cc/client.py:106
msgid "查询业务下的主机"
msgstr "Query the host under business"

#: backend/components/cc/client.py:111
msgid "查询业务下的主机和拓扑信息"
msgstr "Query host and topology information under business"

#: backend/components/cc/client.py:114
msgid "查询业务的空闲机/故障机/待回收模块"
msgstr ""
"Query the idle machine/failure machine/module to be recycled of the business"

#: backend/components/cc/client.py:119
msgid "获取主机与拓扑的关系"
msgstr "Get the relationship between the host and the topology"

#: backend/components/cc/client.py:125
msgid "查询云区域"
msgstr "Query cloud region"

#: backend/components/cc/client.py:130
msgid "查询主机及其对应拓扑"
msgstr "Query hosts and their corresponding topology"

#: backend/components/cc/client.py:135
msgid "创建服务实例"
msgstr "Create a service instance"

#: backend/components/cc/client.py:140
msgid "查询服务实例详细信息"
msgstr "Query service instance details"

#: backend/components/cc/client.py:145
msgid "直接通过bk_host_id查询服务实例详细信息"
msgstr "Query service instance details directly through bk_host_id"

#: backend/components/cc/client.py:150
msgid "获取服务实例详细信息"
msgstr "Get service instance details"

#: backend/components/cc/client.py:155
msgid "服务实例添加标签"
msgstr "Service instance tagging"

#: backend/components/cc/client.py:160
msgid "从服务实例移除标签"
msgstr "Remove tags from service instance"

#: backend/components/cc/client.py:165
msgid "删除服务实例"
msgstr "delete service instance"

#: backend/components/cc/client.py:170
msgid "创建实例进程"
msgstr "Create instance process"

#: backend/components/cc/client.py:175
msgid "删除实例进程"
msgstr "Delete instance process"

#: backend/components/cc/client.py:180
msgid "查询实例进程列表"
msgstr "Query instance process list"

#: backend/components/cc/client.py:185
msgid "更新实例进程"
msgstr "Update instance process"

#: backend/components/cc/client.py:195
msgid "根据条件查询业务下的模块"
msgstr "Query the modules under the business according to the conditions"

#: backend/components/cc/client.py:200
msgid "根据模块ID查询主机和模块的关系"
msgstr ""
"Query the relationship between the host and the module according to the "
"module ID"

#: backend/components/cc/client.py:205
msgid "查询主机业务关系信息"
msgstr "Query host business relationship information"

#: backend/components/cc/client.py:210
msgid "批量查询某业务的模块详情"
msgstr "Query module details of a business in batches"

#: backend/components/celery_service/client.py:19
msgid "周期任务服务"
msgstr "Periodic task service"

#: backend/components/celery_service/client.py:27
msgid "获取API列表"
msgstr "Get API list"

#: backend/components/celery_service/client.py:32
msgid "获取周期任务的注册列表"
msgstr "Get the registration list of periodic tasks"

#: backend/components/celery_service/client.py:37
msgid "查询异步会话"
msgstr "Query asynchronous session"

#: backend/components/celery_service/client.py:42
msgid "结束异步会话"
msgstr "End asynchronous session"

#: backend/components/cmsi/client.py:21
msgid "消息管理"
msgstr "message management"

#: backend/components/cmsi/client.py:25 backend/db_monitor/mock_data.py:19
msgid "短信"
msgstr "Short message"

#: backend/components/cmsi/client.py:26 backend/db_monitor/mock_data.py:17
msgid "微信"
msgstr "WeChat"

#: backend/components/cmsi/client.py:27 backend/db_monitor/mock_data.py:18
msgid "邮件"
msgstr "mail"

#: backend/components/cmsi/client.py:28 backend/db_monitor/mock_data.py:20
msgid "语音"
msgstr "voice"

#: backend/components/cmsi/client.py:29 backend/db_monitor/mock_data.py:16
msgid "企业微信"
msgstr "Enterprise WeChat"

#: backend/components/cmsi/client.py:30
msgid "企业微信机器人"
msgstr "Enterprise WeChat robot"

#: backend/components/cmsi/client.py:32
msgid "未知"
msgstr "unknown"

#: backend/components/cmsi/client.py:38
msgid "通用消息发送"
msgstr "General Messaging"

#: backend/components/cmsi/client.py:43
#: backend/db_monitor/views/notice_group.py:129
msgid "查询通知类型"
msgstr "Query notification type"

#: backend/components/constants.py:21
msgid "服务器证书文件"
msgstr "server certificate file"

#: backend/components/constants.py:22
msgid "服务器私钥"
msgstr "server private key"

#: backend/components/constants.py:23
msgid "客户端证书文件"
msgstr "client certificate file"

#: backend/components/constants.py:24
msgid "客户端私钥"
msgstr "client private key"

#: backend/components/db_name_service/client.py:19
msgid "名字服务"
msgstr "name service"

#: backend/components/db_name_service/client.py:26
msgid "创建clb并绑定后端主机"
msgstr "Create clb and bind backend host"

#: backend/components/db_name_service/client.py:31
msgid "clb解绑部分后端主机"
msgstr "clb unbinds some backend hosts"

#: backend/components/db_name_service/client.py:36
msgid "clb新增绑定部分后端主机"
msgstr "CLB newly added some back-end hosts"

#: backend/components/db_name_service/client.py:41
msgid "获取已绑定clb的后端主机私网IP"
msgstr "Obtain the private network IP of the backend host bound to clb"

#: backend/components/db_name_service/client.py:46
msgid "通过IP查询该IP是否已经被clb绑定了"
msgstr "Query whether the IP has been bound by clb through IP"

#: backend/components/db_name_service/client.py:51
msgid "解绑后端主机并删除clb"
msgstr "Unbind the backend host and delete clb"

#: backend/components/db_name_service/client.py:56
msgid "创建北极星服务和别名并绑定后端主机"
msgstr "Create Polaris service and alias and bind backend host"

#: backend/components/db_name_service/client.py:61
msgid "北极星解绑部分后端主机"
msgstr "Polaris unbinds some back-end hosts"

#: backend/components/db_name_service/client.py:66
msgid "北极星新增绑定部分后端主机"
msgstr "Polaris newly added some back-end hosts"

#: backend/components/db_name_service/client.py:71
msgid "获取北极星已绑定的后端主机信息"
msgstr "Get the backend host information bound by Polaris"

#: backend/components/db_name_service/client.py:76
msgid "解绑后端主机并删除别名和北极星服务"
msgstr "Unbind the backend host and delete the alias and Polaris service"

#: backend/components/db_remote_service/client.py:21
msgid "DB 远程服务"
msgstr "DB remote service"

#: backend/components/db_remote_service/client.py:39
msgid "DB 远程执行"
msgstr "DB remote execution"

#: backend/components/db_remote_service/client.py:49
msgid "DB PROXY远程执行"
msgstr "DB PROXY remote execution"

#: backend/components/db_remote_service/client.py:59
msgid "redis 远程执行"
msgstr "Redis remote execution"

#: backend/components/db_remote_service/client.py:68
msgid "twemproxy 远程执行"
msgstr "twemproxy remote execution"

#: backend/components/db_remote_service/client.py:77
msgid "sqlserver 远程执行"
msgstr "sqlserver remote execution"

#: backend/components/db_remote_service/client.py:86
msgid "webconsole 远程执行(只读账号)"
msgstr "webconsole remote execution (read-only account)"

#: backend/components/dbconfig/client.py:20
msgid "DB配置系统"
msgstr "DB configuration system"

#: backend/components/dbconfig/client.py:27
msgid "新增平台级配置文件"
msgstr "Add platform-level configuration files"

#: backend/components/dbconfig/client.py:32
msgid "查询配置文件列表"
msgstr "Query the list of configuration files"

#: backend/components/dbconfig/client.py:37
msgid "编辑平台级配置"
msgstr "Edit platform-level configuration"

#: backend/components/dbconfig/client.py:42
msgid "查询公共配置项列表"
msgstr "Query the list of public configuration items"

#: backend/components/dbconfig/client.py:47
msgid "查询定义的配置名列表"
msgstr "Query the list of defined configuration names"

#: backend/components/dbconfig/client.py:52
msgid "查询配置项列表"
msgstr "Query the list of configuration items"

#: backend/components/dbconfig/client.py:59
msgid "保存不可变配置（如字符集等）"
msgstr "Save immutable configuration (such as charset, etc.)"

#: backend/components/dbconfig/client.py:64
msgid "编辑发布层级（业务、集群、模块）配置"
msgstr "Edit release level (business, cluster, module) configuration"

#: backend/components/dbconfig/client.py:69
msgid "批量获取多个对象的某一配置项"
msgstr "Get a configuration item of multiple objects in batches"

#: backend/components/dbconfig/client.py:74
msgid "查询历史配置版本名列表"
msgstr "Query the list of historical configuration version names"

#: backend/components/dbconfig/client.py:79
msgid "查询版本详细信息"
msgstr "Query version details"

#: backend/components/dbconfig/client.py:84
msgid "查询实例配置文件模版"
msgstr "Query instance configuration file template"

#: backend/components/dbconfig/constants.py:21
msgid "平台层级"
msgstr "platform level"

#: backend/components/dbconfig/constants.py:22
msgid "业务层级"
msgstr "business level"

#: backend/components/dbconfig/constants.py:23
msgid "模块层级"
msgstr "module level"

#: backend/components/dbconfig/constants.py:24
msgid "集群层级"
msgstr "cluster level"

#: backend/components/dbconfig/constants.py:25
msgid "实例层级"
msgstr "instance level"

#: backend/components/dbconfig/constants.py:31
msgid "部署配置"
msgstr "deployment configuration"

#: backend/components/dbconfig/constants.py:32
#: backend/iam_app/dataclass/actions.py:208
#: backend/iam_app/dataclass/actions.py:220
#: backend/iam_app/dataclass/actions.py:232
#: backend/iam_app/dataclass/actions.py:244
#: backend/iam_app/dataclass/actions.py:256
#: backend/iam_app/dataclass/actions.py:1718
msgid "数据库配置"
msgstr "database configuration"

#: backend/components/dbconfig/constants.py:33
msgid "备份配置"
msgstr "backup configuration"

#: backend/components/dbconfig/constants.py:34
msgid "Proxy配置"
msgstr "Proxy configuration"

#: backend/components/dbconfig/constants.py:40
msgid "新增"
msgstr "Add"

#: backend/components/dbconfig/constants.py:41
#: backend/db_services/dbpermission/constants.py:34
msgid "更新"
msgstr "renew"

#: backend/components/dbconfig/constants.py:42
#: backend/db_services/dbpermission/constants.py:35 backend/flow/consts.py:1368
msgid "删除"
msgstr "delete"

#: backend/components/dbconfig/constants.py:48
msgid "仅保存"
msgstr "save only"

#: backend/components/dbconfig/constants.py:49
msgid "生成并保存"
msgstr "generate and save"

#: backend/components/dbconfig/constants.py:50
msgid "保存并发布"
msgstr "save and publish"

#: backend/components/dbconfig/constants.py:51
msgid "生成并发布"
msgstr "generate and publish"

#: backend/components/dbconfig/constants.py:57
msgid "列表"
msgstr "the list"

#: backend/components/dbconfig/constants.py:58
msgid "字典"
msgstr "dictionary"

#: backend/components/dbconfig/constants.py:59
msgid "分级字典"
msgstr "Grading Dictionary"

#: backend/components/dbconsole/client.py:21
msgid "DBConsole"
msgstr "DBConsole"

#: backend/components/dbresource/client.py:19
msgid "资源池 服务"
msgstr "resource pool service"

#: backend/components/dbresource/client.py:26
#: backend/db_services/dbresource/views/resource.py:182
msgid "资源导入"
msgstr "resource import"

#: backend/components/dbresource/client.py:31
#: backend/db_services/dbresource/views/resource.py:94
msgid "资源池资源列表"
msgstr "resource list"

#: backend/components/dbresource/client.py:36
msgid "资源池全部资源列表"
msgstr "List of all resources in the resource pool"

#: backend/components/dbresource/client.py:41
msgid "资源池资源申请"
msgstr "Resource pool resource application"

#: backend/components/dbresource/client.py:46
#: backend/db_services/dbresource/views/resource.py:256
msgid "获取挂载点"
msgstr "Get the mount point"

#: backend/components/dbresource/client.py:51
#: backend/db_services/dbresource/views/resource.py:265
msgid "获取磁盘类型"
msgstr "Get disk type"

#: backend/components/dbresource/client.py:56
#: backend/db_services/dbresource/views/resource.py:282
msgid "根据逻辑城市查询园区"
msgstr "Query parks based on logical cities"

#: backend/components/dbresource/client.py:61
msgid "资源申请预占用"
msgstr "Resource application pre-occupancy"

#: backend/components/dbresource/client.py:66
msgid "资源申请确认"
msgstr "Resource Application Confirmation"

#: backend/components/dbresource/client.py:71
#: backend/db_services/dbresource/views/resource.py:322
msgid "资源删除"
msgstr "resource deletion"

#: backend/components/dbresource/client.py:76
#: backend/db_services/dbresource/views/resource.py:347
msgid "资源更新"
msgstr "Resource update"

#: backend/components/dbresource/client.py:81
msgid "资源批量更新"
msgstr "Resource batch update"

#: backend/components/dbresource/client.py:86
msgid "获取机型List"
msgstr "Get Model List"

#: backend/components/dbresource/client.py:91
msgid "获取操作记录"
msgstr "Get operation records"

#: backend/components/dbresource/client.py:96
msgid "创建导入操作记录"
msgstr "Create import operation record"

#: backend/components/dbresource/client.py:101
msgid "预申请获取资源数量"
msgstr "Quantity of resources obtained by pre-application"

#: backend/components/dns/client.py:19
msgid "DNS域名管理"
msgstr "DNS domain name management"

#: backend/components/dns/client.py:26
msgid "获取域名映射关系"
msgstr "Get domain name mapping relationship"

#: backend/components/dns/client.py:31
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/access_manager.py:56
msgid "删除域名映射"
msgstr "delete domain mapping"

#: backend/components/dns/client.py:36
msgid "更新域名映射关系"
msgstr "Update domain name mapping relationship"

#: backend/components/dns/client.py:41
msgid "新增域名映射关系"
msgstr "Add domain name mapping relationship"

#: backend/components/dns/client.py:46
msgid "批量更新域名映射关系"
msgstr "Batch update domain name mapping relationship"

#: backend/components/dns/client.py:51
msgid "获取所有ip、域名关系"
msgstr "Get all ip, domain name relationship"

#: backend/components/dns/client.py:56
msgid "更新域名所属业务关系"
msgstr "Update the business relationship to which the domain name belongs"

#: backend/components/gcs/client.py:19 backend/components/gcs/client.py:35
msgid "Gcs平台"
msgstr "Gcs platform"

#: backend/components/gcs/client.py:24
msgid "gcs授权接口(mysql和spider)"
msgstr "gcs authorization interface (mysql and spider)"

#: backend/components/gcs/client.py:30
msgid "查询gcs作业执行状态"
msgstr "Query gcs job execution status"

#: backend/components/gcs/client.py:42
msgid "直接授权接口"
msgstr "direct authorization interface"

#: backend/components/gse/client.py:19
msgid "管控平台"
msgstr "Control platform"

#: backend/components/gse/client.py:26
msgid "Agent在线状态查询 - 1.0"
msgstr "Agent online status query-1.0"

#: backend/components/gse/client.py:32
msgid "查询Agent状态列表信息 - 2.0"
msgstr "Query Agent status list information-2.0"

#: backend/components/hadb/client.py:19
msgid "HADB 服务"
msgstr "HADB service"

#: backend/components/hadb/client.py:26
msgid "上报和查询ha的探测切换日志"
msgstr "Report and query ha detection switch log"

#: backend/components/hadb/client.py:31
msgid "上报和查询数据库实例的状态"
msgstr "Report and query the status of the database instance"

#: backend/components/hadb/client.py:36
msgid "上报和查询ha服务的状态"
msgstr "Report and query the status of the ha service"

#: backend/components/hadb/client.py:41
msgid "查询和上报切换队列"
msgstr "Query and report switching queue"

#: backend/components/hadb/client.py:46
msgid "查询切换详情"
msgstr "Query switching details"

#: backend/components/hadb/client.py:51
msgid "DBHA切换屏蔽配置"
msgstr "DBHA switch shielding configuration"

#: backend/components/itsm/client.py:19
msgid "ITSM流程管理"
msgstr "ITSM process management"

#: backend/components/itsm/client.py:26
#: backend/db_services/redis/autofix/enums.py:38 backend/ticket/views.py:278
#: backend/ticket/views.py:279
msgid "创建单据"
msgstr "Create ticket"

#: backend/components/itsm/client.py:31
msgid "单据状态查询"
msgstr "Document status query"

#: backend/components/itsm/client.py:33
msgid "处理单据节点"
msgstr "Process document node"

#: backend/components/itsm/client.py:34
msgid "处理单据"
msgstr "Processing documents"

#: backend/components/itsm/client.py:35
msgid "单据详情查询"
msgstr "Document details query"

#: backend/components/itsm/client.py:39
msgid "审批结果查询"
msgstr "Approval result query"

#: backend/components/itsm/client.py:44
msgid "单据日志查询"
msgstr "Ticket log query"

#: backend/components/itsm/client.py:49
msgid "服务目录查询"
msgstr "Service Directory Inquiry"

#: backend/components/itsm/client.py:51
msgid "服务列表查询"
msgstr "Service List Query"

#: backend/components/itsm/client.py:55
msgid "创建服务目录"
msgstr "Create a service catalog"

#: backend/components/itsm/client.py:57
msgid "导入服务"
msgstr "import service"

#: backend/components/itsm/client.py:58
msgid "更新服务"
msgstr "update service"

#: backend/components/itsm/constants.py:19 backend/ticket/constants.py:54
msgid "处理中"
msgstr "Processing"

#: backend/components/itsm/constants.py:20
msgid "已结束"
msgstr "over"

#: backend/components/itsm/constants.py:21
msgid "已撤单"
msgstr "Canceled"

#: backend/components/itsm/constants.py:22
msgid "被终止"
msgstr "terminated"

#: backend/components/job/client.py:19
msgid "作业平台"
msgstr "Working platform"

#: backend/components/job/client.py:26
msgid "快速执行脚本"
msgstr "Execute scripts quickly"

#: backend/components/job/client.py:31
msgid "快速分发文件"
msgstr "Distribute files quickly"

#: backend/components/job/client.py:36
msgid "快速分发配置"
msgstr "Quick distribution configuration"

#: backend/components/job/client.py:41
msgid "查询作业执行状态"
msgstr "Query job execution status"

#: backend/components/job/client.py:46
msgid "根据作业实例ID查询作业执行日志"
msgstr "Query job execution logs based on the job instance ID"

#: backend/components/job/client.py:51
msgid "根据ip列表批量查询作业执行日志"
msgstr "Query job execution logs in batches based on the IP list"

#: backend/components/job/client.py:56
msgid "新建凭据"
msgstr "Create new credentials"

#: backend/components/job/client.py:61
msgid "新建文件源"
msgstr "new file source"

#: backend/components/job/client.py:66
#: backend/components/mysql_priv_manager/client.py:65
#: backend/db_services/dbpermission/db_account/views.py:84
msgid "创建账号"
msgstr "Create an account"

#: backend/components/job/client.py:71
#: backend/components/mysql_priv_manager/client.py:80
msgid "查询账号列表"
msgstr "Query account list"

#: backend/components/mysql_backup/client.py:18
#: backend/components/mysql_backup/client.py:30
msgid "备份文件下载"
msgstr "Backup file download"

#: backend/components/mysql_backup/client.py:25
msgid "获取备份"
msgstr "get backup"

#: backend/components/mysql_backup/client.py:36 backend/ticket/views.py:266
msgid "查询单据状态"
msgstr "Query ticket status"

#: backend/components/mysql_backup/client.py:41
msgid "backup_client下载，同步任务"
msgstr "backup_client download, synchronization task"

#: backend/components/mysql_partition/client.py:18
#: backend/db_services/partition/constants.py:15
#: backend/iam_app/dataclass/actions.py:451
#: backend/iam_app/dataclass/actions.py:463
#: backend/iam_app/dataclass/actions.py:475
#: backend/iam_app/dataclass/actions.py:487
#: backend/iam_app/dataclass/actions.py:830
#: backend/iam_app/dataclass/actions.py:842
#: backend/iam_app/dataclass/actions.py:854
#: backend/iam_app/dataclass/actions.py:866 backend/ticket/constants.py:188
#: backend/ticket/constants.py:211
msgid "分区管理"
msgstr "Partition management"

#: backend/components/mysql_partition/client.py:25
msgid "获取分区语句"
msgstr "get partition statement"

#: backend/components/mysql_partition/client.py:30
msgid "添加分区配置"
msgstr "Add partition configuration"

#: backend/components/mysql_partition/client.py:35
msgid "删除分区配置"
msgstr "Delete partition configuration"

#: backend/components/mysql_partition/client.py:40
msgid "cluster_del_conf"
msgstr "cluster_del_conf"

#: backend/components/mysql_partition/client.py:45
msgid "修改分区配置"
msgstr "Modify partition configuration"

#: backend/components/mysql_partition/client.py:50
msgid "查询分区配置"
msgstr "Query partition configuration"

#: backend/components/mysql_partition/client.py:55
msgid "启用分区"
msgstr "enable partition"

#: backend/components/mysql_partition/client.py:60
#: backend/components/mysql_partition/client.py:65
#: backend/components/mysql_partition/client.py:70
msgid "禁用分区"
msgstr "disable partition"

#: backend/components/mysql_partition/client.py:75
msgid "查询分区日志"
msgstr "Query partition logs"

#: backend/components/mysql_partition/client.py:80
msgid "创建分区操作日志"
msgstr "Create partition operation log"

#: backend/components/mysql_partition/client.py:85
msgid "获取巡检日志"
msgstr "Get inspection log"

#: backend/components/mysql_priv_manager/client.py:19
msgid "DB权限管理"
msgstr "DB permission management"

#: backend/components/mysql_priv_manager/client.py:29
msgid "帐号规则详情"
msgstr "Account Rules Details"

#: backend/components/mysql_priv_manager/client.py:34
msgid "帐号规则清单"
msgstr "List of account rules"

#: backend/components/mysql_priv_manager/client.py:39
msgid "添加帐号规则前置检查"
msgstr "Add account rule pre-check"

#: backend/components/mysql_priv_manager/client.py:44
msgid "添加帐号规则"
msgstr "Add Account Rules"

#: backend/components/mysql_priv_manager/client.py:49
msgid "删除帐号规则"
msgstr "delete account rule"

#: backend/components/mysql_priv_manager/client.py:54
msgid "修改帐号规则"
msgstr "Modify Account Rules"

#: backend/components/mysql_priv_manager/client.py:60
msgid "请求公钥"
msgstr "request public key"

#: backend/components/mysql_priv_manager/client.py:70
#: backend/db_services/dbpermission/db_account/views.py:96
msgid "删除账号"
msgstr "delete account"

#: backend/components/mysql_priv_manager/client.py:75
msgid "修改账号的密码"
msgstr "Change account password"

#: backend/components/mysql_priv_manager/client.py:87
msgid "前置检查授权数据"
msgstr "Pre-check authorization data"

#: backend/components/mysql_priv_manager/client.py:92
msgid "添加授权"
msgstr "Add authorization"

#: backend/components/mysql_priv_manager/client.py:97
msgid "查询现网授权记录"
msgstr "Query the Authorization Record of the Live Network"

#: backend/components/mysql_priv_manager/client.py:104
msgid "实例间权限克隆"
msgstr "Inter-instance privilege cloning"

#: backend/components/mysql_priv_manager/client.py:109
msgid "实例间权限克隆前置检查"
msgstr "Inter-instance permission cloning pre-check"

#: backend/components/mysql_priv_manager/client.py:114
msgid "客户端权限克隆"
msgstr "Client Permission Clone"

#: backend/components/mysql_priv_manager/client.py:119
msgid "客户端权限克隆前置检查"
msgstr "Client permission clone pre-check"

#: backend/components/mysql_priv_manager/client.py:124
msgid "mysql实例创建临时账号(切换专属接口)"
msgstr ""
"Mysql instance creates a temporary account (switching the dedicated "
"interface)"

#: backend/components/mysql_priv_manager/client.py:129
msgid "新增或者修改实例中管理用户的密码"
msgstr "Add or modify the password of the administrative user in the instance"

#: backend/components/mysql_priv_manager/client.py:134
msgid "获取密码"
msgstr "Get password"

#: backend/components/mysql_priv_manager/client.py:139
msgid "新增或者修改密码"
msgstr "Add or change password"

#: backend/components/mysql_priv_manager/client.py:144
msgid "生成随机字符串"
msgstr "Generate random string"

#: backend/components/mysql_priv_manager/client.py:149
msgid "获取安全规则"
msgstr "Get security rules"

#: backend/components/mysql_priv_manager/client.py:154
msgid "添加安全规则"
msgstr "Add security rules"

#: backend/components/mysql_priv_manager/client.py:159
msgid "修改安全规则"
msgstr "Modify security rules"

#: backend/components/mysql_priv_manager/client.py:164
msgid "删除安全规则"
msgstr "Delete security rules"

#: backend/components/mysql_priv_manager/client.py:169
msgid "获取不参与随机化的业务"
msgstr "Get services that do not participate in randomization"

#: backend/components/mysql_priv_manager/client.py:174
msgid "修改不参与随机化的业务"
msgstr "Modify businesses that do not participate in randomization"

#: backend/components/mysql_priv_manager/client.py:179
msgid "校验密码强度"
msgstr "Verify password strength"

#: backend/components/mysql_priv_manager/client.py:184
msgid "获取mysql ADMIN的密码——mysql专用"
msgstr "Get the password of mysql ADMIN - dedicated to mysql"

#: backend/components/mysql_priv_manager/client.py:189
msgid "删除实例密码记录"
msgstr "Delete instance password record"

#: backend/components/mysql_priv_manager/client.py:194
msgid "查询账号和密码信息"
msgstr "Query account and password information"

#: backend/components/mysql_priv_manager/client.py:199
msgid "从某个业务克隆账号和账号规则到其他业务"
msgstr "Clone accounts and account rules from one business to other businesses"

#: backend/components/proxy_api.py:35
msgid "ProxyApi 必须传入 bk_cloud_id 参数"
msgstr "ProxyApi must pass in the bk_cloud_id parameter"

#: backend/components/proxy_api.py:68
msgid "必须在请求体中传入 url 参数"
msgstr "URL parameters must be passed in the request body"

#: backend/components/scr/client.py:19
msgid "Scr平台"
msgstr "Scr platform"

#: backend/components/scr/client.py:27
msgid "scr平台通用查询接口)"
msgstr "scr platform general query interface)"

#: backend/components/sops/client.py:20
msgid "标准运维"
msgstr "Standard operation and maintenance"

#: backend/components/sops/client.py:28
msgid "通过业务流程模版创建任务"
msgstr "Create tasks from business process templates"

#: backend/components/sops/client.py:33
msgid "启动任务"
msgstr "start task"

#: backend/components/sops/client.py:38
msgid "查询任务状态"
msgstr "Query task status"

#: backend/components/sops/client.py:43
msgid "查询任务节点执行详情"
msgstr "Query task node execution details"

#: backend/components/sql_import/client.py:19
msgid "SQL模拟执行"
msgstr "SQL simulation execution"

#: backend/components/sql_import/client.py:26
#: backend/db_services/mysql/sql_import/views.py:77
msgid "sql语法检查"
msgstr "sql syntax check"

#: backend/components/sql_import/client.py:31
#: backend/components/sql_import/client.py:41
msgid "容器化SQL模拟执行"
msgstr "Containerized SQL simulation execution"

#: backend/components/sql_import/client.py:36
msgid "查询模拟执行任务状态也"
msgstr "Querying the simulated execution task status is also"

#: backend/components/sql_import/client.py:46
msgid "查询语义执行结果"
msgstr "Query semantic execution results"

#: backend/components/usermanage/client.py:19
msgid "用户管理模块"
msgstr "User Management Module"

#: backend/components/usermanage/client.py:26
msgid "获取所有用户"
msgstr "get all users"

#: backend/components/usermanage/client.py:32
msgid "获取单个用户"
msgstr "get a single user"

#: backend/components/utils/handlers.py:23
msgid "接口返回数据为空，请检查接口数据是否正常"
msgstr ""
"The data returned by the interface is empty, please check whether the "
"interface data is normal"

#: backend/configuration/apps.py:32 backend/dbm_init/apps.py:26
msgid "初始化配置异常，错误信息:{}"
msgstr "Initial configuration exception, error message: {}"

#: backend/configuration/constants.py:30
msgid "默认密码策略"
msgstr "Default password policy"

#: backend/configuration/constants.py:31
msgid "redis密码策略"
msgstr "redis password policy"

#: backend/configuration/constants.py:39 backend/flow/consts.py:1064
msgid "tdbctl"
msgstr "tdbctl"

#: backend/configuration/constants.py:40
#: backend/db_meta/enums/machine_type.py:17 backend/flow/consts.py:354
#: backend/flow/consts.py:1063
msgid "spider"
msgstr "spider"

#: backend/configuration/constants.py:41
#: backend/db_meta/enums/access_layer.py:18 backend/ticket/constants.py:23
msgid "storage"
msgstr "storage"

#: backend/configuration/constants.py:50
msgid "同城同subzone跨交换机跨机架"
msgstr "In the same city, in the same subzone, across switches and across racks"

#: backend/configuration/constants.py:51
msgid "同城同subzone"
msgstr "Same city, same subzone"

#: backend/configuration/constants.py:52
msgid "CROS_SUBZONE"
msgstr "CROS_SUBZONE"

#: backend/configuration/constants.py:53
msgid "跨机架"
msgstr "Across racks"

#: backend/configuration/constants.py:54
msgid "NONE"
msgstr "NONE"

#: backend/configuration/constants.py:55
msgid "每个subzone尽量均匀分布"
msgstr "Try to distribute each subzone evenly as much as possible"

#: backend/configuration/constants.py:59
#: backend/db_services/dbpermission/constants.py:97
#: backend/db_services/mysql/permission/constants.py:20
#: backend/flow/consts.py:333 backend/iam_app/dataclass/actions.py:267
#: backend/iam_app/dataclass/actions.py:279
#: backend/iam_app/dataclass/actions.py:319
#: backend/iam_app/dataclass/actions.py:335
#: backend/iam_app/dataclass/actions.py:346
#: backend/iam_app/dataclass/actions.py:358
#: backend/iam_app/dataclass/actions.py:370
#: backend/iam_app/dataclass/actions.py:382
#: backend/iam_app/dataclass/actions.py:394
#: backend/iam_app/dataclass/actions.py:406
#: backend/iam_app/dataclass/actions.py:418
#: backend/iam_app/dataclass/actions.py:430
#: backend/iam_app/dataclass/actions.py:450
#: backend/iam_app/dataclass/actions.py:462
#: backend/iam_app/dataclass/actions.py:474
#: backend/iam_app/dataclass/actions.py:486
#: backend/iam_app/dataclass/actions.py:498
#: backend/iam_app/dataclass/actions.py:510
#: backend/iam_app/dataclass/actions.py:522
#: backend/iam_app/dataclass/actions.py:534
#: backend/iam_app/dataclass/actions.py:546
#: backend/iam_app/dataclass/actions.py:558
#: backend/iam_app/dataclass/actions.py:570
#: backend/iam_app/dataclass/actions.py:582
#: backend/iam_app/dataclass/actions.py:594
#: backend/iam_app/dataclass/actions.py:606
#: backend/iam_app/dataclass/actions.py:618
msgid "MySQL"
msgstr "MySQL"

#: backend/configuration/constants.py:60
#: backend/iam_app/dataclass/actions.py:630
#: backend/iam_app/dataclass/actions.py:662
#: backend/iam_app/dataclass/actions.py:678
#: backend/iam_app/dataclass/actions.py:689
#: backend/iam_app/dataclass/actions.py:701
#: backend/iam_app/dataclass/actions.py:713
#: backend/iam_app/dataclass/actions.py:725
#: backend/iam_app/dataclass/actions.py:737
#: backend/iam_app/dataclass/actions.py:747
#: backend/iam_app/dataclass/actions.py:757
#: backend/iam_app/dataclass/actions.py:769
#: backend/iam_app/dataclass/actions.py:781
#: backend/iam_app/dataclass/actions.py:793
#: backend/iam_app/dataclass/actions.py:805
#: backend/iam_app/dataclass/actions.py:817
#: backend/iam_app/dataclass/actions.py:829
#: backend/iam_app/dataclass/actions.py:841
#: backend/iam_app/dataclass/actions.py:853
#: backend/iam_app/dataclass/actions.py:865
#: backend/iam_app/dataclass/actions.py:886
#: backend/iam_app/dataclass/actions.py:899
msgid "TenDBCluster"
msgstr "TenDB Cluster"

#: backend/configuration/constants.py:61
#: backend/db_meta/enums/cluster_type.py:26
#: backend/iam_app/dataclass/actions.py:911
#: backend/iam_app/dataclass/actions.py:927
#: backend/iam_app/dataclass/actions.py:943
#: backend/iam_app/dataclass/actions.py:964
msgid "Redis"
msgstr "Redis"

#: backend/configuration/constants.py:62
#: backend/db_services/dbpermission/constants.py:99
#: backend/iam_app/dataclass/actions.py:1281
#: backend/iam_app/dataclass/actions.py:1293
#: backend/iam_app/dataclass/actions.py:1305
#: backend/iam_app/dataclass/actions.py:1316
#: backend/iam_app/dataclass/actions.py:1327
#: backend/iam_app/dataclass/actions.py:1339
#: backend/iam_app/dataclass/actions.py:1351
#: backend/iam_app/dataclass/actions.py:1363
#: backend/iam_app/dataclass/actions.py:1375
msgid "MongoDB"
msgstr "MongoDB"

#: backend/configuration/constants.py:63 backend/flow/consts.py:197
#: backend/iam_app/dataclass/actions.py:1104
#: backend/iam_app/dataclass/actions.py:1116
#: backend/iam_app/dataclass/actions.py:1136
msgid "Kafka"
msgstr "Kafka"

#: backend/configuration/constants.py:64
#: backend/iam_app/dataclass/actions.py:1156
#: backend/iam_app/dataclass/actions.py:1168
#: backend/iam_app/dataclass/actions.py:1180
msgid "HDFS"
msgstr "HDFS"

#: backend/configuration/constants.py:65
msgid "ElasticSearch"
msgstr "ElasticSearch"

#: backend/configuration/constants.py:66 backend/flow/consts.py:199
#: backend/iam_app/dataclass/actions.py:1200
#: backend/iam_app/dataclass/actions.py:1212
#: backend/iam_app/dataclass/actions.py:1224
msgid "Pulsar"
msgstr "Pulsar"

#: backend/configuration/constants.py:67
msgid "InfluxDB"
msgstr "InfluxDB"

#: backend/configuration/constants.py:68
#: backend/db_meta/enums/instance_role.py:81 backend/flow/consts.py:202
#: backend/iam_app/dataclass/actions.py:1245
#: backend/iam_app/dataclass/actions.py:1257
#: backend/iam_app/dataclass/actions.py:1269
msgid "Riak"
msgstr "Ripple"

#: backend/configuration/constants.py:69
#: backend/db_services/dbpermission/constants.py:100
#: backend/iam_app/dataclass/actions.py:1386
#: backend/iam_app/dataclass/actions.py:1398
#: backend/iam_app/dataclass/actions.py:1409
#: backend/iam_app/dataclass/actions.py:1420
#: backend/iam_app/dataclass/actions.py:1431
#: backend/iam_app/dataclass/actions.py:1443
#: backend/iam_app/dataclass/actions.py:1455
#: backend/iam_app/dataclass/actions.py:1467
#: backend/iam_app/dataclass/actions.py:1479
#: backend/iam_app/dataclass/actions.py:1491
msgid "SQLServer"
msgstr "SQLServer"

#: backend/configuration/constants.py:70 backend/flow/consts.py:204
#: backend/iam_app/dataclass/actions.py:1068
#: backend/iam_app/dataclass/actions.py:1080
#: backend/iam_app/dataclass/actions.py:1092
msgid "Doris"
msgstr "Doris"

#: backend/configuration/constants.py:71 backend/flow/consts.py:205
msgid "Vm"
msgstr "Vm"

#: backend/configuration/constants.py:74
msgid "Cloud"
msgstr "Cloud"

#: backend/configuration/constants.py:77
#: backend/db_meta/enums/cluster_type.py:24
#: backend/db_meta/enums/machine_type.py:65
msgid "TBinlogDumper"
msgstr "TBinlogDumper"

#: backend/configuration/constants.py:83
msgid "DBM系统的管理集群拓扑"
msgstr "Management cluster topology of DBM system"

#: backend/configuration/constants.py:84
msgid "DBM_SSL"
msgstr "DBM_SSL"

#: backend/configuration/constants.py:85 backend/configuration/constants.py:187
msgid "监控数据源token"
msgstr "Monitoring data source token"

#: backend/configuration/constants.py:86
msgid "mysql/redis-监控自定义上报: dataid/token"
msgstr "mysql/redis-monitoring custom reporting: dataid/token"

#: backend/configuration/constants.py:87 backend/configuration/constants.py:189
msgid "业务空闲模块ID"
msgstr "Business idle module ID"

#: backend/configuration/constants.py:89 backend/configuration/constants.py:190
msgid "独立托管机器的业务列表"
msgstr "Business List of Independently Hosted Machines"

#: backend/configuration/constants.py:90 backend/configuration/constants.py:191
msgid "默认的规格参数偏移量"
msgstr "Default specification parameter offset"

#: backend/configuration/constants.py:91
msgid "机型列表"
msgstr "Model list"

#: backend/configuration/constants.py:92
#: backend/iam_app/dataclass/actions.py:1891
msgid "轮值通知设置"
msgstr "Rotation notification settings"

#: backend/configuration/constants.py:93 backend/configuration/constants.py:193
msgid "具备迁移权限的人员名单"
msgstr "List of people with migration permissions"

#: backend/configuration/constants.py:94
msgid "全业务通用配置信息"
msgstr "Common configuration information for all services"

#: backend/configuration/constants.py:95
msgid "容灾要求(各个环境可能不同，比如SG为空)"
msgstr "Disaster recovery requirements (each environment may be different, for example, SG is empty)"

#: backend/configuration/constants.py:96 backend/configuration/constants.py:196
msgid "系统消息通知方式"
msgstr "System message notification method"

#: backend/configuration/constants.py:97 backend/configuration/constants.py:197
msgid "补全proxy的集群域名列表"
msgstr "Complete the proxy’s cluster domain name list"

#: backend/configuration/constants.py:99
msgid "DBM的流程服务ID"
msgstr "DBM process service ID"

#: backend/configuration/constants.py:100
msgid "ITSM审批意见key"
msgstr "ITSM approval opinion key"

#: backend/configuration/constants.py:101
msgid "ITSM备注key"
msgstr "ITSM note key"

#: backend/configuration/constants.py:107
msgid "开区模板的渲染变量"
msgstr "Rendering variables for open area templates"

#: backend/configuration/constants.py:108
msgid "独立托管机器的数据库类型"
msgstr "Database type for independent hosting machine"

#: backend/configuration/constants.py:110
msgid "是否跳过语义检查"
msgstr "Whether to skip semantic checking"

#: backend/configuration/constants.py:141
msgid "请补充：自定义指标-数据ID"
msgstr "Please add: custom indicator - data ID"

#: backend/configuration/constants.py:142
msgid "请补充：自定义指标-Token"
msgstr "Please add: custom indicator-Token"

#: backend/configuration/constants.py:145
msgid "请补充：自定义事件-数据ID"
msgstr "Please add: Custom Event - Data ID"

#: backend/configuration/constants.py:146
msgid "请补充：自定义事件-Token"
msgstr "Please add: Custom Event-Token"

#: backend/configuration/constants.py:188
msgid "监控数据源上报配置"
msgstr "Monitoring data source reporting configuration"

#: backend/configuration/constants.py:192
msgid "默认通知配置"
msgstr "Default notification configuration"

#: backend/configuration/constants.py:194
msgid "默认的全业务配置信息"
msgstr "Default full-service configuration information"

#: backend/configuration/constants.py:195
msgid "环境的容灾要求"
msgstr "Environmental disaster recovery requirements"

#: backend/configuration/exceptions.py:23
#: backend/configuration/exceptions.py:24
msgid "密码策略相关异常"
msgstr "Password policy related exceptions"

#: backend/configuration/handlers/password.py:98
msgid "目前暂未支持{}类型的查询"
msgstr "{} type queries are currently not supported."

#: backend/configuration/handlers/password.py:113
msgid "请保证查询的实例输入格式合法，格式为[CLOUD_ID:]IP:PORT"
msgstr "Please ensure that the query instance input format is legal, the format is [CLOUD_ID:]IP:PORT"

#: backend/configuration/handlers/password.py:171
msgid "请保证修改密码的实例属于同一DB组件"
msgstr "Please ensure that the instance where the password is changed belongs to the same DB component"

#: backend/configuration/handlers/password.py:218
msgid "{}-{}不存在相应的password角色"
msgstr "{}-{} does not have a corresponding password role"

#: backend/configuration/models/dba.py:21
#: backend/configuration/models/ip_whitelist.py:25
#: backend/configuration/models/system.py:123
#: backend/configuration/serializers.py:47
#: backend/configuration/serializers.py:57
#: backend/configuration/serializers.py:69
#: backend/configuration/serializers.py:78
#: backend/configuration/serializers.py:96
#: backend/configuration/serializers.py:197
#: backend/configuration/serializers.py:213 backend/core/storages/models.py:19
#: backend/db_dirty/models.py:25 backend/db_event/serializers.py:47
#: backend/db_event/serializers.py:61 backend/db_meta/models/app.py:26
#: backend/db_meta/models/group.py:22 backend/db_monitor/serializers.py:31
#: backend/db_monitor/serializers.py:181 backend/db_monitor/serializers.py:218
#: backend/db_monitor/views/policy.py:54 backend/db_proxy/models.py:150
#: backend/db_proxy/views/db_meta/serializers.py:108
#: backend/db_proxy/views/db_meta/serializers.py:118
#: backend/db_proxy/views/db_meta/serializers.py:132
#: backend/db_proxy/views/dbconfig/serializers.py:21
#: backend/db_proxy/views/dumper/serializers.py:30
#: backend/db_services/bigdata/resources/serializers.py:18
#: backend/db_services/cmdb/serializers.py:36
#: backend/db_services/cmdb/serializers.py:43
#: backend/db_services/cmdb/serializers.py:74
#: backend/db_services/dbbase/cluster/serializers.py:54
#: backend/db_services/dbbase/instances/yasg_slz.py:18
#: backend/db_services/dbbase/serializers.py:29
#: backend/db_services/dbbase/serializers.py:38
#: backend/db_services/dbbase/serializers.py:62
#: backend/db_services/dbbase/serializers.py:78
#: backend/db_services/dbbase/serializers.py:94
#: backend/db_services/dbconfig/serializers.py:74
#: backend/db_services/dbconfig/serializers.py:86
#: backend/db_services/dbpermission/db_account/serializers.py:85
#: backend/db_services/dbpermission/db_account/serializers.py:94
#: backend/db_services/dbresource/serializers.py:375
#: backend/db_services/ipchooser/serializers/topo_sers.py:70
#: backend/db_services/meta_import/serializers.py:71
#: backend/db_services/meta_import/serializers.py:79
#: backend/db_services/meta_import/serializers.py:127
#: backend/db_services/mysql/cluster/serializers.py:31
#: backend/db_services/mysql/open_area/filters.py:20
#: backend/db_services/mysql/open_area/models.py:21
#: backend/db_services/partition/serializers.py:25
#: backend/db_services/partition/serializers.py:98
#: backend/db_services/plugin/bf/serializers.py:18
#: backend/db_services/plugin/mysql/authorize/serializers.py:17
#: backend/db_services/redis/autofix/models.py:35
#: backend/db_services/redis/autofix/models.py:51
#: backend/db_services/redis/autofix/models.py:80 backend/flow/models.py:20
#: backend/iam_app/serializers.py:31 backend/ticket/builders/common/base.py:103
#: backend/ticket/builders/mysql/mysql_authorize_rules.py:27
#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:32
#: backend/ticket/builders/mysql/mysql_ha_standardize.py:28
#: backend/ticket/builders/mysql/mysql_openarea.py:37
#: backend/ticket/builders/mysql/mysql_openarea.py:39
#: backend/ticket/builders/mysql/mysql_push_peripheral_config.py:24
#: backend/ticket/builders/spider/metadata_import.py:32
#: backend/ticket/builders/spider/mysql_spider_standardize.py:28
#: backend/ticket/builders/tendbcluster/append_deploy_ctl.py:24
#: backend/ticket/builders/tendbsingle/metadata_import.py:31
#: backend/ticket/builders/tendbsingle/standardize.py:26
#: backend/ticket/models/ticket.py:86 backend/ticket/models/ticket.py:235
#: backend/ticket/serializers.py:250 backend/ticket/serializers.py:290
#: backend/ticket/serializers.py:301
msgid "业务ID"
msgstr "Business ID"

#: backend/configuration/models/dba.py:22
#: backend/configuration/serializers.py:73
#: backend/db_monitor/models/alarm.py:60 backend/db_monitor/models/alarm.py:245
#: backend/db_monitor/serializers.py:217 backend/db_package/serializers.py:51
#: backend/db_services/quick_search/serializers.py:23
msgid "数据库类型"
msgstr "database type"

#: backend/configuration/models/dba.py:23
#: backend/configuration/serializers.py:74 backend/db_services/user/views.py:28
msgid "人员列表"
msgstr "personnel list"

#: backend/configuration/models/dba.py:26
msgid "DBA人员设置(DBAdministrator)"
msgstr "DBA personnel settings (DBAdministrator)"

#: backend/configuration/models/function_controller.py:20
msgid "大数据"
msgstr "big data"

#: backend/configuration/models/function_controller.py:21
#: backend/iam_app/dataclass/actions.py:69 backend/ticket/constants.py:119
msgid "工具箱"
msgstr "toolbox"

#: backend/configuration/models/function_controller.py:22
msgid "TenDBCluster 工具箱"
msgstr "TenDBCluster Toolbox"

#: backend/configuration/models/function_controller.py:23
msgid "Sqlserver 工具箱"
msgstr "Sqlserver toolbox"

#: backend/configuration/models/function_controller.py:24
msgid "插件服务"
msgstr "Plug-in service"

#: backend/configuration/models/function_controller.py:25
msgid "监控告警"
msgstr "Monitor alarms"

#: backend/configuration/models/function_controller.py:101
msgid "功能名称"
msgstr "Function name"

#: backend/configuration/models/function_controller.py:102
msgid "是否开启"
msgstr "Whether to turn on"

#: backend/configuration/models/function_controller.py:103
#: backend/db_periodic_task/models.py:35
msgid "是否冻结"
msgstr "Whether to freeze"

#: backend/configuration/models/function_controller.py:103
msgid "人工冻结此开关，将不受更新影响"
msgstr "Manually freezing this switch will not be affected by updates"

#: backend/configuration/models/function_controller.py:104
msgid "父功能名称"
msgstr "Parent function name"

#: backend/configuration/models/function_controller.py:107
msgid "功能控制器(FunctionController)"
msgstr "FunctionController"

#: backend/configuration/models/ip_whitelist.py:26
#: backend/configuration/serializers.py:198
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:90
#: backend/ticket/filters.py:20 backend/ticket/models/ticket.py:100
#: backend/ticket/serializers.py:86
msgid "备注"
msgstr "Remark"

#: backend/configuration/models/ip_whitelist.py:27
#: backend/configuration/serializers.py:199
#: backend/ticket/builders/mysql/mysql_authorize_rules.py:61
msgid "ip列表"
msgstr "ip list"

#: backend/configuration/models/ip_whitelist.py:30
msgid "IP白名单(IPWhitelist)"
msgstr "IP Whitelist (IPWhitelist)"

#: backend/configuration/models/password_policy.py:24
#: backend/configuration/serializers.py:193
#: backend/db_services/dbpermission/db_account/serializers.py:26
#: backend/db_services/dbpermission/db_account/serializers.py:69
#: backend/db_services/dbpermission/db_account/serializers.py:105
#: backend/db_services/dbpermission/db_account/serializers.py:120
#: backend/db_services/dbpermission/db_account/serializers.py:172
#: backend/db_services/dbpermission/db_account/serializers.py:187
msgid "账号类型"
msgstr "account type"

#: backend/configuration/models/password_policy.py:26
#: backend/configuration/serializers.py:157
#: backend/configuration/views/password_policy.py:39
msgid "密码安全策略"
msgstr "Password Security Policy"

#: backend/configuration/models/password_policy.py:29
msgid "密码安全策略(PasswordPolicy)"
msgstr "Password security policy (PasswordPolicy)"

#: backend/configuration/models/profile.py:19
#: backend/db_services/mysql/permission/authorize/serializers.py:29
#: backend/db_services/plugin/bf/serializers.py:22
#: backend/ticket/builders/mysql/mysql_clone_rules.py:33
#: backend/version_log/models.py:42
msgid "用户名"
msgstr "username"

#: backend/configuration/models/profile.py:20
#: backend/db_monitor/serializers.py:234
#: backend/db_services/dbresource/serializers.py:55
msgid "标签"
msgstr "Label"

#: backend/configuration/models/profile.py:21
msgid "配置值"
msgstr "configuration value"

#: backend/configuration/models/profile.py:24
msgid "个人偏好(Profile)"
msgstr "Personal preferences (Profile)"

#: backend/configuration/models/system.py:30
#: backend/db_report/views/dbmon_heartbeat_view.py:58
#: backend/db_services/plugin/mysql/authorize/serializers.py:28
#: backend/ticket/serializers.py:270
msgid "类型"
msgstr "type"

#: backend/configuration/models/system.py:31
msgid "关键字唯一标识"
msgstr "Keyword Unique Identifier"

#: backend/configuration/models/system.py:32
msgid "系统设置值"
msgstr "system settings"

#: backend/configuration/models/system.py:33
#: backend/db_services/dbconfig/serializers.py:31
#: backend/db_services/dbconfig/serializers.py:82
#: backend/db_services/dbresource/filters.py:21
#: backend/flow/plugins/components/collections/common/pause.py:71
msgid "描述"
msgstr "describe"

#: backend/configuration/models/system.py:70
msgid "系统配置(SystemSettings)"
msgstr "System Settings"

#: backend/configuration/models/system.py:133
msgid "业务配置(BizSettings)"
msgstr "Business configuration (BizSettings)"

#: backend/configuration/serializers.py:48
#: backend/db_services/taskflow/serializers.py:61
msgid "查询key"
msgstr "Query key"

#: backend/configuration/serializers.py:58
msgid "更新key"
msgstr "Update key"

#: backend/configuration/serializers.py:59
msgid "更新value"
msgstr "update value"

#: backend/configuration/serializers.py:60
msgid "value类型"
msgstr "value type"

#: backend/configuration/serializers.py:84
msgid "分钟"
msgstr "minute"

#: backend/configuration/serializers.py:85
msgid "小时"
msgstr "Hour"

#: backend/configuration/serializers.py:86
msgid "每周几天(eg: 1,4,5 表示一周的周一，周四，周五)"
msgstr "Days of the week (eg: 1,4,5 means Monday, Thursday, Friday)"

#: backend/configuration/serializers.py:87
msgid "每月几天(eg: 1, 11, 13 表示每月的1号，11号，13号)"
msgstr "Days of the month (eg: 1, 11, 13 means the 1st, 11th, and 13th of each month)"

#: backend/configuration/serializers.py:89
msgid "crontab表达式"
msgstr "crontab expression"

#: backend/configuration/serializers.py:93
#: backend/configuration/serializers.py:217 backend/db_dirty/serializers.py:26
#: backend/db_proxy/views/dbpriv/serializers.py:31
#: backend/db_services/mongodb/restore/serializers.py:36
#: backend/db_services/mysql/fixpoint_rollback/serializers.py:66
msgid "分页限制"
msgstr "paging limit"

#: backend/configuration/serializers.py:94
#: backend/configuration/serializers.py:218 backend/db_dirty/serializers.py:27
#: backend/db_proxy/views/dbpriv/serializers.py:32
#: backend/db_services/mongodb/restore/serializers.py:37
#: backend/db_services/mysql/fixpoint_rollback/serializers.py:67
msgid "分页起始"
msgstr "Page break start"

#: backend/configuration/serializers.py:97 backend/db_event/serializers.py:51
#: backend/db_event/serializers.py:66
#: backend/db_proxy/views/dbpriv/serializers.py:33
#: backend/db_services/partition/serializers.py:117
#: backend/db_services/redis/redis_dts/serializers.py:27
#: backend/ticket/builders/mysql/mysql_data_repair.py:34
#: backend/ticket/builders/mysql/mysql_flashback.py:34
#: backend/ticket/serializers.py:136
msgid "开始时间"
msgstr "Starting time"

#: backend/configuration/serializers.py:98 backend/db_event/serializers.py:52
#: backend/db_event/serializers.py:53 backend/db_event/serializers.py:67
#: backend/db_proxy/views/dbpriv/serializers.py:34
#: backend/db_services/partition/serializers.py:118
#: backend/db_services/redis/redis_dts/serializers.py:28
#: backend/db_services/sqlserver/rollback/serializers.py:37
#: backend/ticket/builders/mysql/mysql_data_repair.py:35
#: backend/ticket/builders/mysql/mysql_flashback.py:35
#: backend/ticket/serializers.py:137
msgid "结束时间"
msgstr "End Time"

#: backend/configuration/serializers.py:99
msgid "过滤的实例列表(通过,分割，实例格式为--cloud:ip:port)"
msgstr "Filtered instance list (split by, instance format is --cloud:ip:port)"

#: backend/configuration/serializers.py:101
#: backend/db_monitor/views/policy.py:50
#: backend/db_proxy/views/redis_dts/serializers.py:42
#: backend/db_proxy/views/redis_dts/serializers.py:51
#: backend/db_proxy/views/redis_dts/serializers.py:60
#: backend/db_proxy/views/redis_dts/serializers.py:70
msgid "db类型"
msgstr "db type"

#: backend/configuration/serializers.py:112
#: backend/db_proxy/views/dbpriv/serializers.py:21
msgid "实例ip"
msgstr "instance ip"

#: backend/configuration/serializers.py:113
#: backend/db_proxy/views/dbpriv/serializers.py:22
msgid "实例port"
msgstr "Instance port"

#: backend/configuration/serializers.py:114 backend/db_proxy/models.py:151
#: backend/db_proxy/views/cloud/serializers.py:19
#: backend/db_proxy/views/jobapi/serializers.py:19
#: backend/db_proxy/views/jobapi/serializers.py:58
#: backend/db_proxy/views/jobapi/serializers.py:68
#: backend/db_proxy/views/redis_dts/serializers.py:40
#: backend/db_proxy/views/redis_dts/serializers.py:49
#: backend/db_proxy/views/redis_dts/serializers.py:58
#: backend/db_proxy/views/redis_dts/serializers.py:67
#: backend/db_services/dbbase/cluster/serializers.py:37
#: backend/db_services/dbbase/resources/serializers.py:138
#: backend/db_services/dbresource/serializers.py:59
#: backend/db_services/dbresource/serializers.py:376
#: backend/db_services/ipchooser/serializers/base.py:33
#: backend/db_services/mysql/permission/clone/models.py:28
#: backend/db_services/mysql/permission/clone/serializers.py:25
#: backend/db_services/partition/serializers.py:151
#: backend/db_services/redis/autofix/models.py:34
#: backend/db_services/redis/autofix/models.py:50
#: backend/db_services/redis/redis_dts/models/tb_dts_server.py:17
#: backend/ticket/builders/cloud/dbha_add.py:27
#: backend/ticket/builders/cloud/dbha_reduce.py:29
#: backend/ticket/builders/cloud/dbha_reload.py:27
#: backend/ticket/builders/cloud/dbha_replace.py:27
#: backend/ticket/builders/cloud/dns_add.py:27
#: backend/ticket/builders/cloud/dns_reduce.py:28
#: backend/ticket/builders/cloud/dns_reload.py:27
#: backend/ticket/builders/cloud/dns_replace.py:27
#: backend/ticket/builders/cloud/drs_add.py:27
#: backend/ticket/builders/cloud/drs_reduce.py:28
#: backend/ticket/builders/cloud/drs_reload.py:27
#: backend/ticket/builders/cloud/drs_replace.py:27
#: backend/ticket/builders/cloud/nginx_reload.py:26
#: backend/ticket/builders/cloud/nginx_replace.py:31
#: backend/ticket/builders/cloud/redis_dts_add.py:27
#: backend/ticket/builders/cloud/redis_dts_reduce.py:27
#: backend/ticket/builders/cloud/service_apply.py:43
#: backend/ticket/builders/common/base.py:100
#: backend/ticket/builders/common/bigdata.py:124
#: backend/ticket/builders/common/bigdata.py:227
#: backend/ticket/builders/common/bigdata.py:305
#: backend/ticket/builders/influxdb/influxdb_apply.py:43
#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:31
#: backend/ticket/builders/mongodb/mongo_shard_apply.py:26
#: backend/ticket/builders/mysql/mysql_clone_rules.py:32
#: backend/ticket/builders/mysql/mysql_partition.py:48
#: backend/ticket/builders/mysql/mysql_partition_cron.py:25
#: backend/ticket/builders/mysql/mysql_single_apply.py:46
#: backend/ticket/builders/redis/redis_cluster_apply.py:27
#: backend/ticket/builders/redis/redis_instance_apply.py:34
#: backend/ticket/builders/redis/redis_toolbox_add_slave.py:30
#: backend/ticket/builders/redis/redis_toolbox_autofix.py:38
#: backend/ticket/builders/redis/redis_toolbox_cut_off.py:35
#: backend/ticket/builders/redis/redis_toolbox_datastruct_task_delete.py:31
#: backend/ticket/builders/redis/redis_toolbox_fixpoint_make.py:35
#: backend/ticket/builders/redis/redis_toolbox_proxy_scale_up.py:32
#: backend/ticket/builders/redis/redis_toolbox_redis_scale_updown.py:43
#: backend/ticket/builders/riak/riak_apply.py:27
#: backend/ticket/builders/riak/riak_migrate.py:27
#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:45
#: backend/ticket/builders/tendbcluster/append_deploy_ctl.py:23
#: backend/ticket/builders/tendbcluster/tendb_apply.py:30
#: backend/ticket/builders/tendbcluster/tendb_mnt_apply.py:25
#: backend/ticket/builders/tendbcluster/tendb_node_reblance.py:32
#: backend/ticket/builders/tendbcluster/tendb_partition_cron.py:26
#: backend/ticket/serializers.py:336
msgid "云区域ID"
msgstr "Cloud Region ID"

#: backend/configuration/serializers.py:115
#: backend/db_package/serializers.py:47 backend/db_proxy/models.py:149
#: backend/db_proxy/views/db_meta/serializers.py:34
#: backend/db_report/models/checksum_check_report.py:23
#: backend/db_report/views/mysqlbackup_check_view.py:58
#: backend/db_report/views/redis_dbmeta_check_view.py:57
#: backend/db_report/views/redisbackup_check_view.py:62
#: backend/db_services/bigdata/resources/query.py:40
#: backend/db_services/cmdb/serializers.py:49
#: backend/db_services/cmdb/serializers.py:54
#: backend/db_services/dbbase/resources/query.py:86
#: backend/db_services/dbbase/resources/query.py:162
#: backend/db_services/dbbase/resources/serializers.py:35
#: backend/db_services/dbbase/resources/serializers.py:105
#: backend/db_services/dbbase/resources/serializers.py:134
#: backend/db_services/dbbase/serializers.py:27
#: backend/db_services/dbbase/serializers.py:95
#: backend/db_services/dbconfig/serializers.py:20
#: backend/db_services/dbpermission/db_authorize/serializers.py:29
#: backend/db_services/dbpermission/db_authorize/serializers.py:50
#: backend/db_services/dbresource/serializers.py:321
#: backend/db_services/dbresource/serializers.py:343
#: backend/db_services/mongodb/permission/db_authorize/serializers.py:26
#: backend/db_services/mongodb/restore/serializers.py:22
#: backend/db_services/mongodb/restore/serializers.py:39
#: backend/db_services/mysql/cluster/serializers.py:34
#: backend/db_services/mysql/open_area/filters.py:21
#: backend/db_services/mysql/permission/clone/serializers.py:33
#: backend/db_services/mysql/permission/clone/serializers.py:88
#: backend/db_services/mysql/sql_import/serializers.py:35
#: backend/db_services/mysql/sql_import/serializers.py:177
#: backend/db_services/mysql/sql_import/serializers.py:213
#: backend/db_services/partition/serializers.py:26
#: backend/db_services/partition/serializers.py:97
#: backend/db_services/partition/serializers.py:115
#: backend/db_services/redis/autofix/models.py:37
#: backend/db_services/redis/autofix/models.py:53
#: backend/db_services/redis/autofix/models.py:82
#: backend/db_services/redis/resources/redis_cluster/query.py:60
#: backend/db_services/redis/slots_migrate/models/slots_migration_record.py:16
#: backend/db_services/sqlserver/permission/db_authorize/serializers.py:26
#: backend/ticket/builders/mongodb/mongo_backup.py:34
#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:40
#: backend/ticket/builders/mongodb/mongo_restore.py:44
#: backend/ticket/builders/mongodb/mongo_shard_apply.py:35
#: backend/ticket/builders/mysql/mysql_authorize_rules.py:32
#: backend/ticket/builders/mysql/mysql_openarea.py:45
#: backend/ticket/builders/redis/redis_cluster_apply.py:37
#: backend/ticket/builders/redis/redis_instance_apply.py:44
msgid "集群类型"
msgstr "cluster type"

#: backend/configuration/serializers.py:116 backend/db_event/serializers.py:50
#: backend/db_services/bigdata/resources/serializers.py:20
#: backend/db_services/dbbase/resources/query.py:156
msgid "实例角色"
msgstr "instance role"

#: backend/configuration/serializers.py:118
msgid "密码到期小时"
msgstr "Password expiry hour"

#: backend/configuration/serializers.py:119
#: backend/db_services/mysql/permission/authorize/serializers.py:30
msgid "密码"
msgstr "password"

#: backend/configuration/serializers.py:120
msgid "实例信息"
msgstr "Instance information"

#: backend/configuration/serializers.py:126
msgid "修改密码中不允许包含单引号，双引号和反引号"
msgstr "Single quotes, double quotes and backticks are not allowed in the modified password."

#: backend/configuration/serializers.py:131
msgid "一次只允许修改同种集群类型的密码"
msgstr "Only passwords of the same cluster type are allowed to be modified at one time"

#: backend/configuration/serializers.py:139
msgid "是否包含数字"
msgstr "Does it contain numbers?"

#: backend/configuration/serializers.py:140
msgid "是否包含特殊符号"
msgstr "Does it contain special symbols?"

#: backend/configuration/serializers.py:141
msgid "是否包含小写字符"
msgstr "Whether it contains lowercase characters"

#: backend/configuration/serializers.py:142
msgid "是否包含大写字符"
msgstr "Contains uppercase characters"

#: backend/configuration/serializers.py:145
msgid "最大连续长度"
msgstr "Maximum continuous length"

#: backend/configuration/serializers.py:146
msgid "是否限制连续字母"
msgstr "Whether to limit consecutive letters"

#: backend/configuration/serializers.py:147
msgid "是否限制连续数字"
msgstr "Whether to limit consecutive numbers"

#: backend/configuration/serializers.py:148
msgid "是否限制连续重复字符"
msgstr "Whether to limit consecutive repeated characters"

#: backend/configuration/serializers.py:149
msgid "是否限制连续特殊字符"
msgstr "Whether to limit consecutive special characters"

#: backend/configuration/serializers.py:150
msgid "是否限制连续键盘序"
msgstr "Whether to limit consecutive keyboard sequences"

#: backend/configuration/serializers.py:152
msgid "最大长度"
msgstr "maximum length"

#: backend/configuration/serializers.py:153
msgid "最小长度"
msgstr "minimum length"

#: backend/configuration/serializers.py:154
msgid "包含规则"
msgstr "include rules"

#: backend/configuration/serializers.py:155
msgid "排除连续性规则"
msgstr "exclude continuity rules"

#: backend/configuration/serializers.py:158
msgid "密码安全规则策略名称"
msgstr "Password security rule policy name"

#: backend/configuration/serializers.py:159
msgid "密码安全规则策略id"
msgstr "Password security rule policy id"

#: backend/configuration/serializers.py:167
msgid "密码最小长度不能大于最大长度"
msgstr "The minimum password length cannot be greater than the maximum length"

#: backend/configuration/serializers.py:169
msgid "请确保密码长度范围为整型"
msgstr "Please ensure that the password length range is an integer"

#: backend/configuration/serializers.py:176
msgid "密码类型"
msgstr "Password type"

#: backend/configuration/serializers.py:184
msgid "待校验密码"
msgstr "password to be verified"

#: backend/configuration/serializers.py:209
msgid "id列表"
msgstr "list of ids"

#: backend/configuration/serializers.py:214
msgid "代过滤IP"
msgstr "Generation filter IP"

#: backend/configuration/serializers.py:215
msgid "待过滤白名单ID"
msgstr "Whitelist ID to be filtered"

#: backend/configuration/serializers.py:222
msgid "排期表通知"
msgstr "Schedule notification"

#: backend/configuration/serializers.py:223
msgid "个人轮值通知"
msgstr "Personal duty notification"

#: backend/configuration/tasks/password.py:45
#: backend/flow/plugins/components/collections/mysql/randomize_admin_password.py:51
msgid "「接口modify_mysql_admin_password返回结果异常」{}"
msgstr "Interface modify_mysql_admin_password returns abnormal result{}"

#: backend/configuration/tasks/password.py:48
msgid "「接口modify_mysql_admin_password调用异常」{}"
msgstr "Interface modify_mysql_admin_password call exception{}"

#: backend/configuration/views/dba.py:23
msgid "DBA人员"
msgstr "DBA personnel"

#: backend/configuration/views/dba.py:36
msgid "查询DBA人员列表"
msgstr "Query the list of DBA personnel"

#: backend/configuration/views/dba.py:44
msgid "更新DBA人员"
msgstr "Update DBA staff"

#: backend/configuration/views/function_controller.py:20
#: backend/configuration/views/function_controller.py:33
msgid "功能开关"
msgstr "Function switch"

#: backend/configuration/views/function_controller.py:32
msgid "功能开关列表"
msgstr "Function switch list"

#: backend/configuration/views/ip_whitelist.py:37
msgid "IP白名单"
msgstr "IP whitelist"

#: backend/configuration/views/ip_whitelist.py:83
msgid "无法同时删除不同业务下的IP白名单"
msgstr "IP whitelists under different services cannot be deleted at the same time"

#: backend/configuration/views/ip_whitelist.py:108
#: backend/configuration/views/ip_whitelist.py:109
msgid "IP白名单详情"
msgstr "IP whitelist details"

#: backend/configuration/views/ip_whitelist.py:117
msgid "IP白名单列表"
msgstr "IP Whitelist"

#: backend/configuration/views/ip_whitelist.py:135
#: backend/configuration/views/ip_whitelist.py:137
msgid "创建IP白名单"
msgstr "Create an IP whitelist"

#: backend/configuration/views/ip_whitelist.py:144
#: backend/configuration/views/ip_whitelist.py:146
#: backend/configuration/views/ip_whitelist.py:155
msgid "更新IP白名单"
msgstr "Update IP whitelist"

#: backend/configuration/views/ip_whitelist.py:153
msgid "删除IP白名单"
msgstr "delete IP whitelist"

#: backend/configuration/views/ip_whitelist.py:162
msgid "批量删除IP白名单"
msgstr "batch delete IP whitelist"

#: backend/configuration/views/password_policy.py:55
msgid "查询密码安全策略"
msgstr "Query Password Security Policy"

#: backend/configuration/views/password_policy.py:66
msgid "更新密码安全策略"
msgstr "Update Password Security Policy"

#: backend/configuration/views/password_policy.py:77
msgid "校验密码强度规则"
msgstr "Check password strength rules"

#: backend/configuration/views/password_policy.py:88
msgid "获取符合密码强度的字符串"
msgstr "Get a string that matches the password strength"

#: backend/configuration/views/password_policy.py:100
msgid "更新密码随机化周期"
msgstr "Update password randomization period"

#: backend/configuration/views/password_policy.py:113
msgid "查询密码随机化周期"
msgstr "Query the password randomization period"

#: backend/configuration/views/password_policy.py:131
msgid "查询生效实例密码(admin)"
msgstr "Query the effective instance password (admin)"

#: backend/configuration/views/password_policy.py:144
msgid "修改db实例密码(admin)"
msgstr "Modify db instance password (admin)"

#: backend/configuration/views/profile.py:22
msgid "个人配置"
msgstr "personal configuration"

#: backend/configuration/views/profile.py:29
msgid "查询个人配置列表"
msgstr "query personal configuration"

#: backend/configuration/views/profile.py:46
msgid "新增/更新个人配置"
msgstr "update or create personal configuration"

#: backend/configuration/views/system.py:35
msgid "系统设置"
msgstr "system settings"

#: backend/configuration/views/system.py:49
#: backend/db_services/ipchooser/views.py:207
msgid "查询磁盘类型"
msgstr "Query disk type"

#: backend/configuration/views/system.py:57
msgid "查询机型类型"
msgstr "Query model type"

#: backend/configuration/views/system.py:65
msgid "查询轮值通知配置"
msgstr "Query rotation notification configuration"

#: backend/configuration/views/system.py:73
msgid "更新轮值通知配置"
msgstr "Update rotation notification configuration"

#: backend/configuration/views/system.py:83
msgid "查询环境变量"
msgstr "Query environment variables"

#: backend/configuration/views/system.py:112
msgid "查询敏感环境变量"
msgstr "Query sensitive environment variables"

#: backend/configuration/views/system.py:138
msgid "业务设置列表"
msgstr "Business settings list"

#: backend/configuration/views/system.py:139
msgid "业务设置"
msgstr "business settings"

#: backend/configuration/views/system.py:146
msgid "业务设置列表键值映射表"
msgstr "Business settings list key-value mapping table"

#: backend/configuration/views/system.py:168
msgid "更新业务设置列表键值"
msgstr "Update business settings list key value"

#: backend/core/encrypt/constants.py:27
msgid "PKCS1"
msgstr "PKCS1"

#: backend/core/encrypt/constants.py:28
msgid "PKCS1_OAEP"
msgstr "PKCS1_OAEP"

#: backend/core/encrypt/constants.py:34
msgid "私钥对象"
msgstr "private key object"

#: backend/core/encrypt/constants.py:35
msgid "公钥对象"
msgstr "public key object"

#: backend/core/encrypt/constants.py:41
msgid "私钥"
msgstr "private key"

#: backend/core/encrypt/constants.py:42
msgid "公钥"
msgstr "public key"

#: backend/core/encrypt/constants.py:51
msgid "平台密码的非对称秘钥"
msgstr "Asymmetric key for platform password"

#: backend/core/encrypt/constants.py:52
msgid "透传接口的非对称秘钥"
msgstr "Asymmetric secret key for transparent transmission interface"

#: backend/core/encrypt/constants.py:53
msgid "云区域服务的非对称秘钥"
msgstr "Asymmetric key for cloud zone service"

#: backend/core/encrypt/constants.py:63
msgid "RSA"
msgstr "RSA"

#: backend/core/encrypt/constants.py:64
msgid "SM2"
msgstr "SM2"

#: backend/core/encrypt/constants.py:70
msgid "AES"
msgstr "AES"

#: backend/core/encrypt/constants.py:71
msgid "SM4"
msgstr "SM4"

#: backend/core/encrypt/exceptions.py:19
msgid "密码加密失败"
msgstr "Password encryption failed"

#: backend/core/encrypt/exceptions.py:23
msgid "密码解密失败"
msgstr "Password decryption failed"

#: backend/core/encrypt/models.py:20 backend/core/encrypt/serializers.py:23
msgid "密钥名称"
msgstr "key name"

#: backend/core/encrypt/models.py:21
msgid "密钥类型"
msgstr "key type"

#: backend/core/encrypt/models.py:22
msgid "非对称加密算法"
msgstr "asymmetric encryption algorithm"

#: backend/core/encrypt/models.py:24
msgid "密钥描述"
msgstr "key description"

#: backend/core/encrypt/models.py:25
msgid "密钥内容"
msgstr "key content"

#: backend/core/encrypt/models.py:28 backend/core/encrypt/models.py:29
msgid "非对称密钥"
msgstr "asymmetric key"

#: backend/core/encrypt/serializers.py:20
msgid "密钥名称列表"
msgstr "list of key names"

#: backend/core/encrypt/views.py:22
msgid "秘钥管理"
msgstr "Key management"

#: backend/core/encrypt/views.py:30
msgid "查询公钥列表"
msgstr "Query the list of public keys"

#: backend/core/storages/base.py:110
msgid "未知文件源"
msgstr "Unknown file source"

#: backend/core/storages/base.py:113
#, python-brace-format
msgid "{file_type_alias}-{file_source_alias}"
msgstr "{file_type_alias}-{file_source_alias}"

#: backend/core/storages/base.py:121
#, python-brace-format
msgid "{file_type_alias}-{server_ips_str}"
msgstr "{file_type_alias}-{server_ips_str}"

#: backend/core/storages/base.py:125
#, python-brace-format
msgid "未知文件源-{file_type}"
msgstr "Unknown file source - {file_type}"

#: backend/core/storages/base.py:128
#, python-brace-format
msgid ""
"从 [{source_info_str}] 下发文件 [{file_list_str}] 到目标机器路径 "
"[{file_target_path}]"
msgstr ""
"Send the file [{file_list_str}] from [{source_info_str}] to the target "
"machine path [{file_target_path}]"

#: backend/core/storages/base.py:217
#, python-brace-format
msgid "文件分发错误：err_msg -> {err_msg}"
msgstr "File distribution error: err_msg -&gt; {err_msg}"

#: backend/core/storages/constants.py:24
msgid "公开仓库"
msgstr "public repository"

#: backend/core/storages/constants.py:25
msgid "私有仓库"
msgstr "private warehouse"

#: backend/core/storages/constants.py:31 backend/flow/consts.py:328
msgid "服务器文件"
msgstr "server file"

#: backend/core/storages/constants.py:32
msgid "第三方源文件"
msgstr "third party source files"

#: backend/core/storages/constants.py:38 backend/core/storages/constants.py:60
msgid "本地文件系统"
msgstr "local file system"

#: backend/core/storages/constants.py:39 backend/core/storages/constants.py:60
msgid "蓝鲸制品库"
msgstr "BKREPO"

#: backend/core/storages/constants.py:83
msgid "单一SecretKey"
msgstr "Single SecretKey"

#: backend/core/storages/constants.py:85
msgid "单一密码"
msgstr "single password"

#: backend/core/storages/constants.py:86
msgid "用户名+密码"
msgstr "username+password"

#: backend/core/storages/exceptions.py:23
msgid "注册凭证失败"
msgstr "Failed to register credentials"

#: backend/core/storages/exceptions.py:28
msgid "文件源类型错误"
msgstr "Wrong file source type"

#: backend/core/storages/exceptions.py:33
msgid "注册文件失败"
msgstr "Failed to register file"

#: backend/core/storages/exceptions.py:38
msgid "文件传输失败"
msgstr "File transfer failed"

#: backend/core/storages/file_source.py:27
#, python-brace-format
msgid "storage_type must be one of {choices}"
msgstr "storage_type must be one of {choices}"

#: backend/core/storages/file_source.py:35
#, python-brace-format
msgid "DBM[biz-{bk_biz_id}]{storage_type_alias}文件凭证"
msgstr "DBM[biz:{bk_biz_id}]{storage_type_alias} file credentials"

#: backend/core/storages/file_source.py:94
#, python-brace-format
msgid "注册凭证失败：bk_biz_id -> {bk_biz_id}, err_msg -> {err_msg}"
msgstr ""
"Register credential failed: bk_biz_id -&gt; {bk_biz_id}, err_msg -&gt; "
"{err_msg}"

#: backend/core/storages/file_source.py:147
msgid "DBM{storage_type_alias}文件源"
msgstr "DBM{storage_type_alias} file source"

#: backend/core/storages/file_source.py:204
#, python-brace-format
msgid "注册文件源失败：bk_biz_id -> {bk_biz_id}, err_msg -> {err_msg}"
msgstr ""
"Failed to register file source: bk_biz_id -&gt; {bk_biz_id}, err_msg -&gt; "
"{err_msg}"

#: backend/core/storages/models.py:20
msgid "文件源存储类型"
msgstr "file source storage type"

#: backend/core/storages/models.py:22
msgid "凭证名称"
msgstr "credential name"

#: backend/core/storages/models.py:23
msgid "凭证类型"
msgstr "Ticket Type"

#: backend/core/storages/models.py:24
msgid "凭证描述"
msgstr "credential description"

#: backend/core/storages/models.py:25 backend/core/storages/models.py:38
msgid "凭证ID"
msgstr "Credential ID"

#: backend/core/storages/models.py:31 backend/core/storages/models.py:32
msgid "作业平台文件凭证"
msgstr "Work platform file certificate"

#: backend/core/storages/models.py:39
msgid "文件源ID"
msgstr "file source ID"

#: backend/core/storages/models.py:41 backend/core/storages/models.py:44
msgid "文件源标识"
msgstr "file source ID"

#: backend/core/storages/models.py:42
msgid "文件源别名"
msgstr "file source alias"

#: backend/core/storages/models.py:43
msgid "文件源接入参数"
msgstr "File source access parameters"

#: backend/core/storages/models.py:62 backend/core/storages/models.py:63
msgid "作业平台文件源"
msgstr "Operating platform file source"

#: backend/core/storages/serializers.py:19
#: backend/db_services/taskflow/serializers.py:72
msgid "文件路径列表"
msgstr "list of file paths"

#: backend/core/storages/serializers.py:23
#: backend/core/storages/serializers.py:32
#: backend/db_proxy/views/jobapi/serializers.py:63
msgid "文件路径"
msgstr "file path"

#: backend/core/storages/serializers.py:27
msgid "临时下载的token"
msgstr "Temporarily downloaded token"

#: backend/core/storages/serializers.py:28
msgid "是否强制下载"
msgstr "Whether to force download"

#: backend/core/storages/serializers.py:44
msgid "目标目录列表"
msgstr "target directory listing"

#: backend/core/storages/serializers.py:45
msgid "是否下载"
msgstr "Whether to download"

#: backend/core/storages/views.py:37
msgid "批量获取文件内容"
msgstr "Get file content in batches"

#: backend/core/storages/views.py:45
msgid "批量下载文件"
msgstr "Download files in batches"

#: backend/core/storages/views.py:53
msgid "临时下载文件"
msgstr "Temporarily download files"

#: backend/core/storages/views.py:67
msgid "获取文件内容"
msgstr "get file content"

#: backend/core/storages/views.py:73
msgid "删除文件"
msgstr "Delete Files"

#: backend/core/storages/views.py:80
msgid "获取临时凭证"
msgstr "Get temporary credentials"

#: backend/core/storages/views.py:91
msgid "指定目录下载（返回下载链接）"
msgstr "Specify directory to download (return to download link)"

#: backend/core/translation/exceptions.py:19
msgid "翻译目录未找到"
msgstr "Translation directory not found"

#: backend/core/translation/exceptions.py:23
msgid "存在未翻译的文件/代码片段"
msgstr "There are untranslated files/code fragments"

#: backend/core/translation/exceptions.py:27
msgid "存在包含特定翻译语言的f-string"
msgstr "There is an f-string containing the specific translation language"

#: backend/db_dirty/constants.py:14 backend/iam_app/dataclass/actions.py:1528
msgid "污点池"
msgstr "taint pool"

#: backend/db_dirty/filters.py:24
#: backend/db_services/mysql/open_area/filters.py:22
#: backend/db_services/mysql/sql_import/serializers.py:94
#: backend/db_services/mysql/sql_import/serializers.py:127
#: backend/flow/models.py:23 backend/ticket/models/ticket.py:88
#: backend/ticket/models/ticket.py:238 backend/ticket/serializers.py:83
#: backend/ticket/serializers.py:292 backend/ticket/serializers.py:306
#: backend/ticket/serializers.py:324
msgid "单据类型"
msgstr "Ticket Type"

#: backend/db_dirty/filters.py:25
#: backend/db_services/dbpermission/db_authorize/serializers.py:86
#: backend/db_services/mysql/permission/clone/serializers.py:131
#: backend/db_services/mysql/permission/constants.py:34
#: backend/db_services/redis/autofix/models.py:40
#: backend/db_services/redis/redis_dts/serializers.py:34
#: backend/db_services/sqlserver/data_migrate/serializers.py:22
#: backend/db_services/sqlserver/data_migrate/serializers.py:39
#: backend/flow/models.py:21 backend/flow/models.py:41
#: backend/ticket/serializers.py:81
msgid "单据ID"
msgstr "Ticket ID"

#: backend/db_dirty/filters.py:26
#: backend/db_proxy/views/redis_dts/serializers.py:22
#: backend/db_proxy/views/redis_dts/serializers.py:28
#: backend/db_proxy/views/redis_dts/serializers.py:74
#: backend/db_proxy/views/redis_dts/serializers.py:80
#: backend/db_services/plugin/mysql/authorize/serializers.py:43
#: backend/db_services/plugin/mysql/authorize/serializers.py:51
#: backend/ticket/builders/redis/redis_toolbox_data_check_repair.py:28
msgid "任务ID"
msgstr "task ID"

#: backend/db_dirty/filters.py:27
#: backend/db_services/dbresource/serializers.py:205
#: backend/db_services/partition/serializers.py:99
msgid "操作者"
msgstr "operator"

#: backend/db_dirty/filters.py:28
msgid "过滤IP"
msgstr "Filter IP"

#: backend/db_dirty/handlers.py:262
msgid "【污点池】主机列表:{} 将从污点池挪出"
msgstr "[Taint Pool] Host list: {} will be moved from the taint pool"

#: backend/db_dirty/handlers.py:267
msgid "【污点池】单据-{}：任务-{}执行失败，主机列表:{}挪到污点池"
msgstr "[Taint Pool] Document-{}: Task-{} failed to execute, host list: {} moved to the taint pool"

#: backend/db_dirty/models.py:26
#: backend/db_services/dbbase/cluster/serializers.py:39
#: backend/db_services/dbbase/resources/serializers.py:130
#: backend/db_services/ipchooser/serializers/topo_sers.py:78
#: backend/db_services/plugin/bf/serializers.py:19
#: backend/ticket/builders/common/base.py:102
#: backend/ticket/builders/common/bigdata.py:226
#: backend/ticket/builders/common/bigdata.py:304
msgid "主机ID"
msgstr "host ID"

#: backend/db_dirty/models.py:27
msgid "主机云区域"
msgstr "Host cloud area"

#: backend/db_dirty/models.py:28
#: backend/db_proxy/views/dumper/serializers.py:21
#: backend/db_services/plugin/bf/serializers.py:20
#: backend/ticket/builders/tbinlogdumper/dumper_switch.py:26
msgid "主机IP"
msgstr "Host IP"

#: backend/db_dirty/models.py:29
msgid "关联任务"
msgstr "Associated tasks"

#: backend/db_dirty/models.py:30
msgid "关联单据"
msgstr "Related documents"

#: backend/db_dirty/models.py:33
msgid "污点池机器(DirtyMachine)"
msgstr "DirtyMachine"

#: backend/db_dirty/serializers.py:20
msgid "过滤的主机IP列表，以逗号分隔"
msgstr "List of host IPs to filter, comma separated"

#: backend/db_dirty/serializers.py:21
msgid "过滤的单据ID"
msgstr "Filtered document ID"

#: backend/db_dirty/serializers.py:22
msgid "过滤的任务ID"
msgstr "Filtered task ID"

#: backend/db_dirty/serializers.py:23
msgid "过滤的单据类型"
msgstr "Filtered document types"

#: backend/db_dirty/serializers.py:24
#: backend/db_services/plugin/mysql/authorize/serializers.py:22
#: backend/ticket/builders/mysql/mysql_openarea.py:40
msgid "操作人"
msgstr "operator"

#: backend/db_dirty/serializers.py:42
msgid "待转移的主机ID列表"
msgstr "List of host IDs to be transferred"

#: backend/db_dirty/serializers.py:46
msgid "待删除的污点池记录主机ID"
msgstr "The host ID of the taint pool record to be deleted"

#: backend/db_dirty/views.py:45
msgid "查询污点池列表"
msgstr "Query the taint pool list"

#: backend/db_dirty/views.py:83
msgid "将污点池主机转移至待回收模块"
msgstr "Transfer the taint pool host to the module to be recycled"

#: backend/db_dirty/views.py:99
msgid "删除污点池记录"
msgstr "Delete taint pool records"

#: backend/db_event/serializers.py:19
msgid "事件ID"
msgstr "event ID"

#: backend/db_event/serializers.py:25
msgid "日志内容"
msgstr "log content"

#: backend/db_event/serializers.py:26
msgid "日志级别"
msgstr "log level"

#: backend/db_event/serializers.py:27
msgid "时间戳"
msgstr "timestamp"

#: backend/db_event/serializers.py:33
msgid "日志列表"
msgstr "log list"

#: backend/db_event/serializers.py:45
#: backend/db_report/views/checksum_check_report_view.py:58
#: backend/db_services/dbbase/resources/constants.py:20
#: backend/db_services/ipchooser/constants.py:118
#: backend/db_services/ipchooser/mock_data.py:43
#: backend/db_services/ipchooser/mock_data.py:62
#: backend/db_services/ipchooser/mock_data.py:98 backend/ticket/handler.py:78
msgid "集群"
msgstr "cluster"

#: backend/db_event/serializers.py:48
#: backend/db_proxy/views/db_meta/serializers.py:65
#: backend/db_services/mysql/dumper/filters.py:40
msgid "实例IP"
msgstr "Instance IP"

#: backend/db_event/serializers.py:49
#: backend/db_report/views/meta_check_view.py:62
#: backend/db_services/dbresource/serializers.py:334
#: backend/db_services/redis/autofix/models.py:55
msgid "实例类型"
msgstr "instance type"

#: backend/db_event/views/dbha.py:27
msgid "DBHA事件"
msgstr "DBHA event"

#: backend/db_event/views/dbha.py:42
msgid "DBHA切换事件列表"
msgstr "DBHA switching event list"

#: backend/db_event/views/dbha.py:86
msgid "DBHA切换事件详情（日志）"
msgstr "Details of DBHA switchover events (logs)"

#: backend/db_meta/api/cluster/base/graph.py:127
#: backend/db_proxy/views/db_meta/serializers.py:149
#: backend/iam_app/dataclass/actions.py:900 backend/ticket/constants.py:225
#: backend/ticket/constants.py:226
msgid "访问入口"
msgstr "access entrance"

#: backend/db_meta/api/cluster/base/graph.py:137
msgid "node"
msgstr "node"

#: backend/db_meta/api/cluster/base/graph.py:138
msgid "group"
msgstr "group"

#: backend/db_meta/api/cluster/base/graph.py:142
msgid "同步"
msgstr "Synchronize"

#: backend/db_meta/api/cluster/base/graph.py:143
msgid "访问"
msgstr "access"

#: backend/db_meta/api/cluster/base/graph.py:144
msgid "域名绑定"
msgstr "domain binding"

#: backend/db_meta/api/cluster/base/graph.py:145
msgid "读写"
msgstr "read and write"

#: backend/db_meta/api/cluster/base/graph.py:177
msgid "同步到其他集群"
msgstr "Sync to other clusters"

#: backend/db_meta/api/cluster/base/graph.py:178
msgid "从其他集群同步"
msgstr "Synchronize from other clusters"

#: backend/db_meta/api/cluster/base/graph.py:179
msgid "访问其他集群"
msgstr "Access other clusters"

#: backend/db_meta/api/cluster/base/graph.py:180
msgid "从其他集群访问"
msgstr "Access from other clusters"

#: backend/db_meta/api/cluster/doris/detail.py:27
msgid "Follower 节点"
msgstr "Follower node"

#: backend/db_meta/api/cluster/doris/detail.py:32
msgid "Observer 节点"
msgstr "Observer node"

#: backend/db_meta/api/cluster/doris/detail.py:35
#: backend/db_meta/api/cluster/es/detail.py:35
#: backend/db_meta/enums/instance_role.py:38
#: backend/db_meta/enums/instance_role.py:62
#: backend/db_services/bigdata/doris/query.py:37
#: backend/db_services/bigdata/es/query.py:36
msgid "热节点"
msgstr "hot node"

#: backend/db_meta/api/cluster/doris/detail.py:38
#: backend/db_meta/api/cluster/es/detail.py:38
#: backend/db_meta/enums/instance_role.py:39
#: backend/db_meta/enums/instance_role.py:63
#: backend/db_services/bigdata/doris/query.py:38
#: backend/db_services/bigdata/es/query.py:37
msgid "冷节点"
msgstr "cold node"

#: backend/db_meta/api/cluster/es/detail.py:27
#: backend/db_meta/enums/instance_role.py:41
msgid "Client 节点"
msgstr "Client node"

#: backend/db_meta/api/cluster/es/detail.py:32
#: backend/db_meta/api/cluster/redisinstance/detail.py:26
#: backend/db_meta/api/cluster/sqlserverha/detail.py:28
#: backend/db_meta/enums/instance_role.py:40
msgid "Master 节点"
msgstr "Master Node"

#: backend/db_meta/api/cluster/hdfs/create.py:33
#: backend/db_meta/api/cluster/kafka/create.py:38
#: backend/db_meta/api/cluster/sqlserverha/create_cluster.py:52
#: backend/db_meta/api/cluster/sqlserversingle/create_cluster.py:34
#: backend/db_meta/api/cluster/tendbcluster/create_cluster.py:60
#: backend/db_meta/api/cluster/tendbha/create_cluster.py:52
#: backend/db_meta/api/cluster/tendbsingle/create_cluster.py:33
msgid "集群名 {} 在 bk_biz_id:{} db_module_id:{} 已存在"
msgstr "The cluster name {} already exists in bk_biz_id:{} db_module_id:{}"

#: backend/db_meta/api/cluster/hdfs/destroy.py:37
#: backend/db_meta/api/cluster/influxdb/destroy.py:39
#: backend/db_meta/api/cluster/influxdb/replace.py:51
#: backend/db_meta/api/cluster/kafka/destroy.py:37
msgid "将主机{}转移到待回收模块"
msgstr "Move host {} to the module to be recycled"

#: backend/db_meta/api/cluster/hdfs/detail.py:27
msgid "NameNode 节点"
msgstr "NameNode node"

#: backend/db_meta/api/cluster/hdfs/detail.py:30
msgid "DataNode 节点"
msgstr "DataNode node"

#: backend/db_meta/api/cluster/hdfs/detail.py:35
#: backend/db_meta/api/cluster/kafka/detail.py:30
#: backend/db_meta/api/cluster/pulsar/detail.py:30
#: backend/db_meta/api/cluster/vm/detail.py:30
msgid "Zookeeper 节点"
msgstr "zookeeper node"

#: backend/db_meta/api/cluster/hdfs/detail.py:40
msgid "Journal 节点"
msgstr "journal node node"

#: backend/db_meta/api/cluster/kafka/create.py:42
#: backend/db_meta/api/cluster/nosqlcomm/create_cluster.py:279
#: backend/db_meta/api/cluster/nosqlcomm/create_cluster.py:283
#: backend/db_meta/api/cluster/rediscluster/create.py:170
#: backend/db_meta/api/cluster/riak/create.py:35
#: backend/db_meta/api/cluster/sqlserverha/create_cluster.py:56
#: backend/db_meta/api/cluster/sqlserverha/create_cluster.py:60
#: backend/db_meta/api/cluster/sqlserversingle/create_cluster.py:37
#: backend/db_meta/api/cluster/tendbcluster/create_cluster.py:64
#: backend/db_meta/api/cluster/tendbcluster/create_cluster.py:70
#: backend/db_meta/api/cluster/tendbcluster/create_slave_cluster.py:28
#: backend/db_meta/api/cluster/tendbha/create_cluster.py:56
#: backend/db_meta/api/cluster/tendbha/create_cluster.py:60
#: backend/db_meta/api/cluster/tendbsingle/create_cluster.py:36
#: backend/db_meta/api/cluster/tendispluscluster/create.py:170
msgid "域名 {} 已存在"
msgstr "The domain name {} already exists"

#: backend/db_meta/api/cluster/kafka/detail.py:27
#: backend/db_meta/api/cluster/pulsar/detail.py:27
#: backend/db_meta/api/cluster/vm/detail.py:27
msgid "Broker 节点"
msgstr "broker node"

#: backend/db_meta/api/cluster/kafka/replace.py:50
#: backend/db_meta/api/cluster/vm/replace.py:50
msgid "将主机{}转移到待回收"
msgstr "Move host {} to the module to be recycled"

#: backend/db_meta/api/cluster/mongocluster/detail.py:45
msgid "Mongos 节点"
msgstr "Mongos nodes"

#: backend/db_meta/api/cluster/mongocluster/detail.py:54
msgid "ConfigServer 节点"
msgstr "ConfigServer node"

#: backend/db_meta/api/cluster/mongocluster/detail.py:67
msgid "分片{} 节点"
msgstr "shard{}node"

#: backend/db_meta/api/cluster/mongorepset/detail.py:28
msgid "M1 Primary 节点"
msgstr "M1 Primary node"

#: backend/db_meta/api/cluster/mongorepset/detail.py:45
msgid "{} 节点"
msgstr "{} node"

#: backend/db_meta/api/cluster/mongorepset/detail.py:53
msgid "Backup 节点"
msgstr "Backup node"

#: backend/db_meta/api/cluster/nosqlcomm/create_cluster.py:110
msgid "{} 实例未分片规则"
msgstr "{} Instance unsharded rules"

#: backend/db_meta/api/cluster/nosqlcomm/create_cluster.py:275
#: backend/db_meta/api/cluster/riak/create.py:32
msgid "集群名 {} 在 bk_biz_id:{} 已存在"
msgstr "The cluster name {} already exists in bk_biz_id:{}"

#: backend/db_meta/api/cluster/nosqlcomm/create_cluster.py:290
#: backend/db_meta/api/cluster/rediscluster/create.py:177
#: backend/db_meta/api/cluster/tendispluscluster/create.py:177
msgid "proxy {} 已属于其他集群"
msgstr "proxy {} already belongs to another cluster"

#: backend/db_meta/api/cluster/nosqlcomm/create_cluster.py:297
#: backend/db_meta/api/cluster/rediscluster/create.py:183
#: backend/db_meta/api/cluster/tendispluscluster/create.py:183
msgid "storage {} 已属于其他集群"
msgstr "storage {} already belongs to another cluster"

#: backend/db_meta/api/cluster/nosqlcomm/decommission.py:43
#: backend/flow/plugins/components/collections/mongodb/mongo_shutdown_meta.py:51
msgid "{} 存在不是本集群的实例下架列表"
msgstr "{} There is an instance removal list that is not in this cluster"

#: backend/db_meta/api/cluster/nosqlcomm/decommission.py:47
msgid "非集群下架模式,不允许直接下架所有实例 {}"
msgstr ""
"Non-cluster unshelf mode, it is not allowed to directly unshelf all "
"instances {}"

#: backend/db_meta/api/cluster/nosqlcomm/decommission.py:111
msgid "非集群下架单,不允许直接下架状态为RUNNING状态实例 {}"
msgstr ""
"Non-cluster unshelf order, it is not allowed to directly unshelf the "
"instance whose state is RUNNING {}"

#: backend/db_meta/api/cluster/nosqlcomm/detail_cluster.py:54
#: backend/db_meta/api/cluster/rediscluster/detail.py:50
#: backend/db_meta/api/cluster/sqlserverha/detail.py:43
#: backend/db_meta/api/cluster/tendbcluster/detail.py:64
#: backend/db_meta/api/cluster/tendbha/detail.py:50
#: backend/db_meta/api/cluster/tendispluscluster/detail.py:50
msgid "访问入口（从）"
msgstr "access entry (from)"

#: backend/db_meta/api/cluster/nosqlcomm/detail_cluster.py:89
#: backend/db_meta/api/cluster/rediscluster/detail.py:85
#: backend/db_meta/api/cluster/sqlserverha/detail.py:32
#: backend/db_meta/api/cluster/tendbcluster/detail.py:57
#: backend/db_meta/api/cluster/tendbha/detail.py:84
#: backend/db_meta/api/cluster/tendispluscluster/detail.py:85
msgid "访问入口（主）"
msgstr "access entrance (main)"

#: backend/db_meta/api/cluster/pulsar/detail.py:33
#: backend/db_meta/api/cluster/vm/detail.py:33
msgid "Bookkeeper 节点"
msgstr "Bookkeeper node"

#: backend/db_meta/api/cluster/rediscluster/create.py:188
#: backend/db_meta/api/cluster/tendispluscluster/create.py:188
msgid "proxy {} 未注册"
msgstr "proxy {} unregistered"

#: backend/db_meta/api/cluster/rediscluster/create.py:192
#: backend/db_meta/api/cluster/tendispluscluster/create.py:192
msgid "storage {} 未注册"
msgstr "storage {} is not registered"

#: backend/db_meta/api/cluster/redisinstance/detail.py:31
#: backend/db_meta/api/cluster/sqlserverha/detail.py:39
msgid "Slave 节点"
msgstr "Slave node"

#: backend/db_meta/api/cluster/riak/detail.py:24
msgid "Riak 节点"
msgstr "Riak node"

#: backend/db_meta/api/cluster/tendbcluster/decommission.py:86
#: backend/db_meta/api/cluster/tendbha/decommission.py:90
msgid "{} 与 {} 的 {} 有同步关系"
msgstr "{} has a synchronous relationship with {} of {}"

#: backend/db_meta/api/cluster/tendbcluster/detail.py:55
msgid "Spider Master"
msgstr "Spider Master"

#: backend/db_meta/api/cluster/tendbcluster/detail.py:56
msgid "spider_master_entry_bind"
msgstr "spider_master_entry_bind"

#: backend/db_meta/api/cluster/tendbcluster/detail.py:62
msgid "Spider Slave"
msgstr "Spider Slave"

#: backend/db_meta/api/cluster/tendbcluster/detail.py:63
msgid "spider_slave_entry_bind"
msgstr "spider_slave_entry_bind"

#: backend/db_meta/api/cluster/tendbcluster/detail.py:73
msgid "RemoteDB"
msgstr "RemoteDB"

#: backend/db_meta/api/cluster/tendbcluster/detail.py:77
msgid "RemoteDR"
msgstr "RemoteDR"

#: backend/db_meta/api/cluster/tendbcluster/detail.py:85
msgid "Spider 运维节点"
msgstr "Spider operation and maintenance node"

#: backend/db_meta/api/cluster/tendbcluster/detail.py:91
msgid "controller_group"
msgstr "controller_group"

#: backend/db_meta/api/cluster/tendbcluster/detail.py:91
msgid "中控节点"
msgstr "Control Node"

#: backend/db_meta/api/cluster/tendbcluster/handler.py:314
msgid "集群{}不具有该角色「{}」的实例"
msgstr "Cluster {} does not have an instance of the role {}"

#: backend/db_meta/api/dbha/apis.py:205
msgid "实例ip={}, port={}不存在，请检查输入参数或相关数据"
msgstr ""
"The instance ip={}, port={} does not exist, please check the input "
"parameters or related data"

#: backend/db_meta/enums/access_layer.py:17
#: backend/db_meta/enums/machine_type.py:19 backend/flow/consts.py:340
#: backend/flow/consts.py:796 backend/flow/consts.py:1137
#: backend/ticket/builders/common/constants.py:79
#: backend/ticket/constants.py:24
msgid "proxy"
msgstr "proxy"

#: backend/db_meta/enums/access_layer.py:19
msgid "config"
msgstr "config"

#: backend/db_meta/enums/cluster_entry_role.py:18
msgid "master_entry"
msgstr "master_entry"

#: backend/db_meta/enums/cluster_entry_role.py:19
msgid "slave_entry"
msgstr "slave_entry"

#: backend/db_meta/enums/cluster_entry_role.py:20
msgid "proxy_entry"
msgstr "proxy_entry"

#: backend/db_meta/enums/cluster_entry_role.py:21
msgid "node_entry"
msgstr "node_entry"

#: backend/db_meta/enums/cluster_entry_type.py:17
msgid "dns"
msgstr "dns"

#: backend/db_meta/enums/cluster_entry_type.py:18 backend/flow/consts.py:1083
msgid "clb"
msgstr "clb"

#: backend/db_meta/enums/cluster_entry_type.py:19
msgid "polaris"
msgstr "polaris"

#: backend/db_meta/enums/cluster_entry_type.py:20
msgid "clbDns"
msgstr "clbDns"

#: backend/db_meta/enums/cluster_phase.py:18
#: backend/db_meta/enums/instance_phase.py:18
msgid "正常"
msgstr "normal"

#: backend/db_meta/enums/cluster_phase.py:19
msgid "禁用"
msgstr "Disable"

#: backend/db_meta/enums/cluster_phase.py:22
#: backend/db_meta/enums/instance_phase.py:22
msgid "销毁"
msgstr "destroy"

#: backend/db_meta/enums/cluster_phase.py:25
msgid "scr/gcs迁移中"
msgstr "scr/gcs migrating"

#: backend/db_meta/enums/cluster_status.py:20
msgid "normal"
msgstr "normal"

#: backend/db_meta/enums/cluster_status.py:21
msgid "abnormal"
msgstr "abnormal"

#: backend/db_meta/enums/cluster_status.py:23 backend/db_meta/enums/comm.py:36
msgid "temporary"
msgstr "temporary"

#: backend/db_meta/enums/cluster_type.py:20
msgid "MySQL单节点集群"
msgstr "MySQL single node cluster"

#: backend/db_meta/enums/cluster_type.py:21
msgid "MySQL高可用集群"
msgstr "MySQL high availability cluster"

#: backend/db_meta/enums/cluster_type.py:22
#: backend/iam_app/dataclass/resources.py:354
msgid "TendbCluster集群"
msgstr "TendbCluster cluster"

#: backend/db_meta/enums/cluster_type.py:27
#: backend/db_meta/enums/cluster_type.py:35
msgid "RedisCluster集群"
msgstr "RedisCluster cluster"

#: backend/db_meta/enums/cluster_type.py:28
#: backend/db_meta/enums/cluster_type.py:39
msgid "Tendisplus存储版集群"
msgstr "Tendisplus storage cluster"

#: backend/db_meta/enums/cluster_type.py:29
#: backend/db_meta/enums/cluster_type.py:40
msgid "TendisCache集群"
msgstr "TendisCache cluster"

#: backend/db_meta/enums/cluster_type.py:30
#: backend/db_meta/enums/cluster_type.py:41
msgid "TendisSSD集群"
msgstr "TendisSSD cluster"

#: backend/db_meta/enums/cluster_type.py:31
msgid "Tendis存储版集群"
msgstr "Tendis Storage Edition Cluster"

#: backend/db_meta/enums/cluster_type.py:32
msgid "RedisCache主从版"
msgstr "RedisCache master-slave version"

#: backend/db_meta/enums/cluster_type.py:33
msgid "TendisSSD主从版"
msgstr "TendispSSD master-slave version"

#: backend/db_meta/enums/cluster_type.py:34
msgid "Tendisplus主从版"
msgstr "Tendisplus master-slave version"

#: backend/db_meta/enums/cluster_type.py:36
msgid "TendisplusCluster集群"
msgstr "TendisplusCluster cluster"

#: backend/db_meta/enums/cluster_type.py:43
#: backend/iam_app/dataclass/resources.py:370
msgid "ES集群"
msgstr "ES cluster"

#: backend/db_meta/enums/cluster_type.py:44
#: backend/iam_app/dataclass/resources.py:386
msgid "Kafka集群"
msgstr "Kafka cluster"

#: backend/db_meta/enums/cluster_type.py:45
msgid "Hdfs集群"
msgstr "Hdfs cluster"

#: backend/db_meta/enums/cluster_type.py:46
msgid "Influxdb实例"
msgstr "InfluxDB instance"

#: backend/db_meta/enums/cluster_type.py:47
#: backend/iam_app/dataclass/resources.py:402
msgid "Pulsar集群"
msgstr "Pulsar cluster"

#: backend/db_meta/enums/cluster_type.py:48
msgid "Doris集群"
msgstr "Doris cluster"

#: backend/db_meta/enums/cluster_type.py:49
msgid "vm集群"
msgstr "vm cluster"

#: backend/db_meta/enums/cluster_type.py:51
msgid "redis监控"
msgstr "redis monitoring"

#: backend/db_meta/enums/cluster_type.py:53
msgid "Mongo副本集"
msgstr "Mongo replica set"

#: backend/db_meta/enums/cluster_type.py:54
msgid "Mongo分片集群"
msgstr "Mongo shard cluster"

#: backend/db_meta/enums/cluster_type.py:56
#: backend/iam_app/dataclass/resources.py:410
msgid "Riak集群"
msgstr "Riak cluster"

#: backend/db_meta/enums/cluster_type.py:58
msgid "sqlserver单节点版"
msgstr "sqlserver single node version"

#: backend/db_meta/enums/cluster_type.py:59
msgid "sqlserver主从版"
msgstr "sqlserver master-slave version"

#: backend/db_meta/enums/comm.py:18 backend/flow/consts.py:955
msgid "ms"
msgstr "ms"

#: backend/db_meta/enums/comm.py:19
msgid "sms"
msgstr "sms"

#: backend/db_meta/enums/comm.py:20 backend/flow/consts.py:956
msgid "mms"
msgstr "mms"

#: backend/db_meta/enums/comm.py:24 backend/db_meta/enums/machine_type.py:25
#: backend/flow/consts.py:252 backend/flow/consts.py:341
#: backend/flow/consts.py:1139
msgid "redis"
msgstr "redis"

#: backend/db_meta/enums/comm.py:25 backend/db_meta/enums/machine_type.py:41
#: backend/flow/consts.py:288
msgid "mongodb"
msgstr "mongodb"

#: backend/db_meta/enums/comm.py:29 backend/db_monitor/constants.py:51
#: backend/db_monitor/constants.py:61
msgid "custom"
msgstr "custom"

#: backend/db_meta/enums/comm.py:30
msgid "system"
msgstr "system"

#: backend/db_meta/enums/comm.py:42 backend/db_meta/enums/instance_role.py:33
msgid "Proxy"
msgstr "Proxy"

#: backend/db_meta/enums/comm.py:43
msgid "Backend"
msgstr "Backend"

#: backend/db_meta/enums/extra_process_type.py:17 backend/flow/consts.py:357
#: backend/flow/consts.py:1138
msgid "tbinlogdumper"
msgstr "tbinlogdumper"

#: backend/db_meta/enums/instance_inner_role.py:17 backend/flow/consts.py:797
#: backend/flow/consts.py:810 backend/ticket/builders/common/constants.py:52
#: backend/ticket/builders/common/constants.py:77
msgid "master"
msgstr "master"

#: backend/db_meta/enums/instance_inner_role.py:18 backend/flow/consts.py:798
#: backend/ticket/builders/common/constants.py:78
msgid "slave"
msgstr "slave"

#: backend/db_meta/enums/instance_inner_role.py:19
msgid "repeater"
msgstr "repeater"

#: backend/db_meta/enums/instance_inner_role.py:20
#: backend/db_meta/enums/instance_role.py:20
msgid "orphan"
msgstr "orphan"

#: backend/db_meta/enums/instance_phase.py:19
msgid "下架"
msgstr "Removed from shelves"

#: backend/db_meta/enums/instance_phase.py:24
msgid " scr/gcs迁移中"
msgstr "scr/gcs migrating"

#: backend/db_meta/enums/instance_role.py:23
#: backend/db_meta/enums/instance_role.py:34
msgid "Master"
msgstr "Master"

#: backend/db_meta/enums/instance_role.py:24
msgid "Repeater"
msgstr "Repeater"

#: backend/db_meta/enums/instance_role.py:25
#: backend/db_meta/enums/instance_role.py:35
msgid "Slave"
msgstr "Slave"

#: backend/db_meta/enums/instance_role.py:28
msgid "Remote Master"
msgstr "Remote Master"

#: backend/db_meta/enums/instance_role.py:29
msgid "Remote Repeater"
msgstr "Remote Repeater"

#: backend/db_meta/enums/instance_role.py:30
msgid "Remote Slave"
msgstr "Remote Slave"

#: backend/db_meta/enums/instance_role.py:44
#: backend/db_meta/enums/instance_role.py:59
msgid "Broker"
msgstr "Broker"

#: backend/db_meta/enums/instance_role.py:45
#: backend/db_meta/enums/instance_role.py:49
#: backend/db_meta/enums/instance_role.py:58
msgid "Zookeeper"
msgstr "Zookeeper"

#: backend/db_meta/enums/instance_role.py:48
msgid "NameNode"
msgstr "NameNode"

#: backend/db_meta/enums/instance_role.py:50
msgid "Journalnode"
msgstr "Journalnode"

#: backend/db_meta/enums/instance_role.py:51
msgid "DataNode"
msgstr "DataNode"

#: backend/db_meta/enums/instance_role.py:54
#: backend/db_meta/enums/machine_type.py:44 backend/flow/consts.py:267
#: backend/flow/consts.py:351
msgid "influxdb"
msgstr "InfluxDB"

#: backend/db_meta/enums/instance_role.py:57
msgid "Bookkeeper"
msgstr "Bookkeeper"

#: backend/db_meta/enums/instance_role.py:64
msgid "Follower"
msgstr "Follower"

#: backend/db_meta/enums/instance_role.py:65
msgid "Observer"
msgstr "Observer"

#: backend/db_meta/enums/instance_role.py:68
msgid "mongo_m1"
msgstr "mongo_m1"

#: backend/db_meta/enums/instance_role.py:69
msgid "mongo_m2"
msgstr "mongo_m2"

#: backend/db_meta/enums/instance_role.py:70
msgid "mongo_m3"
msgstr "mongo_m3"

#: backend/db_meta/enums/instance_role.py:71
msgid "mongo_m4"
msgstr "mongo_m4"

#: backend/db_meta/enums/instance_role.py:72
msgid "mongo_m5"
msgstr "mongo_m5"

#: backend/db_meta/enums/instance_role.py:73
msgid "mongo_m6"
msgstr "mongo_m6"

#: backend/db_meta/enums/instance_role.py:74
msgid "mongo_m7"
msgstr "mongo_m7"

#: backend/db_meta/enums/instance_role.py:75
msgid "mongo_m8"
msgstr "mongo_m8"

#: backend/db_meta/enums/instance_role.py:76
msgid "mongo_m9"
msgstr "mongo_m9"

#: backend/db_meta/enums/instance_role.py:77
msgid "mongo_m10"
msgstr "mongo_m10"

#: backend/db_meta/enums/instance_role.py:78
msgid "mongo_backup"
msgstr "mongo_backup"

#: backend/db_meta/enums/instance_role.py:84
#: backend/db_meta/enums/machine_type.py:59 backend/flow/consts.py:1509
msgid "vmstorage"
msgstr "vmstorage"

#: backend/db_meta/enums/instance_role.py:85
#: backend/db_meta/enums/machine_type.py:60 backend/flow/consts.py:1507
msgid "vminsert"
msgstr "vminced"

#: backend/db_meta/enums/instance_role.py:86
#: backend/db_meta/enums/machine_type.py:61 backend/flow/consts.py:1508
msgid "vmselect"
msgstr "vmselect"

#: backend/db_meta/enums/instance_role.py:87
#: backend/db_meta/enums/machine_type.py:62 backend/flow/consts.py:1506
msgid "vmauth"
msgstr "vmauth"

#: backend/db_meta/enums/instance_role.py:92
msgid "spider_master"
msgstr "spider_master"

#: backend/db_meta/enums/instance_role.py:94
msgid "spider_slave"
msgstr "spider_slave"

#: backend/db_meta/enums/instance_role.py:96 backend/flow/consts.py:1079
msgid "spider_mnt"
msgstr "spider_mnt"

#: backend/db_meta/enums/instance_role.py:97
msgid "spider_slave_mnt"
msgstr "spider_slave_mnt"

#: backend/db_meta/enums/instance_role.py:99
msgid "spider_ctl"
msgstr "spider_ctl"

#: backend/db_meta/enums/instance_status.py:17 backend/db_proxy/constants.py:42
#: backend/flow/consts.py:687
msgid "running"
msgstr "running"

#: backend/db_meta/enums/instance_status.py:18 backend/db_proxy/constants.py:43
#: backend/flow/consts.py:689
msgid "unavailable"
msgstr "unavailable"

#: backend/db_meta/enums/instance_status.py:19 backend/db_proxy/constants.py:44
msgid "restoring"
msgstr "restoring"

#: backend/db_meta/enums/machine_type.py:18 backend/flow/consts.py:1078
msgid "remote"
msgstr "remote"

#: backend/db_meta/enums/machine_type.py:20
msgid "backend"
msgstr "backend"

#: backend/db_meta/enums/machine_type.py:21 backend/db_monitor/constants.py:31
msgid "single"
msgstr "single"

#: backend/db_meta/enums/machine_type.py:23 backend/flow/consts.py:261
#: backend/flow/consts.py:346
msgid "predixy"
msgstr "predixy"

#: backend/db_meta/enums/machine_type.py:24 backend/flow/consts.py:260
#: backend/flow/consts.py:345
msgid "twemproxy"
msgstr "twemproxy"

#: backend/db_meta/enums/machine_type.py:26
msgid "tendiscache"
msgstr "tend to cache"

#: backend/db_meta/enums/machine_type.py:27 backend/flow/consts.py:254
#: backend/flow/consts.py:344
msgid "tendisssd"
msgstr "tendisssd"

#: backend/db_meta/enums/machine_type.py:28 backend/flow/consts.py:253
#: backend/flow/consts.py:343
msgid "tendisplus"
msgstr "tend more"

#: backend/db_meta/enums/machine_type.py:30
msgid "es_datanode"
msgstr "en_datanode"

#: backend/db_meta/enums/machine_type.py:31
msgid "es_master"
msgstr "is_master"

#: backend/db_meta/enums/machine_type.py:32
msgid "es_client"
msgstr "es_client"

#: backend/db_meta/enums/machine_type.py:34 backend/flow/consts.py:865
#: backend/flow/consts.py:1055 backend/ticket/builders/common/constants.py:62
#: backend/ticket/builders/common/constants.py:67
msgid "broker"
msgstr "broker"

#: backend/db_meta/enums/machine_type.py:35 backend/flow/consts.py:859
#: backend/flow/consts.py:866 backend/flow/consts.py:1054
#: backend/ticket/builders/common/constants.py:58
#: backend/ticket/builders/common/constants.py:61
#: backend/ticket/builders/common/constants.py:66
msgid "zookeeper"
msgstr "zookeeper"

#: backend/db_meta/enums/machine_type.py:37
msgid "hdfs_master"
msgstr "hdfs_master"

#: backend/db_meta/enums/machine_type.py:38
msgid "hdfs_datanode"
msgstr "hdfs_datanode"

#: backend/db_meta/enums/machine_type.py:40 backend/flow/consts.py:1189
#: backend/flow/consts.py:1431 backend/flow/consts.py:1461
msgid "mongos"
msgstr "mongos"

#: backend/db_meta/enums/machine_type.py:42
msgid "mongo_config"
msgstr "mongo_config"

#: backend/db_meta/enums/machine_type.py:46
msgid "pulsar_zookeeper"
msgstr "pulsar_zookeeper"

#: backend/db_meta/enums/machine_type.py:47
msgid "pulsar_bookkeeper"
msgstr "pulsar_bookkeeper"

#: backend/db_meta/enums/machine_type.py:48
msgid "pulsar_broker"
msgstr "pulsar_broker"

#: backend/db_meta/enums/machine_type.py:50 backend/flow/consts.py:282
#: backend/flow/consts.py:356
msgid "riak"
msgstr "ripple"

#: backend/db_meta/enums/machine_type.py:52
msgid "doris_backend"
msgstr "doris_backend"

#: backend/db_meta/enums/machine_type.py:53
msgid "doris_follower"
msgstr "doris_follower"

#: backend/db_meta/enums/machine_type.py:54
msgid "doris_observer"
msgstr "doris_observer"

#: backend/db_meta/enums/machine_type.py:56
msgid "sqlserver_single"
msgstr "sqlserver_single"

#: backend/db_meta/enums/machine_type.py:57
msgid "sqlserver_ha"
msgstr "sqlserver_ha"

#: backend/db_meta/exceptions.py:18
msgid "DBMeta模块异常"
msgstr "DBMeta module exception"

#: backend/db_meta/exceptions.py:23 backend/db_meta/exceptions.py:101
#: backend/flow/engine/bamboo/scene/doris/exceptions.py:23
#: backend/flow/engine/bamboo/scene/hdfs/exceptions.py:23
#: backend/flow/engine/bamboo/scene/mysql/common/exceptions.py:22
#: backend/flow/engine/bamboo/scene/pulsar/exceptions.py:23
#: backend/flow/engine/bamboo/scene/redis/common/exceptions.py:22
#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:22
#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/exceptions.py:22
#: backend/flow/engine/bamboo/scene/vm/exceptions.py:23
msgid "通用异常"
msgstr "generic exception"

#: backend/db_meta/exceptions.py:24 backend/db_meta/exceptions.py:102
#: backend/flow/engine/bamboo/scene/doris/exceptions.py:24
#: backend/flow/engine/bamboo/scene/hdfs/exceptions.py:24
#: backend/flow/engine/bamboo/scene/mysql/common/exceptions.py:23
#: backend/flow/engine/bamboo/scene/mysql/common/exceptions.py:29
#: backend/flow/engine/bamboo/scene/mysql/common/exceptions.py:35
#: backend/flow/engine/bamboo/scene/pulsar/exceptions.py:24
#: backend/flow/engine/bamboo/scene/redis/common/exceptions.py:23
#: backend/flow/engine/bamboo/scene/redis/common/exceptions.py:29
#: backend/flow/engine/bamboo/scene/redis/common/exceptions.py:35
#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:23
#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:29
#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:35
#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:41
#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:47
#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:53
#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:59
#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:65
#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/exceptions.py:23
#: backend/flow/engine/bamboo/scene/vm/exceptions.py:24
#, python-brace-format
msgid "{message}"
msgstr "{message}"

#: backend/db_meta/exceptions.py:29
msgid "新建TenDBHA前置检查异常"
msgstr "New TenDBHA pre-check exception"

#: backend/db_meta/exceptions.py:30 backend/db_meta/exceptions.py:66
#: backend/db_services/redis/redis_dts/exceptions.py:24
#: backend/db_services/redis/redis_dts/exceptions.py:30
#: backend/flow/engine/exceptions.py:33
#: backend/flow/utils/mysql/db_table_filter/exception.py:24
#, python-brace-format
msgid "{msg}"
msgstr "{msg}"

#: backend/db_meta/exceptions.py:35
msgid "同步关系记录已存在"
msgstr "Sync relation record already exists"

#: backend/db_meta/exceptions.py:36
#, python-brace-format
msgid "{ejector}和{receiver}的同步关系记录已存在"
msgstr ""
"Synchronization relationship records for {ejector} and {receiver} already "
"exist"

#: backend/db_meta/exceptions.py:41
msgid "proxy已绑定后端存储"
msgstr "Proxy is bound to backend storage"

#: backend/db_meta/exceptions.py:42
#, python-brace-format
msgid "{proxy}已绑定后端存储"
msgstr "{proxy} is bound to backend storage"

#: backend/db_meta/exceptions.py:47
msgid "DB模块已存在"
msgstr "DB module already exists"

#: backend/db_meta/exceptions.py:48
#, python-brace-format
msgid "DB模块[{db_module_name}]已存在，请重新命名"
msgstr "DB module [{db_module_name}] already exists, please rename it"

#: backend/db_meta/exceptions.py:53
msgid "TenDBHA集群已存在"
msgstr "TenDBHA cluster already exists"

#: backend/db_meta/exceptions.py:54
#, python-brace-format
msgid "TenDBHA集群{cluster}已存在"
msgstr "TenDBHA cluster {cluster} already exists"

#: backend/db_meta/exceptions.py:59
msgid "集群访问入口已存在"
msgstr "The cluster access entry already exists"

#: backend/db_meta/exceptions.py:60
#, python-brace-format
msgid "集群访问入口{entry}已存在"
msgstr "Cluster access entry {entry} already exists"

#: backend/db_meta/exceptions.py:65
msgid "新建Tendis前置检查异常"
msgstr "New Tendis pre-check exception"

#: backend/db_meta/exceptions.py:71
msgid "Tendis集群已存在"
msgstr "Tendis cluster already exists"

#: backend/db_meta/exceptions.py:72
#, python-brace-format
msgid "Tendis集群{cluster}已存在"
msgstr "Tendis cluster {cluster} already exists"

#: backend/db_meta/exceptions.py:77
msgid "主机在CMDB中不存在"
msgstr "Host does not exist in CMDB"

#: backend/db_meta/exceptions.py:78
#, python-brace-format
msgid "主机[bk_host_id={bk_host_id}]在CMDB中不存在"
msgstr "Host [bk_host_id={bk_host_id}] does not exist in CMDB"

#: backend/db_meta/exceptions.py:83
msgid "Tendis集群不存在"
msgstr "Tendis cluster does not exist"

#: backend/db_meta/exceptions.py:84
#, python-brace-format
msgid "Tendis集群{cluster}不存在"
msgstr "Tendis cluster {cluster} does not exist"

#: backend/db_meta/exceptions.py:89
msgid "集群,分片不存在"
msgstr "Cluster, shard does not exist"

#: backend/db_meta/exceptions.py:90
#, python-brace-format
msgid "集群{cluster}分片不存在"
msgstr "Cluster {cluster} shard does not exist"

#: backend/db_meta/exceptions.py:95
msgid "集群访问入口不存在"
msgstr "The cluster access entry does not exist"

#: backend/db_meta/exceptions.py:96
#, python-brace-format
msgid "集群访问入口 {entry} 不存在"
msgstr "Cluster access entry {entry} does not exist"

#: backend/db_meta/exceptions.py:107
#: backend/flow/engine/bamboo/scene/mysql/mysql_data_migrate_flow.py:57
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_destroy_flow.py:62
#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:94
#: backend/flow/engine/bamboo/scene/mysql/mysql_open_area_flow.py:67
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_destroy_flow.py:64
#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_swtich.py:84
#: backend/flow/engine/bamboo/scene/spider/spider_add_mnt.py:69
#: backend/flow/engine/bamboo/scene/spider/spider_add_nodes.py:70
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_destroy.py:63
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_disable_deploy.py:53
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_enable_deploy.py:40
#: backend/flow/engine/bamboo/scene/spider/spider_reduce_nodes.py:127
#: backend/flow/engine/bamboo/scene/spider/spider_slave_cluster_deploy.py:72
#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/util.py:86
#: backend/flow/plugins/components/collections/common/create_random_job_user.py:117
#: backend/flow/plugins/components/collections/common/drop_random_job_user.py:151
#: backend/flow/plugins/components/collections/sqlserver/create_random_job_user.py:82
#: backend/flow/plugins/components/collections/sqlserver/drop_random_job_user.py:67
msgid "集群不存在"
msgstr "cluster does not exist"

#: backend/db_meta/exceptions.py:108
#, python-brace-format
msgid "集群类型:{cluster_type}, ID:{cluster_id}, 域名:{immute_domain} 不存在"
msgstr ""
"Cluster type: {cluster_type}, ID: {cluster_id}, immute_domain:"
"{immute_domain} does not exist"

#: backend/db_meta/exceptions.py:113
msgid "实例不存在"
msgstr "instance does not exist"

#: backend/db_meta/exceptions.py:114
#, python-brace-format
msgid "实例 云区域{bk_cloud_id} {ip}:{port} 不存在"
msgstr "Instance cloud zone {bk_cloud_id} {ip}:{port} does not exist"

#: backend/db_meta/exceptions.py:119
msgid "执行互斥"
msgstr "execute mutex"

#: backend/db_meta/exceptions.py:120
#, python-brace-format
msgid ""
"操作{ticket_type}与集群{cluster_id}正在运行的动作{active_ticket_type}存在互"
"斥/重复操作"
msgstr ""
"The action {ticket_type} and the action {active_ticket_type} that the "
"cluster {cluster_id} is running are mutually exclusive/duplicate"

#: backend/db_meta/exceptions.py:125
msgid "主库不存在"
msgstr "The master does not exist"

#: backend/db_meta/exceptions.py:126
#, python-brace-format
msgid "集群类型:{cluster_type}, ID:{cluster_id} 主库不存在"
msgstr ""
"Cluster type: {cluster_type}, ID: {cluster_id} master database does not exist"

#: backend/db_meta/exceptions.py:131
msgid "集群不支持分片"
msgstr "Cluster does not support sharding"

#: backend/db_meta/exceptions.py:132
#, python-brace-format
msgid "集群类型:{cluster_type}, ID:{cluster_id} 没有数据分片逻辑"
msgstr ""
"Cluster type: {cluster_type}, ID: {cluster_id} without data sharding logic"

#: backend/db_meta/exceptions.py:137
msgid "无效中控主节点"
msgstr "Invalid central control master node"

#: backend/db_meta/exceptions.py:138
msgid "中控主节点必须是 spider_master"
msgstr "The central control master node must be spider_master"

#: backend/db_meta/exceptions.py:143
msgid "集群 proxy 无附加信息"
msgstr "Cluster proxy No additional information"

#: backend/db_meta/exceptions.py:144
#, python-brace-format
msgid "集群类型:{cluster_type} proxy 无附加信息"
msgstr "Cluster type: {cluster_type} proxy No additional information"

#: backend/db_meta/exceptions.py:149
msgid "部署方案使用中"
msgstr "The deployment plan is in use"

#: backend/db_meta/exceptions.py:150
#, python-brace-format
msgid "部署方案:{name} 被 {ref_cnt} 个集群引用"
msgstr "Deployment scheme: {name} is referenced by {ref_cnt} clusters"

#: backend/db_meta/exceptions.py:155
msgid "访问入口请求转发和IP绑定混用"
msgstr "Access entry request forwarding and IP binding are mixed"

#: backend/db_meta/exceptions.py:156
#, python-brace-format
msgid ""
"访问入口 {entry} 绑定到 {bind_cnt} 台机器, 转发到 {forward_to} 不能同时存在"
msgstr ""
"The access entry {entry} is bound to {bind_cnt} machines, forwarded to "
"{forward_to} cannot exist at the same time"

#: backend/db_meta/exceptions.py:161
msgid "访问入口未绑定"
msgstr "Access entry is not bound"

#: backend/db_meta/exceptions.py:162
#, python-brace-format
msgid "访问入口 {entry} 未绑定到 IP"
msgstr "The access entry {entry} is not bound to an IP"

#: backend/db_meta/models/app.py:27 backend/db_services/cmdb/serializers.py:38
msgid "业务英文名"
msgstr "Business English name"

#: backend/db_meta/models/app.py:28
msgid "业务中文名"
msgstr "Business Chinese name"

#: backend/db_meta/models/app.py:29
msgid "语言"
msgstr "language"

#: backend/db_meta/models/app.py:30
msgid "时区"
msgstr "Time zone"

#: backend/db_meta/models/app.py:31 backend/db_monitor/mock_data.py:25
msgid "运维人员"
msgstr "Operation and maintenance personnel"

#: backend/db_meta/models/app.py:34
msgid "CMDB业务信息缓存表(AppCache)"
msgstr "CMDB business information cache table (AppCache)"

#: backend/db_meta/models/city_map.py:30
msgid "逻辑城市表(LogicalCity)"
msgstr "Logical City Table (LogicalCity)"

#: backend/db_meta/models/city_map.py:39
msgid "IDC 城市名"
msgstr "IDC city name"

#: backend/db_meta/models/city_map.py:46
msgid "蓝鲸城市表(BKCity)"
msgstr "Blue Whale City List (BKCity)"

#: backend/db_meta/models/cluster.py:56
msgid "集群英文名"
msgstr "Cluster English name"

#: backend/db_meta/models/cluster.py:57
#: backend/db_services/bigdata/resources/query.py:39
#: backend/db_services/dbbase/resources/query.py:85
#: backend/db_services/dbbase/resources/query.py:161
#: backend/db_services/redis/resources/redis_cluster/query.py:59
#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:28
#: backend/ticket/builders/mongodb/mongo_shard_apply.py:37
msgid "集群别名"
msgstr "cluster alias"

#: backend/db_meta/models/cluster.py:62
#: backend/db_services/redis/redis_modules/models/redis_module_support.py:13
msgid "主版本号"
msgstr "major version number"

#: backend/db_meta/models/cluster.py:65 backend/db_meta/models/machine.py:48
#: backend/db_proxy/models.py:29 backend/db_proxy/models.py:48
#: backend/db_services/dbbase/resources/query.py:153
#: backend/db_services/ipchooser/serializers/base.py:90
#: backend/db_services/redis/autofix/models.py:24
msgid "云区域 ID"
msgstr "Cloud Region ID"

#: backend/db_meta/models/cluster.py:66
#: backend/db_services/dbbase/resources/query.py:90
msgid "地域"
msgstr "region"

#: backend/db_meta/models/cluster.py:68
msgid "容灾要求"
msgstr "Disaster recovery requirements"

#: backend/db_meta/models/cluster.py:70
msgid "集群所在的时区"
msgstr "The time zone in which the cluster is located"

#: backend/db_meta/models/cluster.py:75
msgid "集群(Cluster)"
msgstr "Cluster"

#: backend/db_meta/models/cluster.py:150
msgid "当前操作「{}」与集群(id:{})的操作「{}」存在执行互斥"
msgstr "The current operation {} and the operation {} of the cluster (id: {}) are mutually exclusive."

#: backend/db_meta/models/cluster.py:158
msgid "集群运行状态异常，请检查!"
msgstr "The cluster running status is abnormal, please check!"

#: backend/db_meta/models/cluster.py:161
msgid "集群已被禁用，请先启用!"
msgstr "The cluster has been disabled, please enable it first!"

#: backend/db_meta/models/cluster.py:231
msgid "{} 未实现 status flag, 认为实例异常会导致集群异常"
msgstr "{} The status flag is not implemented. It is believed that instance exceptions will cause cluster exceptions."

#: backend/db_meta/models/cluster.py:252
msgid "{} 未实现 main_storage_instance"
msgstr "{} main_storage_instance is not implemented"

#: backend/db_meta/models/cluster.py:300
msgid "无法访问集群[]的访问端口，请检查实例信息"
msgstr "Unable to access the access port of cluster [], please check the instance information"

#: backend/db_meta/models/cluster.py:362
msgid "{} 类型集群没有中控节点"
msgstr "{} type cluster has no central control node"

#: backend/db_meta/models/cluster.py:382 backend/db_meta/models/cluster.py:465
msgid "get primary failed: {}"
msgstr "get primary failed: {}"

#: backend/db_meta/models/cluster.py:440
msgid "集群id:{} {} 类型集群没有中控节点"
msgstr "Cluster id: {} {} type cluster does not have a central control node"

#: backend/db_meta/models/cluster.py:484
msgid "屏蔽开始时间"
msgstr "Blocking start time"

#: backend/db_meta/models/cluster.py:485
msgid "屏蔽结束时间"
msgstr "Block end time"

#: backend/db_meta/models/cluster_entry.py:54
msgid "集群访问入口(ClusterEntry)"
msgstr "Cluster access entry (ClusterEntry)"

#: backend/db_meta/models/cluster_monitor.py:149
#: backend/db_meta/models/cluster_monitor.py:150
msgid "业务监控拓扑(AppMonitorTopo)"
msgstr "Business monitoring topology (AppMonitorTopo)"

#: backend/db_meta/models/cluster_monitor.py:277
msgid "实例ID，兼容单实例存储组件influxdb"
msgstr ""
"Instance ID, compatible with single instance storage component influxdb"

#: backend/db_meta/models/cluster_monitor.py:283
#: backend/db_meta/models/cluster_monitor.py:284
msgid "CMDB模块映射(ClusterMonitorTopo)"
msgstr "CMDB module mapping (ClusterMonitorTopo)"

#: backend/db_meta/models/cluster_monitor.py:295
#: backend/db_meta/models/cluster_monitor.py:296
msgid "同步失败的IP(SyncFailedMachine)"
msgstr "IP that failed to synchronize (SyncFailedMachine)"

#: backend/db_meta/models/db_module.py:31
msgid "dbmodule 别名,用于生成域名"
msgstr "dbmodule alias, used to generate domain names"

#: backend/db_meta/models/db_module.py:36
msgid "DB模块(DBModule)"
msgstr "DB module (DBModule)"

#: backend/db_meta/models/extra_process.py:32
#: backend/db_meta/models/sqlserver_dts.py:54
#: backend/db_services/mysql/dumper/models.py:26
msgid "关联的业务id，对应cmdb"
msgstr "Associated business id, corresponding to cmdb"

#: backend/db_meta/models/extra_process.py:33
msgid "关联的cluster_id"
msgstr "associated cluster_id"

#: backend/db_meta/models/extra_process.py:34
msgid "云区域 ID，对应cmdb"
msgstr "Cloud area ID, corresponding to cmdb"

#: backend/db_meta/models/extra_process.py:35
msgid "服务实例id，对应cmdb"
msgstr "Service instance id, corresponding to cmdb"

#: backend/db_meta/models/extra_process.py:36
#: backend/db_meta/models/machine.py:30
msgid "IP 地址"
msgstr "IP address"

#: backend/db_meta/models/extra_process.py:38
msgid "进程类型"
msgstr "process type"

#: backend/db_meta/models/extra_process.py:40
#: backend/db_meta/models/instance.py:140
#: backend/db_meta/models/instance.py:188 backend/db_package/models.py:28
#: backend/ticket/builders/common/bigdata.py:122
#: backend/ticket/builders/influxdb/influxdb_apply.py:37
#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:41
#: backend/ticket/builders/mongodb/mongo_shard_apply.py:38
#: backend/ticket/builders/redis/redis_cluster_apply.py:38
#: backend/ticket/builders/redis/redis_instance_apply.py:43
#: backend/ticket/builders/redis/redis_toolbox_redis_scale_updown.py:46
#: backend/ticket/builders/redis/redis_toolbox_shard_update.py:53
#: backend/ticket/builders/redis/redis_toolbox_type_update.py:56
msgid "版本号"
msgstr "version number"

#: backend/db_meta/models/extra_process.py:41
msgid "进程监听端口"
msgstr "Process listening port"

#: backend/db_meta/models/extra_process.py:43
msgid "进程的定制化属性"
msgstr "Process customization properties"

#: backend/db_meta/models/extra_process.py:46
msgid "附属进程实例(ExtraProcessInstance)"
msgstr "Additional process instance (ExtraProcessInstance)"

#: backend/db_meta/models/group.py:23
msgid "分组名"
msgstr "group name"

#: backend/db_meta/models/group.py:26 backend/db_meta/models/group.py:27
msgid "分组表(Group)"
msgstr "Group table (Group)"

#: backend/db_meta/models/group.py:34
#: backend/db_services/bigdata/influxdb/serializers.py:20
#: backend/ticket/builders/influxdb/influxdb_apply.py:40
msgid "分组ID"
msgstr "Group ID"

#: backend/db_meta/models/group.py:35
#: backend/db_services/dbresource/serializers.py:333
#: backend/ticket/builders/common/bigdata.py:225
#: backend/ticket/builders/common/bigdata.py:303
#: backend/ticket/models/ticket.py:395 backend/ticket/serializers.py:282
msgid "实例ID"
msgstr "Instance ID"

#: backend/db_meta/models/group.py:38 backend/db_meta/models/group.py:39
msgid "分组和实例关系绑定表"
msgstr "Grouping and instance relationship binding tables"

#: backend/db_meta/models/instance.py:82
msgid "实例结构和状态变更中，请稍后!"
msgstr "Instance structure and state changes, please wait!"

#: backend/db_meta/models/instance.py:85
msgid "实例运行状态异常，请检查!"
msgstr "The running status of the instance is abnormal, please check!"

#: backend/db_meta/models/instance.py:157
#: backend/db_meta/models/instance.py:207
msgid "实例所在的时区"
msgstr "The time zone where the instance is located"

#: backend/db_meta/models/instance.py:158
#: backend/db_meta/models/instance.py:208
msgid "对应在cc的服务实例的id"
msgstr "The id corresponding to the service instance in cc"

#: backend/db_meta/models/instance.py:159
msgid "多 slave 的备选标志"
msgstr "Alternate flag for multiple slaves"

#: backend/db_meta/models/instance.py:162
msgid "存储实例(StorageInstance)"
msgstr "StorageInstance"

#: backend/db_meta/models/instance.py:211
msgid "代理实例(ProxyInstance)"
msgstr "ProxyInstance"

#: backend/db_meta/models/machine.py:38
msgid "操作系统"
msgstr "operating system"

#: backend/db_meta/models/machine.py:39
msgid "区域"
msgstr "area"

#: backend/db_meta/models/machine.py:40
msgid "区域 ID"
msgstr "area ID"

#: backend/db_meta/models/machine.py:41
msgid "子 Zone"
msgstr "Child Zone"

#: backend/db_meta/models/machine.py:42
msgid "子 Zone ID"
msgstr "Child Zone ID"

#: backend/db_meta/models/machine.py:43
msgid "机架"
msgstr "frame"

#: backend/db_meta/models/machine.py:44
msgid "机架 ID"
msgstr "Rack ID"

#: backend/db_meta/models/machine.py:45
msgid "标准设备类型"
msgstr "Standard Equipment Type"

#: backend/db_meta/models/machine.py:46
#: backend/db_services/dbbase/resources/query.py:158
msgid "机房"
msgstr "engine room"

#: backend/db_meta/models/machine.py:47
msgid "机房 ID"
msgstr "computer room ID"

#: backend/db_meta/models/machine.py:49
msgid "Agent ID"
msgstr "Agent ID"

#: backend/db_meta/models/machine.py:51
msgid "虚拟规格ID"
msgstr "Virtual Spec ID"

#: backend/db_meta/models/machine.py:52
msgid "当前的虚拟规格配置"
msgstr "Current virtual specification configuration"

#: backend/db_meta/models/machine.py:53
msgid "机器采集的系统信息"
msgstr "System information collected by the machine"

#: backend/db_meta/models/machine.py:57
msgid "机器主机(Machine)"
msgstr "Machine host (Machine)"

#: backend/db_meta/models/spec.py:35
msgid "虚拟规格名称"
msgstr "virtual specification name"

#: backend/db_meta/models/spec.py:37
msgid "集群类型:MySQL、Proxy、Spider"
msgstr "Cluster type: MySQL, Proxy, Spider"

#: backend/db_meta/models/spec.py:39
msgid "机器规格类型"
msgstr "Machine specification type"

#: backend/db_meta/models/spec.py:40
msgid "cpu规格描述:{\"min\":1,\"max\":10}"
msgstr "cpu specification description: {\"min\":1,\"max\":10}"

#: backend/db_meta/models/spec.py:41
msgid "mem规格描述:{\"min\":100,\"max\":1000}"
msgstr "mem specification description: {\"min\":100,\"max\":1000}"

#: backend/db_meta/models/spec.py:42
msgid "实际机器机型: [\"class1\",\"class2\"]"
msgstr "Actual machine model: [\"class1\",\"class2\"]"

#: backend/db_meta/models/spec.py:44
msgid ""
"存储磁盘需求配置:[{\"mount_point\":\"/data\",\"size\":500,\"type\":\"ssd\"}]"
msgstr "Storage disk requirement configuration: [{\"mount_point\":\"/data\",\"size\":500,\"type\":\"ssd\"}]"

#: backend/db_meta/models/spec.py:46 backend/db_meta/models/spec.py:255
msgid "资源规格描述"
msgstr "Resource specification description"

#: backend/db_meta/models/spec.py:47 backend/db_monitor/models/alarm.py:241
#: backend/db_monitor/models/alarm.py:351
#: backend/db_monitor/models/alarm.py:371 backend/db_monitor/views/policy.py:52
#: backend/db_package/models.py:40
#: backend/db_services/dbresource/serializers.py:317
msgid "是否启用"
msgstr "Whether to enable"

#: backend/db_meta/models/spec.py:49
msgid "实例数(es专属)"
msgstr "Number of instances (es exclusive)"

#: backend/db_meta/models/spec.py:51
msgid "qps规格描述:{\"min\": 1, \"max\": 100}"
msgstr "qps specification description: {\"min\": 1, \"max\": 100}"

#: backend/db_meta/models/spec.py:54
msgid "资源规格(Spec)"
msgstr "Resource specification (Spec)"

#: backend/db_meta/models/spec.py:251
msgid "cpu规格描述:{'min':1,'max':10}"
msgstr "cpu specification description: {&#39;min&#39;:1,&#39;max&#39;:10}"

#: backend/db_meta/models/spec.py:252
msgid "mem规格描述:{'min':100,'max':1000}"
msgstr "mem specification description: {&#39;min&#39;:100,&#39;max&#39;:1000}"

#: backend/db_meta/models/spec.py:253
msgid "实际机器机型: ['class1','class2'] "
msgstr "Actual machine type: [&#39;class1&#39;,&#39;class2&#39;]"

#: backend/db_meta/models/sqlserver_dts.py:32
#: backend/db_periodic_task/local_tasks/redis_clusternodes_update/task.py:146
#: backend/db_services/redis/redis_dts/enums/type_enums.py:137
msgid "待执行"
msgstr "To be executed"

#: backend/db_meta/models/sqlserver_dts.py:33 backend/ticket/constants.py:56
#: backend/ticket/flow_manager/itsm.py:74
msgid "已终止"
msgstr "terminated"

#: backend/db_meta/models/sqlserver_dts.py:34
msgid "中断中"
msgstr "Interrupted"

#: backend/db_meta/models/sqlserver_dts.py:35
msgid "已断开"
msgstr "Disconnected"

#: backend/db_meta/models/sqlserver_dts.py:38
#: backend/db_services/redis/redis_dts/enums/type_enums.py:133
msgid "全量传输中"
msgstr "Full transfer in progress"

#: backend/db_meta/models/sqlserver_dts.py:39
#: backend/db_services/redis/redis_dts/enums/type_enums.py:135
msgid "全量传输失败"
msgstr "Full transfer failed"

#: backend/db_meta/models/sqlserver_dts.py:40
msgid "全量传输完成"
msgstr "Full transfer completed"

#: backend/db_meta/models/sqlserver_dts.py:43
msgid "增量传输中"
msgstr "Incremental transfer in progress"

#: backend/db_meta/models/sqlserver_dts.py:44
msgid "增量传输失败"
msgstr "Incremental transfer failed"

#: backend/db_meta/models/sqlserver_dts.py:45
msgid "增量传输完成"
msgstr "Incremental transfer completed"

#: backend/db_meta/models/sqlserver_dts.py:55
#: backend/db_services/mysql/open_area/models.py:29
#: backend/ticket/builders/mysql/mysql_data_migrate.py:26
#: backend/ticket/builders/mysql/mysql_openarea.py:48
#: backend/ticket/builders/sqlserver/sqlserver_data_migrate.py:44
#: backend/ticket/builders/sqlserver/sqlserver_rollback.py:48
msgid "源集群ID"
msgstr "Source cluster ID"

#: backend/db_meta/models/sqlserver_dts.py:56
#: backend/ticket/builders/mysql/mysql_openarea.py:31
#: backend/ticket/builders/redis/redis_toolbox_rollback_data_copy.py:28
#: backend/ticket/builders/sqlserver/sqlserver_data_migrate.py:45
#: backend/ticket/builders/sqlserver/sqlserver_rollback.py:49
msgid "目标集群ID"
msgstr "Target cluster ID"

#: backend/db_meta/models/sqlserver_dts.py:57
#: backend/ticket/builders/sqlserver/sqlserver_backup.py:29
#: backend/ticket/builders/sqlserver/sqlserver_data_migrate.py:46
#: backend/ticket/builders/sqlserver/sqlserver_rollback.py:50
msgid "库正则"
msgstr "library regular"

#: backend/db_meta/models/sqlserver_dts.py:58
#: backend/ticket/builders/sqlserver/sqlserver_backup.py:30
#: backend/ticket/builders/sqlserver/sqlserver_data_migrate.py:47
#: backend/ticket/builders/sqlserver/sqlserver_rollback.py:51
msgid "忽略库正则"
msgstr "Ignore library regex"

#: backend/db_meta/models/sqlserver_dts.py:59
msgid "迁移类型"
msgstr "Migration type"

#: backend/db_meta/models/sqlserver_dts.py:60
msgid "关联的单据id"
msgstr "associated document id"

#: backend/db_meta/models/sqlserver_dts.py:61
msgid "关联root_id"
msgstr "Associated root_id"

#: backend/db_meta/models/sqlserver_dts.py:63
#: backend/db_services/bigdata/influxdb/serializers.py:19
#: backend/db_services/dbbase/resources/serializers.py:32
#: backend/db_services/dbbase/resources/serializers.py:102
#: backend/db_services/plugin/mysql/authorize/serializers.py:56
#: backend/db_services/redis/redis_dts/models/tb_dts_server.py:21
#: backend/db_services/redis/rollback/models/tb_tendis_data_construction_task.py:34
#: backend/db_services/redis/slots_migrate/models/slots_migration_record.py:40
#: backend/db_services/redis/toolbox/serializers.py:190
#: backend/ticket/serializers.py:85 backend/ticket/serializers.py:265
msgid "状态"
msgstr "state"

#: backend/db_meta/models/sqlserver_dts.py:65
msgid "迁移配置"
msgstr "Migrate configuration"

#: backend/db_meta/models/sqlserver_dts.py:68
msgid "sqlserver数据迁移记录表"
msgstr "sqlserver data migration record table"

#: backend/db_meta/models/sqlserver_dts.py:107
msgid "当前操作「{}(单据：{})」与迁移记录(关联单据：{})存在执行互斥"
msgstr "The current operation {}(document: {}) and the migration record (associated document: {}) are mutually exclusive."

#: backend/db_meta/models/storage_instance_tuple.py:33
msgid "存储实例元组对(StorageInstanceTuple)"
msgstr "Storage instance tuple pair (StorageInstanceTuple)"

#: backend/db_meta/models/tag.py:21
msgid "tag名称"
msgstr "tag name"

#: backend/db_meta/models/tag.py:22
msgid "tag类型"
msgstr "tag type"

#: backend/db_meta/models/tag.py:23
msgid "关联集群"
msgstr "Associated clusters"

#: backend/db_meta/utils.py:72 backend/db_meta/utils.py:143
msgid "清理集群"
msgstr "Clean up the cluster"

#: backend/db_monitor/constants.py:28 backend/db_monitor/constants.py:47
#: backend/db_monitor/constants.py:57
msgid "platform"
msgstr "platform"

#: backend/db_monitor/constants.py:29
msgid "app"
msgstr "app"

#: backend/db_monitor/constants.py:30
msgid "cluster"
msgstr "cluster"

#: backend/db_monitor/constants.py:37
msgid "固定值班"
msgstr "Fixed duty"

#: backend/db_monitor/constants.py:38
msgid "交替轮值"
msgstr "alternate duty"

#: backend/db_monitor/constants.py:48 backend/db_monitor/constants.py:58
msgid "app id"
msgstr "app id"

#: backend/db_monitor/constants.py:49 backend/db_monitor/constants.py:59
msgid "db module"
msgstr "db module"

#: backend/db_monitor/constants.py:50 backend/db_monitor/constants.py:60
msgid "cluster domain"
msgstr "cluster domain"

#: backend/db_monitor/constants.py:76
msgid "有效"
msgstr "efficient"

#: backend/db_monitor/constants.py:77
msgid "监控目标已失效"
msgstr "Monitoring target has expired"

#: backend/db_monitor/constants.py:83
msgid "等于"
msgstr "equal"

#: backend/db_monitor/constants.py:84
msgid "不等于"
msgstr "not equal to"

#: backend/db_monitor/constants.py:85
msgid "小于"
msgstr "less than"

#: backend/db_monitor/constants.py:86
msgid "大于"
msgstr "greater than"

#: backend/db_monitor/constants.py:87
msgid "小于等于"
msgstr "less than or equal to"

#: backend/db_monitor/constants.py:88
msgid "大于等于"
msgstr "Greater than or equal to"

#: backend/db_monitor/constants.py:94
msgid "致命"
msgstr "fatal"

#: backend/db_monitor/constants.py:95
msgid "预警"
msgstr "early warning"

#: backend/db_monitor/constants.py:96
msgid "提醒"
msgstr "remind"

#: backend/db_monitor/constants.py:102
msgid "时序数据"
msgstr "Time series data"

#: backend/db_monitor/constants.py:103
msgid "事件数据"
msgstr "event data"

#: backend/db_monitor/constants.py:104
msgid "日志关键字"
msgstr "Log keyword"

#: backend/db_monitor/constants.py:110
msgid "阈值检测"
msgstr "threshold detection"

#: backend/db_monitor/constants.py:116
msgid "基于分派规则通知"
msgstr "Notification based on dispatch rules"

#: backend/db_monitor/constants.py:117
msgid "基于告警组直接通知"
msgstr "Direct notification based on alarm group"

#: backend/db_monitor/constants.py:177
msgid "平台级分派给业务"
msgstr "Platform level assignment to business"

#: backend/db_monitor/exceptions.py:19
msgid "监控异常"
msgstr "Monitoring anomalies"

#: backend/db_monitor/exceptions.py:24
msgid "内置告警组不允许删除"
msgstr "Built-in alarm groups are not allowed to be deleted"

#: backend/db_monitor/exceptions.py:29
msgid "监控策略保存失败"
msgstr "Monitoring policy failed to save"

#: backend/db_monitor/exceptions.py:30
#, python-brace-format
msgid "监控策略保存失败: {message}"
msgstr "Monitoring policy failed to save: {message}"

#: backend/db_monitor/exceptions.py:35
msgid "监控策略删除失败"
msgstr "Monitoring policy deletion failed"

#: backend/db_monitor/exceptions.py:36
#, python-brace-format
msgid "监控策略删除失败: {message}"
msgstr "Monitoring policy deletion failed: {message}"

#: backend/db_monitor/exceptions.py:41
msgid "故障自愈异常"
msgstr "Fault self-healing exception"

#: backend/db_monitor/exceptions.py:42
#, python-brace-format
msgid "故障自愈异常: {message}"
msgstr "Fault self-healing exception: {message}"

#: backend/db_monitor/mock_data.py:21
msgid "群机器人"
msgstr "swarm robots"

#: backend/db_monitor/mock_data.py:26
msgid "产品人员"
msgstr "product people"

#: backend/db_monitor/mock_data.py:27
msgid "测试人员"
msgstr "tester"

#: backend/db_monitor/mock_data.py:28
msgid "开发人员"
msgstr "Developer"

#: backend/db_monitor/mock_data.py:29
msgid "主负责人"
msgstr "Main person in charge"

#: backend/db_monitor/mock_data.py:30
msgid "备份负责人"
msgstr "Backup person in charge"

#: backend/db_monitor/mock_data.py:111
msgid "自定义告警组名称"
msgstr "Custom alarm group name"

#: backend/db_monitor/mock_data.py:128
msgid "新建告警组1"
msgstr "Create new alarm group 1"

#: backend/db_monitor/mock_data.py:134
msgid "新建告警组2"
msgstr "Create new alarm group 2"

#: backend/db_monitor/mock_data.py:141
msgid "更新告警组"
msgstr "Update alarm group"

#: backend/db_monitor/mock_data.py:143
msgid "策略 A"
msgstr "Strategy A"

#: backend/db_monitor/mock_data.py:143
msgid "策略 B"
msgstr "Strategy B"

#: backend/db_monitor/mock_data.py:146
msgid "周末轮值"
msgstr "weekend duty"

#: backend/db_monitor/mock_data.py:164
msgid "固定排班"
msgstr "Fixed shift"

#: backend/db_monitor/mock_data.py:223
msgid "mysql 周末轮值 告警组"
msgstr "mysql weekend rotation alarm group"

#: backend/db_monitor/models/alarm.py:56 backend/db_monitor/models/alarm.py:342
#: backend/db_monitor/models/alarm.py:360
#: backend/db_monitor/models/alarm.py:393
#: backend/db_monitor/models/alarm.py:516
#: backend/db_monitor/models/collect.py:41
msgid "业务ID, 0代表全业务"
msgstr "Business ID, 0 means full business"

#: backend/db_monitor/models/alarm.py:57
msgid "告警通知组名称"
msgstr "Alarm notification group name"

#: backend/db_monitor/models/alarm.py:58
msgid "监控通知组ID"
msgstr "Monitoring notification group ID"

#: backend/db_monitor/models/alarm.py:59 backend/db_monitor/models/alarm.py:239
msgid "监控轮值规则 ID"
msgstr "Monitoring duty rule ID"

#: backend/db_monitor/models/alarm.py:61
msgid "告警接收人员/组列表"
msgstr "Alarm recipient/group list"

#: backend/db_monitor/models/alarm.py:62
msgid "通知方式详情"
msgstr "Notification method details"

#: backend/db_monitor/models/alarm.py:63
msgid "是否内置"
msgstr "Is it built-in"

#: backend/db_monitor/models/alarm.py:64 backend/db_monitor/models/alarm.py:400
#: backend/db_monitor/models/alarm.py:603
#: backend/db_monitor/models/collect.py:69
msgid "最近一次的同步时间"
msgstr "Last sync time"

#: backend/db_monitor/models/alarm.py:65
msgid "自动同步DBA人员配置"
msgstr "Automatic synchronization of DBA personnel configuration"

#: backend/db_monitor/models/alarm.py:68
msgid "告警通知组(NoticeGroup)"
msgstr "Alarm notification group (NoticeGroup)"

#: backend/db_monitor/models/alarm.py:238
msgid "轮值规则名称"
msgstr "Rotation rule name"

#: backend/db_monitor/models/alarm.py:240
msgid "优先级"
msgstr "priority"

#: backend/db_monitor/models/alarm.py:242
msgid "生效时间"
msgstr "Effective time"

#: backend/db_monitor/models/alarm.py:243
msgid "截止时间"
msgstr "Deadline"

#: backend/db_monitor/models/alarm.py:244
msgid "轮值类型"
msgstr "Rotation type"

#: backend/db_monitor/models/alarm.py:246
msgid "轮值人员设置"
msgstr "Rotation staff settings"

#: backend/db_monitor/models/alarm.py:336
msgid "轮值规则(DutyRule)"
msgstr "DutyRule"

#: backend/db_monitor/models/alarm.py:343
#: backend/db_monitor/models/alarm.py:363
msgid "监控策略ID"
msgstr "Monitoring Policy ID"

#: backend/db_monitor/models/alarm.py:345
msgid "策略名称监控侧要求唯一"
msgstr "The policy name on the monitoring side must be unique"

#: backend/db_monitor/models/alarm.py:347
#: backend/db_monitor/models/alarm.py:367
#: backend/db_monitor/models/alarm.py:519
#: backend/db_monitor/models/collect.py:45 backend/db_package/filters.py:21
#: backend/iam_app/dataclass/resources.py:192
msgid "DB类型"
msgstr "DB type"

#: backend/db_monitor/models/alarm.py:350
msgid "模板详情"
msgstr "Template details"

#: backend/db_monitor/models/alarm.py:354
msgid "告警策略模板"
msgstr "Alert Policy Template"

#: backend/db_monitor/models/alarm.py:362
msgid "监控模板ID"
msgstr "Monitoring Template ID"

#: backend/db_monitor/models/alarm.py:365
msgid "策略名称"
msgstr "policy name"

#: backend/db_monitor/models/alarm.py:370
msgid "实例详情"
msgstr "Instance details"

#: backend/db_monitor/models/alarm.py:387
msgid "告警策略实例"
msgstr "Alert Policy Example"

#: backend/db_monitor/models/alarm.py:394
msgid "蓝鲸监控分派策略组ID"
msgstr "Blue Whale Monitoring Distribution Policy Group ID"

#: backend/db_monitor/models/alarm.py:397
msgid "策略模板详情"
msgstr "Policy template details"

#: backend/db_monitor/models/alarm.py:398
#: backend/db_services/dbpermission/db_account/serializers.py:96
#: backend/db_services/dbpermission/db_account/serializers.py:109
#: backend/db_services/dbpermission/db_authorize/serializers.py:98
msgid "规则列表"
msgstr "rule list"

#: backend/db_monitor/models/alarm.py:403
msgid "分派策略组"
msgstr "Assignment strategy group"

#: backend/db_monitor/models/alarm.py:480
msgid "DBM平台规则_勿动_{}"
msgstr "DBM platform rules_don’t move_{}"

#: backend/db_monitor/models/alarm.py:512
msgid "父级策略ID，0代表父级"
msgstr "Parent policy ID, 0 represents the parent"

#: backend/db_monitor/models/alarm.py:513
msgid "父级策略模板详情，可用于还原"
msgstr "Parent policy template details, available for restore"

#: backend/db_monitor/models/alarm.py:515
#: backend/db_monitor/models/collect.py:43
msgid "策略名称，全局唯一"
msgstr "Policy name, globally unique"

#: backend/db_monitor/models/alarm.py:522
msgid "当前策略详情，可用于patch"
msgstr "Current policy details, available for patching"

#: backend/db_monitor/models/alarm.py:523
msgid "监控指标名"
msgstr "Monitoring indicator name"

#: backend/db_monitor/models/alarm.py:560
msgid "监控目标"
msgstr "Monitoring target"

#: backend/db_monitor/models/alarm.py:562
msgid "监控目标级别，跟随targets调整"
msgstr "Monitor target levels and adjust according to targets"

#: backend/db_monitor/models/alarm.py:567
msgid "监控策略优先级，跟随targets调整"
msgstr "Monitoring strategy priority, adjusted according to targets"

#: backend/db_monitor/models/alarm.py:568
msgid "监控目标检索冗余字段"
msgstr "Monitor target retrieval redundant fields"

#: backend/db_monitor/models/alarm.py:571
msgid "自定义过滤列表"
msgstr "Custom filter list"

#: backend/db_monitor/models/alarm.py:591
msgid "检测规则"
msgstr "Detection rules"

#: backend/db_monitor/models/alarm.py:594
msgid "通知规则"
msgstr "notification rules"

#: backend/db_monitor/models/alarm.py:596
msgid "通知组"
msgstr "notification group"

#: backend/db_monitor/models/alarm.py:600
msgid "是否已启用"
msgstr "Is it enabled"

#: backend/db_monitor/models/alarm.py:604
msgid "告警事件数量，初始值设置为-1"
msgstr "The number of alarm events, the initial value is set to -1"

#: backend/db_monitor/models/alarm.py:608
msgid "策略状态"
msgstr "Policy status"

#: backend/db_monitor/models/alarm.py:614
msgid "蓝鲸监控策略ID"
msgstr "Blue Whale Monitoring Policy ID"

#: backend/db_monitor/models/alarm.py:617
#: backend/db_monitor/models/collect.py:51
#: backend/db_services/bigdata/influxdb/query.py:35
#: backend/db_services/bigdata/resources/query.py:43
msgid "版本"
msgstr "Version"

#: backend/db_monitor/models/alarm.py:620
msgid "告警数据来源"
msgstr "Alarm data source"

#: backend/db_monitor/models/alarm.py:627
msgid "告警策略(MonitorPolicy)"
msgstr "Alarm policy (MonitorPolicy)"

#: backend/db_monitor/models/collect.py:42
msgid "插件ID"
msgstr "Plug-in ID"

#: backend/db_monitor/models/collect.py:47
msgid "绑定machine"
msgstr "Bind machine"

#: backend/db_monitor/models/collect.py:48
#: backend/db_monitor/models/dashboard.py:33 backend/db_proxy/models.py:57
#: backend/db_proxy/views/cloud/serializers.py:21
#: backend/db_report/views/meta_check_view.py:72
#: backend/db_report/views/mysqlbackup_check_view.py:68
#: backend/db_report/views/redis_dbmeta_check_view.py:67
#: backend/db_report/views/redisbackup_check_view.py:72
msgid "详情"
msgstr "details"

#: backend/db_monitor/models/collect.py:55
#: backend/db_monitor/models/collect.py:60
msgid "采集策略模板"
msgstr "Collection policy template"

#: backend/db_monitor/models/collect.py:66
msgid "监控插件模板ID"
msgstr "Monitoring plug-in template ID"

#: backend/db_monitor/models/collect.py:67
msgid "监控采集策略ID"
msgstr "Monitoring collection policy ID"

#: backend/db_monitor/models/collect.py:163
msgid "采集策略实例"
msgstr "Examples of Collection Strategies"

#: backend/db_monitor/models/dashboard.py:28 backend/ticket/serializers.py:246
msgid "名称"
msgstr "name"

#: backend/db_monitor/models/dashboard.py:29
msgid "视图类型"
msgstr "view type"

#: backend/db_monitor/models/dashboard.py:34
msgid "变量"
msgstr "variable"

#: backend/db_monitor/models/dashboard.py:37
msgid "grafana-org_id"
msgstr "grafana-org_id"

#: backend/db_monitor/models/dashboard.py:38
msgid "grafana-org_name"
msgstr "grafana-org_name"

#: backend/db_monitor/models/dashboard.py:39
msgid "grafana-uid"
msgstr "grafana-uid"

#: backend/db_monitor/models/dashboard.py:40
msgid "grafana-url"
msgstr "grafana-url"

#: backend/db_monitor/models/dashboard.py:43
msgid "仪表盘"
msgstr "dash board"

#: backend/db_monitor/serializers.py:33
#: backend/db_services/bigdata/resources/serializers.py:17
#: backend/db_services/cmdb/serializers.py:81
#: backend/db_services/dbbase/cluster/serializers.py:55
#: backend/db_services/dbbase/resources/serializers.py:104
#: backend/db_services/dbbase/resources/serializers.py:120
#: backend/db_services/dbbase/serializers.py:172
#: backend/db_services/dbresource/serializers.py:332
#: backend/db_services/mysql/cluster/serializers.py:32
#: backend/db_services/mysql/fixpoint_rollback/serializers.py:23
#: backend/db_services/mysql/fixpoint_rollback/serializers.py:43
#: backend/db_services/mysql/fixpoint_rollback/serializers.py:61
#: backend/db_services/mysql/remote_service/serializers.py:61
#: backend/db_services/mysql/remote_service/serializers.py:77
#: backend/db_services/mysql/remote_service/serializers.py:93
#: backend/db_services/partition/serializers.py:49
#: backend/db_services/partition/serializers.py:131
#: backend/db_services/partition/serializers.py:144
#: backend/db_services/redis/autofix/models.py:36
#: backend/db_services/redis/autofix/models.py:52
#: backend/db_services/redis/autofix/models.py:81
#: backend/db_services/redis/toolbox/serializers.py:218
#: backend/db_services/redis/toolbox/serializers.py:224
#: backend/db_services/sqlserver/cluster/serializers.py:17
#: backend/db_services/sqlserver/cluster/serializers.py:28
#: backend/db_services/sqlserver/cluster/serializers.py:45
#: backend/db_services/sqlserver/cluster/serializers.py:56
#: backend/db_services/sqlserver/rollback/serializers.py:26
#: backend/db_services/sqlserver/rollback/serializers.py:36
#: backend/db_services/sqlserver/rollback/serializers.py:46
#: backend/db_services/sqlserver/rollback/serializers.py:72
#: backend/ticket/builders/common/bigdata.py:69
#: backend/ticket/builders/mongodb/mongo_add_mongos.py:31
#: backend/ticket/builders/mongodb/mongo_add_shard_nodes.py:33
#: backend/ticket/builders/mongodb/mongo_backup.py:35
#: backend/ticket/builders/mongodb/mongo_cutoff.py:39
#: backend/ticket/builders/mongodb/mongo_full_backup.py:24
#: backend/ticket/builders/mongodb/mongo_instance_reload.py:27
#: backend/ticket/builders/mongodb/mongo_reduce_mongos.py:29
#: backend/ticket/builders/mongodb/mongo_reduce_shard_nodes.py:28
#: backend/ticket/builders/mongodb/mongo_scale_updown.py:36
#: backend/ticket/builders/mongodb/mongo_shard_apply.py:36
#: backend/ticket/builders/mysql/base.py:165
#: backend/ticket/builders/mysql/mysql_checksum.py:44
#: backend/ticket/builders/mysql/mysql_data_repair.py:26
#: backend/ticket/builders/mysql/mysql_dump_data.py:29
#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:33
#: backend/ticket/builders/mysql/mysql_flashback.py:33
#: backend/ticket/builders/mysql/mysql_ha_backup.py:27
#: backend/ticket/builders/mysql/mysql_ha_clear.py:29
#: backend/ticket/builders/mysql/mysql_ha_full_backup.py:28
#: backend/ticket/builders/mysql/mysql_ha_rename.py:30
#: backend/ticket/builders/mysql/mysql_partition.py:47
#: backend/ticket/builders/mysql/mysql_restore_local_slave.py:27
#: backend/ticket/builders/redis/base.py:35
#: backend/ticket/builders/redis/redis_cluster_rename_domain.py:30
#: backend/ticket/builders/redis/redis_toolbox_autofix.py:37
#: backend/ticket/builders/redis/redis_toolbox_data_copy.py:44
#: backend/ticket/builders/redis/redis_toolbox_data_copy.py:45
#: backend/ticket/builders/redis/redis_toolbox_data_copy.py:50
#: backend/ticket/builders/redis/redis_toolbox_data_copy.py:59
#: backend/ticket/builders/redis/redis_toolbox_data_copy.py:64
#: backend/ticket/builders/redis/redis_toolbox_data_copy.py:65
#: backend/ticket/builders/redis/redis_toolbox_datastruct_task_delete.py:30
#: backend/ticket/builders/redis/redis_toolbox_fixpoint_make.py:34
#: backend/ticket/builders/redis/redis_toolbox_instance_shutdown.py:29
#: backend/ticket/builders/redis/redis_toolbox_proxy_scale_down.py:27
#: backend/ticket/builders/redis/redis_toolbox_proxy_scale_up.py:31
#: backend/ticket/builders/redis/redis_toolbox_redis_scale_updown.py:42
#: backend/ticket/builders/redis/redis_toolbox_shard_update.py:46
#: backend/ticket/builders/redis/redis_toolbox_type_update.py:47
#: backend/ticket/builders/riak/riak_reboot.py:29
#: backend/ticket/builders/riak/riak_shrink.py:29
#: backend/ticket/builders/sqlserver/sqlserver_backup.py:27
#: backend/ticket/builders/sqlserver/sqlserver_build_db_sync_for_autofix.py:41
#: backend/ticket/builders/sqlserver/sqlserver_clear.py:25
#: backend/ticket/builders/sqlserver/sqlserver_dbrename.py:28
#: backend/ticket/builders/sqlserver/sqlserver_reset.py:26
#: backend/ticket/builders/sqlserver/sqlserver_restore_local_slave.py:26
#: backend/ticket/builders/tbinlogdumper/dumper_switch.py:31
#: backend/ticket/builders/tendbcluster/tendb_backup.py:25
#: backend/ticket/builders/tendbcluster/tendb_checksum.py:56
#: backend/ticket/builders/tendbcluster/tendb_fixpoint_rollback.py:42
#: backend/ticket/builders/tendbcluster/tendb_full_backup.py:26
#: backend/ticket/builders/tendbcluster/tendb_master_slave_switch.py:29
#: backend/ticket/builders/tendbcluster/tendb_mnt_apply.py:24
#: backend/ticket/builders/tendbcluster/tendb_mnt_destroy.py:23
#: backend/ticket/builders/tendbcluster/tendb_node_reblance.py:31
#: backend/ticket/builders/tendbcluster/tendb_restore_local_slave.py:31
#: backend/ticket/builders/tendbcluster/tendb_restore_slave.py:31
#: backend/ticket/builders/tendbcluster/tendb_spider_add_nodes.py:29
#: backend/ticket/builders/tendbcluster/tendb_spider_reduce_nodes.py:25
#: backend/ticket/builders/tendbcluster/tendb_spider_slave_apply.py:30
#: backend/ticket/models/ticket.py:326 backend/ticket/serializers.py:274
msgid "集群ID"
msgstr "Cluster ID"

#: backend/db_monitor/serializers.py:34
#: backend/db_services/ipchooser/serializers/base.py:49
msgid "节点实例ID"
msgstr "Node instance ID"

#: backend/db_monitor/serializers.py:38
msgid "监控仪表盘地址"
msgstr "Monitoring Dashboard Address"

#: backend/db_monitor/serializers.py:109
msgid "策略ID : {} AND 状态 : {}"
msgstr "Policy ID: {} AND Status: {}"

#: backend/db_monitor/serializers.py:109
msgid "未恢复"
msgstr "Not restored"

#: backend/db_monitor/serializers.py:194
msgid "请确认告警目标包含当前业务"
msgstr "Please confirm that the alarm target contains the current business"

#: backend/db_monitor/serializers.py:231
msgid "告警事件"
msgstr "Alarm event"

#: backend/db_monitor/serializers.py:232
#: backend/iam_app/dataclass/actions.py:1622
#: backend/iam_app/dataclass/actions.py:1634
#: backend/iam_app/dataclass/actions.py:1646
#: backend/iam_app/dataclass/actions.py:1658
#: backend/iam_app/dataclass/actions.py:1670
#: backend/iam_app/dataclass/actions.py:1682
#: backend/iam_app/dataclass/actions.py:1694
#: backend/iam_app/dataclass/actions.py:1706
#: backend/iam_app/dataclass/resources.py:551
msgid "监控策略"
msgstr "Monitoring strategy"

#: backend/db_monitor/serializers.py:233
msgid "最新异常点信息"
msgstr "Latest abnormal point information"

#: backend/db_monitor/serializers.py:236
msgid "告警负责人"
msgstr "Alarm person in charge"

#: backend/db_monitor/serializers.py:237
msgid "回调消息体"
msgstr "callback message body"

#: backend/db_monitor/serializers.py:255
msgid "未匹配到对应的故障自愈处理单据，请确认是否配置正确"
msgstr "The corresponding fault self-healing processing document is not matched. Please confirm whether the configuration is correct."

#: backend/db_monitor/views/duty_rule.py:29
msgid "告警轮值规则"
msgstr "Alarm rotation rules"

#: backend/db_monitor/views/duty_rule.py:39
msgid "新建轮值规则"
msgstr "Create a new rotation rule"

#: backend/db_monitor/views/duty_rule.py:44
msgid "获取轮值规则"
msgstr "Get rotation rules"

#: backend/db_monitor/views/duty_rule.py:49
msgid "更新轮值规则"
msgstr "Update rotation rules"

#: backend/db_monitor/views/duty_rule.py:55
msgid "部分更新轮值规则"
msgstr "Partial update of rotation rules"

#: backend/db_monitor/views/duty_rule.py:107
msgid "轮值规则优先级统计"
msgstr "Rotation rule priority statistics"

#: backend/db_monitor/views/grafana.py:36
msgid "查询内嵌仪表盘地址"
msgstr "Query the address of the embedded dashboard"

#: backend/db_monitor/views/notice_group.py:32
msgid "监控告警组"
msgstr "Monitor alarm group"

#: backend/db_monitor/views/notice_group.py:37
msgid "查询监控告警组列表"
msgstr "Query monitoring alarm group list"

#: backend/db_monitor/views/notice_group.py:42
msgid "新建监控告警组"
msgstr "Create a new monitoring and alarm group"

#: backend/db_monitor/views/notice_group.py:47
msgid "获取监控告警组"
msgstr "Get monitoring alarm group"

#: backend/db_monitor/views/notice_group.py:52
msgid "更新监控告警组"
msgstr "Update monitoring alarm group"

#: backend/db_monitor/views/notice_group.py:57
msgid "删除监控告警组"
msgstr "Delete monitoring alarm group"

#: backend/db_monitor/views/notice_group.py:134
msgid "查询告警组名称"
msgstr "Query the alarm group name"

#: backend/db_monitor/views/notice_group.py:140
msgid "获取默认告警组名称"
msgstr "Get the default alarm group name"

#: backend/db_monitor/views/policy.py:47
msgid "策略名"
msgstr "Strategy name"

#: backend/db_monitor/views/policy.py:48
#: backend/db_services/bigdata/influxdb/query.py:39
#: backend/db_services/bigdata/resources/query.py:47
#: backend/db_services/dbconfig/serializers.py:67
#: backend/db_services/redis/resources/redis_cluster/query.py:67
msgid "更新人"
msgstr "updater"

#: backend/db_monitor/views/policy.py:51
msgid "目标关键字检索"
msgstr "Target keyword search"

#: backend/db_monitor/views/policy.py:64
#: backend/iam_app/dataclass/actions.py:1562
#: backend/iam_app/dataclass/actions.py:1574
#: backend/iam_app/dataclass/actions.py:1586
#: backend/iam_app/dataclass/actions.py:1598
#: backend/iam_app/dataclass/actions.py:1610
#: backend/iam_app/dataclass/resources.py:622
msgid "告警组"
msgstr "Alarm group"

#: backend/db_monitor/views/policy.py:98
msgid "获取策略列表"
msgstr "Get policy list"

#: backend/db_monitor/views/policy.py:106
msgid "获取策略详情"
msgstr "Get policy details"

#: backend/db_monitor/views/policy.py:117
msgid "删除策略"
msgstr "Delete policy"

#: backend/db_monitor/views/policy.py:197
msgid "启用策略"
msgstr "enable policy"

#: backend/db_monitor/views/policy.py:206
msgid "停用策略"
msgstr "Deactivation policy"

#: backend/db_monitor/views/policy.py:215
msgid "克隆策略"
msgstr "cloning strategy"

#: backend/db_monitor/views/policy.py:224
msgid "更新策略"
msgstr "update strategy"

#: backend/db_monitor/views/policy.py:242
msgid "根据db类型查询集群列表"
msgstr "Query cluster list based on db type"

#: backend/db_monitor/views/policy.py:271
msgid "根据db类型查询模块列表"
msgstr "Query module list based on db type"

#: backend/db_monitor/views/policy.py:292
msgid "告警策略回调（处理套餐、故障自愈）"
msgstr "Alarm policy callback (processing package, fault self-healing)"

#: backend/db_package/constants.py:26
msgid "用户定义"
msgstr "user defined"

#: backend/db_package/constants.py:27
msgid "系统内置"
msgstr "system built-in"

#: backend/db_package/exceptions.py:18
msgid "介质"
msgstr "medium"

#: backend/db_package/exceptions.py:23
msgid "介质包不存在"
msgstr "Media pack does not exist"

#: backend/db_package/exceptions.py:24
#, python-brace-format
msgid "{version}-{pkg_type}-{db_type}介质包不存在"
msgstr "{version}-{pkg_type}-{db_type} media package does not exist"

#: backend/db_package/filters.py:20
msgid "介质类型"
msgstr "media type"

#: backend/db_package/models.py:27
#: backend/ticket/builders/mongodb/mongo_script_exec.py:28
msgid "文件名"
msgstr "file name"

#: backend/db_package/models.py:29
msgid "安装包类型"
msgstr "Package type"

#: backend/db_package/models.py:31 backend/db_package/serializers.py:33
msgid "存储类型"
msgstr "storage type"

#: backend/db_package/models.py:33
msgid "包路径"
msgstr "package path"

#: backend/db_package/models.py:34
msgid "包大小"
msgstr "packet size"

#: backend/db_package/models.py:35
msgid "md5值"
msgstr "md5 value"

#: backend/db_package/models.py:37
msgid "允许的业务列表"
msgstr "Allowed Business List"

#: backend/db_package/models.py:38
msgid "安装包模式"
msgstr "package mode"

#: backend/db_package/models.py:39
msgid "文件优先级(目前只用作区分是否为默认版本)"
msgstr "File priority (currently only used to distinguish whether it is the default version)"

#: backend/db_package/models.py:46
msgid "介质包（Package）"
msgstr "Media package (Package)"

#: backend/db_package/serializers.py:30
msgid "版本包"
msgstr "version package"

#: backend/db_package/serializers.py:31
#: backend/db_services/dbconfig/serializers.py:40
#: backend/db_services/dbconfig/serializers.py:52
#: backend/db_services/dbconfig/serializers.py:65
#: backend/db_services/dbconfig/serializers.py:87
#: backend/db_services/version/serializers.py:26
#: backend/ticket/builders/mysql/mysql_single_apply.py:65
#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:64
#: backend/ticket/builders/tendbcluster/tendb_apply.py:51
msgid "数据库版本"
msgstr "database version"

#: backend/db_package/serializers.py:32 backend/db_package/serializers.py:40
msgid "包类型"
msgstr "package type"

#: backend/db_package/serializers.py:46
msgid "介质同步信息"
msgstr "Media synchronization information"

#: backend/db_package/serializers.py:52
#: backend/db_services/version/serializers.py:21
msgid "查询关键字"
msgstr "query keywords"

#: backend/db_package/views.py:71
msgid "新建版本文件"
msgstr "New version file"

#: backend/db_package/views.py:78
msgid "同步制品库的文件信息(适用于medium初始化)"
msgstr "Synchronize file information of product library (applicable to medium initialization)"

#: backend/db_package/views.py:110
msgid "查询版本文件列表"
msgstr "Query version file list"

#: backend/db_package/views.py:122
msgid "查询组件安装包类型"
msgstr "Query component installation package type"

#: backend/db_package/views.py:130
msgid "查询组件安装包列表"
msgstr "Query component installation package list"

#: backend/db_package/views.py:139
msgid "请保证过滤类型是[{}]安装包类型"
msgstr "Please ensure that the filtering type is [{}] installation package type"

#: backend/db_package/views.py:151
msgid "更新版本文件属性"
msgstr "Update version file properties"

#: backend/db_package/views.py:166
msgid "删除版本文件"
msgstr "delete version file"

#: backend/db_package/views.py:177
#: backend/db_proxy/views/bkrepo/serializers.py:18
msgid "上传文件"
msgstr "upload files"

#: backend/db_periodic_task/constants.py:24
msgid "远程 API 周期任务"
msgstr "Remote API periodic tasks"

#: backend/db_periodic_task/constants.py:25
msgid "本地函数周期任务"
msgstr "Local function periodic task"

#: backend/db_periodic_task/constants.py:29
msgid "告警恢复时"
msgstr "When the alarm is restored"

#: backend/db_periodic_task/constants.py:30
msgid "告警触发时"
msgstr "When the alarm is triggered"

#: backend/db_periodic_task/constants.py:31
msgid "告警关闭时"
msgstr "When the alarm is turned off"

#: backend/db_periodic_task/constants.py:32
msgid "告警确认时"
msgstr "When the alarm is confirmed"

#: backend/db_periodic_task/constants.py:33
msgid "无数据告警"
msgstr "No data alarm"

#: backend/db_periodic_task/local_tasks/check_checksum.py:85
#: backend/ticket/tasks/ticket_tasks.py:123
msgid "无法在dbm meta中查询到集群{}的相关信息，请排查该集群的状态"
msgstr ""
"The relevant information of the cluster {} cannot be queried in dbm meta, "
"please check the status of the cluster"

#: backend/db_periodic_task/local_tasks/check_checksum.py:143
msgid "数据不一致"
msgstr "Data is inconsistent"

#: backend/db_periodic_task/local_tasks/check_checksum.py:148
msgid "近2天未校验"
msgstr "Not verified in the past 2 days"

#: backend/db_periodic_task/local_tasks/check_checksum.py:150
msgid ";近2天未校验"
msgstr ";Not verified in the past 2 days"

#: backend/db_periodic_task/local_tasks/db_meta/db_meta_check/check_cluster_topo.py:32
msgid "有 {} 个接入层实例"
msgstr "There are {} access layer instances"

#: backend/db_periodic_task/local_tasks/db_meta/db_meta_check/check_cluster_topo.py:35
msgid "有 {} 个存储层实例"
msgstr "There are {} storage layer instances"

#: backend/db_periodic_task/local_tasks/db_meta/db_meta_check/check_cluster_topo.py:45
msgid "实例 {} ({}-{}-{}) 与集群类型不匹配"
msgstr "Instance {} ({}-{}-{}) does not match cluster type"

#: backend/db_periodic_task/local_tasks/db_meta/db_meta_check/check_instance_belong.py:31
msgid "{} 属于 {} 个集群"
msgstr "{} belongs to {} clusters"

#: backend/db_periodic_task/local_tasks/db_meta/db_meta_check/check_instance_belong.py:33
msgid "{} 不属于任何集群"
msgstr "{} does not belong to any cluster"

#: backend/db_periodic_task/local_tasks/db_meta/db_meta_check/check_redis_instance.py:63
msgid "cluster:{} now had proxies[{}] < 2"
msgstr "cluster:{} now had proxies[{}] < 2"

#: backend/db_periodic_task/local_tasks/db_meta/db_meta_check/check_redis_instance.py:82
msgid "集群{}的master：{} 获取slave失败"
msgstr "Master of cluster {}: {} failed to obtain slave"

#: backend/db_periodic_task/local_tasks/db_meta/db_meta_check/check_redis_instance.py:84
msgid "集群{}的master{}get slave_obj failed"
msgstr "Master{} of cluster{}get slave_obj failed"

#: backend/db_periodic_task/local_tasks/db_meta/db_meta_check/check_redis_instance.py:89
msgid "unsupport mutil slave with cluster {} 4:{}"
msgstr "unsupport mutil slave with cluster {} 4:{}"

#: backend/db_periodic_task/local_tasks/db_meta/db_meta_check/check_redis_instance.py:98
msgid "集群{}的master实例：{} 没有slave"
msgstr "Master instance of cluster {}: {} has no slave"

#: backend/db_periodic_task/local_tasks/db_meta/db_meta_check/check_redis_instance.py:107
msgid "集群{}的slave：{} 获取master失败"
msgstr "Slave of cluster {}: {} failed to obtain master"

#: backend/db_periodic_task/local_tasks/db_meta/db_meta_check/check_redis_instance.py:109
msgid "集群{}的slave{} get master_obj failed"
msgstr "slave{} of cluster{} get master_obj failed"

#: backend/db_periodic_task/local_tasks/db_meta/db_meta_check/check_redis_instance.py:114
msgid "unsupport mutil master with cluster {} 4:{}"
msgstr "unsupport mutil master with cluster {} 4:{}"

#: backend/db_periodic_task/local_tasks/db_meta/db_meta_check/check_redis_instance.py:123
msgid "集群{}的slave实例：{} 没有master"
msgstr "Slave instance of cluster {}: {} has no master"

#: backend/db_periodic_task/local_tasks/db_meta/db_meta_check/check_redis_instance.py:152
msgid "集群{}的实例:{}实例状态异常:{}"
msgstr "Instance of cluster {}: {} Instance status abnormal: {}"

#: backend/db_periodic_task/local_tasks/db_meta/db_meta_check/check_replicate_role.py:39
msgid "{} {} 不能作为同步 ejector"
msgstr "{} {} cannot be used as a synchronized ejector"

#: backend/db_periodic_task/local_tasks/db_meta/db_meta_check/check_replicate_role.py:59
msgid "{} {} 不能作为同步 receiver"
msgstr "{} {} cannot be used as a synchronization receiver"

#: backend/db_periodic_task/local_tasks/db_proxy.py:56
msgid "nginx机器{}当前agent异常，跳过文件下发。请管理员检查机器运行状态"
msgstr "The current agent of nginx machine {} is abnormal and file delivery is skipped. Ask the administrator to check the running status of the machine"

#: backend/db_periodic_task/local_tasks/db_proxy.py:66
msgid "nginx配置文件下发参数：{}"
msgstr "nginx configuration file delivery parameters: {}"

#: backend/db_periodic_task/local_tasks/db_proxy.py:69
msgid "下发文件job启动失败，错误信息: {}"
msgstr "The file delivery job failed to start, error message: {}"

#: backend/db_periodic_task/local_tasks/db_proxy.py:98
msgid "集群类型：{} 的nginx配置文件不存在，跳过对该nginx配置的下发"
msgstr ""
"Cluster type: The nginx configuration file of {} does not exist, skip the "
"distribution of the nginx configuration"

#: backend/db_periodic_task/local_tasks/dbmon_heartbeat/heartbeat_report.py:146
msgid "+===+++++=== missing_heartbeat_ips 实例:{}  +++++===++++ "
msgstr "+====++++++=== missing_heartbeat_ips Example: {} +++++===++++"

#: backend/db_periodic_task/local_tasks/dbmon_heartbeat/heartbeat_report.py:192
msgid "实例 {} dbmon 心跳超时"
msgstr "Instance{} dbmon heartbeat timeout"

#: backend/db_periodic_task/local_tasks/dbmon_heartbeat/heartbeat_report.py:207
msgid "+===+++++=== 实例 {} dbmon 心跳超时  +++++===++++ "
msgstr "+====++++++=== Example{} dbmon heartbeat timeout++++====++++"

#: backend/db_periodic_task/local_tasks/mysql_check_partition.py:37
msgid "分区服务check_log接口异常: {}"
msgstr "Partition service check_log interface exception: {}"

#: backend/db_periodic_task/local_tasks/mysql_check_partition.py:41
#: backend/db_periodic_task/local_tasks/mysql_check_partition.py:43
msgid "未执行"
msgstr "Not executed"

#: backend/db_periodic_task/local_tasks/mysql_check_partition.py:42
#: backend/db_periodic_task/local_tasks/mysql_check_partition.py:44
#: backend/db_services/redis/autofix/models.py:73 backend/flow/consts.py:683
#: backend/flow/plugins/components/collections/mysql/authorize_rules.py:98
#: backend/ticket/constants.py:80 backend/ticket/constants.py:92
msgid "失败"
msgstr "fail"

#: backend/db_periodic_task/local_tasks/mysql_check_partition.py:47
msgid "环境变量MYSQL_CHATID未设置"
msgstr "Environment variable MYSQL_CHATID is not set"

#: backend/db_periodic_task/local_tasks/mysql_check_partition.py:50
msgid "环境变量WECOM_ROBOT未设置"
msgstr "Environment variable WECOM_ROBOT is not set"

#: backend/db_periodic_task/local_tasks/mysql_check_partition.py:58
msgid ""
"【DBM】分区表异常情况 {} \n"
"业务名称 bk_biz_id DB类型 失败/未执行 数量 DBA\n"
msgstr "[DBM] Partition table exception {} \nBusiness name bk_biz_id DB type failed/unexecuted number DBA\n{}"

#: backend/db_periodic_task/local_tasks/mysql_check_partition.py:80
msgid "{}{}   {}   {}   {}   {}   <@{}>\n"
msgstr "{}{}   {}   {}   {}   {}   <@{}>\n"

#: backend/db_periodic_task/local_tasks/redis_backup/bklog_query.py:84
#: backend/db_periodic_task/local_tasks/redis_backup/check_full_backup.py:118
#: backend/db_services/redis/rollback/handlers.py:138
msgid "无法查找到在时间范围内{}-{}，集群{}的全备份日志"
msgstr "Unable to find the full backup log of cluster {} in the time range {}-{}"

#: backend/db_periodic_task/local_tasks/redis_backup/bklog_query.py:115
msgid "无法查找到在时间范围内{}-{}，集群{}的binlog备份日志"
msgstr "Unable to find the binlog backup log of cluster {} in the time range {}-{}"

#: backend/db_periodic_task/local_tasks/redis_backup/check_binlog_backup.py:96
msgid "无法查找到在时间范围内{}-{}，集群{}：{}的binlog备份日志"
msgstr "Unable to find the binlog backup log in the time range {}-{}, cluster {}:{}"

#: backend/db_periodic_task/local_tasks/redis_backup/check_binlog_backup.py:100
msgid "+===+++++===  {} 集群{} 实例维度日志不为空 +++++===++++ "
msgstr "+====++++++=== {} cluster{} instance dimension log is not empty++++====++++"

#: backend/db_periodic_task/local_tasks/redis_backup/check_binlog_backup.py:125
#: backend/db_periodic_task/local_tasks/redis_backup/check_binlog_backup.py:139
#: backend/db_services/redis/rollback/handlers.py:247
#: backend/db_services/redis/rollback/handlers.py:268
msgid ""
"重复/缺失的binlog共{}个,重复/缺失的binlog index是:{},详细信息请查看error日志"
msgstr "There are {} duplicate/missing binlogs in total. The duplicate/missing binlog index is: {}. Please check the error log for details."

#: backend/db_periodic_task/local_tasks/redis_backup/check_binlog_backup.py:145
msgid "+===+++++=== {} binlog 序号连续 +++++===++++ "
msgstr "+====++++++=== {} binlog serial numbers are consecutive++++++===++++"

#: backend/db_periodic_task/local_tasks/redis_backup/check_binlog_backup.py:152
msgid "+===++=== 实例{}binlog备份失败，集群类型{}写入表 ++++++++ "
msgstr "+====++=== Instance {} binlog backup failed, cluster type {} is written to the table ++++++++"

#: backend/db_periodic_task/local_tasks/redis_backup/check_binlog_backup.py:198
msgid "文件序号重复: {}"
msgstr "Duplicate file serial number: {}"

#: backend/db_periodic_task/local_tasks/redis_backup/check_binlog_backup.py:199
msgid "文件重复: {}"
msgstr "Duplicate file: {}"

#: backend/db_periodic_task/local_tasks/redis_backup/check_binlog_backup.py:203
msgid "缺失时打印排序后的当前文件:{}和上一个文件: {}"
msgstr "If missing, print the sorted current file: {} and previous file: {}"

#: backend/db_periodic_task/local_tasks/redis_backup/check_binlog_backup.py:210
#: backend/db_services/redis/rollback/handlers.py:316
msgid "缺少的文件序号: {}"
msgstr "Missing file number: {}"

#: backend/db_periodic_task/local_tasks/redis_backup/check_full_backup.py:124
msgid "+===+++++===  {} 集群维度日志不为空 +++++===++++ "
msgstr "+====++++++=== {} Cluster dimension log is not empty++++===++++"

#: backend/db_periodic_task/local_tasks/redis_backup/check_full_backup.py:146
msgid "+===++==={}正常备份次数{}，集群类型{} ++++++++ "
msgstr "+====++==={}Normal backup times{}, cluster type{} ++++++++"

#: backend/db_periodic_task/local_tasks/redis_backup/check_full_backup.py:172
msgid "+===++===  实例{}全备份失败，集群类型{}写入表 ++++++++ "
msgstr "+====++==== Instance {} full backup failed, cluster type {} is written to the table ++++++++"

#: backend/db_periodic_task/local_tasks/redis_backup/check_rollback_time_backup.py:82
#: backend/db_periodic_task/local_tasks/redis_backup/check_rollback_time_backup.py:100
#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:925
#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:944
msgid "获取实例 {}:{} 的binlog备份信息失败"
msgstr "Failed to obtain binlog backup information of instance {}:{}"

#: backend/db_periodic_task/local_tasks/redis_backup/check_rollback_time_backup.py:85
msgid "get_instance_backupfile instance_full_backupfile: {}"
msgstr "get_instance_backupfile instance_full_backupfile: {}"

#: backend/db_periodic_task/local_tasks/redis_backup/check_rollback_time_backup.py:118
#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:513
msgid "redis_data_structure_flow cluster_type: {}"
msgstr "redis_data_structure_flow cluster_type: {}"

#: backend/db_periodic_task/local_tasks/redis_clusternodes_update/task.py:118
#: backend/db_periodic_task/local_tasks/redis_clusternodes_update/task.py:166
msgid "根据上报的immute_domain找不到对应的集群"
msgstr "The corresponding cluster cannot be found based on the reported immute_domain."

#: backend/db_periodic_task/local_tasks/redis_clusternodes_update/task.py:141
msgid "集群:{} 存在'{}({})'的单据正在执行"
msgstr "Cluster: {} The document with &#39;{}({})&#39; is being executed"

#: backend/db_periodic_task/local_tasks/redis_clusternodes_update/task.py:212
msgid "{}:{} 状态变成了不可用\n"
msgstr "{}:{} status changed to unavailable\n"

#: backend/db_periodic_task/local_tasks/redis_clusternodes_update/task.py:219
msgid "域名{} 删除 {} 记录成功"
msgstr "Domain name {} deleted {} record successfully"

#: backend/db_periodic_task/local_tasks/redis_clusternodes_update/task.py:222
msgid "域名{} 删除 {} 记录失败,{}"
msgstr "Domain name {} failed to delete {} record, {}"

#: backend/db_periodic_task/local_tasks/redis_clusternodes_update/task.py:225
msgid "{}:{} 状态变成了可用\n"
msgstr "{}:{} status changed to available\n"

#: backend/db_periodic_task/local_tasks/redis_clusternodes_update/task.py:232
msgid "域名{} 新增 {} 记录成功"
msgstr "Domain name {} added {} recorded successfully"

#: backend/db_periodic_task/local_tasks/redis_clusternodes_update/task.py:235
msgid "域名{} 新增 {} 记录失败,{}"
msgstr "Domain name {} added {} record failed, {}"

#: backend/db_periodic_task/local_tasks/redis_clusternodes_update/task.py:257
msgid "slave:{} 变成了master\n"
msgstr "slave:{} becomes master\n"

#: backend/db_periodic_task/local_tasks/redis_clusternodes_update/task.py:277
msgid "master:{} 变成了slave\n"
msgstr "master:{} becomes slave\n"

#: backend/db_periodic_task/local_tasks/redis_clusternodes_update/task.py:288
msgid ""
"master:{} 变成了slave,但是其master({}:{})不在集群meta数据中,所以不做处理\n"
msgstr "master:{} has become a slave, but its master ({}:{}) is not in the cluster meta data, so it is not processed\n"

#: backend/db_periodic_task/local_tasks/redis_clusternodes_update/task.py:314
msgid ""
"master:{} 变成了disconnected状态,其slave:{}变成了master,现将old_master变成其"
"slave,便于发起自愈\n"
msgstr "master:{} has become disconnected, and its slave:{} has become master. Now old_master has become its slave to facilitate self-healing\n"

#: backend/db_periodic_task/local_tasks/redis_clusternodes_update/task.py:390
msgid "存在机器:{} 所有实例均变成了unrunning状态,发起自愈流程\n"
msgstr "Existing machine: {} All instances have become unrunning status and the self-healing process is initiated\n"

#: backend/db_periodic_task/local_tasks/redis_clusternodes_update/task.py:411
msgid "开始更新集群:{} 元数据"
msgstr "Start updating cluster:{} metadata"

#: backend/db_periodic_task/local_tasks/redis_clusternodes_update/task.py:426
msgid "master:{} 和 slave:{} 主从状态和关系都没变,不做处理\n"
msgstr "master:{} and slave:{} The master-slave status and relationship have not changed and will not be processed\n"

#: backend/db_periodic_task/local_tasks/redis_clusternodes_update/task.py:444
msgid "处理异常,{}"
msgstr "Handling exceptions,{}"

#: backend/db_periodic_task/models.py:32
msgid "周期任务名称"
msgstr "Periodic task name"

#: backend/db_periodic_task/models.py:33
msgid "celery 周期任务实例"
msgstr "celery periodic task instance"

#: backend/db_periodic_task/models.py:34
msgid "任务类型"
msgstr "Task type"

#: backend/db_periodic_task/models.py:35
msgid "人工冻结此任务，将不受更新影响"
msgstr "This task is artificially frozen and will not be affected by updates."

#: backend/db_periodic_task/models.py:40
msgid "周期任务(PeriodicTask)"
msgstr "PeriodicTask"

#: backend/db_proxy/constants.py:19
msgid "透传服务(proxypass)"
msgstr "Transparent transmission service (proxypass)"

#: backend/db_proxy/constants.py:32
msgid "nginx 转发服务"
msgstr "nginx forwarding service"

#: backend/db_proxy/constants.py:33
msgid "域名解析服务"
msgstr "Domain name resolution service"

#: backend/db_proxy/constants.py:34
msgid "SQL 远程执行服务"
msgstr "SQL Remote Execution Service"

#: backend/db_proxy/constants.py:35
msgid "数据库高可用服务"
msgstr "Database high availability service"

#: backend/db_proxy/constants.py:36
msgid "Redis DTS服务"
msgstr "Redis DTS service"

#: backend/db_proxy/constants.py:50
msgid "kibana-ES管理端"
msgstr "kibana-ES management terminal"

#: backend/db_proxy/constants.py:51
msgid "kafka_manager-Kafka管理端"
msgstr "kafka_manager-Kafka management terminal"

#: backend/db_proxy/constants.py:52
msgid "haproxy-HDFS管理端"
msgstr "haproxy-HDFS management terminal"

#: backend/db_proxy/constants.py:53
msgid "pulsar_manager管理端"
msgstr "pulsar_manager management terminal"

#: backend/db_proxy/constants.py:59
msgid "user"
msgstr "user"

#: backend/db_proxy/constants.py:60
msgid "pwd"
msgstr "pwd"

#: backend/db_proxy/constants.py:61
msgid "webconsole_user"
msgstr "webconsole_user"

#: backend/db_proxy/constants.py:62
msgid "webconsole_pwd"
msgstr "webconsole_pwd"

#: backend/db_proxy/models.py:31
msgid "代理内部地址"
msgstr "proxy internal address"

#: backend/db_proxy/models.py:32
msgid "代理外部地址"
msgstr "proxy external address"

#: backend/db_proxy/models.py:35
msgid "云区域代理（DBCloudProxy）"
msgstr "Cloud region proxy (DBCloudProxy)"

#: backend/db_proxy/models.py:50 backend/db_proxy/views/cloud/serializers.py:20
msgid "扩展类型"
msgstr "extension type"

#: backend/db_proxy/models.py:55
msgid "服务状态"
msgstr "service status"

#: backend/db_proxy/models.py:60
msgid "云区域组件扩展（DBExtension）"
msgstr "Cloud Zone Component Extension (DBExtension)"

#: backend/db_proxy/models.py:134
msgid ""
"在业务{}下已经存在同种配置的服务组件记录，请检查是否在同一业务下部署了同名的"
"集群"
msgstr "There are already service component records of the same configuration under business {}. Please check whether a cluster with the same name is deployed under the same business."

#: backend/db_proxy/models.py:145
msgid "部署机器ip"
msgstr "deployment machine ip"

#: backend/db_proxy/models.py:146
msgid "部署机器port"
msgstr "Deployment machine port"

#: backend/db_proxy/models.py:147 backend/db_services/dbbase/serializers.py:121
msgid "服务类型"
msgstr "Service type"

#: backend/db_proxy/models.py:148
#: backend/db_proxy/views/db_meta/serializers.py:107
#: backend/db_proxy/views/db_meta/serializers.py:117
#: backend/db_services/bigdata/resources/query.py:38
#: backend/db_services/dbbase/serializers.py:28
#: backend/db_services/dbpermission/db_authorize/serializers.py:27
#: backend/db_services/mongodb/permission/db_authorize/serializers.py:25
#: backend/db_services/mysql/resources/tendbcluster/query.py:40
#: backend/db_services/mysql/resources/tendbha/query.py:34
#: backend/db_services/mysql/resources/tendbsingle/query.py:32
#: backend/db_services/quick_search/constants.py:17
#: backend/db_services/redis/redis_dts/serializers.py:26
#: backend/db_services/redis/resources/redis_cluster/query.py:58
#: backend/db_services/redis/slots_migrate/models/slots_migration_record.py:19
#: backend/db_services/sqlserver/permission/db_authorize/serializers.py:25
#: backend/db_services/sqlserver/resources/sqlserver_ha/query.py:31
#: backend/db_services/sqlserver/resources/sqlserver_single/query.py:31
#: backend/ticket/builders/tendbcluster/tendb_apply.py:32
msgid "集群名"
msgstr "cluster name"

#: backend/db_proxy/models.py:155
msgid "是否刷新(该条记录是否执行)"
msgstr "Whether to refresh (whether the record is executed)"

#: backend/db_proxy/models.py:156
msgid "是否删除"
msgstr "delete or not"

#: backend/db_proxy/models.py:157
msgid "服务访问地址"
msgstr "Service access address"

#: backend/db_proxy/models.py:163
msgid "集群扩展服务（ClusterExtension）"
msgstr "Cluster extension service (ClusterExtension)"

#: backend/db_proxy/views/bkrepo/views.py:31
msgid "[bkrepo]上传文件"
msgstr "[bkrepo] Upload files"

#: backend/db_proxy/views/cloud/views.py:36
msgid "[容器化]写入云区域组件记录"
msgstr "[Containerization] Write cloud zone component records"

#: backend/db_proxy/views/cloud/views.py:125
msgid "[容器化]获取云区域nginx子配置文件"
msgstr "[Containerization] Get cloud zone nginx sub-configuration file"

#: backend/db_proxy/views/db_meta/serializers.py:20
msgid "逻辑城市ID列表"
msgstr "List of Logical City IDs"

#: backend/db_proxy/views/db_meta/serializers.py:23
msgid "地址列表"
msgstr "address list"

#: backend/db_proxy/views/db_meta/serializers.py:26
msgid "状态列表"
msgstr "status list"

#: backend/db_proxy/views/db_meta/serializers.py:40
msgid "哈希分片数"
msgstr "Number of hash shards"

#: backend/db_proxy/views/db_meta/serializers.py:41
msgid "哈希分片值"
msgstr "Hash shard value"

#: backend/db_proxy/views/db_meta/serializers.py:58
msgid "角色交换信息列表"
msgstr "List of role exchange information"

#: backend/db_proxy/views/db_meta/serializers.py:66
#: backend/ticket/builders/mongodb/mongo_instance_reload.py:29
msgid "实例Port"
msgstr "Instance Port"

#: backend/db_proxy/views/db_meta/serializers.py:70
msgid "domain信息"
msgstr "domain information"

#: backend/db_proxy/views/db_meta/serializers.py:72
msgid "tendis-swap的payload信息"
msgstr "Payload information of tendis-swap"

#: backend/db_proxy/views/db_meta/serializers.py:83
msgid "更新状态的信息列表"
msgstr "List of updated status information"

#: backend/db_proxy/views/db_meta/serializers.py:89
msgid "查询的domain列表"
msgstr "Query domain list"

#: backend/db_proxy/views/db_meta/serializers.py:93
msgid "查询的Hosts列表"
msgstr "Query Hosts list"

#: backend/db_proxy/views/db_meta/serializers.py:97
msgid "查询的集群IDs"
msgstr "Cluster IDs to query"

#: backend/db_proxy/views/db_meta/serializers.py:101
msgid "逻辑城市名称"
msgstr "logical city name"

#: backend/db_proxy/views/db_meta/serializers.py:105
#: backend/db_services/mysql/resources/tendbsingle/query.py:34
#: backend/db_services/quick_search/constants.py:19
#: backend/ticket/handler.py:89
msgid "实例"
msgstr "instance"

#: backend/db_proxy/views/db_meta/serializers.py:106
#: backend/db_proxy/views/dumper/serializers.py:26
#: backend/db_report/views/dbmon_heartbeat_view.py:53
#: backend/db_report/views/mysqlbackup_check_view.py:53
#: backend/db_report/views/redis_dbmeta_check_view.py:52
#: backend/db_report/views/redisbackup_check_view.py:52
#: backend/db_services/dbbase/serializers.py:40
#: backend/db_services/mongodb/restore/serializers.py:38
#: backend/db_services/mysql/cluster/serializers.py:33
#: backend/db_services/mysql/permission/clone/serializers.py:27
#: backend/db_services/partition/serializers.py:27
#: backend/db_services/quick_search/constants.py:18
#: backend/db_services/redis/autofix/models.py:54
#: backend/db_services/redis/autofix/models.py:83
#: backend/db_services/redis/maxmemory_set/models/tb_tendis_maxmemory_backends.py:26
#: backend/db_services/redis/rollback/views.py:35
#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:29
#: backend/ticket/builders/mysql/mysql_partition.py:49
#: backend/ticket/filters.py:21
msgid "集群域名"
msgstr "Cluster domain name"

#: backend/db_proxy/views/db_meta/serializers.py:109
#: backend/db_proxy/views/db_meta/serializers.py:119
#: backend/db_services/cmdb/serializers.py:80
#: backend/db_services/meta_import/serializers.py:58
#: backend/db_services/meta_import/serializers.py:89
#: backend/db_services/meta_import/serializers.py:117
#: backend/dbm_tools/management/commands/fix_process_ip.py:26
#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:33
#: backend/ticket/builders/spider/metadata_import.py:33
#: backend/ticket/builders/tendbsingle/metadata_import.py:32
msgid "模块ID"
msgstr "module ID"

#: backend/db_proxy/views/db_meta/serializers.py:113
msgid "代理列表"
msgstr "proxy list"

#: backend/db_proxy/views/db_meta/serializers.py:114
#: backend/db_proxy/views/db_meta/serializers.py:125
msgid "master实例"
msgstr "master instance"

#: backend/db_proxy/views/db_meta/serializers.py:115
#: backend/db_proxy/views/db_meta/serializers.py:126
msgid "slave实例"
msgstr "slave instance"

#: backend/db_proxy/views/db_meta/serializers.py:116
#: backend/db_proxy/views/db_meta/serializers.py:127
#: backend/db_services/bigdata/resources/query.py:42
#: backend/db_services/cluster_entry/serializers.py:22
#: backend/db_services/dbbase/resources/serializers.py:101
#: backend/db_services/redis/resources/redis_cluster/query.py:61
#: backend/flow/consts.py:1085
#: backend/ticket/builders/mysql/mysql_partition_cron.py:29
#: backend/ticket/builders/tendbcluster/tendb_partition_cron.py:30
msgid "域名"
msgstr "domain name"

#: backend/db_proxy/views/db_meta/serializers.py:120
msgid "从库域名"
msgstr "Slave domain name"

#: backend/db_proxy/views/db_meta/serializers.py:124
#: backend/ticket/builders/redis/redis_toolbox_autofix.py:39
#: backend/ticket/builders/redis/redis_toolbox_cut_off.py:36
#: backend/ticket/builders/redis/redis_toolbox_instance_shutdown.py:32
msgid "proxy列表"
msgstr "proxy list"

#: backend/db_proxy/views/db_meta/serializers.py:128
msgid "slave域名"
msgstr "slave domain name"

#: backend/db_proxy/views/db_meta/serializers.py:134
#: backend/db_proxy/views/db_meta/serializers.py:139
#: backend/db_proxy/views/dns/serializers.py:45
#: backend/db_proxy/views/dns/serializers.py:92
#: backend/ticket/builders/mysql/mysql_single_apply.py:61
#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:60
msgid "域名列表"
msgstr "domain name list"

#: backend/db_proxy/views/db_meta/serializers.py:143
#: backend/db_services/bigdata/resources/serializers.py:19
#: backend/db_services/redis/toolbox/serializers.py:186
#: backend/ticket/builders/mysql/mysql_partition.py:38
msgid "ip"
msgstr "ip"

#: backend/db_proxy/views/db_meta/serializers.py:144
#: backend/ticket/builders/mysql/mysql_partition.py:39
msgid "port"
msgstr "port"

#: backend/db_proxy/views/db_meta/serializers.py:145
msgid "bk_cloud_id"
msgstr "bk_cloud_id"

#: backend/db_proxy/views/db_meta/views.py:48
msgid "[dbmeta]过滤实例列表"
msgstr "[dbmeta] filter instance list"

#: backend/db_proxy/views/db_meta/views.py:59
msgid "[dbmeta]实例角色交换"
msgstr "[dbmeta] instance role swap"

#: backend/db_proxy/views/db_meta/views.py:69
msgid "[dbmeta]sqlserver实例角色交换"
msgstr "[dbmeta]sqlserver instance role exchange"

#: backend/db_proxy/views/db_meta/views.py:84
msgid "[dbmeta]tendis集群交换"
msgstr "[dbmeta] Tendis Cluster Exchange"

#: backend/db_proxy/views/db_meta/views.py:99
msgid "[dbmeta]状态更新"
msgstr "[dbmeta] status update"

#: backend/db_proxy/views/db_meta/views.py:111
msgid "[dbmeta]查询entry信息"
msgstr "[dbmeta] query entry information"

#: backend/db_proxy/views/db_meta/views.py:123
msgid "[dbmeta]根据逻辑城市查询具体城市名称"
msgstr "[dbmeta] Query the specific city name according to the logical city"

#: backend/db_proxy/views/db_meta/views.py:136
msgid "[dbmeta]构建测试单节点集群数据"
msgstr "[dbmeta] Build and test single-node cluster data"

#: backend/db_proxy/views/db_meta/views.py:153
msgid "[dbmeta]构建测试高可用集群数据"
msgstr "[dbmeta] Build and test high-availability cluster data"

#: backend/db_proxy/views/db_meta/views.py:171
msgid "[dbmeta]查询主机信息"
msgstr "[dbmeta] query host information"

#: backend/db_proxy/views/db_meta/views.py:187
msgid "[dbmeta]查询redis集群信息"
msgstr "[dbmeta] Query redis cluster information"

#: backend/db_proxy/views/db_meta/views.py:203
msgid "[dbmeta]fake重置dbha集群"
msgstr "[dbmeta] fake reset dbha cluster"

#: backend/db_proxy/views/db_meta/views.py:220
msgid "[dbmeta]priv_manager根据域名查询集群信息"
msgstr "[dbmeta]priv_manager queries cluster information based on domain name"

#: backend/db_proxy/views/db_meta/views.py:239
msgid "[dbmeta]priv_manager查询tendbsingle集群实例信息"
msgstr "[dbmeta]priv_manager queries tendbsingle cluster instance information"

#: backend/db_proxy/views/db_meta/views.py:255
msgid "[dbmeta]priv_manager查询tendbha集群实例信息"
msgstr "[dbmeta]priv_manager queries tendbha cluster instance information"

#: backend/db_proxy/views/db_meta/views.py:271
msgid "[dbmeta]priv_manager查询tendbcluster集群实例信息"
msgstr "[dbmeta]priv_manager queries tendbcluster cluster instance information"

#: backend/db_proxy/views/db_meta/views.py:287
msgid "[dbmeta]priv_manager查询SqlserverHA集群信息"
msgstr "[dbmeta]priv_manager queries SqlserverHA cluster information"

#: backend/db_proxy/views/db_meta/views.py:306
msgid "[dbmeta]priv_manager查询SqlserverSingle集群信息"
msgstr "[dbmeta]priv_manager queries SqlserverSingle cluster information"

#: backend/db_proxy/views/db_remote_service/serializers.py:19
#: backend/db_proxy/views/dbpriv/serializers.py:29
#: backend/db_proxy/views/dns/serializers.py:42
#: backend/db_proxy/views/dns/serializers.py:86
#: backend/db_services/dbbase/cluster/serializers.py:42
#: backend/db_services/redis/autofix/models.py:56
#: backend/ticket/builders/common/bigdata.py:229
#: backend/ticket/builders/common/bigdata.py:307
msgid "实例列表"
msgstr "instance list"

#: backend/db_proxy/views/db_remote_service/serializers.py:20
msgid "SQL命令列表"
msgstr "List of SQL commands"

#: backend/db_proxy/views/db_remote_service/serializers.py:21
#: backend/ticket/builders/mysql/mysql_dump_data.py:37
#: backend/ticket/builders/mysql/mysql_flashback.py:46
#: backend/ticket/builders/mysql/mysql_ha_clear.py:35
#: backend/ticket/builders/mysql/mysql_ha_rename.py:36
#: backend/ticket/builders/mysql/mysql_openarea.py:50
#: backend/ticket/builders/mysql/mysql_restore_local_slave.py:31
#: backend/ticket/builders/redis/redis_toolbox_master_slave_switch.py:61
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:45
#: backend/ticket/builders/tendbcluster/tendb_restore_local_slave.py:35
msgid "是否强制执行"
msgstr "Whether to enforce"

#: backend/db_proxy/views/db_remote_service/views.py:30
msgid "[db-remote-service]SQL远程执行"
msgstr "[db-remote-service] SQL remote execution"

#: backend/db_proxy/views/db_remote_service/views.py:41
msgid "[db-remote-service]Proxy SQL远程执行"
msgstr "[db-remote-service] Proxy SQL remote execution"

#: backend/db_proxy/views/db_remote_service/views.py:52
msgid "[db-remote-service]sqlserver SQL远程执行"
msgstr "[db-remote-service]sqlserver SQL remote execution"

#: backend/db_proxy/views/dbconfig/serializers.py:22
msgid ""
"conf_file 可以是,号分隔的多个文件名，返回结果是一个按照配置文件名组合的一个 "
"list"
msgstr ""
"conf_file can be multiple file names separated by , and the return result is "
"a list combined according to the configuration file name"

#: backend/db_proxy/views/dbconfig/serializers.py:24
msgid ""
"指定要查询的 conf_name， 多个值以,分隔，为空表示查询该 conf_file 的所有"
"conf_name"
msgstr ""
"Specify the conf_name to be queried, multiple values ​​are separated by , and "
"empty means to query all conf_names of the conf_file"

#: backend/db_proxy/views/dbconfig/serializers.py:29
#: backend/db_services/dbconfig/serializers.py:21
#: backend/db_services/redis/maxmemory_set/models/tb_tendis_maxmemory_config.py:31
msgid "配置类型"
msgstr "configuration type"

#: backend/db_proxy/views/dbconfig/serializers.py:30
msgid "format格式"
msgstr "format format"

#: backend/db_proxy/views/dbconfig/serializers.py:31
msgid "上层级信息"
msgstr "upper level information"

#: backend/db_proxy/views/dbconfig/serializers.py:32
msgid "配置层级名"
msgstr "Configuration level name"

#: backend/db_proxy/views/dbconfig/serializers.py:33
msgid "配置层级值"
msgstr "configuration level value"

#: backend/db_proxy/views/dbconfig/serializers.py:34
#: backend/db_proxy/views/dbconfig/serializers.py:52
msgid "命名空间，一般指DB类型"
msgstr "Namespace, generally refers to the DB type"

#: backend/db_proxy/views/dbconfig/serializers.py:44
msgid ""
"配置文件名，一般配置类型与配置文件一一对应，但如 mysql 5.6, 5.7 两个版本同属 "
"dbconf 配置，所以有 MySQL-5.5, MySQL-5.6 两个配置文件"
msgstr ""
"Configuration file name, the general configuration type corresponds to the "
"configuration file one by one, but for example, the two versions of mysql "
"5.6 and 5.7 belong to the dbconf configuration, so there are two "
"configuration files of MySQL-5.5 and MySQL-5.6"

#: backend/db_proxy/views/dbconfig/serializers.py:46
msgid "指定要查询的 conf_name，目前仅支持一个"
msgstr "Specify the conf_name to query, currently only one is supported"

#: backend/db_proxy/views/dbconfig/serializers.py:47
msgid "配置类型，如 dbconf,backup"
msgstr "Configuration type, such as dbconf, backup"

#: backend/db_proxy/views/dbconfig/serializers.py:48
msgid "level name"
msgstr "level name"

#: backend/db_proxy/views/dbconfig/serializers.py:50
msgid "level value列表"
msgstr "level value list"

#: backend/db_proxy/views/dbconfig/views.py:35
msgid "[dbconfig]查询配置项列表"
msgstr "[dbconfig] query configuration item list"

#: backend/db_proxy/views/dbconfig/views.py:48
msgid "[dbconfig]批量获取多个对象的某一配置项"
msgstr ""
"[dbconfig] Get a certain configuration item of multiple objects in batches"

#: backend/db_proxy/views/dbpriv/serializers.py:23
msgid "云区域id，如果传入ip、port也要传入bk_cloud_id"
msgstr "Cloud area id. If you pass in IP and port, you must also pass in bk_cloud_id."

#: backend/db_proxy/views/dbpriv/serializers.py:26
msgid "用户名称"
msgstr "Username"

#: backend/db_proxy/views/dbpriv/serializers.py:27
msgid "组件，比如mysql、redis、tbinlogdumper等"
msgstr "Components, such as mysql, redis, tbinlogdumper, etc."

#: backend/db_proxy/views/dbpriv/serializers.py:30
msgid "信息列表"
msgstr "Information list"

#: backend/db_proxy/views/dbpriv/views.py:30
msgid "[dbpriv]获取proxy密码"
msgstr "[dbpriv] Get proxy password"

#: backend/db_proxy/views/dns/serializers.py:28
#: backend/db_proxy/views/dns/serializers.py:44
#: backend/db_proxy/views/dns/serializers.py:58
#: backend/db_proxy/views/dns/serializers.py:72
#: backend/db_proxy/views/dns/serializers.py:91
msgid "GCS业务英文缩写"
msgstr "GCS Business English Abbreviation"

#: backend/db_proxy/views/dns/serializers.py:29
msgid "查询的域名列表"
msgstr "List of domain names to query"

#: backend/db_proxy/views/dns/serializers.py:30
msgid "查询的IP列表"
msgstr "Query IP list"

#: backend/db_proxy/views/dns/serializers.py:31
msgid "返回数据列表字段"
msgstr "return data list field"

#: backend/db_proxy/views/dns/serializers.py:41
#: backend/db_proxy/views/dns/serializers.py:59
#: backend/db_proxy/views/dns/serializers.py:73
#: backend/db_proxy/views/dns/serializers.py:85
msgid "查询的域名"
msgstr "query domain name"

#: backend/db_proxy/views/dns/serializers.py:55
msgid "旧实例节点"
msgstr "old instance node"

#: backend/db_proxy/views/dns/serializers.py:56
msgid "新实例节点"
msgstr "new instance node"

#: backend/db_proxy/views/dns/serializers.py:60
msgid "修改数组"
msgstr "modify array"

#: backend/db_proxy/views/dns/serializers.py:70
msgid "新的实例节点"
msgstr "new instance node"

#: backend/db_proxy/views/dns/serializers.py:74
msgid "修改列列表"
msgstr "modify column list"

#: backend/db_proxy/views/dns/serializers.py:75
#: backend/db_report/views/redisbackup_check_view.py:57
msgid "实例节点"
msgstr "instance node"

#: backend/db_proxy/views/dns/serializers.py:87
msgid "管理者"
msgstr "manager"

#: backend/db_proxy/views/dns/serializers.py:88
msgid "域名备注信息"
msgstr "Domain Name Remarks"

#: backend/db_proxy/views/dns/serializers.py:89
msgid "域名类型"
msgstr "domain type"

#: backend/db_proxy/views/dns/views.py:30
msgid "[dns]获取所有ip、域名关系"
msgstr "[dns] Get all IP and domain name relationships"

#: backend/db_proxy/views/dns/views.py:46
msgid "[dns]获取域名映射关系"
msgstr "[dns] Get domain name mapping relationship"

#: backend/db_proxy/views/dns/views.py:59
msgid "[dns]批量更新域名映射关系"
msgstr "[dns] Batch update domain name mapping relationships"

#: backend/db_proxy/views/dns/views.py:75
msgid "[dns]更新域名映射关系"
msgstr "[dns] Update domain name mapping relationship"

#: backend/db_proxy/views/dns/views.py:88
msgid "[dns]删除域名映射"
msgstr "[dns]Delete domain name mapping"

#: backend/db_proxy/views/dns/views.py:104
msgid "[dns]新增域名映射关系"
msgstr "[dns] Add domain name mapping relationship"

#: backend/db_proxy/views/dumper/serializers.py:22
#: backend/ticket/builders/tbinlogdumper/dumper_switch.py:27
msgid "主机端口"
msgstr "host port"

#: backend/db_proxy/views/dumper/serializers.py:23
#: backend/ticket/builders/tbinlogdumper/dumper_switch.py:28
msgid "待切换后需要同步的binlog文件"
msgstr "Binlog files that need to be synchronized after switching"

#: backend/db_proxy/views/dumper/serializers.py:24
#: backend/ticket/builders/tbinlogdumper/dumper_switch.py:29
msgid "待切换后需要同步的binlog文件的为位点"
msgstr "The location of the binlog file that needs to be synchronized after switching is"

#: backend/db_proxy/views/dumper/serializers.py:27
#: backend/ticket/builders/tbinlogdumper/dumper_switch.py:32
msgid "dumper切换信息"
msgstr "dumper switching information"

#: backend/db_proxy/views/dumper/serializers.py:31
#: backend/ticket/builders/tbinlogdumper/dumper_switch.py:35
msgid "是否安全切换"
msgstr "Is it safe to switch?"

#: backend/db_proxy/views/dumper/views.py:34
msgid "[dumper]迁移"
msgstr "[dumper]migration"

#: backend/db_proxy/views/dumper/views.py:78
msgid "透传接口dumper迁移创建的单据"
msgstr "Documents created by transparent transmission interface dumper migration"

#: backend/db_proxy/views/hadb/serializers.py:19
msgid "名字"
msgstr "name"

#: backend/db_proxy/views/hadb/serializers.py:20
msgid "查询参数"
msgstr "query parameters"

#: backend/db_proxy/views/hadb/serializers.py:21
msgid "设置参数"
msgstr "Setting parameters"

#: backend/db_proxy/views/hadb/views.py:30
msgid "[hadb]上报和查询ha的探测切换日志"
msgstr "[hadb] Report and query ha detection switch log"

#: backend/db_proxy/views/hadb/views.py:40
msgid "[hadb]上报和查询数据库实例的状态"
msgstr "[hadb] Report and query the status of the database instance"

#: backend/db_proxy/views/hadb/views.py:50
msgid "[hadb]上报和查询ha服务的状态"
msgstr "[hadb] Report and query the status of ha service"

#: backend/db_proxy/views/hadb/views.py:60
msgid "[hadb]查询和上报切换队列"
msgstr "[hadb] Query and report switching queue"

#: backend/db_proxy/views/hadb/views.py:70
msgid "[hadb]查询和上报切换日志"
msgstr "[hadb] Query and report switching logs"

#: backend/db_proxy/views/hadb/views.py:80
msgid "[hadb]DBHA切换屏蔽配置"
msgstr "[hadb]DBHA switch shielding configuration"

#: backend/db_proxy/views/job_callback/serialiers.py:17
msgid "作业实例ID"
msgstr "job instance ID"

#: backend/db_proxy/views/job_callback/serialiers.py:18
msgid "作业状态码"
msgstr "job status code"

#: backend/db_proxy/views/job_callback/serialiers.py:19
msgid "步骤块中包含的各个步骤执行状态"
msgstr "Individual step execution status contained in the step block"

#: backend/db_proxy/views/job_callback/views.py:44
msgid "nginx文件下发job回调视图"
msgstr "nginx file delivery job callback view"

#: backend/db_proxy/views/job_callback/views.py:55
msgid "[{}]nginx配置文件下发失败"
msgstr "[{}]Failed to deliver nginx configuration file"

#: backend/db_proxy/views/job_callback/views.py:58
msgid "[{}]nginx配置文件下发成功"
msgstr "[{}]nginx configuration file delivered successfully"

#: backend/db_proxy/views/job_callback/views.py:62
msgid "[{}]nginx文件下发job信息缓存已过期，请考虑是否下发时间过长"
msgstr ""
"[{}] The job information cache of the nginx file delivery has expired, "
"please consider whether the delivery time is too long"

#: backend/db_proxy/views/job_callback/views.py:87
msgid "nginx重启参数：{}"
msgstr "nginx restart parameters: {}"

#: backend/db_proxy/views/job_callback/views.py:92
msgid "nginx重启失败，错误信息: {}"
msgstr "nginx restart failed, error message: {}"

#: backend/db_proxy/views/job_callback/views.py:97
msgid "nginx重启job回调视图"
msgstr "nginx restart job callback view"

#: backend/db_proxy/views/job_callback/views.py:106
msgid "[{}]nginx重启失败，请前往作业平台查看详情"
msgstr ""
"[{}]nginx failed to restart, please go to the operation platform to check "
"the details"

#: backend/db_proxy/views/job_callback/views.py:108
msgid "[{}]nginx重启成功"
msgstr "[{}]nginx restarted successfully"

#: backend/db_proxy/views/jobapi/serializers.py:20
msgid "主机ip"
msgstr "host ip"

#: backend/db_proxy/views/jobapi/serializers.py:24
#: backend/db_proxy/views/jobapi/serializers.py:48
msgid "执行脚本的主机ip列表"
msgstr "List of host ip to execute the script"

#: backend/db_proxy/views/jobapi/serializers.py:25
#: backend/ticket/builders/mongodb/mongo_script_exec.py:29
msgid "脚本内容"
msgstr "Script content"

#: backend/db_proxy/views/jobapi/serializers.py:26
msgid "脚本语言类型"
msgstr "scripting language type"

#: backend/db_proxy/views/jobapi/serializers.py:27
msgid "执行脚本的账号"
msgstr "The account that executes the script"

#: backend/db_proxy/views/jobapi/serializers.py:28
#: backend/db_proxy/views/jobapi/serializers.py:75
msgid "超时时间,单位秒"
msgstr "Timeout, in seconds"

#: backend/db_proxy/views/jobapi/serializers.py:37
#: backend/db_proxy/views/jobapi/serializers.py:46
msgid "任务实例ID"
msgstr "Task instance ID"

#: backend/db_proxy/views/jobapi/serializers.py:47
msgid "步骤实例ID"
msgstr "Step Instance ID"

#: backend/db_proxy/views/jobapi/serializers.py:59
msgid "源主机ip"
msgstr "source host ip"

#: backend/db_proxy/views/jobapi/serializers.py:60
msgid "源主机账号"
msgstr "source host account"

#: backend/db_proxy/views/jobapi/serializers.py:62
msgid "文件列表"
msgstr "File List"

#: backend/db_proxy/views/jobapi/serializers.py:69
msgid "目标主机ip"
msgstr "target host ip"

#: backend/db_proxy/views/jobapi/serializers.py:71
msgid "源文件列表"
msgstr "source file list"

#: backend/db_proxy/views/jobapi/serializers.py:72
msgid "目标账号"
msgstr "target account"

#: backend/db_proxy/views/jobapi/serializers.py:73
msgid "目标目录"
msgstr "target directory"

#: backend/db_proxy/views/jobapi/serializers.py:74
msgid "目标主机ip列表"
msgstr "target host ip list"

#: backend/db_proxy/views/jobapi/views.py:42
msgid "[jobapi]快速执行脚本"
msgstr "[jobapi] execute script quickly"

#: backend/db_proxy/views/jobapi/views.py:57
msgid "DBM 快速脚本执行"
msgstr "DBM Fast Script Execution"

#: backend/db_proxy/views/jobapi/views.py:69
msgid "[jobapi]查询任务执行状态"
msgstr "[jobapi] query task execution status"

#: backend/db_proxy/views/jobapi/views.py:91
#: backend/db_proxy/views/jobapi/views.py:114
msgid "[jobapi]查询任务执行日志"
msgstr "[jobapi] query task execution log"

#: backend/db_proxy/views/jobapi/views.py:136
msgid "DBM 快速文件分发"
msgstr "DBM Fast File Distribution"

#: backend/db_proxy/views/nameservice/serializers.py:18
#: backend/db_proxy/views/nameservice/serializers.py:25
msgid "中文区域名称"
msgstr "Chinese region name"

#: backend/db_proxy/views/nameservice/serializers.py:19
#: backend/db_proxy/views/nameservice/serializers.py:26
msgid "clb的id"
msgstr "clb&#39;s id"

#: backend/db_proxy/views/nameservice/serializers.py:20
#: backend/db_proxy/views/nameservice/serializers.py:27
msgid "clb监听器的id"
msgstr "The id of the clb listener"

#: backend/db_proxy/views/nameservice/serializers.py:21
msgid "需要解绑的后端主机端口数组"
msgstr "Array of backend host ports that need to be unbound"

#: backend/db_proxy/views/nameservice/serializers.py:31
#: backend/db_proxy/views/nameservice/serializers.py:35
msgid "北极星服务名称"
msgstr "Polaris service name"

#: backend/db_proxy/views/nameservice/serializers.py:36
msgid "北极星服务token"
msgstr "Polaris service token"

#: backend/db_proxy/views/nameservice/serializers.py:37
msgid "需要解绑的后端主机端口数组, 格式为“ip:port"
msgstr "An array of backend host ports to be unbound, in the format [ip:port]"

#: backend/db_proxy/views/nameservice/views.py:33
msgid "[name service]clb解绑部分后端主机"
msgstr "[name service]clb unbinds some backend hosts"

#: backend/db_proxy/views/nameservice/views.py:48
msgid "[name service]获取clb已绑定后端主机的IP"
msgstr "[name service] Obtain the IP of the backend host that clb is bound to"

#: backend/db_proxy/views/nameservice/views.py:63
msgid "[name service]获取polaris后端主机信息"
msgstr "[name service] Get polaris backend host information"

#: backend/db_proxy/views/nameservice/views.py:78
msgid "[name service]polaris解绑部分后端主机"
msgstr "[name service]polaris unbinds some backend hosts"

#: backend/db_proxy/views/redis_dts/serializers.py:18
#: backend/db_proxy/views/redis_dts/serializers.py:41
#: backend/db_proxy/views/redis_dts/serializers.py:50
#: backend/db_proxy/views/redis_dts/serializers.py:59
msgid "DTS_server IP"
msgstr "DTS_server IP"

#: backend/db_proxy/views/redis_dts/serializers.py:23
#: backend/db_proxy/views/redis_dts/serializers.py:29
#: backend/db_proxy/views/redis_dts/serializers.py:75
#: backend/db_proxy/views/redis_dts/serializers.py:81
#: backend/db_proxy/views/redis_dts/serializers.py:101
#: backend/db_services/mysql/dumper/filters.py:43
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:75
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_switch_backup.py:22
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:28
#: backend/db_services/redis/redis_dts/serializers.py:35
#: backend/db_services/redis/redis_dts/serializers.py:46
msgid "源集群"
msgstr "source cluster"

#: backend/db_proxy/views/redis_dts/serializers.py:24
#: backend/db_proxy/views/redis_dts/serializers.py:30
#: backend/db_proxy/views/redis_dts/serializers.py:76
#: backend/db_proxy/views/redis_dts/serializers.py:82
#: backend/db_proxy/views/redis_dts/serializers.py:103
#: backend/db_services/dbpermission/db_authorize/models.py:27
#: backend/db_services/dbpermission/db_authorize/serializers.py:27
#: backend/db_services/mongodb/permission/db_authorize/serializers.py:25
#: backend/db_services/mysql/open_area/serializers.py:66
#: backend/db_services/redis/redis_dts/serializers.py:36
#: backend/db_services/redis/redis_dts/serializers.py:48
#: backend/db_services/sqlserver/permission/db_authorize/serializers.py:25
msgid "目标集群"
msgstr "target cluster"

#: backend/db_proxy/views/redis_dts/serializers.py:34
msgid "锁key名"
msgstr "lock key name"

#: backend/db_proxy/views/redis_dts/serializers.py:35
msgid "锁持有者"
msgstr "lock holder"

#: backend/db_proxy/views/redis_dts/serializers.py:36
msgid "锁ttl时间(seconds)"
msgstr "Lock ttl time (seconds)"

#: backend/db_proxy/views/redis_dts/serializers.py:44
#: backend/db_proxy/views/redis_dts/serializers.py:53
#: backend/db_proxy/views/redis_dts/serializers.py:85
msgid "task类型列表"
msgstr "task type list"

#: backend/db_proxy/views/redis_dts/serializers.py:61
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:57
msgid "task类型"
msgstr "task type"

#: backend/db_proxy/views/redis_dts/serializers.py:62
msgid "限制条数"
msgstr "limit number"

#: backend/db_proxy/views/redis_dts/serializers.py:63
#: backend/db_services/redis/autofix/models.py:86
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:89
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:70
msgid "任务状态"
msgstr "task status"

#: backend/db_proxy/views/redis_dts/serializers.py:68
msgid "最大数据量"
msgstr "Maximum amount of data"

#: backend/db_proxy/views/redis_dts/serializers.py:69
#: backend/db_services/redis/redis_dts/models/tb_dts_server.py:20
#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:54
#: backend/ticket/builders/mongodb/mongo_shard_apply.py:50
#: backend/ticket/builders/mysql/mysql_single_apply.py:67
#: backend/ticket/builders/redis/redis_cluster_apply.py:36
#: backend/ticket/builders/redis/redis_instance_apply.py:51
#: backend/ticket/builders/riak/riak_apply.py:33
#: backend/ticket/builders/riak/riak_migrate.py:33
#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:66
#: backend/ticket/builders/tendbcluster/tendb_apply.py:53
msgid "城市名"
msgstr "city ​​name"

#: backend/db_proxy/views/redis_dts/serializers.py:83
msgid "源redis slave IP"
msgstr "Source redis slave IP"

#: backend/db_proxy/views/redis_dts/serializers.py:90
msgid "子任务ID"
msgstr "Subtask ID"

#: backend/db_proxy/views/redis_dts/serializers.py:95
#: backend/db_services/redis/redis_dts/serializers.py:41
msgid "子任务ID列表"
msgstr "List of subtask IDs"

#: backend/db_proxy/views/redis_dts/serializers.py:102
#: backend/db_services/redis/redis_dts/serializers.py:47
msgid "源集群密码"
msgstr "Source cluster password"

#: backend/db_proxy/views/redis_dts/serializers.py:104
#: backend/db_services/redis/redis_dts/serializers.py:49
msgid "目标集群密码"
msgstr "Target cluster password"

#: backend/db_proxy/views/redis_dts/serializers.py:108
#: backend/db_services/redis/redis_dts/serializers.py:53
msgid "数据复制类型"
msgstr "Data copy type"

#: backend/db_proxy/views/redis_dts/serializers.py:110
#: backend/db_services/redis/redis_dts/serializers.py:55
msgid "复制列表"
msgstr "Copy list"

#: backend/db_proxy/views/redis_dts/views.py:56
msgid "dtsserver是否在黑名单中"
msgstr "Is dtsserver in the blacklist"

#: backend/db_proxy/views/redis_dts/views.py:71
msgid "获取dts任务详情"
msgstr "Get dts task details"

#: backend/db_proxy/views/redis_dts/views.py:81
#: backend/db_services/redis/redis_dts/views.py:73
msgid "获取迁移任务task列表,失败的排在前面"
msgstr "Get the list of migration tasks, the failed ones are listed first"

#: backend/db_proxy/views/redis_dts/views.py:91
msgid "dts 分布式锁,trylock,成功返回True,失败返回False"
msgstr ""
"dts distributed lock, trylock, returns True on success, returns False on "
"failure"

#: backend/db_proxy/views/redis_dts/views.py:106
msgid "dts 分布式锁,unlock"
msgstr "dts distributed lock, unlock"

#: backend/db_proxy/views/redis_dts/views.py:121
msgid "获取dts server迁移中的任务"
msgstr "Get tasks in dts server migration"

#: backend/db_proxy/views/redis_dts/views.py:136
msgid "获取DtsServer上syncPort最大的task"
msgstr "Get the task with the largest syncPort on DtsServer"

#: backend/db_proxy/views/redis_dts/views.py:151
msgid "获取最近30天内task_type类型的等待执行的tasks"
msgstr ""
"Obtain the tasks waiting to be executed of the task_type type in the last 30 "
"days"

#: backend/db_proxy/views/redis_dts/views.py:166
msgid "获取最近30天内的等待调度的jobs"
msgstr "Get the jobs waiting to be scheduled in the last 30 days"

#: backend/db_proxy/views/redis_dts/views.py:181
#: backend/db_proxy/views/redis_dts/views.py:196
#: backend/db_proxy/views/redis_dts/views.py:211
msgid "获取一个job的所有待调度的tasks"
msgstr "Get all pending tasks of a job"

#: backend/db_proxy/views/redis_dts/views.py:226
msgid "批量更新dts_tasks"
msgstr "Batch update dts_tasks"

#: backend/db_proxy/views/redis_dts/views.py:238
msgid "redis 连接性测试"
msgstr "redis connectivity test"

#: backend/db_proxy/views/serialiers.py:24
msgid "调用的校验token"
msgstr "Call verification token"

#: backend/db_proxy/views/serialiers.py:25
msgid "请求服务所属的云区域ID"
msgstr "The ID of the cloud region to which the requested service belongs"

#: backend/db_report/enums/__init__.py:20
msgid "巡检报告"
msgstr "Inspection report"

#: backend/db_report/enums/__init__.py:24
msgid "文本渲染"
msgstr "text rendering"

#: backend/db_report/enums/__init__.py:25
msgid "状态渲染"
msgstr "state rendering"

#: backend/db_report/enums/__init__.py:27
msgid "数据校验失败详情渲染"
msgstr "Data verification failure details rendering"

#: backend/db_report/enums/dbmon_heartbeat_report_sub_type.py:17
msgid "TWEMPROXY"
msgstr "TWEMPROXY"

#: backend/db_report/enums/dbmon_heartbeat_report_sub_type.py:18
msgid "PREDIXY"
msgstr "PREDIXY"

#: backend/db_report/enums/dbmon_heartbeat_report_sub_type.py:19
msgid "REDIS_SSD"
msgstr "REDIS_SSD"

#: backend/db_report/enums/dbmon_heartbeat_report_sub_type.py:20
msgid "REDIS_CACHE"
msgstr "REDIS_CACHE"

#: backend/db_report/enums/dbmon_heartbeat_report_sub_type.py:21
msgid "TENDISPLUS"
msgstr "TENDISPLUS"

#: backend/db_report/enums/meta_check_sub_type.py:17
#: backend/db_report/views/meta_check_view.py:43
msgid "实例集群归属"
msgstr "Instance cluster ownership"

#: backend/db_report/enums/meta_check_sub_type.py:18
msgid "数据同步实例角色"
msgstr "Data synchronization instance role"

#: backend/db_report/enums/meta_check_sub_type.py:19
msgid "集群结构"
msgstr "cluster structure"

#: backend/db_report/enums/meta_check_sub_type.py:20
msgid "孤立的实例"
msgstr "isolated instance"

#: backend/db_report/enums/meta_check_sub_type.py:21
msgid "不属于RUNNING状态"
msgstr "Not in the RUNNING state"

#: backend/db_report/enums/mysqlbackup_check_sub_type.py:17
msgid "集群可用全备"
msgstr "The cluster is fully available"

#: backend/db_report/enums/mysqlbackup_check_sub_type.py:18
msgid "主库binlog备份"
msgstr "Main library binlog backup"

#: backend/db_report/enums/mysqlbackup_check_sub_type.py:19
msgid "binlog连续性检查"
msgstr "binlog continuity check"

#: backend/db_report/enums/redisbackup_check_sub_type.py:17
msgid "集群全备"
msgstr "Cluster fully prepared"

#: backend/db_report/enums/redisbackup_check_sub_type.py:18
msgid "从库binlog备份"
msgstr "Backup from library binlog"

#: backend/db_report/models/checksum_check_report.py:21
#: backend/db_services/dbbase/resources/query.py:84
#: backend/db_services/dbbase/resources/query.py:160
#: backend/db_services/sqlserver/data_migrate/serializers.py:48
msgid "集群名称"
msgstr "Cluster name"

#: backend/db_report/models/checksum_check_report.py:25
msgid "失败的slave实例数量"
msgstr "Number of failed slave instances"

#: backend/db_report/models/checksum_check_report.py:29
msgid "slave部署机器ip"
msgstr "slave deployment machine ip"

#: backend/db_report/models/checksum_check_report.py:30
msgid "slave部署机器port"
msgstr "slave deployment machine port"

#: backend/db_report/models/checksum_check_report.py:31
msgid "master部署机器ip"
msgstr "master deployment machine ip"

#: backend/db_report/models/checksum_check_report.py:32
msgid "master部署机器port"
msgstr "master deployment machine port"

#: backend/db_report/models/checksum_check_report.py:33
msgid "不一致库表详情"
msgstr "Inconsistent database table details"

#: backend/db_report/models/dbmon_heartbeat_report.py:20
msgid "实例类型子项"
msgstr "Instance type child"

#: backend/db_report/models/dbmon_heartbeat_report.py:22
#: backend/db_report/models/redisbackup_check_report.py:21
msgid "实例节点 ip:port"
msgstr "Instance node ip:port"

#: backend/db_report/models/dbmon_heartbeat_report.py:23
#: backend/db_report/views/dbmon_heartbeat_view.py:63
#: backend/db_services/cmdb/serializers.py:37
#: backend/db_services/redis/rollback/models/tb_tendis_data_construction_task.py:12
#: backend/db_services/redis/slots_migrate/models/slots_migration_record.py:12
#: backend/ticket/builders/__init__.py:160 backend/ticket/serializers.py:94
msgid "业务名"
msgstr "business name"

#: backend/db_report/models/dbmon_heartbeat_report.py:24
#: backend/db_report/views/dbmon_heartbeat_view.py:68
msgid "业务所属dba"
msgstr "DBA to which the business belongs"

#: backend/db_report/models/meta_check_report.py:26
msgid "元数据检查子项"
msgstr "Metadata check subkeys"

#: backend/db_report/models/mysqlbackup_check_report.py:23
#: backend/db_report/models/redisbackup_check_report.py:23
msgid "备份检查子项"
msgstr "Backup check items"

#: backend/db_report/report_basemodel.py:18
msgid "业务的 cmdb id"
msgstr "business cmdb id"

#: backend/db_report/report_basemodel.py:19
msgid "云区域 id"
msgstr "Cloud area id"

#: backend/db_report/report_basemodel.py:20
msgid "巡检结果状态, 默认正常"
msgstr "Inspection result status, default is normal"

#: backend/db_report/report_basemodel.py:21
msgid "备注信息"
msgstr "Remarks"

#: backend/db_report/views/checksum_check_report_view.py:44
#: backend/db_report/views/checksum_check_report_view.py:84
msgid "数据校验"
msgstr "Data verification"

#: backend/db_report/views/checksum_check_report_view.py:48
msgid "报告ID"
msgstr "Report ID"

#: backend/db_report/views/checksum_check_report_view.py:53
#: backend/db_report/views/dbmon_heartbeat_view.py:48
#: backend/db_report/views/meta_check_view.py:47
#: backend/db_report/views/mysqlbackup_check_view.py:48
#: backend/db_report/views/redis_dbmeta_check_view.py:47
#: backend/db_report/views/redisbackup_check_view.py:47
#: backend/db_services/dbbase/resources/constants.py:19
#: backend/db_services/dbbase/resources/query.py:238
#: backend/db_services/ipchooser/constants.py:95
#: backend/db_services/ipchooser/constants.py:118
#: backend/db_services/ipchooser/mock_data.py:36
#: backend/db_services/ipchooser/mock_data.py:92
#: backend/db_services/meta_import/serializers.py:57
#: backend/db_services/meta_import/serializers.py:88
#: backend/db_services/meta_import/serializers.py:103
#: backend/db_services/meta_import/serializers.py:115
#: backend/iam_app/dataclass/actions.py:116
#: backend/iam_app/dataclass/actions.py:150
#: backend/iam_app/dataclass/actions.py:195
#: backend/iam_app/dataclass/actions.py:1908
#: backend/iam_app/dataclass/actions.py:1918
#: backend/iam_app/dataclass/resources.py:169
msgid "业务"
msgstr "business"

#: backend/db_report/views/checksum_check_report_view.py:63
msgid "校验结果"
msgstr "Verification result"

#: backend/db_report/views/checksum_check_report_view.py:68
msgid "失败的从库实例数量"
msgstr "Number of failed slave database instances"

#: backend/db_report/views/checksum_check_report_view.py:73
msgid "失败信息"
msgstr "Failure message"

#: backend/db_report/views/checksum_check_report_view.py:78
#: backend/db_report/views/meta_check_view.py:77
#: backend/db_report/views/mysqlbackup_check_view.py:73
#: backend/db_report/views/redis_dbmeta_check_view.py:72
#: backend/db_report/views/redisbackup_check_view.py:77
msgid "巡检时间"
msgstr "Inspection time"

#: backend/db_report/views/checksum_instance_view.py:38
#: backend/db_report/views/checksum_instance_view.py:42
msgid "失败的从库实例详情"
msgstr "Failed slave instance details"

#: backend/db_report/views/dbmon_heartbeat_view.py:44
msgid "dbmon心跳超时检查"
msgstr "dbmon heartbeat timeout check"

#: backend/db_report/views/dbmon_heartbeat_view.py:73
msgid "实例节点信息"
msgstr "Instance node information"

#: backend/db_report/views/dbmon_heartbeat_view.py:78
msgid "心跳超时时间"
msgstr "Heartbeat timeout"

#: backend/db_report/views/dbmon_heartbeat_view.py:84
msgid "dbmon心跳超时检查报告"
msgstr "dbmon heartbeat timeout check report"

#: backend/db_report/views/meta_check_view.py:52
#: backend/db_services/dbbase/resources/query.py:154
#: backend/db_services/dbbase/resources/serializers.py:70
#: backend/db_services/mongodb/resources/query.py:36
#: backend/ticket/builders/common/bigdata.py:222
#: backend/ticket/builders/common/bigdata.py:301
msgid "IP"
msgstr "IP"

#: backend/db_report/views/meta_check_view.py:57
#: backend/db_services/dbbase/resources/serializers.py:71
#: backend/ticket/builders/es/es_apply.py:31
#: backend/ticket/builders/influxdb/influxdb_apply.py:39
#: backend/ticket/builders/kafka/kafka_apply.py:81
#: backend/ticket/builders/pulsar/pulsar_apply.py:33
msgid "端口"
msgstr "port"

#: backend/db_report/views/meta_check_view.py:67
#: backend/db_report/views/redis_dbmeta_check_view.py:62
msgid "元数据状态"
msgstr "metadata status"

#: backend/db_report/views/meta_check_view.py:83
msgid "元数据检查报告列表"
msgstr "Metadata Check Report List"

#: backend/db_report/views/mysqlbackup_check_view.py:44
msgid "集群全备检查"
msgstr "Cluster readiness check"

#: backend/db_report/views/mysqlbackup_check_view.py:63
msgid "全备状态"
msgstr "fully prepared"

#: backend/db_report/views/mysqlbackup_check_view.py:79
#: backend/db_report/views/redisbackup_check_view.py:83
msgid "备份检查报告"
msgstr "Backup inspection report"

#: backend/db_report/views/mysqlbackup_check_view.py:91
msgid "MySQL 全备检查"
msgstr "MySQL Thoroughness Check"

#: backend/db_report/views/mysqlbackup_check_view.py:94
msgid "MySQL 全备检查报告"
msgstr "MySQL health check report"

#: backend/db_report/views/mysqlbackup_check_view.py:105
msgid "集群binlog检查"
msgstr "Cluster binlog check"

#: backend/db_report/views/mysqlbackup_check_view.py:108
msgid "MySQL binlog检查报告"
msgstr "MySQL binlog inspection report"

#: backend/db_report/views/redis_dbmeta_check_view.py:43
msgid "redis 元数据检查"
msgstr "redis metadata check"

#: backend/db_report/views/redis_dbmeta_check_view.py:78
msgid "redis 元数据检查报告"
msgstr "redis metadata inspection report"

#: backend/db_report/views/redis_dbmeta_check_view.py:90
msgid "孤立节点检查"
msgstr "Orphan node check"

#: backend/db_report/views/redis_dbmeta_check_view.py:93
msgid "孤立节点检查报告"
msgstr "Orphan node check report"

#: backend/db_report/views/redis_dbmeta_check_view.py:104
#: backend/db_report/views/redis_dbmeta_check_view.py:107
msgid "实例状态异常检查"
msgstr "Instance status abnormality check"

#: backend/db_report/views/redisbackup_check_view.py:43
msgid "集群备份检查"
msgstr "Cluster backup check"

#: backend/db_report/views/redisbackup_check_view.py:67
msgid "备份状态"
msgstr "Backup status"

#: backend/db_report/views/redisbackup_check_view.py:95
msgid "Redis 全备检查"
msgstr "Redis full check"

#: backend/db_report/views/redisbackup_check_view.py:98
msgid "Redis 全备检查报告"
msgstr "Redis full check report"

#: backend/db_report/views/redisbackup_check_view.py:110
msgid "Redis集群binlog检查"
msgstr "Redis cluster binlog check"

#: backend/db_report/views/redisbackup_check_view.py:113
msgid "Redis binlog检查报告"
msgstr "Redis binlog inspection report"

#: backend/db_services/bigdata/doris/query.py:35
msgid "Follower节点"
msgstr "Followernode"

#: backend/db_services/bigdata/doris/query.py:36
msgid "Observer节点"
msgstr "Observer node"

#: backend/db_services/bigdata/doris/views.py:29
#: backend/db_services/bigdata/es/views.py:29
#: backend/db_services/bigdata/hdfs/views.py:37
#: backend/db_services/bigdata/kafka/views.py:27
#: backend/db_services/bigdata/pulsar/views.py:27
#: backend/db_services/bigdata/riak/views.py:27
#: backend/db_services/redis/resources/redis_cluster/views.py:34
msgid "获取集群列表"
msgstr "Get a list of clusters"

#: backend/db_services/bigdata/doris/views.py:38
#: backend/db_services/bigdata/es/views.py:38
#: backend/db_services/bigdata/hdfs/views.py:46
#: backend/db_services/bigdata/kafka/views.py:36
#: backend/db_services/bigdata/pulsar/views.py:36
#: backend/db_services/bigdata/riak/views.py:36
#: backend/db_services/redis/resources/redis_cluster/views.py:43
msgid "获取集群详情"
msgstr "Get cluster details"

#: backend/db_services/bigdata/doris/views.py:46
#: backend/db_services/bigdata/es/views.py:46
#: backend/db_services/bigdata/hdfs/views.py:54
#: backend/db_services/bigdata/influxdb/views.py:29
#: backend/db_services/bigdata/kafka/views.py:44
#: backend/db_services/bigdata/pulsar/views.py:44
#: backend/db_services/bigdata/riak/views.py:44
msgid "获取实例列表"
msgstr "Get instance list"

#: backend/db_services/bigdata/doris/views.py:55
#: backend/db_services/bigdata/es/views.py:55
#: backend/db_services/bigdata/hdfs/views.py:63
#: backend/db_services/bigdata/influxdb/views.py:38
#: backend/db_services/bigdata/kafka/views.py:53
#: backend/db_services/bigdata/pulsar/views.py:53
#: backend/db_services/bigdata/riak/views.py:53
msgid "获取实例详情"
msgstr "Get instance details"

#: backend/db_services/bigdata/doris/views.py:63
#: backend/db_services/bigdata/es/views.py:63
#: backend/db_services/bigdata/hdfs/views.py:71
#: backend/db_services/bigdata/influxdb/views.py:46
#: backend/db_services/bigdata/kafka/views.py:61
#: backend/db_services/bigdata/pulsar/views.py:61
#: backend/db_services/bigdata/riak/views.py:61
msgid "获取查询返回字段"
msgstr "Get query return fields"

#: backend/db_services/bigdata/doris/views.py:71
#: backend/db_services/bigdata/es/views.py:71
#: backend/db_services/bigdata/hdfs/views.py:79
#: backend/db_services/bigdata/influxdb/views.py:54
#: backend/db_services/bigdata/kafka/views.py:69
#: backend/db_services/bigdata/pulsar/views.py:69
#: backend/db_services/bigdata/riak/views.py:69
#: backend/db_services/redis/resources/redis_cluster/views.py:73
msgid "获取集群拓扑"
msgstr "Get cluster topology"

#: backend/db_services/bigdata/doris/views.py:79
#: backend/db_services/bigdata/es/views.py:79
#: backend/db_services/redis/resources/redis_cluster/views.py:89
msgid "获取集群节点"
msgstr "Get cluster nodes"

#: backend/db_services/bigdata/es/query.py:35
msgid "Master节点"
msgstr "Master node"

#: backend/db_services/bigdata/es/query.py:38
msgid "代理节点"
msgstr "proxy node"

#: backend/db_services/bigdata/hdfs/query.py:36
msgid "namenode节点"
msgstr "namenode node"

#: backend/db_services/bigdata/hdfs/query.py:37
#: backend/db_services/bigdata/kafka/query.py:30
#: backend/db_services/bigdata/pulsar/query.py:29
msgid "zookeeper节点"
msgstr "zookeeper node"

#: backend/db_services/bigdata/hdfs/query.py:38
msgid "journalnode节点"
msgstr "journal node node"

#: backend/db_services/bigdata/hdfs/query.py:39
msgid "datanode节点"
msgstr "datanode node"

#: backend/db_services/bigdata/hdfs/views.py:90
msgid "获取集群访问xml配置"
msgstr "Get cluster access xml configuration"

#: backend/db_services/bigdata/kafka/query.py:29
#: backend/db_services/bigdata/pulsar/query.py:28
msgid "broker节点"
msgstr "broker node"

#: backend/db_services/bigdata/pulsar/query.py:30
msgid "bookkeeper节点"
msgstr "bookkeeper node"

#: backend/db_services/bigdata/resources/query.py:41
msgid "集群类型名"
msgstr "cluster type name"

#: backend/db_services/bigdata/resources/serializers.py:21
msgid "Agent状态"
msgstr "Agent status"

#: backend/db_services/bigdata/resources/serializers.py:22
#: backend/db_services/dbresource/serializers.py:203
msgid "排序字段"
msgstr "sort field"

#: backend/db_services/bigdata/resources/serializers.py:30
msgid "排序参数只能是 'create_at' 或 'node_count'。"
msgstr "The sorting parameter can only be &#39;create_at&#39; or &#39;node_count&#39;."

#: backend/db_services/bigdata/resources/views.py:98
#: backend/db_services/redis/resources/redis_cluster/views.py:130
msgid "获取集群访问密码"
msgstr "Obtain the cluster access password"

#: backend/db_services/bigdata/resources/views.py:158
msgid "获取集群节点列表信息"
msgstr "Get cluster node list information"

#: backend/db_services/bigdata/resources/views.py:188
#: backend/db_services/mongodb/resources/views.py:113
#: backend/db_services/mysql/resources/views.py:45
#: backend/db_services/redis/resources/views.py:43
#: backend/db_services/sqlserver/resources/views.py:48
msgid "获取资源拓扑树"
msgstr "Get resource topology tree"

#: backend/db_services/bigdata/riak/query.py:29
msgid "riak节点"
msgstr "riaknode"

#: backend/db_services/cluster_entry/serializers.py:20
msgid "访问入口类型"
msgstr "Access type"

#: backend/db_services/cluster_entry/serializers.py:24
msgid "目标实例，格式为 ip#port "
msgstr "Target instance in the format of ip#port"

#: backend/db_services/cluster_entry/serializers.py:24
msgid "目标实例列表"
msgstr "Target instance list"

#: backend/db_services/cluster_entry/serializers.py:27
#: backend/db_services/cluster_entry/serializers.py:43
#: backend/db_services/dbbase/resources/query.py:83
#: backend/db_services/dbbase/resources/query.py:159
msgid "集群 ID"
msgstr "Cluster ID"

#: backend/db_services/cluster_entry/serializers.py:29
msgid "访问入口详情"
msgstr "Access entrance details"

#: backend/db_services/cluster_entry/serializers.py:36
msgid "修改 DNS 访问入口需要传入 domain_name 和 target_instances"
msgstr "Modifying the DNS access entry requires passing in domain_name and target_instances"

#: backend/db_services/cluster_entry/serializers.py:38
msgid "修改 DNS，目标实例列表不能为空"
msgstr "Modify DNS, the target instance list cannot be empty"

#: backend/db_services/cluster_entry/serializers.py:44
#: backend/db_services/ipchooser/serializers/base.py:32
#: backend/db_services/ipchooser/serializers/base.py:41
#: backend/db_services/redis/autofix/models.py:25
msgid "业务 ID"
msgstr "Business ID"

#: backend/db_services/cluster_entry/serializers.py:45
msgid "入口类型"
msgstr "Entrance type"

#: backend/db_services/cluster_entry/views.py:32
msgid "集群访问入口"
msgstr "Cluster access entrance"

#: backend/db_services/cluster_entry/views.py:63
msgid "修改集群访问入口"
msgstr "Modify cluster access entry"

#: backend/db_services/cluster_entry/views.py:73
msgid "获取集群入口列表"
msgstr "Get the cluster entry list"

#: backend/db_services/cmdb/exceptions.py:18
msgid "CMDB模块异常"
msgstr "CMDB module exception"

#: backend/db_services/cmdb/exceptions.py:23
msgid "英文缩写已存在，不允许修改"
msgstr "English abbreviation already exists, modification is not allowed"

#: backend/db_services/cmdb/serializers.py:21
msgid "查询的权限动作"
msgstr "Query permission action"

#: backend/db_services/cmdb/serializers.py:30
msgid "只允许查询关联资源为业务的动作权限"
msgstr "Only allowed to query related resources for business action permissions"

#: backend/db_services/cmdb/serializers.py:39
msgid "业务权限列表"
msgstr "Business authority list"

#: backend/db_services/cmdb/serializers.py:44
#: backend/db_services/dbconfig/serializers.py:94
#: backend/ticket/builders/mysql/mysql_single_apply.py:51
#: backend/ticket/builders/riak/riak_apply.py:28
#: backend/ticket/builders/riak/riak_migrate.py:28
#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:50
#: backend/ticket/builders/tendbcluster/tendb_apply.py:36
msgid "DB模块ID"
msgstr "DB module ID"

#: backend/db_services/cmdb/serializers.py:45
#: backend/db_services/cmdb/serializers.py:53
#: backend/ticket/builders/mysql/mysql_single_apply.py:66
#: backend/ticket/builders/riak/riak_apply.py:32
#: backend/ticket/builders/riak/riak_migrate.py:32
#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:65
#: backend/ticket/builders/tendbcluster/tendb_apply.py:52
msgid "DB模块名"
msgstr "DB module name"

#: backend/db_services/cmdb/serializers.py:58
msgid "请确保模块名称的长度不超过: {}"
msgstr "Please ensure that the module name is no longer than: {}"

#: backend/db_services/cmdb/serializers.py:64
msgid "英文缩写"
msgstr "English abbreviations"

#: backend/db_services/cmdb/serializers.py:68
msgid "请确保业务CODE的长度不超过: {}"
msgstr "Please ensure that the length of the business CODE does not exceed: {}"

#: backend/db_services/cmdb/serializers.py:78
#: backend/db_services/dbresource/serializers.py:94
msgid "单页数量"
msgstr "Single page quantity"

#: backend/db_services/cmdb/serializers.py:79
msgid "页数"
msgstr "number of pages"

#: backend/db_services/cmdb/views.py:43
#: backend/db_services/quick_search/serializers.py:20
msgid "业务列表"
msgstr "business list"

#: backend/db_services/cmdb/views.py:45
msgid "业务信息"
msgstr "business information"

#: backend/db_services/cmdb/views.py:55
msgid "业务下的模块列表"
msgstr "Module List under Business"

#: backend/db_services/cmdb/views.py:57
msgid "模块信息"
msgstr "module information"

#: backend/db_services/cmdb/views.py:75
msgid "创建数据库模块"
msgstr "Create database module"

#: backend/db_services/cmdb/views.py:87
msgid "设置业务英文缩写"
msgstr "Set business abbreviations"

#: backend/db_services/cmdb/views.py:97
msgid "查询 CC 角色对象"
msgstr "Query CC role object"

#: backend/db_services/dbbase/cluster/handlers.py:43
msgid "集群[]不存在，请检查集群ID"
msgstr "Cluster[] does not exist, please check the cluster ID"

#: backend/db_services/dbbase/cluster/handlers.py:185
msgid "无法找到集群{}所包含实例，请检查集群相关信息"
msgstr ""
"Unable to find the instance contained in the cluster {}, please check the "
"relevant information of the cluster"

#: backend/db_services/dbbase/cluster/serializers.py:24
#: backend/db_services/mongodb/restore/serializers.py:21
#: backend/db_services/mysql/cluster/serializers.py:48
#: backend/db_services/mysql/cluster/serializers.py:57
#: backend/db_services/mysql/cluster/serializers.py:79
#: backend/db_services/mysql/remote_service/serializers.py:28
#: backend/db_services/mysql/remote_service/serializers.py:32
#: backend/db_services/mysql/remote_service/serializers.py:43
#: backend/db_services/mysql/sql_import/serializers.py:92
#: backend/ticket/builders/mongodb/mongo_add_shard_nodes.py:33
#: backend/ticket/builders/mongodb/mongo_backup.py:35
#: backend/ticket/builders/mongodb/mongo_clear.py:28
#: backend/ticket/builders/mongodb/mongo_destroy.py:23
#: backend/ticket/builders/mongodb/mongo_disable.py:24
#: backend/ticket/builders/mongodb/mongo_enable.py:24
#: backend/ticket/builders/mongodb/mongo_reduce_shard_nodes.py:28
#: backend/ticket/builders/mongodb/mongo_script_exec.py:31
#: backend/ticket/builders/mongodb/mongodb_temporary_destroy.py:25
#: backend/ticket/builders/mysql/mysql_add_slave.py:28
#: backend/ticket/builders/mysql/mysql_ha_standardize.py:26
#: backend/ticket/builders/mysql/mysql_local_upgrade.py:24
#: backend/ticket/builders/mysql/mysql_master_slave_switch.py:37
#: backend/ticket/builders/mysql/mysql_migrate_cluster.py:30
#: backend/ticket/builders/mysql/mysql_migrate_upgrade.py:35
#: backend/ticket/builders/mysql/mysql_proxy_add.py:29
#: backend/ticket/builders/mysql/mysql_proxy_switch.py:34
#: backend/ticket/builders/mysql/mysql_proxy_upgrade.py:24
#: backend/ticket/builders/mysql/mysql_push_peripheral_config.py:22
#: backend/ticket/builders/mysql/mysql_restore_slave.py:28
#: backend/ticket/builders/redis/redis_close.py:55
#: backend/ticket/builders/redis/redis_cluster_version_update.py:23
#: backend/ticket/builders/redis/redis_destroy.py:54
#: backend/ticket/builders/redis/redis_maxmemory_set.py:65
#: backend/ticket/builders/redis/redis_open.py:52
#: backend/ticket/builders/redis/redis_toolbox_add_slave.py:29
#: backend/ticket/builders/redis/redis_toolbox_master_slave_switch.py:32
#: backend/ticket/builders/spider/mysql_spider_standardize.py:26
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:46
#: backend/ticket/builders/sqlserver/sqlserver_master_slave_switch.py:26
#: backend/ticket/builders/tendbcluster/append_deploy_ctl.py:25
#: backend/ticket/builders/tendbcluster/tendb_migrate_cluster.py:31
#: backend/ticket/builders/tendbcluster/tendb_spider_slave_destroy.py:23
#: backend/ticket/builders/tendbsingle/standardize.py:24
#: backend/ticket/models/ticket.py:236 backend/ticket/serializers.py:303
msgid "集群ID列表"
msgstr "Cluster ID list"

#: backend/db_services/dbbase/cluster/serializers.py:38
#: backend/ticket/builders/common/base.py:101
msgid "IP地址"
msgstr "IP address"

#: backend/db_services/dbbase/cluster/serializers.py:40
#: backend/ticket/builders/common/base.py:115
#: backend/ticket/builders/common/bigdata.py:223
#: backend/ticket/builders/common/bigdata.py:302
msgid "端口号"
msgstr "The port number"

#: backend/db_services/dbbase/cluster/serializers.py:56
#: backend/db_services/sqlserver/cluster/serializers.py:18
#: backend/db_services/sqlserver/cluster/serializers.py:46
#: backend/db_services/sqlserver/cluster/serializers.py:57
msgid "db列表"
msgstr "db list"

#: backend/db_services/dbbase/cluster/views.py:36
msgid "通过集群查询同机关联集群"
msgstr "Query the cluster associated with the same machine through the cluster"

#: backend/db_services/dbbase/cluster/views.py:49
msgid "通过实例查询同机关联集群"
msgstr ""
"Query the cluster associated with the same machine through the instance"

#: backend/db_services/dbbase/constants.py:36
msgid "手动录入"
msgstr "Manual entry"

#: backend/db_services/dbbase/constants.py:37
#: backend/db_services/dbresource/constants.py:25
#: backend/iam_app/dataclass/actions.py:1504
#: backend/iam_app/dataclass/actions.py:1516
msgid "资源池"
msgstr "resource pool"

#: backend/db_services/dbbase/constants.py:43
msgid "污点主机"
msgstr "Tainted host"

#: backend/db_services/dbbase/constants.py:44
msgid "资源操作记录"
msgstr "Resource operation records"

#: backend/db_services/dbbase/instances/views.py:29
msgid "根据用户手动输入的 ip:port 查询真实的实例"
msgstr ""
"Query the real instance according to the ip:port manually entered by the user"

#: backend/db_services/dbbase/instances/yasg_slz.py:20
msgid "实例地址列表"
msgstr "instance address list"

#: backend/db_services/dbbase/instances/yasg_slz.py:20
#: backend/db_services/dbbase/resources/serializers.py:69
#: backend/db_services/dbbase/resources/serializers.py:121
msgid "实例地址(ip:port)"
msgstr "Instance address (ip:port)"

#: backend/db_services/dbbase/instances/yasg_slz.py:23
msgid "实例所属组件类型"
msgstr "The component type to which the instance belongs"

#: backend/db_services/dbbase/instances/yasg_slz.py:25
msgid "实例所在的集群列表"
msgstr "List of clusters where the instance is located"

#: backend/db_services/dbbase/instances/yasg_slz.py:53
msgid "测试业务"
msgstr "test business"

#: backend/db_services/dbbase/resources/constants.py:21
#: backend/db_services/ipchooser/constants.py:118
#: backend/db_services/ipchooser/mock_data.py:50
#: backend/db_services/ipchooser/mock_data.py:69
msgid "模块"
msgstr "module"

#: backend/db_services/dbbase/resources/query.py:87
#: backend/db_services/dbbase/resources/query.py:163
#: backend/db_services/mongodb/resources/query.py:35
#: backend/db_services/mysql/resources/tendbcluster/query.py:41
#: backend/db_services/mysql/resources/tendbha/query.py:35
#: backend/db_services/mysql/resources/tendbsingle/query.py:33
#: backend/db_services/sqlserver/resources/sqlserver_ha/query.py:32
#: backend/db_services/sqlserver/resources/sqlserver_single/query.py:32
msgid "主域名"
msgstr "primary domain name"

#: backend/db_services/dbbase/resources/query.py:88
#: backend/db_services/mysql/resources/tendbcluster/query.py:42
#: backend/db_services/mysql/resources/tendbha/query.py:36
#: backend/db_services/sqlserver/resources/sqlserver_ha/query.py:33
msgid "从域名"
msgstr "from domain name"

#: backend/db_services/dbbase/resources/query.py:89
#: backend/db_services/dbbase/resources/query.py:164
msgid "主版本"
msgstr "major version"

#: backend/db_services/dbbase/resources/query.py:91
#: backend/ticket/builders/common/bigdata.py:114
#: backend/ticket/builders/influxdb/influxdb_apply.py:35
#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:37
#: backend/ticket/builders/mongodb/mongo_shard_apply.py:32
#: backend/ticket/builders/mysql/mysql_ha_apply.py:38
#: backend/ticket/builders/redis/redis_cluster_apply.py:34
#: backend/ticket/builders/redis/redis_instance_apply.py:38
#: backend/ticket/builders/sqlserver/sqlserver_ha_apply.py:34
#: backend/ticket/builders/tendbcluster/tendb_apply.py:41
msgid "容灾级别"
msgstr "Disaster recovery level"

#: backend/db_services/dbbase/resources/query.py:152
msgid "主机 ID"
msgstr "Host ID"

#: backend/db_services/dbbase/resources/query.py:155
msgid "IP 端口"
msgstr "IP port"

#: backend/db_services/dbbase/resources/query.py:157
#: backend/db_services/dbresource/serializers.py:80
#: backend/db_services/dbresource/serializers.py:378
msgid "城市"
msgstr "City"

#: backend/db_services/dbbase/resources/serializers.py:30
msgid "精确域名查询"
msgstr "Precise domain name query"

#: backend/db_services/dbbase/resources/serializers.py:31
msgid "排序字段,非必填"
msgstr "Sorting field, optional"

#: backend/db_services/dbbase/resources/serializers.py:33
#: backend/db_services/dbbase/resources/serializers.py:110
msgid "所属DB模块"
msgstr "Belonging DB module"

#: backend/db_services/dbbase/resources/serializers.py:34
msgid "管控区域"
msgstr "control area"

#: backend/db_services/dbbase/resources/serializers.py:48
msgid "模块类型"
msgstr "module type"

#: backend/db_services/dbbase/resources/serializers.py:52
msgid "批量域名查询(逗号分割)"
msgstr "Batch domain name query (comma separated)"

#: backend/db_services/dbbase/resources/serializers.py:103
#: backend/db_services/dbbase/resources/serializers.py:125
#: backend/db_services/redis/toolbox/serializers.py:189
#: backend/ticket/builders/mongodb/mongo_instance_reload.py:30
#: backend/ticket/serializers.py:251
msgid "角色"
msgstr "Role"

#: backend/db_services/dbbase/resources/serializers.py:114
msgid "精确IP查询"
msgstr "Accurate IP query"

#: backend/db_services/dbbase/resources/serializers.py:126
#: backend/db_services/quick_search/serializers.py:32
#: backend/ticket/serializers.py:252
msgid "关键字过滤"
msgstr "keyword filtering"

#: backend/db_services/dbbase/resources/serializers.py:131
msgid "IP(多个IP过滤以逗号分隔)"
msgstr "IP (multiple IP filters separated by commas)"

#: backend/db_services/dbbase/resources/serializers.py:132
msgid "集群ID(多个过滤以逗号分隔)"
msgstr "Cluster ID (multiple filters separated by commas)"

#: backend/db_services/dbbase/resources/serializers.py:133
#: backend/db_services/dbbase/resources/serializers.py:142
#: backend/db_services/redis/toolbox/serializers.py:191
msgid "集群状态"
msgstr "Cluster status"

#: backend/db_services/dbbase/resources/serializers.py:135
msgid "城市名(多个过滤以逗号分隔)"
msgstr "City name (multiple filters separated by commas)"

#: backend/db_services/dbbase/resources/serializers.py:136
#: backend/db_services/dbresource/serializers.py:322
msgid "机器类型"
msgstr "machine type"

#: backend/db_services/dbbase/resources/serializers.py:137
msgid "os名字"
msgstr "os name"

#: backend/db_services/dbbase/resources/serializers.py:139
msgid "agent id"
msgstr "agent id"

#: backend/db_services/dbbase/resources/serializers.py:140
msgid "机器部署的实例角色"
msgstr "Instance role for machine deployment"

#: backend/db_services/dbbase/resources/serializers.py:144
#: backend/db_services/dbpermission/db_account/serializers.py:88
#: backend/db_services/dbpermission/db_account/serializers.py:97
#: backend/iam_app/dataclass/resources.py:231
#: backend/iam_app/dataclass/resources.py:277
#: backend/iam_app/dataclass/resources.py:323
#: backend/iam_app/dataclass/resources.py:473
#: backend/iam_app/dataclass/resources.py:555
#: backend/iam_app/dataclass/resources.py:626
#: backend/iam_app/dataclass/resources.py:680
#: backend/iam_app/dataclass/resources.py:703
msgid "创建者"
msgstr "creator"

#: backend/db_services/dbbase/resources/serializers.py:153
msgid "spider角色"
msgstr "spider role"

#: backend/db_services/dbbase/serializers.py:39
#: backend/db_services/dbbase/serializers.py:63
msgid "集群类型(逗号分隔)"
msgstr "Cluster types (comma separated)"

#: backend/db_services/dbbase/serializers.py:42
msgid "集群阶段状态"
msgstr "Cluster stage status"

#: backend/db_services/dbbase/serializers.py:64
#: backend/db_services/dbbase/serializers.py:80
msgid "集群ID(逗号分割)"
msgstr "Cluster ID (comma separated)"

#: backend/db_services/dbbase/serializers.py:79
msgid "域名精确查询"
msgstr "Domain name precise query"

#: backend/db_services/dbbase/serializers.py:96
msgid "查询集群属性字段(逗号分隔)"
msgstr "Query cluster attribute fields (comma separated)"

#: backend/db_services/dbbase/serializers.py:97
msgid "查询实例属性字段(逗号分隔)"
msgstr "Query instance attribute fields (comma separated)"

#: backend/db_services/dbbase/serializers.py:108
msgid "未知的集群类型：{}"
msgstr "Unknown cluster type: {}"

#: backend/db_services/dbbase/serializers.py:111
msgid "所有集群类型必须属于同一种DBtype类型"
msgstr "All cluster types must belong to the same DBtype"

#: backend/db_services/dbbase/serializers.py:173
#: backend/db_services/mysql/sql_import/serializers.py:29
#: backend/db_services/sqlserver/sql_import/serializers.py:19
msgid "sql语句"
msgstr "sql statement"

#: backend/db_services/dbbase/serializers.py:175
msgid "数据库编号(redis 额外参数)"
msgstr "Database number (redis extra parameters)"

#: backend/db_services/dbbase/serializers.py:176
msgid "源编码(redis 额外参数)"
msgstr "Source encoding (redis extra parameters)"

#: backend/db_services/dbbase/views.py:50
msgid "集群通用接口"
msgstr "Cluster common interface"

#: backend/db_services/dbbase/views.py:71
msgid "查询集群名字是否重复"
msgstr "Check whether cluster names are duplicated"

#: backend/db_services/dbbase/views.py:84
msgid "查询业务集群简略信息"
msgstr "Query the brief information of the business cluster"

#: backend/db_services/dbbase/views.py:99
msgid "查询业务下集群通用信息"
msgstr "Query the general information of the cluster under the business"

#: backend/db_services/dbbase/views.py:112
msgid "根据过滤条件查询业务下集群详细信息"
msgstr "Query cluster details under the business based on filter conditions"

#: backend/db_services/dbbase/views.py:138
msgid "根据用户手动输入的ip[:port]查询真实的实例"
msgstr "Query the real instance based on the ip[:port] manually entered by the user"

#: backend/db_services/dbbase/views.py:155
msgid "查询集群的库是否存在"
msgstr "Query whether the cluster library exists"

#: backend/db_services/dbbase/views.py:167
msgid "查询业务下集群的属性字段"
msgstr "Query the attribute fields of the cluster under the business"

#: backend/db_services/dbbase/views.py:234
msgid "查询资源池,污点主机管理表头筛选数据"
msgstr "Query the resource pool and filter data in the tainted host management header"

#: backend/db_services/dbbase/views.py:247
msgid "webconsole查询"
msgstr "webconsole query"

#: backend/db_services/dbconfig/exceptions.py:18
msgid "配置模块异常"
msgstr "configuration module exception"

#: backend/db_services/dbconfig/exceptions.py:23
msgid "查询配置异常"
msgstr "Query configuration exception"

#: backend/db_services/dbconfig/exceptions.py:28
msgid "与下层级配置存在冲突"
msgstr "There is a conflict with the lower-level configuration"

#: backend/db_services/dbconfig/mock_data.py:26
msgid "5.5配置项"
msgstr "5.5 configuration items"

#: backend/db_services/dbconfig/mock_data.py:27
msgid "5.6配置项"
msgstr "5.6 Configuration items"

#: backend/db_services/dbconfig/mock_data.py:34
#: backend/db_services/dbconfig/mock_data.py:78
msgid "MySQL5.6配置"
msgstr "MySQL5.6 configuration"

#: backend/db_services/dbconfig/mock_data.py:38
msgid "日志过期天数"
msgstr "Log expiration days"

#: backend/db_services/dbconfig/mock_data.py:49
msgid "绑定地址"
msgstr "binding address"

#: backend/db_services/dbconfig/mock_data.py:60
msgid "binlog格式"
msgstr "binlog format"

#: backend/db_services/dbconfig/mock_data.py:70
#: backend/db_services/dbconfig/mock_data.py:103
msgid "我是描述"
msgstr "I&#39;m describing"

#: backend/db_services/dbconfig/serializers.py:25
msgid "参数项"
msgstr "parameter item"

#: backend/db_services/dbconfig/serializers.py:26
msgid "是否锁定"
msgstr "Whether to lock"

#: backend/db_services/dbconfig/serializers.py:27
#: backend/db_services/dbresource/serializers.py:196
#: backend/db_services/mysql/open_area/serializers.py:80
#: backend/ticket/serializers.py:277 backend/ticket/serializers.py:285
msgid "操作类型"
msgstr "operation type"

#: backend/db_services/dbconfig/serializers.py:32
msgid "是否重启实例生效"
msgstr "Whether to restart the instance to take effect"

#: backend/db_services/dbconfig/serializers.py:33
msgid "参数范围"
msgstr "parameter range"

#: backend/db_services/dbconfig/serializers.py:34
#: backend/db_services/dbconfig/serializers.py:81
msgid "参数值"
msgstr "parameter value"

#: backend/db_services/dbconfig/serializers.py:35
msgid "参数值类型"
msgstr "parameter value type"

#: backend/db_services/dbconfig/serializers.py:36
msgid "参数范围类型，ENUM/REGEX"
msgstr "Parameter range type, ENUM/REGEX"

#: backend/db_services/dbconfig/serializers.py:41
#: backend/db_services/dbconfig/serializers.py:64
msgid "配置文件名"
msgstr "configuration file name"

#: backend/db_services/dbconfig/serializers.py:42
#: backend/db_services/dbconfig/serializers.py:98
msgid "配置项列表"
msgstr "List of configuration items"

#: backend/db_services/dbconfig/serializers.py:43
#: backend/db_services/dbconfig/serializers.py:99
msgid "是否确认"
msgstr "Whether to confirm"

#: backend/db_services/dbconfig/serializers.py:44
#: backend/db_services/dbconfig/serializers.py:100
msgid "配置文件描述"
msgstr "Profile description"

#: backend/db_services/dbconfig/serializers.py:45
#: backend/db_services/dbconfig/serializers.py:101
msgid "发布描述"
msgstr "release description"

#: backend/db_services/dbconfig/serializers.py:88
msgid "层级名称"
msgstr "hierarchy name"

#: backend/db_services/dbconfig/serializers.py:89
msgid "层级值"
msgstr "level value"

#: backend/db_services/dbconfig/serializers.py:90
msgid "层级关系"
msgstr "hierarchical relationship"

#: backend/db_services/dbconfig/serializers.py:118
msgid "历史版本号"
msgstr "Historical version number"

#: backend/db_services/dbconfig/views.py:68
msgid "查询配置项名称列表"
msgstr "Query the list of configuration item names"

#: backend/db_services/dbconfig/views.py:80
msgid "查询平台配置列表"
msgstr "Query the platform configuration list"

#: backend/db_services/dbconfig/views.py:97
msgid "新建平台配置"
msgstr "New platform configuration"

#: backend/db_services/dbconfig/views.py:111
msgid "编辑平台配置"
msgstr "Edit platform configuration"

#: backend/db_services/dbconfig/views.py:125
msgid "查询平台配置详情"
msgstr "Query platform configuration details"

#: backend/db_services/dbconfig/views.py:137
msgid "查询业务配置列表"
msgstr "Query the list of business configurations"

#: backend/db_services/dbconfig/views.py:158
msgid "编辑层级（业务、模块、集群）配置"
msgstr "Edit level (business, module, cluster) configuration"

#: backend/db_services/dbconfig/views.py:171
msgid "保存模块部署配置"
msgstr "Save the module deployment configuration"

#: backend/db_services/dbconfig/views.py:187
msgid "查询层级（业务、模块、集群）配置详情"
msgstr "Query level (business, module, cluster) configuration details"

#: backend/db_services/dbconfig/views.py:199
msgid "查询模块配置详情"
msgstr "Query module configuration details"

#: backend/db_services/dbconfig/views.py:221
msgid "查询配置发布历史记录"
msgstr "Query configuration release history"

#: backend/db_services/dbconfig/views.py:233
msgid "查询配置发布记录详情"
msgstr "Query configuration release record details"

#: backend/db_services/dbpermission/constants.py:32
msgid "选择"
msgstr "choose"

#: backend/db_services/dbpermission/constants.py:33
msgid "插入"
msgstr "insert"

#: backend/db_services/dbpermission/constants.py:36
msgid "查看视图"
msgstr "view view"

#: backend/db_services/dbpermission/constants.py:41
msgid "创建表"
msgstr "create table"

#: backend/db_services/dbpermission/constants.py:42
msgid "修改表"
msgstr "modify table"

#: backend/db_services/dbpermission/constants.py:43 backend/flow/consts.py:1330
msgid "删除表"
msgstr "delete table"

#: backend/db_services/dbpermission/constants.py:44
msgid "索引"
msgstr "index"

#: backend/db_services/dbpermission/constants.py:45
msgid "创建视图"
msgstr "Create view"

#: backend/db_services/dbpermission/constants.py:46
msgid "执行"
msgstr "implement"

#: backend/db_services/dbpermission/constants.py:47
msgid "触发器"
msgstr "trigger"

#: backend/db_services/dbpermission/constants.py:48
msgid "事件"
msgstr "event"

#: backend/db_services/dbpermission/constants.py:49
msgid "create routine"
msgstr "create routine"

#: backend/db_services/dbpermission/constants.py:50
msgid "alter routine"
msgstr "alter routine"

#: backend/db_services/dbpermission/constants.py:51
msgid "references"
msgstr "references"

#: backend/db_services/dbpermission/constants.py:52
msgid "create temporary tables"
msgstr "create temporary tables"

#: backend/db_services/dbpermission/constants.py:57
msgid "file"
msgstr "file"

#: backend/db_services/dbpermission/constants.py:58
msgid "reload"
msgstr "reload"

#: backend/db_services/dbpermission/constants.py:59
msgid "show databases"
msgstr "show databases"

#: backend/db_services/dbpermission/constants.py:60
msgid "process"
msgstr "process"

#: backend/db_services/dbpermission/constants.py:61
msgid "replication slave"
msgstr "replication slave"

#: backend/db_services/dbpermission/constants.py:62
msgid "replication client"
msgstr "replication client"

#: backend/db_services/dbpermission/constants.py:66
msgid "Read"
msgstr "Read"

#: backend/db_services/dbpermission/constants.py:67 backend/flow/consts.py:1413
msgid "readWrite"
msgstr "readWrite"

#: backend/db_services/dbpermission/constants.py:68 backend/flow/consts.py:1411
msgid "readAnyDatabase"
msgstr "readAnyDatabase"

#: backend/db_services/dbpermission/constants.py:69 backend/flow/consts.py:1416
msgid "readWriteAnyDatabase"
msgstr "readWriteAnyDatabase"

#: backend/db_services/dbpermission/constants.py:72
msgid "dbAdmin"
msgstr "dbAdmin"

#: backend/db_services/dbpermission/constants.py:73 backend/flow/consts.py:450
#: backend/flow/consts.py:1200 backend/flow/consts.py:1409
msgid "backup"
msgstr "backup"

#: backend/db_services/dbpermission/constants.py:74
msgid "restore"
msgstr "restore"

#: backend/db_services/dbpermission/constants.py:75
msgid "userAdmin"
msgstr "userAdmin"

#: backend/db_services/dbpermission/constants.py:76 backend/flow/consts.py:1417
msgid "clusterAdmin"
msgstr "clusterAdmin"

#: backend/db_services/dbpermission/constants.py:77
msgid "clusterManager"
msgstr "clusterManager"

#: backend/db_services/dbpermission/constants.py:78 backend/flow/consts.py:1410
msgid "clusterMonitor"
msgstr "clusterMonitor"

#: backend/db_services/dbpermission/constants.py:79 backend/flow/consts.py:1412
msgid "hostManager"
msgstr "hostManager"

#: backend/db_services/dbpermission/constants.py:80 backend/flow/consts.py:1414
msgid "userAdminAnyDatabase"
msgstr "userAdminAnyDatabase"

#: backend/db_services/dbpermission/constants.py:81 backend/flow/consts.py:1415
msgid "dbAdminAnyDatabase"
msgstr "dbAdminAnyDatabase"

#: backend/db_services/dbpermission/constants.py:82
msgid "dbOwner"
msgstr "dbOwner"

#: backend/db_services/dbpermission/constants.py:83 backend/flow/consts.py:1408
msgid "root"
msgstr "root"

#: backend/db_services/dbpermission/constants.py:87
msgid "db_datawriter"
msgstr "db_datawriter"

#: backend/db_services/dbpermission/constants.py:88
msgid "db_datareader"
msgstr "db_datareader"

#: backend/db_services/dbpermission/constants.py:91
msgid "db_owner"
msgstr "db_owner"

#: backend/db_services/dbpermission/constants.py:98
#: backend/db_services/mysql/permission/constants.py:21
msgid "TendbCluster"
msgstr "Tendbcluster"

#: backend/db_services/dbpermission/constants.py:106
msgid "账号(单个)"
msgstr "Account (single)"

#: backend/db_services/dbpermission/constants.py:107
msgid "访问源(多个)"
msgstr "access source(s)"

#: backend/db_services/dbpermission/constants.py:108
msgid "访问集群域名(多个)"
msgstr "Access cluster domain names (multiple)"

#: backend/db_services/dbpermission/constants.py:109
msgid "访问DB名(多个)"
msgstr "Access DB name(s)"

#: backend/db_services/dbpermission/constants.py:110
#: backend/db_services/dbpermission/db_authorize/models.py:31
msgid "错误信息/提示信息"
msgstr "Error message/prompt message"

#: backend/db_services/dbpermission/db_account/handlers.py:230
msgid "当前授权规则已被开区模板{}引用，不允许删除"
msgstr "The current authorization rule has been referenced by the zone template {} and is not allowed to be deleted."

#: backend/db_services/dbpermission/db_account/serializers.py:24
#: backend/db_services/dbpermission/db_account/serializers.py:61
#: backend/db_services/dbpermission/db_account/serializers.py:77
#: backend/db_services/dbpermission/db_account/serializers.py:86
#: backend/db_services/dbpermission/db_account/serializers.py:107
#: backend/db_services/dbpermission/db_account/serializers.py:118
#: backend/db_services/dbpermission/db_authorize/models.py:25
#: backend/db_services/dbpermission/db_authorize/serializers.py:25
#: backend/db_services/dbpermission/db_authorize/serializers.py:94
msgid "账号名称"
msgstr "Account Name"

#: backend/db_services/dbpermission/db_account/serializers.py:25
msgid "账号密码"
msgstr "account password"

#: backend/db_services/dbpermission/db_account/serializers.py:36
msgid "账号名称不符合要求, 请重新更改账号名"
msgstr "The account name does not meet the requirements, please change the account name again."

#: backend/db_services/dbpermission/db_account/serializers.py:39
msgid "账号名称不符合过长，请不要超过31位"
msgstr "The account name is not too long. Please do not exceed 31 characters."

#: backend/db_services/dbpermission/db_account/serializers.py:45
#: backend/ticket/builders/redis/redis_cluster_apply.py:85
msgid "密码强度不符合要求，请重新输入密码。"
msgstr "The password strength does not meet the requirements, please re-enter the password."

#: backend/db_services/dbpermission/db_account/serializers.py:68
#: backend/db_services/dbpermission/db_account/serializers.py:76
#: backend/db_services/dbpermission/db_account/serializers.py:87
#: backend/db_services/dbpermission/db_account/serializers.py:93
#: backend/db_services/dbpermission/db_account/serializers.py:169
msgid "账号ID"
msgstr "Account ID"

#: backend/db_services/dbpermission/db_account/serializers.py:92
#: backend/db_services/dbpermission/db_account/serializers.py:179
#: backend/db_services/dbpermission/db_account/serializers.py:186
msgid "规则ID"
msgstr "rule ID"

#: backend/db_services/dbpermission/db_account/serializers.py:95
#: backend/db_services/dbpermission/db_account/serializers.py:108
#: backend/db_services/dbpermission/db_account/serializers.py:170
#: backend/db_services/dbpermission/db_authorize/serializers.py:28
msgid "访问DB"
msgstr "Access DB"

#: backend/db_services/dbpermission/db_account/serializers.py:100
msgid "账号信息"
msgstr "account information"

#: backend/db_services/dbpermission/db_account/serializers.py:101
msgid "权限列表信息"
msgstr "Permission list information"

#: backend/db_services/dbpermission/db_account/serializers.py:106
msgid "规则ID列表(通过,分割)"
msgstr "Rule ID list (pass, split)"

#: backend/db_services/dbpermission/db_account/serializers.py:119
#: backend/db_services/dbpermission/db_authorize/serializers.py:28
#: backend/db_services/mongodb/permission/db_authorize/serializers.py:22
#: backend/db_services/sqlserver/permission/db_authorize/serializers.py:22
msgid "访问DB列表"
msgstr "access DB list"

#: backend/db_services/dbpermission/db_account/serializers.py:124
msgid "规则数量"
msgstr "number of rules"

#: backend/db_services/dbpermission/db_account/serializers.py:125
msgid "规则信息"
msgstr "rule information"

#: backend/db_services/dbpermission/db_account/serializers.py:134
#: backend/db_services/dbpermission/db_account/serializers.py:139
msgid "dml"
msgstr "dml"

#: backend/db_services/dbpermission/db_account/serializers.py:144
msgid "glob"
msgstr "glob"

#: backend/db_services/dbpermission/db_account/serializers.py:149
msgid "mongo用户权限"
msgstr "mongo user permissions"

#: backend/db_services/dbpermission/db_account/serializers.py:154
msgid "mongo管理权限"
msgstr "mongo management permissions"

#: backend/db_services/dbpermission/db_account/serializers.py:159
msgid "sqlserver-dml权限"
msgstr "sqlserver-dml permissions"

#: backend/db_services/dbpermission/db_account/serializers.py:164
msgid "sqlserver-owner权限"
msgstr "sqlserver-owner permissions"

#: backend/db_services/dbpermission/db_account/serializers.py:171
msgid "授权规则"
msgstr "Authorization rules"

#: backend/db_services/dbpermission/db_account/views.py:108
msgid "修改密码"
msgstr "change Password"

#: backend/db_services/dbpermission/db_account/views.py:120
msgid "添加账号规则"
msgstr "Add Account Rules"

#: backend/db_services/dbpermission/db_account/views.py:132
msgid "查询账号规则清单"
msgstr "Query the list of account rules"

#: backend/db_services/dbpermission/db_account/views.py:155
msgid "查询账号规则"
msgstr "Query Account Rules"

#: backend/db_services/dbpermission/db_account/views.py:170
msgid "修改账号规则"
msgstr "Modify Account Rules"

#: backend/db_services/dbpermission/db_account/views.py:182
msgid "删除账号规则"
msgstr "delete account rules"

#: backend/db_services/dbpermission/db_authorize/handlers.py:151
#: backend/db_services/mongodb/permission/db_authorize/handlers.py:77
#: backend/db_services/sqlserver/permission/db_authorize/handlers.py:68
msgid "前置校验成功"
msgstr "Pre-verification successful"

#: backend/db_services/dbpermission/db_authorize/models.py:23
#: backend/db_services/mysql/permission/clone/models.py:25
#: backend/ticket/models/ticket.py:46 backend/ticket/models/ticket.py:328
#: backend/ticket/models/ticket.py:398 backend/ticket/models/todo.py:52
msgid "关联工单"
msgstr "Associated work order"

#: backend/db_services/dbpermission/db_authorize/models.py:26
#: backend/db_services/dbpermission/db_authorize/serializers.py:26
msgid "源ip列表"
msgstr "source ip list"

#: backend/db_services/dbpermission/db_authorize/models.py:28
msgid "访问DB名列表"
msgstr "Access the list of DB names"

#: backend/db_services/dbpermission/db_authorize/models.py:30
msgid "是否授权成功"
msgstr "Whether the authorization is successful"

#: backend/db_services/dbpermission/db_authorize/models.py:32
#: backend/db_services/mysql/permission/clone/models.py:34
msgid "记录时间"
msgstr "record time"

#: backend/db_services/dbpermission/db_authorize/models.py:35
#: backend/db_services/dbpermission/db_authorize/models.py:36
msgid "授权记录"
msgstr "authorization record"

#: backend/db_services/dbpermission/db_authorize/serializers.py:22
msgid "ip地址"
msgstr "ip address"

#: backend/db_services/dbpermission/db_authorize/serializers.py:23
msgid "资源池主机ID"
msgstr "Resource pool host ID"

#: backend/db_services/dbpermission/db_authorize/serializers.py:31
#: backend/db_services/mongodb/permission/db_authorize/serializers.py:28
#: backend/db_services/sqlserver/permission/db_authorize/serializers.py:28
msgid "集群id列表"
msgstr "list of cluster ids"

#: backend/db_services/dbpermission/db_authorize/serializers.py:39
#: backend/db_services/dbpermission/db_authorize/serializers.py:76
#: backend/db_services/mongodb/permission/db_authorize/serializers.py:36
#: backend/db_services/sqlserver/permission/db_authorize/serializers.py:36
msgid "前置检查结果"
msgstr "Pre-check results"

#: backend/db_services/dbpermission/db_authorize/serializers.py:40
#: backend/db_services/mongodb/permission/db_authorize/serializers.py:37
#: backend/db_services/sqlserver/permission/db_authorize/serializers.py:37
msgid "检查结果信息"
msgstr "Check result information"

#: backend/db_services/dbpermission/db_authorize/serializers.py:41
#: backend/db_services/dbpermission/db_authorize/serializers.py:77
#: backend/db_services/dbpermission/db_authorize/serializers.py:85
#: backend/db_services/mongodb/permission/db_authorize/serializers.py:38
#: backend/db_services/sqlserver/permission/db_authorize/serializers.py:38
#: backend/ticket/builders/mongodb/mongo_authorize.py:25
#: backend/ticket/builders/mongodb/mongo_authorize.py:37
#: backend/ticket/builders/mysql/mysql_authorize_rules.py:40
#: backend/ticket/builders/mysql/mysql_authorize_rules.py:65
#: backend/ticket/builders/sqlserver/sqlserver_authorize.py:27
#: backend/ticket/builders/sqlserver/sqlserver_authorize.py:38
msgid "授权数据缓存uid"
msgstr "Authorization data cache uid"

#: backend/db_services/dbpermission/db_authorize/serializers.py:42
#: backend/db_services/mongodb/permission/db_authorize/serializers.py:39
#: backend/db_services/sqlserver/permission/db_authorize/serializers.py:39
#: backend/ticket/builders/mysql/mysql_authorize_rules.py:41
#: backend/ticket/builders/sqlserver/sqlserver_authorize.py:29
msgid "授权数据信息"
msgstr "Authorization data information"

#: backend/db_services/dbpermission/db_authorize/serializers.py:49
msgid "授权excel文件"
msgstr "Authorize excel file"

#: backend/db_services/dbpermission/db_authorize/serializers.py:60
msgid "excel内容解析失败, 错误信息:{}。提示: 请按照模板填写授权数据"
msgstr ""
"Excel content parsing failed, error message: {}. Tip: Please fill in the "
"authorization data according to the template"

#: backend/db_services/dbpermission/db_authorize/serializers.py:64
msgid "excel表格为空!"
msgstr "The excel sheet is empty!"

#: backend/db_services/dbpermission/db_authorize/serializers.py:69
#: backend/db_services/mysql/permission/clone/serializers.py:109
msgid "excel包含空的单元格！请检查数据的完整性和合法性"
msgstr ""
"excel contains empty cells! Please check the integrity and legality of the "
"data"

#: backend/db_services/dbpermission/db_authorize/serializers.py:78
msgid "授权信息excel文件下载url"
msgstr "Authorization information excel file download url"

#: backend/db_services/dbpermission/db_authorize/serializers.py:90
msgid "授权执行错误excel"
msgstr "authorization execution error excel"

#: backend/db_services/dbpermission/db_authorize/serializers.py:95
msgid "访问源ip"
msgstr "access source ip"

#: backend/db_services/dbpermission/db_authorize/serializers.py:96
msgid "访问集群名称"
msgstr "access cluster name"

#: backend/db_services/dbpermission/db_authorize/serializers.py:97
msgid "访问db名称"
msgstr "access db name"

#: backend/db_services/dbpermission/db_authorize/serializers.py:103
msgid "现网授权列表"
msgstr "Live Network Authorization List"

#: backend/db_services/dbpermission/db_authorize/serializers.py:103
#: backend/ticket/builders/mysql/mysql_openarea.py:53
msgid "授权信息"
msgstr "authorization information"

#: backend/db_services/dbpermission/db_authorize/views.py:71
#: backend/db_services/mongodb/permission/db_authorize/views.py:42
#: backend/db_services/sqlserver/permission/db_authorize/views.py:41
msgid "规则前置检查"
msgstr "Rule pre-check"

#: backend/db_services/dbpermission/db_authorize/views.py:83
msgid "excel规则前置检查"
msgstr "Excel rule pre-check"

#: backend/db_services/dbpermission/db_authorize/views.py:95
msgid "获得授权信息excel文件"
msgstr "Obtain the authorization information excel file"

#: backend/db_services/dbpermission/db_authorize/views.py:107
msgid "现网授权查询(暂搁置)"
msgstr "Live network authorization query (temporarily put on hold)"

#: backend/db_services/dbresource/constants.py:45
msgid "导入主机"
msgstr "import host"

#: backend/db_services/dbresource/constants.py:46
msgid "消费主机"
msgstr "consumer host"

#: backend/db_services/dbresource/enmus.py:17 backend/flow/consts.py:1038
msgid "原地变更"
msgstr "Change in place"

#: backend/db_services/dbresource/enmus.py:18
msgid "替换变更"
msgstr "Replace changes"

#: backend/db_services/dbresource/exceptions.py:18
msgid "资源池服务异常"
msgstr "Resource pool service exception"

#: backend/db_services/dbresource/exceptions.py:23
#: backend/db_services/dbresource/exceptions.py:24
msgid "资源池申请资源异常"
msgstr "Resource pool application resource exception"

#: backend/db_services/dbresource/exceptions.py:29
#: backend/db_services/dbresource/exceptions.py:30
msgid "资源池申请不足异常"
msgstr "Insufficient resource pool application exception"

#: backend/db_services/dbresource/exceptions.py:35
#: backend/db_services/dbresource/exceptions.py:36
msgid "规格操作失败"
msgstr "specification operation failed"

#: backend/db_services/dbresource/exceptions.py:41
#: backend/db_services/dbresource/exceptions.py:42
msgid "规格筛选类不存在"
msgstr "Specification filter class does not exist"

#: backend/db_services/dbresource/filters.py:20
#: backend/db_services/dbresource/serializers.py:323
msgid "规格名称"
msgstr "Specification name"

#: backend/db_services/dbresource/filters.py:22
msgid "规格集群类型"
msgstr "Specification cluster type"

#: backend/db_services/dbresource/filters.py:23
msgid "规格机器类型"
msgstr "Specification Machine Type"

#: backend/db_services/dbresource/filters.py:24
#: backend/db_services/dbresource/serializers.py:241
msgid "规格组件类型"
msgstr "Specification component type"

#: backend/db_services/dbresource/filters.py:25
msgid "ID过滤(逗号分隔)"
msgstr "ID filtering (comma separated)"

#: backend/db_services/dbresource/filters.py:26
msgid "根据时间正序/逆序"
msgstr "According to time order/reverse order"

#: backend/db_services/dbresource/filters.py:27
msgid "过滤启用/禁用的规格"
msgstr "Filter enabled/disabled specifications"

#: backend/db_services/dbresource/handlers.py:332
msgid "请保证输入的集群类型是MongoShardedCluster，且机器规格为mongodb"
msgstr "Please ensure that the entered cluster type is MongoShardedCluster and the machine specification is mongodb."

#: backend/db_services/dbresource/handlers.py:349
msgid "{}核{}G内存{}G容量"
msgstr "{}core{}G memory{}G capacity"

#: backend/db_services/dbresource/handlers.py:393
msgid "请保证请求的规格类型一致"
msgstr "Please ensure that the requested specification types are consistent"

#: backend/db_services/dbresource/serializers.py:39
msgid "专属业务的ID列表"
msgstr "ID list of exclusive business"

#: backend/db_services/dbresource/serializers.py:41
#: backend/db_services/dbresource/serializers.py:60
#: backend/db_services/dbresource/serializers.py:76
#: backend/db_services/dbresource/serializers.py:181
msgid "专属DB"
msgstr "Exclusive DB"

#: backend/db_services/dbresource/serializers.py:43
msgid "机器当前所属的业务id\t"
msgstr "The business id\t to which the machine currently belongs"

#: backend/db_services/dbresource/serializers.py:44
#: backend/db_services/quick_search/constants.py:22
msgid "主机"
msgstr "the host"

#: backend/db_services/dbresource/serializers.py:45
#: backend/db_services/dbresource/serializers.py:92
msgid "标签信息"
msgstr "Label Information"

#: backend/db_services/dbresource/serializers.py:50
msgid "分组类型"
msgstr "grouping type"

#: backend/db_services/dbresource/serializers.py:51
#: backend/db_services/dbresource/serializers.py:77
msgid "机型"
msgstr "model"

#: backend/db_services/dbresource/serializers.py:52
msgid "cpu&mem参数"
msgstr "cpu&amp;mem parameters"

#: backend/db_services/dbresource/serializers.py:53
msgid "磁盘参数"
msgstr "disk parameter"

#: backend/db_services/dbresource/serializers.py:54
msgid "位置匹配参数"
msgstr "position matching parameters"

#: backend/db_services/dbresource/serializers.py:56
#: backend/ticket/builders/redis/redis_toolbox_redis_scale_updown.py:37
#: backend/ticket/builders/redis/redis_toolbox_shard_update.py:40
#: backend/ticket/builders/redis/redis_toolbox_type_update.py:41
msgid "亲和性"
msgstr "Affinity"

#: backend/db_services/dbresource/serializers.py:57
#: backend/ticket/builders/redis/redis_toolbox_redis_scale_updown.py:35
#: backend/ticket/builders/redis/redis_toolbox_shard_update.py:38
#: backend/ticket/builders/redis/redis_toolbox_type_update.py:39
msgid "数量"
msgstr "quantity"

#: backend/db_services/dbresource/serializers.py:61
msgid "业务专属ID"
msgstr "Business exclusive ID"

#: backend/db_services/dbresource/serializers.py:62
msgid "资源申请参数"
msgstr "Resource application parameters"

#: backend/db_services/dbresource/serializers.py:72
msgid "资源最小值"
msgstr "resource minimum"

#: backend/db_services/dbresource/serializers.py:73
msgid "资源最大值"
msgstr "resource max"

#: backend/db_services/dbresource/serializers.py:75
msgid "专属业务"
msgstr "exclusive business"

#: backend/db_services/dbresource/serializers.py:78
msgid "主机IP列表"
msgstr "Host IP list"

#: backend/db_services/dbresource/serializers.py:79
msgid "云区域ID列表"
msgstr "Cloud region ID list"

#: backend/db_services/dbresource/serializers.py:81
msgid "园区"
msgstr "park"

#: backend/db_services/dbresource/serializers.py:83
#: backend/db_services/ipchooser/serializers/base.py:56
msgid "操作系统类型"
msgstr "operating system type"

#: backend/db_services/dbresource/serializers.py:84
msgid "cpu资源限制"
msgstr "cpu resource limitation"

#: backend/db_services/dbresource/serializers.py:85
msgid "内存资源限制"
msgstr "memory resource limit"

#: backend/db_services/dbresource/serializers.py:86
msgid "磁盘资源限制"
msgstr "disk resource limit"

#: backend/db_services/dbresource/serializers.py:87
msgid "磁盘类型"
msgstr "disk type"

#: backend/db_services/dbresource/serializers.py:88
msgid "磁盘挂载点"
msgstr "disk mount point"

#: backend/db_services/dbresource/serializers.py:89
msgid "过滤的规格ID"
msgstr "Filtered specification ID"

#: backend/db_services/dbresource/serializers.py:91
msgid "agent状态"
msgstr "agent state"

#: backend/db_services/dbresource/serializers.py:95
msgid "偏移量"
msgstr "Offset"

#: backend/db_services/dbresource/serializers.py:164
msgid "主机ID列表(逗号分隔)"
msgstr "List of host IDs (comma separated)"

#: backend/db_services/dbresource/serializers.py:168
msgid "资源申请的request_id"
msgstr "request_id of resource application"

#: backend/db_services/dbresource/serializers.py:169
#: backend/db_services/dbresource/serializers.py:173
#: backend/db_services/dbresource/serializers.py:177
msgid "主机ID列表"
msgstr "List of host IDs"

#: backend/db_services/dbresource/serializers.py:178
msgid "Labels"
msgstr "Labels"

#: backend/db_services/dbresource/serializers.py:179
msgid "专用业务ID"
msgstr "Dedicated business ID"

#: backend/db_services/dbresource/serializers.py:185
msgid "是否无专用业务"
msgstr "Whether there is no dedicated business"

#: backend/db_services/dbresource/serializers.py:186
msgid "是否无专用资源类型"
msgstr "Whether there is no dedicated resource type"

#: backend/db_services/dbresource/serializers.py:187
msgid "磁盘挂载点信息"
msgstr "Disk mount point information"

#: backend/db_services/dbresource/serializers.py:188
msgid "机架ID"
msgstr "Rack ID"

#: backend/db_services/dbresource/serializers.py:199
msgid "过滤的单据ID列表"
msgstr "Filtered list of ticket IDs"

#: backend/db_services/dbresource/serializers.py:200
msgid "过滤的单据类型列表"
msgstr "Filtered document type list"

#: backend/db_services/dbresource/serializers.py:201
msgid "过滤的任务ID列表"
msgstr "Filtered list of task IDs"

#: backend/db_services/dbresource/serializers.py:202
msgid "过滤IP列表"
msgstr "Filter IP list"

#: backend/db_services/dbresource/serializers.py:206
msgid "操作开始时间"
msgstr "Operation start time"

#: backend/db_services/dbresource/serializers.py:207
msgid "操作结束时间"
msgstr "Operation end time"

#: backend/db_services/dbresource/serializers.py:208
#: backend/ticket/models/ticket.py:95
msgid "单据状态"
msgstr "ticket status"

#: backend/db_services/dbresource/serializers.py:210
#: backend/db_services/quick_search/serializers.py:33
msgid "分页大小"
msgstr "Paging Size"

#: backend/db_services/dbresource/serializers.py:211
msgid "分页起始位置"
msgstr "page start position"

#: backend/db_services/dbresource/serializers.py:218
msgid "排序参数只能是 'update_time' 或 'total_count'。"
msgstr "The sorting parameter can only be &#39;update_time&#39; or &#39;total_count&#39;."

#: backend/db_services/dbresource/serializers.py:256
msgid "请保证CPU/MEM的最小最大范围合理"
msgstr "Please ensure that the minimum and maximum range of CPU/MEM are reasonable"

#: backend/db_services/dbresource/serializers.py:268
msgid "已存在同名规格，请保证集群类型-规格类型-规格名称必须唯一"
msgstr "A specification with the same name already exists. Please ensure that the cluster type - specification type - specification name must be unique."

#: backend/db_services/dbresource/serializers.py:281
msgid "已存在同种规格配置，请不要在相同规格类型下重复录入"
msgstr "The same specification configuration already exists. Please do not enter it repeatedly under the same specification type."

#: backend/db_services/dbresource/serializers.py:291
msgid "【{}】后端磁盘挂载点必须包含/data，可选/data1"
msgstr "[{}] The backend disk mount point must contain /data, optional /data1"

#: backend/db_services/dbresource/serializers.py:299
msgid "【{}】后端磁盘挂载点必须包含/data"
msgstr "[{}] The backend disk mount point must contain /data"

#: backend/db_services/dbresource/serializers.py:309
#: backend/db_services/dbresource/serializers.py:316
msgid "规格id列表"
msgstr "specification id list"

#: backend/db_services/dbresource/serializers.py:324
msgid "规格ID(更新时传递)"
msgstr "Spec ID (passed when updating)"

#: backend/db_services/dbresource/serializers.py:328
msgid "逻辑城市"
msgstr "logic city"

#: backend/db_services/dbresource/serializers.py:344
msgid "角色类型"
msgstr "role type"

#: backend/db_services/dbresource/serializers.py:345
#: backend/ticket/builders/redis/redis_toolbox_redis_scale_updown.py:47
#: backend/ticket/builders/redis/redis_toolbox_shard_update.py:51
#: backend/ticket/builders/redis/redis_toolbox_type_update.py:54
msgid "当前容量需求"
msgstr "Current capacity requirements"

#: backend/db_services/dbresource/serializers.py:346
#: backend/ticket/builders/redis/redis_toolbox_redis_scale_updown.py:48
#: backend/ticket/builders/redis/redis_toolbox_shard_update.py:52
#: backend/ticket/builders/redis/redis_toolbox_type_update.py:55
msgid "未来容量需求"
msgstr "future capacity needs"

#: backend/db_services/dbresource/serializers.py:347
msgid "所需分片数"
msgstr "Number of shards required"

#: backend/db_services/dbresource/serializers.py:356
msgid "qps范围"
msgstr "qps range"

#: backend/db_services/dbresource/serializers.py:377
msgid "规格ID列表"
msgstr "Specification ID list"

#: backend/db_services/dbresource/views/resource.py:142
msgid "获取DBA业务下的主机信息"
msgstr "Obtain host information under the DBA service"

#: backend/db_services/dbresource/views/resource.py:170
msgid "查询DBA业务下的主机信息"
msgstr "Query host information under DBA business"

#: backend/db_services/dbresource/views/resource.py:222
msgid "查询资源导入任务"
msgstr "Query resource import tasks"

#: backend/db_services/dbresource/views/resource.py:246
#: backend/ticket/builders/__init__.py:383
#: backend/ticket/builders/mongodb/mongo_restore.py:242
#: backend/ticket/builders/mongodb/mongo_restore.py:269
#: backend/ticket/builders/redis/redis_toolbox_redis_scale_updown.py:55
#: backend/ticket/builders/redis/redis_toolbox_shard_update.py:50
#: backend/ticket/builders/redis/redis_toolbox_type_update.py:53
#: backend/ticket/constants.py:477
msgid "资源申请"
msgstr "resource application"

#: backend/db_services/dbresource/views/resource.py:274
msgid "获取操作系统类型"
msgstr "Get operating system type"

#: backend/db_services/dbresource/views/resource.py:292
msgid "获取机型列表"
msgstr "Get model list"

#: backend/db_services/dbresource/views/resource.py:300
msgid "资源预申请"
msgstr "Resource pre-application"

#: backend/db_services/dbresource/views/resource.py:312
#: backend/ticket/builders/mongodb/mongo_restore.py:261
#: backend/ticket/builders/mongodb/mongo_restore.py:269
msgid "资源确认"
msgstr "Resource Confirmation"

#: backend/db_services/dbresource/views/resource.py:357
msgid "获取资源导入相关链接"
msgstr "Get resource import related links"

#: backend/db_services/dbresource/views/resource.py:367
msgid "查询资源操作记录"
msgstr "Query resource operation records"

#: backend/db_services/dbresource/views/resource.py:418
msgid "规格数量的预计"
msgstr "Estimated quantity of specifications"

#: backend/db_services/dbresource/views/sepc.py:100
msgid "新建规格"
msgstr "new specification"

#: backend/db_services/dbresource/views/sepc.py:107
msgid "规格详情"
msgstr "Specification details"

#: backend/db_services/dbresource/views/sepc.py:114
msgid "更新规格"
msgstr "update specification"

#: backend/db_services/dbresource/views/sepc.py:137
msgid "规格: {}已经被引用，只允许拓展机型"
msgstr "Specifications: {} has been quoted, only extended models are allowed"

#: backend/db_services/dbresource/views/sepc.py:140
msgid "规格: {}已经被引用，无法修改配置！(只允许拓展机型和修改描述)"
msgstr ""
"Specification: {} has been referenced, cannot modify the configuration! "
"(Only allow to expand the model and modify the description)"

#: backend/db_services/dbresource/views/sepc.py:145
msgid "更新规格的启用禁用态"
msgstr "Update specification enabled and disabled status"

#: backend/db_services/dbresource/views/sepc.py:155
msgid "查询规格列表"
msgstr "Query specification list"

#: backend/db_services/dbresource/views/sepc.py:174
msgid "删除规格"
msgstr "delete specification"

#: backend/db_services/dbresource/views/sepc.py:180
msgid "规格: {}已经被引用，无法被删除"
msgstr "Specification: {} is already referenced and cannot be deleted"

#: backend/db_services/dbresource/views/sepc.py:186
msgid "校验是否存在同名规格"
msgstr "Verify whether the specification with the same name exists"

#: backend/db_services/dbresource/views/sepc.py:200
msgid "批量删除规格"
msgstr "Batch delete specifications"

#: backend/db_services/dbresource/views/sepc.py:208
msgid "规格: {}已经被引用，无法删除！"
msgstr "Specification: {} has been referenced and cannot be deleted!"

#: backend/db_services/dbresource/views/sepc.py:212
msgid "获取推荐规格"
msgstr "Get Recommended Specifications"

#: backend/db_services/dbresource/views/sepc.py:263
msgid "获取qps的范围"
msgstr "Get the range of qps"

#: backend/db_services/dbresource/views/sepc.py:282
msgid "集群: {}后端没有可选任何规格，请前往规格页面配置"
msgstr "Cluster: {}The backend does not have any optional specifications, please go to the specifications page to configure"

#: backend/db_services/dbresource/views/sepc.py:296
msgid "筛选集群部署规格方案"
msgstr "Filter cluster deployment specifications and solutions"

#: backend/db_services/dbresource/views/sepc.py:313
msgid "集群:{}的规格筛选类不存在，请实现相应接口"
msgstr "Cluster: The specification filtering class of {} does not exist. Please implement the corresponding interface."

#: backend/db_services/group/serializers.py:20
msgid "实例数量"
msgstr "number of instances"

#: backend/db_services/group/serializers.py:28
msgid "在该业务下已存在同名的分组，请重新命名分组"
msgstr ""
"A group with the same name already exists under this business, please rename "
"the group"

#: backend/db_services/group/serializers.py:38
msgid "新分组ID"
msgstr "new group ID"

#: backend/db_services/group/serializers.py:39
msgid "待移动实例的ID列表"
msgstr "ID list of instances to be moved"

#: backend/db_services/group/views.py:29
msgid "分组"
msgstr "group"

#: backend/db_services/group/views.py:76 backend/db_services/group/views.py:77
msgid "分组详情"
msgstr "Group details"

#: backend/db_services/group/views.py:85
msgid "分组列表"
msgstr "group list"

#: backend/db_services/group/views.py:99 backend/db_services/group/views.py:101
msgid "创建新分组"
msgstr "Create a new group"

#: backend/db_services/group/views.py:108
#: backend/db_services/group/views.py:110
msgid "更新分组信息"
msgstr "Update group information"

#: backend/db_services/group/views.py:117
#: backend/db_services/group/views.py:119
msgid "删除分组"
msgstr "delete group"

#: backend/db_services/group/views.py:127
msgid "移动实例到新组"
msgstr "Move instance to new group"

#: backend/db_services/infras/constants.py:19
msgid "不足"
msgstr "insufficient"

#: backend/db_services/infras/constants.py:20
msgid "充足"
msgstr "adequate"

#: backend/db_services/infras/host.py:41 backend/db_services/infras/host.py:43
msgid "标准型SA2"
msgstr "Standard SA2"

#: backend/db_services/infras/host.py:41 backend/db_services/infras/host.py:43
#: backend/db_services/infras/host.py:45
msgid "1核"
msgstr "1 core"

#: backend/db_services/infras/host.py:42
msgid "标准型S6"
msgstr "Standard S6"

#: backend/db_services/infras/host.py:42 backend/db_services/infras/host.py:44
#: backend/db_services/infras/host.py:46
msgid "2核"
msgstr "2 cores"

#: backend/db_services/infras/host.py:44
msgid "标准型S5"
msgstr "Standard S5"

#: backend/db_services/infras/host.py:60
msgid "无限制"
msgstr "Unlimited"

#: backend/db_services/infras/serializers.py:65
#: backend/ticket/builders/common/bigdata.py:89
#: backend/ticket/builders/common/bigdata.py:123
#: backend/ticket/builders/common/bigdata.py:182
#: backend/ticket/builders/influxdb/influxdb_apply.py:38
#: backend/ticket/builders/mongodb/mongo_add_mongos.py:37
#: backend/ticket/builders/mongodb/mongo_add_shard_nodes.py:41
#: backend/ticket/builders/mongodb/mongo_cutoff.py:45
#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:50
#: backend/ticket/builders/mongodb/mongo_scale_updown.py:40
#: backend/ticket/builders/mongodb/mongo_shard_apply.py:42
#: backend/ticket/builders/mysql/mysql_single_apply.py:57
#: backend/ticket/builders/pulsar/pulsar_shrink.py:31
#: backend/ticket/builders/redis/redis_cluster_apply.py:46
#: backend/ticket/builders/redis/redis_instance_apply.py:48
#: backend/ticket/builders/redis/redis_toolbox_add_slave.py:46
#: backend/ticket/builders/redis/redis_toolbox_autofix.py:43
#: backend/ticket/builders/redis/redis_toolbox_cut_off.py:41
#: backend/ticket/builders/redis/redis_toolbox_fixpoint_make.py:75
#: backend/ticket/builders/redis/redis_toolbox_proxy_scale_up.py:36
#: backend/ticket/builders/redis/redis_toolbox_redis_scale_updown.py:57
#: backend/ticket/builders/redis/redis_toolbox_shard_update.py:82
#: backend/ticket/builders/redis/redis_toolbox_type_update.py:85
#: backend/ticket/builders/sqlserver/sqlserver_add_slave.py:35
#: backend/ticket/builders/sqlserver/sqlserver_restore_slave.py:40
#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:56
#: backend/ticket/builders/tendbcluster/tendb_apply.py:38
#: backend/ticket/builders/tendbcluster/tendb_node_reblance.py:45
msgid "主机来源"
msgstr "host source"

#: backend/db_services/infras/serializers.py:66
#: backend/ticket/builders/mysql/mysql_single_apply.py:59
#: backend/ticket/builders/redis/redis_cluster_apply.py:47
#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:58
msgid "部署节点"
msgstr "deployment node"

#: backend/db_services/infras/views.py:40
msgid "查询集群类型"
msgstr "Query cluster type"

#: backend/db_services/infras/views.py:53
msgid "查询服务器资源的城市信息"
msgstr "Query the city information of server resources"

#: backend/db_services/infras/views.py:54
#: backend/db_services/infras/views.py:64
msgid "城市信息"
msgstr "city information"

#: backend/db_services/infras/views.py:63
msgid "查询逻辑城市映射关系"
msgstr "Query logical city mapping relationship"

#: backend/db_services/infras/views.py:78
msgid "服务器规格列表"
msgstr "List of Server Specifications"

#: backend/db_services/infras/views.py:79
msgid "服务器规格信息"
msgstr "Server specification information"

#: backend/db_services/infras/views.py:93
msgid "容量规格列表"
msgstr "List of capacity specifications"

#: backend/db_services/infras/views.py:95
msgid "申请容量规格信息"
msgstr "Apply for capacity specification information"

#: backend/db_services/infras/views.py:127
msgid "主机{}配置异常，无法获取到合法的cpu({})或内存({})"
msgstr ""
"The configuration of the host {} is abnormal, and the legal cpu ({}) or "
"memory ({}) cannot be obtained"

#: backend/db_services/infras/views.py:143
msgid "暂不支持该集群类型: {}"
msgstr "This cluster type is not currently supported: {}"

#: backend/db_services/ipchooser/constants.py:54
msgid "字段分隔符"
msgstr "field separator"

#: backend/db_services/ipchooser/constants.py:55
msgid "全量返回标志"
msgstr "full return sign"

#: backend/db_services/ipchooser/constants.py:56
msgid "默认模糊查询字段"
msgstr "Default fuzzy query field"

#: backend/db_services/ipchooser/constants.py:57
msgid "主机列表默认返回字段"
msgstr "host list default return field"

#: backend/db_services/ipchooser/constants.py:106
msgid "完整模式"
msgstr "full mode"

#: backend/db_services/ipchooser/constants.py:106
msgid "空闲机模式"
msgstr "idle mode"

#: backend/db_services/ipchooser/constants.py:129
msgid "存活"
msgstr "survive"

#: backend/db_services/ipchooser/constants.py:129
msgid "未存活"
msgstr "not alive"

#: backend/db_services/ipchooser/exceptions.py:21
#: backend/db_services/ipchooser/exceptions.py:22
msgid "参数校验失败"
msgstr "Parameter verification failed"

#: backend/db_services/ipchooser/exceptions.py:27
#, python-brace-format
msgid "业务【bk_biz_id: {bk_biz_id}】拓扑不存在"
msgstr "Business [bk_biz_id: {bk_biz_id}] topology does not exist"

#: backend/db_services/ipchooser/exceptions.py:28
msgid "业务拓扑不存在"
msgstr "Business topology does not exist"

#: backend/db_services/ipchooser/mock_data.py:30
#: backend/db_services/ipchooser/mock_data.py:89
#: backend/db_services/ipchooser/mock_data.py:110
#: backend/db_services/ipchooser/mock_data.py:138
#: backend/db_services/ipchooser/mock_data.py:149
#: backend/db_services/ipchooser/mock_data.py:171
#: backend/db_services/redis/autofix/models.py:75
#: backend/flow/plugins/components/collections/mysql/authorize_rules.py:98
#: backend/ticket/constants.py:79 backend/ticket/constants.py:90
msgid "成功"
msgstr "success"

#: backend/db_services/ipchooser/mock_data.py:34
#: backend/db_services/ipchooser/mock_data.py:92
#: backend/db_services/ipchooser/mock_data.py:124
msgid "蓝鲸"
msgstr "blue whale"

#: backend/db_services/ipchooser/mock_data.py:41
#: backend/db_services/ipchooser/mock_data.py:96
msgid "mark测试"
msgstr "mark test"

#: backend/db_services/ipchooser/mock_data.py:48
msgid "空闲机模块"
msgstr "idle machine module"

#: backend/db_services/ipchooser/mock_data.py:60
msgid "空闲机池"
msgstr "free machine pool"

#: backend/db_services/ipchooser/mock_data.py:67
#: backend/ticket/builders/common/base.py:152
msgid "空闲机"
msgstr "idle machine"

#: backend/db_services/ipchooser/query/resource.py:487
msgid "直连区域"
msgstr "Direct Mode"

#: backend/db_services/ipchooser/serializers/base.py:18
msgid "数据起始位置"
msgstr "data starting position"

#: backend/db_services/ipchooser/serializers/base.py:20
msgid "拉取数据数量，不传或传 `-1` 表示拉取所有"
msgstr ""
"The number of data to be pulled, if not passed or `-1` means to pull all"

#: backend/db_services/ipchooser/serializers/base.py:29
msgid "资源范围类型"
msgstr "resource scope type"

#: backend/db_services/ipchooser/serializers/base.py:30
msgid "资源范围ID"
msgstr "resource scope id"

#: backend/db_services/ipchooser/serializers/base.py:48
msgid "节点类型ID"
msgstr "node type ID"

#: backend/db_services/ipchooser/serializers/base.py:54
msgid "内网IP"
msgstr "Intranet IP"

#: backend/db_services/ipchooser/serializers/base.py:55
msgid "内网IPv6"
msgstr "Intranet IPv6"

#: backend/db_services/ipchooser/serializers/base.py:57
msgid "主机名称"
msgstr "host name"

#: backend/db_services/ipchooser/serializers/base.py:58
#: backend/db_services/ipchooser/serializers/base.py:68
msgid "模糊搜索内容（支持同时对`主机IP`/`主机名`/`操作系统`进行模糊搜索"
msgstr ""
"Fuzzy search content (supports fuzzy search for `host IP`/`host name`/"
"`operating system` at the same time"

#: backend/db_services/ipchooser/serializers/base.py:62
msgid "是否获取所有资源范围的拓扑结构，默认为 `false`"
msgstr ""
"Whether to get the topology of all resource scopes, the default is `false`"

#: backend/db_services/ipchooser/serializers/base.py:63
msgid "要获取拓扑结构的资源范围数组"
msgstr "Array of resource scopes to get topology"

#: backend/db_services/ipchooser/serializers/base.py:70
msgid "云区域过滤id"
msgstr "cloud region filter id"

#: backend/db_services/ipchooser/serializers/base.py:89
msgid "主机元信息"
msgstr "Host meta information"

#: backend/db_services/ipchooser/serializers/base.py:91
msgid "IPv4 协议下的主机IP"
msgstr "Host IP under IPv4 protocol"

#: backend/db_services/ipchooser/serializers/base.py:92
msgid "主机 ID，优先取 `host_id`，否则取 `ip` + `cloud_id`"
msgstr "Host ID, take `host_id` first, otherwise take `ip` + `cloud_id`"

#: backend/db_services/ipchooser/serializers/base.py:96
msgid "请传入 host_id 或者 cloud_id + ip"
msgstr "Please pass in host_id or cloud_id + ip"

#: backend/db_services/ipchooser/serializers/host_sers.py:20
#: backend/db_services/ipchooser/serializers/host_sers.py:52
#: backend/db_services/ipchooser/serializers/topo_sers.py:20
#: backend/db_services/ipchooser/serializers/topo_sers.py:46
msgid "模式"
msgstr "model"

#: backend/db_services/ipchooser/serializers/host_sers.py:23
msgid "IPv4 列表"
msgstr "IPv4 list"

#: backend/db_services/ipchooser/serializers/host_sers.py:24
msgid "IPv4，支持的输入格式：`cloud_id:ip` / `ip`"
msgstr "IPv4, supported input format: `cloud_id:ip` / `ip`"

#: backend/db_services/ipchooser/serializers/host_sers.py:29
msgid "IPv6 列表"
msgstr "IPv6 list"

#: backend/db_services/ipchooser/serializers/host_sers.py:30
msgid "IPv6，支持的输入格式：`cloud_id:ipv6` / `ipv6`"
msgstr "IPv6, supported input format: `cloud_id:ipv6` / `ipv6`"

#: backend/db_services/ipchooser/serializers/host_sers.py:35
msgid "关键字列表"
msgstr "keyword list"

#: backend/db_services/ipchooser/serializers/host_sers.py:36
msgid "关键字，解析出的`主机名`、`host_id` 等关键字信息"
msgstr "Keywords, keyword information such as `hostname`, `host_id`, etc."

#: backend/db_services/ipchooser/serializers/topo_sers.py:71
msgid "查询过滤条件"
msgstr "query filter"

#: backend/db_services/ipchooser/serializers/topo_sers.py:79
msgid "拓扑信息列表"
msgstr "Topology Information List"

#: backend/db_services/ipchooser/serializers/topo_sers.py:79
msgid "拓扑信息"
msgstr "topology information"

#: backend/db_services/ipchooser/views.py:34
msgid "批量获取含各节点主机数量的拓扑树"
msgstr "Get the topology tree with the number of hosts on each node in batches"

#: backend/db_services/ipchooser/views.py:50
msgid "根据多个拓扑节点与搜索条件批量分页查询所包含的主机信息"
msgstr ""
"According to multiple topological nodes and search conditions, batch paging "
"query contains host information"

#: backend/db_services/ipchooser/views.py:68
msgid "根据多个拓扑节点与搜索条件批量分页查询所包含的主机 ID 信息"
msgstr ""
"According to multiple topological nodes and search conditions, the host ID "
"information contained in the batch pagination query"

#: backend/db_services/ipchooser/views.py:85
msgid "根据主机过滤查询主机的拓扑信息"
msgstr "Query host topology information based on host filtering"

#: backend/db_services/ipchooser/views.py:108
msgid ""
"根据用户手动输入的`IP`/`IPv6`/`主机名`/`host_id`等关键字信息获取真实存在的机"
"器信息"
msgstr ""
"Obtain real machine information based on keyword information such as `IP`/"
"`IPv6`/`hostname`/`host_id` manually entered by the user"

#: backend/db_services/ipchooser/views.py:126
msgid "根据主机关键信息获取机器详情信息"
msgstr "Obtain machine detailed information based on host key information"

#: backend/db_services/ipchooser/views.py:168
msgid "获取自定义配置，比如表格列字段及顺序"
msgstr "Get custom configuration, such as table column fields and order"

#: backend/db_services/ipchooser/views.py:184
msgid "保存用户自定义配置"
msgstr "Save user-defined configuration"

#: backend/db_services/ipchooser/views.py:198
msgid "查询云区域的信息"
msgstr "Query information about cloud regions"

#: backend/db_services/meta_import/constants.py:13
msgid "元数据迁移"
msgstr "Metadata migration"

#: backend/db_services/meta_import/serializers.py:56
#: backend/db_services/meta_import/serializers.py:87
#: backend/db_services/meta_import/serializers.py:116
msgid "元数据json文件"
msgstr "Metadata json file"

#: backend/db_services/meta_import/serializers.py:60
#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:34
msgid "代理层规格ID"
msgstr "Agent layer specification ID"

#: backend/db_services/meta_import/serializers.py:63
#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:35
msgid "存储层规格ID"
msgstr "Storage layer specification ID"

#: backend/db_services/meta_import/serializers.py:72
#: backend/db_services/meta_import/serializers.py:80
#: backend/db_services/meta_import/serializers.py:104
#: backend/db_services/meta_import/serializers.py:128
msgid "域名列表文件"
msgstr "Domain name list file"

#: backend/db_services/meta_import/serializers.py:91
msgid "Spider规格ID"
msgstr "Spider specification ID"

#: backend/db_services/meta_import/serializers.py:94
msgid "Remote规格ID"
msgstr "Remote specification ID"

#: backend/db_services/meta_import/serializers.py:102
#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:53
#: backend/ticket/builders/mongodb/mongo_shard_apply.py:49
#: backend/ticket/builders/riak/riak_apply.py:31
#: backend/ticket/builders/riak/riak_migrate.py:31
#: backend/ticket/builders/tendbcluster/tendb_apply.py:49
msgid "云区域"
msgstr "cloud area"

#: backend/db_services/meta_import/serializers.py:105
#: backend/ticket/builders/tendbcluster/append_deploy_ctl.py:26
msgid "是否使用mydumper流式备份迁移"
msgstr "Whether to use mydumper streaming backup migration"

#: backend/db_services/meta_import/serializers.py:106
#: backend/ticket/builders/tendbcluster/append_deploy_ctl.py:27
msgid "导入到tdbctl前,是否先删除"
msgstr "Before importing to tdbctl, whether to delete it first"

#: backend/db_services/meta_import/serializers.py:107
#: backend/ticket/builders/tendbcluster/append_deploy_ctl.py:28
msgid "mydumper 并发"
msgstr "mydumper concurrency"

#: backend/db_services/meta_import/serializers.py:108
#: backend/ticket/builders/tendbcluster/append_deploy_ctl.py:29
msgid "是否使用mydumper,myloader迁移"
msgstr "Whether to use mydumper, myloader migration"

#: backend/db_services/meta_import/serializers.py:119
#: backend/ticket/builders/tendbsingle/metadata_import.py:33
msgid "存储机规格ID"
msgstr "Storage machine specification ID"

#: backend/db_services/meta_import/views.py:61
msgid "TenDB HA 元数据导入"
msgstr "TenDB HA metadata import"

#: backend/db_services/meta_import/views.py:86
msgid "TenDB HA 标准化接入"
msgstr "TenDB HA standardized access"

#: backend/db_services/meta_import/views.py:116
#: backend/db_services/meta_import/views.py:186
#: backend/db_services/meta_import/views.py:233
#: backend/db_services/meta_import/views.py:302
msgid "cluster {} not found"
msgstr "cluster {} not found"

#: backend/db_services/meta_import/views.py:133
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_metadata_import_flow.py:50
#: backend/ticket/builders/spider/metadata_import.py:237
#: backend/ticket/constants.py:244
msgid "TenDB Cluster 元数据导入"
msgstr "TenDB Cluster metadata import"

#: backend/db_services/meta_import/views.py:156 backend/ticket/constants.py:243
msgid "TenDB Cluster 集群标准化"
msgstr "TenDB Cluster cluster standardization"

#: backend/db_services/meta_import/views.py:203
#: backend/ticket/builders/tendbcluster/append_deploy_ctl.py:76
#: backend/ticket/constants.py:245
msgid "TenDB Cluster 追加部署中控"
msgstr "TenDB Cluster additional deployment central control"

#: backend/db_services/meta_import/views.py:249
#: backend/flow/engine/bamboo/scene/tendbsingle/metadata_import.py:50
#: backend/ticket/builders/tendbsingle/metadata_import.py:201
#: backend/ticket/constants.py:246
msgid "TenDB Single 元数据导入"
msgstr "TenDB Single metadata import"

#: backend/db_services/meta_import/views.py:272 backend/ticket/constants.py:247
msgid "TenDB Single 集群标准化"
msgstr "TenDB Single cluster standardization"

#: backend/db_services/mongodb/permission/db_authorize/handlers.py:62
msgid "无法查询用户{}对应的密码"
msgstr "Unable to query the password corresponding to user {}"

#: backend/db_services/mongodb/permission/db_authorize/handlers.py:68
#: backend/db_services/sqlserver/permission/db_authorize/handlers.py:60
msgid "不存在{}-{}这样的规则模板"
msgstr "There is no such rule template as {}-{}"

#: backend/db_services/mongodb/permission/db_authorize/handlers.py:75
msgid "存在不合法的集群域名"
msgstr "There is an illegal cluster domain name"

#: backend/db_services/mongodb/permission/db_authorize/serializers.py:21
#: backend/db_services/sqlserver/permission/db_authorize/serializers.py:21
msgid "账号名"
msgstr "Account name"

#: backend/db_services/mongodb/permission/db_authorize/serializers.py:24
msgid "mongo账户规则"
msgstr "mongo account rules"

#: backend/db_services/mongodb/resources/views.py:96
msgid "获取实例的角色类型"
msgstr "Get the role type of the instance"

#: backend/db_services/mongodb/restore/handlers.py:51
msgid "距离回档时间点7天内没有备份日志"
msgstr "There is no backup log within 7 days from the rollback time point"

#: backend/db_services/mongodb/restore/handlers.py:59
msgid "无法找到时间点{}附近的全备日志记录"
msgstr "Unable to find full log records near time point {}"

#: backend/db_services/mongodb/restore/handlers.py:122
#: backend/db_services/mongodb/restore/handlers.py:138
msgid "{}-{}内没有通过单据备份的日志"
msgstr "There are no logs backed up by documents in {}-{}"

#: backend/db_services/mongodb/restore/serializers.py:26
msgid "分片集群只支持查询单个"
msgstr "Sharded clusters only support querying a single"

#: backend/db_services/mongodb/restore/serializers.py:40
msgid "过滤ip，多个ip以逗号分割"
msgstr "Filter IP, multiple IPs separated by commas"

#: backend/db_services/mongodb/restore/views.py:39
msgid "获取集群单据备份记录"
msgstr "Get cluster document backup records"

#: backend/db_services/mongodb/restore/views.py:52
msgid "获取集群备份记录"
msgstr "Get cluster backup records"

#: backend/db_services/mongodb/restore/views.py:66
msgid "查询定点构造记录"
msgstr "Query fixed-point construction records"

#: backend/db_services/mysql/cluster/serializers.py:36
msgid "集群过滤条件列表"
msgstr "List of cluster filter criteria"

#: backend/db_services/mysql/cluster/serializers.py:66
msgid "查询的实例列表"
msgstr "Query instance list"

#: backend/db_services/mysql/cluster/serializers.py:67
msgid "查询的机器列表"
msgstr "Query machine list"

#: backend/db_services/mysql/cluster/serializers.py:81
msgid "is_stand_by标志(默认获取带有is_stand_by标志的slave)"
msgstr "is_stand_by flag (obtains the slave with is_stand_by flag by default)"

#: backend/db_services/mysql/cluster/views.py:41
msgid "通过过滤条件批量查询集群"
msgstr "Query clusters in batches by filtering conditions"

#: backend/db_services/mysql/cluster/views.py:54
msgid "查询tendbcluster集群的remote_db/remote_dr"
msgstr "Query the remote_db/remote_dr of the tendbcluster cluster"

#: backend/db_services/mysql/cluster/views.py:65
msgid "[tendbcluster]根据实例/机器查询关联对"
msgstr "[tendbcluster]Query related pairs based on instance/machine"

#: backend/db_services/mysql/cluster/views.py:76
msgid "获取关联集群从库的交集"
msgstr "Get the intersection of associated cluster slave libraries"

#: backend/db_services/mysql/dumper/filters.py:22
msgid "库名"
msgstr "Library name"

#: backend/db_services/mysql/dumper/filters.py:23
msgid "表名"
msgstr "table name"

#: backend/db_services/mysql/dumper/filters.py:39
msgid "dumper订阅规则"
msgstr "dumper subscription rules"

#: backend/db_services/mysql/dumper/filters.py:41
msgid "实例IP:Port"
msgstr "Instance IP:Port"

#: backend/db_services/mysql/dumper/filters.py:42
msgid "dumper id"
msgstr "dumper id"

#: backend/db_services/mysql/dumper/filters.py:44
#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:39
msgid "接收端类型"
msgstr "Receiver type"

#: backend/db_services/mysql/dumper/filters.py:45
msgid "同步方式"
msgstr "sync mode"

#: backend/db_services/mysql/dumper/filters.py:46
msgid "接收端地址"
msgstr "Receiver address"

#: backend/db_services/mysql/dumper/models.py:27
msgid "订阅配置名"
msgstr "Subscription configuration name"

#: backend/db_services/mysql/dumper/models.py:28
#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:49
msgid "数据同步方式"
msgstr "Data synchronization method"

#: backend/db_services/mysql/dumper/models.py:29
msgid "订阅库表信息 eg: [{'db_name': 'xx', 'table_names': [....]}, ...]"
msgstr "Subscription database table information eg: [{&#39;db_name&#39;: &#39;xx&#39;, &#39;table_names&#39;: [....]}, ...]"

#: backend/db_services/mysql/dumper/models.py:30
msgid "订阅配置关联的订阅实例列表"
msgstr "List of subscription instances associated with the subscription configuration"

#: backend/db_services/mysql/dumper/models.py:33
#: backend/db_services/mysql/dumper/models.py:34
msgid "dumper数据订阅配置"
msgstr "dumper data subscription configuration"

#: backend/db_services/mysql/dumper/serializers.py:25
msgid "DB名称"
msgstr "DB name"

#: backend/db_services/mysql/dumper/serializers.py:26
msgid "表名列表"
msgstr "table name list"

#: backend/db_services/mysql/dumper/serializers.py:28
msgid "配置表信息"
msgstr "Configuration table information"

#: backend/db_services/mysql/dumper/serializers.py:29
msgid "dumper实例数"
msgstr "Number of dumper instances"

#: backend/db_services/mysql/dumper/serializers.py:30
msgid "dumper实例列表"
msgstr "dumper instance list"

#: backend/db_services/mysql/dumper/serializers.py:31
msgid "正在部署dumper的任务列表"
msgstr "Task list for deploying dumper"

#: backend/db_services/mysql/dumper/serializers.py:86
msgid "订阅配置名称"
msgstr "Subscription configuration name"

#: backend/db_services/mysql/dumper/serializers.py:90
#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:52
msgid "dumper配置ID"
msgstr "dumper placement ID"

#: backend/db_services/mysql/dumper/views/dumper_config.py:72
msgid "查询数据订阅配置列表"
msgstr "Query data subscription configuration list"

#: backend/db_services/mysql/dumper/views/dumper_config.py:85
msgid "数据订阅配置详情"
msgstr "Data subscription configuration details"

#: backend/db_services/mysql/dumper/views/dumper_config.py:92
msgid "数据订阅配置删除"
msgstr "Data subscription configuration deletion"

#: backend/db_services/mysql/dumper/views/dumper_config.py:99
msgid "数据订阅配置更新"
msgstr "Data subscription configuration update"

#: backend/db_services/mysql/dumper/views/dumper_config.py:106
msgid "数据订阅配置部分更新"
msgstr "Data subscription configuration part updated"

#: backend/db_services/mysql/dumper/views/dumper_config.py:113
msgid "校验订阅配置是否重名"
msgstr "Verify whether the subscription configuration has the same name"

#: backend/db_services/mysql/dumper/views/dumper_config.py:124
msgid "查询dumper配置正在运行的任务"
msgstr "Query dumper configuration running tasks"

#: backend/db_services/mysql/dumper/views/dumper_instance.py:41
msgid "查询数据订阅实例列表"
msgstr "Query the list of data subscription instances"

#: backend/db_services/mysql/fixpoint_rollback/handlers.py:422
msgid "查询集群{}的备份日志"
msgstr "Query the backup log of cluster {}"

#: backend/db_services/mysql/fixpoint_rollback/handlers.py:463
msgid "作业【{}】执行失败，job_instance_id: {}"
msgstr "Job [{}] failed to execute, job_instance_id: {}"

#: backend/db_services/mysql/fixpoint_rollback/handlers.py:523
msgid "无法找到小于时间点{}附近的日志记录，请检查时间点的合法性或稍后重试"
msgstr ""
"Unable to find log records less than near the time point {}, please check "
"the legitimacy of the time point or try again later"

#: backend/db_services/mysql/fixpoint_rollback/serializers.py:24
#: backend/db_services/sqlserver/rollback/serializers.py:27
msgid "查询时间间隔"
msgstr "query time interval"

#: backend/db_services/mysql/fixpoint_rollback/serializers.py:44
#: backend/db_services/sqlserver/rollback/serializers.py:50
#: backend/db_services/sqlserver/rollback/serializers.py:78
#: backend/ticket/builders/mongodb/mongo_restore.py:46
#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:38
#: backend/ticket/builders/sqlserver/sqlserver_rollback.py:54
#: backend/ticket/builders/tendbcluster/tendb_fixpoint_rollback.py:47
msgid "回档时间"
msgstr "Rollback time"

#: backend/db_services/mysql/fixpoint_rollback/serializers.py:46
#: backend/db_services/mysql/sql_import/serializers.py:79
#: backend/ticket/builders/mysql/mysql_add_slave.py:33
#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:36
#: backend/ticket/builders/mysql/mysql_migrate_cluster.py:37
#: backend/ticket/builders/mysql/mysql_migrate_upgrade.py:45
#: backend/ticket/builders/mysql/mysql_restore_local_slave.py:30
#: backend/ticket/builders/mysql/mysql_restore_slave.py:30
#: backend/ticket/builders/tendbcluster/tendb_migrate_cluster.py:38
#: backend/ticket/builders/tendbcluster/tendb_node_reblance.py:42
#: backend/ticket/builders/tendbcluster/tendb_restore_local_slave.py:34
#: backend/ticket/builders/tendbcluster/tendb_restore_slave.py:36
msgid "备份源"
msgstr "backup source"

#: backend/db_services/mysql/fixpoint_rollback/serializers.py:62
msgid "JOB实例ID"
msgstr "JOB instance ID"

#: backend/db_services/mysql/fixpoint_rollback/views.py:50
msgid "通过日志平台获取集群备份记录"
msgstr "Obtain cluster backup records through the log platform"

#: backend/db_services/mysql/fixpoint_rollback/views.py:67
msgid "查询集群的本地备份记录"
msgstr "Query the local backup records of the cluster"

#: backend/db_services/mysql/fixpoint_rollback/views.py:79
msgid "查询小于回档时间点最近的备份记录"
msgstr ""
"Query the latest backup record that is less than the rollback time point"

#: backend/db_services/mysql/fixpoint_rollback/views.py:98
msgid "获取定点构造记录"
msgstr "Get fixed-point construction records"

#: backend/db_services/mysql/open_area/exceptions.py:19
msgid "Tendb开区通用异常"
msgstr "Tendb zone general exception"

#: backend/db_services/mysql/open_area/filters.py:19
msgid "模板名称"
msgstr "Template name"

#: backend/db_services/mysql/open_area/filters.py:23
msgid "排序类型"
msgstr "sort type"

#: backend/db_services/mysql/open_area/handlers.py:43
msgid "源集群不存在库{}，请检查或修改开区模板"
msgstr "Library {} does not exist in the source cluster. Please check or modify the zone template."

#: backend/db_services/mysql/open_area/handlers.py:67
msgid "源集群库{}中不存在表{}，请检查或修改开区模板\n"
msgstr "Table {} does not exist in the source cluster library {}. Please check or modify the zone template\n"

#: backend/db_services/mysql/open_area/handlers.py:76
msgid "源集群库{}中不存在表匹配[{}]，请检查或修改开区模板"
msgstr "There is no table matching [{}] in the source cluster library {}. Please check or modify the zone template."

#: backend/db_services/mysql/open_area/handlers.py:126
msgid "范式{}渲染缺少变量"
msgstr "Paradigm{} rendering missing variables"

#: backend/db_services/mysql/open_area/models.py:24
msgid "开区模板类型[支持tendbha/tendbcluster]"
msgstr "Open area template type [supports tendbha/tendbcluster]"

#: backend/db_services/mysql/open_area/models.py:28
msgid "开区模板名"
msgstr "Open area template name"

#: backend/db_services/mysql/open_area/models.py:30
#: backend/db_services/mysql/open_area/serializers.py:33
msgid "模板克隆规则列表"
msgstr "Template cloning rule list"

#: backend/db_services/mysql/open_area/models.py:31
msgid "关联的规则列表(目前用于级联规则的修改删除)"
msgstr "Associated rule list (currently used to modify and delete cascade rules)"

#: backend/db_services/mysql/open_area/models.py:43
msgid "开区配置修改记录数据"
msgstr "Open zone configuration modification record data"

#: backend/db_services/mysql/open_area/serializers.py:25
msgid "获取库表结构的源db"
msgstr "Get the source db of the library table structure"

#: backend/db_services/mysql/open_area/serializers.py:27
msgid "获取表结构的源tb列表"
msgstr "Get the source tb list of the table structure"

#: backend/db_services/mysql/open_area/serializers.py:28
msgid "获取表数据的源tb列表"
msgstr "Get the source tb list of table data"

#: backend/db_services/mysql/open_area/serializers.py:29
msgid "目标db范式"
msgstr "target db paradigm"

#: backend/db_services/mysql/open_area/serializers.py:34
msgid "授权ID列表"
msgstr "Authorization ID list"

#: backend/db_services/mysql/open_area/serializers.py:44
msgid "源集群不存在，请选择合法集群"
msgstr "The source cluster does not exist, please select a legal cluster."

#: backend/db_services/mysql/open_area/serializers.py:50
msgid "请保证同一业务下的开区模板命名不重复"
msgstr "Please ensure that the names of zone templates under the same business are not repeated."

#: backend/db_services/mysql/open_area/serializers.py:55
msgid "请保证校验模板克隆规则的克隆DB不要重复"
msgstr "Please ensure that the clone DB for verifying template cloning rules is not duplicated."

#: backend/db_services/mysql/open_area/serializers.py:67
msgid "变量表"
msgstr "variable table"

#: backend/db_services/mysql/open_area/serializers.py:68
msgid "授权IP"
msgstr "Authorized IP"

#: backend/db_services/mysql/open_area/serializers.py:70
msgid "开区模板ID"
msgstr "Zone template ID"

#: backend/db_services/mysql/open_area/serializers.py:71
msgid "开区数据列表"
msgstr "Open area data list"

#: backend/db_services/mysql/open_area/serializers.py:81
msgid "旧变量(delete/update)"
msgstr "Old variables (delete/update)"

#: backend/db_services/mysql/open_area/serializers.py:82
msgid "新变量(add/update)"
msgstr "New variables (add/update)"

#: backend/db_services/mysql/open_area/views.py:65
#: backend/db_services/mysql/open_area/views.py:67
msgid "创建开区模板"
msgstr "Create a zone template"

#: backend/db_services/mysql/open_area/views.py:74
msgid "开区模板列表"
msgstr "Zone template list"

#: backend/db_services/mysql/open_area/views.py:102
#: backend/db_services/mysql/open_area/views.py:104
msgid "开区模板详情"
msgstr "Open area template details"

#: backend/db_services/mysql/open_area/views.py:114
#: backend/db_services/mysql/open_area/views.py:116
msgid "更新开区模板"
msgstr "Update zone template"

#: backend/db_services/mysql/open_area/views.py:123
msgid "删除开区模板"
msgstr "Delete zone template"

#: backend/db_services/mysql/open_area/views.py:131
msgid "获取开区结果预览"
msgstr "Get a preview of open area results"

#: backend/db_services/mysql/open_area/views.py:144
msgid "变量表修改"
msgstr "Variable table modification"

#: backend/db_services/mysql/permission/authorize/handlers.py:93
msgid "「接口返回结果异常」{}"
msgstr "The interface returns an abnormal result {}"

#: backend/db_services/mysql/permission/authorize/handlers.py:96
#: backend/db_services/mysql/permission/clone/handlers.py:124
msgid "「接口调用异常」{}"
msgstr "Interface call exception {}"

#: backend/db_services/mysql/permission/authorize/handlers.py:152
msgid "域名解析失败，请输入合法域名"
msgstr "Domain name resolution failed, please enter a legal domain name"

#: backend/db_services/mysql/permission/authorize/handlers.py:159
msgid "无法查询app: {}相关信息，请检查app输入是否合法。"
msgstr "Unable to query app: {} related information, please check whether the app input is legal."

#: backend/db_services/mysql/permission/authorize/handlers.py:172
msgid "授权集群: [{}]。业务信息bk_biz_id为空请检查。"
msgstr "Authorization cluster: [{}]. Business information bk_biz_id is empty, please check."

#: backend/db_services/mysql/permission/authorize/handlers.py:174
msgid "授权域名: [{}]对应多个集群，请检查域名合法性。"
msgstr "Authorized domain name: [{}] corresponds to multiple clusters, please check the legitimacy of the domain name."

#: backend/db_services/mysql/permission/authorize/handlers.py:179
msgid "集群{}对应的业务与业务ID: {}不匹配"
msgstr "The business corresponding to cluster {} does not match the business ID: {}"

#: backend/db_services/mysql/permission/authorize/handlers.py:201
msgid "第三方请求授权"
msgstr "Third party request authorization"

#: backend/db_services/mysql/permission/authorize/handlers.py:225
msgid "gcs授权请保证app不为空"
msgstr "For gcs authorization, please ensure that the app is not empty"

#: backend/db_services/mysql/permission/authorize/handlers.py:268
msgid "授权状态: {}"
msgstr "Authorization status: {}"

#: backend/db_services/mysql/permission/authorize/serializers.py:17
#: backend/db_services/redis/rollback/views.py:37
#: backend/ticket/models/ticket_result_relation.py:24
msgid "单据id"
msgstr "ticket id"

#: backend/db_services/mysql/permission/authorize/serializers.py:18
msgid "过滤搜索关键字"
msgstr "filter search keywords"

#: backend/db_services/mysql/permission/authorize/serializers.py:25
msgid "客户端主机"
msgstr "client host"

#: backend/db_services/mysql/permission/authorize/serializers.py:26
msgid "客户端版本"
msgstr "client version"

#: backend/db_services/mysql/permission/authorize/serializers.py:27
msgid "DB主机（domain#port）"
msgstr "DB host (domain#port)"

#: backend/db_services/mysql/permission/authorize/serializers.py:28
msgid "数据库名"
msgstr "Database name"

#: backend/db_services/mysql/permission/authorize/serializers.py:31
msgid "权限列表，多个权限以逗号分隔"
msgstr "Permission list, multiple permissions separated by commas"

#: backend/db_services/mysql/permission/authorize/views.py:50
msgid "查询授权主机的信息"
msgstr "Query information about authorized hosts"

#: backend/db_services/mysql/permission/authorize/views.py:61
msgid "MySQL集成授权"
msgstr "MySQL integrated authorization"

#: backend/db_services/mysql/permission/clone/models.py:27
#: backend/db_services/mysql/permission/clone/serializers.py:35
#: backend/db_services/mysql/permission/clone/serializers.py:86
#: backend/db_services/mysql/permission/clone/serializers.py:129
#: backend/ticket/builders/mysql/mysql_clone_rules.py:43
msgid "权限克隆类型"
msgstr "permission clone type"

#: backend/db_services/mysql/permission/clone/models.py:29
#: backend/db_services/mysql/permission/clone/serializers.py:23
msgid "旧实例/旧客户端IP"
msgstr "Old instance/old client IP"

#: backend/db_services/mysql/permission/clone/models.py:30
msgid "新实例/新客户端IP列表"
msgstr "New instance/new client IP list"

#: backend/db_services/mysql/permission/clone/models.py:32
msgid "是否克隆成功"
msgstr "Whether the clone is successful"

#: backend/db_services/mysql/permission/clone/models.py:33
#: backend/ticket/models/ticket.py:58
msgid "错误信息"
msgstr "error message"

#: backend/db_services/mysql/permission/clone/models.py:38
#: backend/db_services/mysql/permission/clone/models.py:39
msgid "权限克隆记录"
msgstr "Permission to clone records"

#: backend/db_services/mysql/permission/clone/serializers.py:24
msgid "新实例/新客户端IP"
msgstr "New instance/new client IP"

#: backend/db_services/mysql/permission/clone/serializers.py:26
#: backend/db_services/redis/autofix/models.py:26
msgid "模块名"
msgstr "module name"

#: backend/db_services/mysql/permission/clone/serializers.py:37
msgid "克隆元素列表"
msgstr "clone element list"

#: backend/db_services/mysql/permission/clone/serializers.py:37
msgid "克隆元素信息"
msgstr "clone element information"

#: backend/db_services/mysql/permission/clone/serializers.py:51
msgid "源克隆对象{}与目的克隆对象{}相同"
msgstr ""
"The source clone object {} is the same as the destination clone object {}"

#: backend/db_services/mysql/permission/clone/serializers.py:68
msgid "实例{}不属于本业务{}，请保证所有实例均在本业务下"
msgstr ""
"Instance {} does not belong to this business {}, please ensure that all "
"instances are under this business"

#: backend/db_services/mysql/permission/clone/serializers.py:75
#: backend/db_services/mysql/permission/clone/serializers.py:120
msgid "权限克隆前置检查结果"
msgstr "Permission cloning pre-check results"

#: backend/db_services/mysql/permission/clone/serializers.py:76
#: backend/db_services/mysql/permission/clone/serializers.py:121
msgid "权限克隆前置检查信息"
msgstr "Permission cloning pre-check information"

#: backend/db_services/mysql/permission/clone/serializers.py:77
#: backend/db_services/mysql/permission/clone/serializers.py:122
msgid "权限克隆数据uid"
msgstr "Permission to clone data uid"

#: backend/db_services/mysql/permission/clone/serializers.py:78
msgid "权限克隆数据列表"
msgstr "Permission to clone data list"

#: backend/db_services/mysql/permission/clone/serializers.py:85
msgid "克隆实例/客户端excel文件"
msgstr "Clone instance/client excel file"

#: backend/db_services/mysql/permission/clone/serializers.py:96
msgid "excel内容解析失败, 错误信息:{}。"
msgstr "Excel content parsing failed, error message: {}."

#: backend/db_services/mysql/permission/clone/serializers.py:100
msgid "excel表头校验不正确!"
msgstr "The excel table header check is incorrect!"

#: backend/db_services/mysql/permission/clone/serializers.py:104
msgid "excel内容为空!"
msgstr "The excel content is empty!"

#: backend/db_services/mysql/permission/clone/serializers.py:130
#: backend/ticket/builders/mysql/mysql_clone_rules.py:42
msgid "权限克隆数据缓存uid"
msgstr "Permission to clone data cache uid"

#: backend/db_services/mysql/permission/clone/views.py:66
msgid "权限克隆前置检查"
msgstr "Permission cloning pre-check"

#: backend/db_services/mysql/permission/clone/views.py:76
msgid "权限克隆excel前置检查"
msgstr "Permission to clone excel pre-check"

#: backend/db_services/mysql/permission/clone/views.py:86
msgid "获得权限克隆信息excel文件"
msgstr "Obtain permission to clone information excel file"

#: backend/db_services/mysql/permission/constants.py:27
msgid "实例克隆"
msgstr "Instance cloning"

#: backend/db_services/mysql/permission/constants.py:28
msgid "客户端克隆"
msgstr "client clone"

#: backend/db_services/mysql/permission/constants.py:35
msgid "克隆数据缓存UID"
msgstr "Clone data cache UID"

#: backend/db_services/mysql/permission/db_account/handlers.py:47
msgid "创建授权规则前置检查失败，错误信息: {}"
msgstr "Pre-check when creating authorization rules failed, error message: {}"

#: backend/db_services/mysql/permission/db_account/handlers.py:66
msgid ""
"授权规则{}-{}不存在，bk_biz_id[{}] cluster_type[{}], 请检查检查后重新提单"
msgstr "Authorization rule {}-{} does not exist, bk_biz_id[{}] cluster_type[{}], please check and try again."

#: backend/db_services/mysql/permission/db_account/views.py:24
msgid "添加账号规则前置检查"
msgstr "Add account rule pre-check"

#: backend/db_services/mysql/permission/exceptions.py:41
msgid "权限模块异常"
msgstr "Permission module exception"

#: backend/db_services/mysql/permission/exceptions.py:45
msgid "授权EXCEL表校验异常"
msgstr "Authorized EXCEL table verification exception"

#: backend/db_services/mysql/permission/exceptions.py:49
msgid "权限克隆EXCEL表校验异常"
msgstr "The verification exception of the permission cloning EXCEL table"

#: backend/db_services/mysql/permission/exceptions.py:53
msgid "授权数据已过期"
msgstr "Authorization data has expired"

#: backend/db_services/mysql/permission/exceptions.py:57
msgid "权限克隆数据已过期"
msgstr "Permission to clone data has expired"

#: backend/db_services/mysql/push_peripheral_config/constants.py:14
#: backend/db_services/mysql/push_peripheral_config/views.py:40
#: backend/ticket/builders/mysql/mysql_push_peripheral_config.py:39
msgid "下发周边配置"
msgstr "Deliver peripheral configuration"

#: backend/db_services/mysql/remote_service/exceptions.py:19
msgid "DRS接口请求通用异常"
msgstr "DRS interface request general exception"

#: backend/db_services/mysql/remote_service/handlers.py:51
#: backend/db_services/mysql/remote_service/handlers.py:98
#: backend/db_services/mysql/remote_service/handlers.py:138
#: backend/db_services/sqlserver/handlers.py:59
#: backend/flow/utils/mysql/mysql_version_parse.py:164
msgid "DRS调用失败，错误信息: {}"
msgstr "DRS call failed, error message: {}"

#: backend/db_services/mysql/remote_service/handlers.py:242
msgid "不存在可用于闪回的库"
msgstr "No library exists for flashback"

#: backend/db_services/mysql/remote_service/handlers.py:247
msgid "不存在可用于闪回的表"
msgstr "No table exists for flashback"

#: backend/db_services/mysql/remote_service/serializers.py:29
msgid "查询的备份角色"
msgstr "Query backup role"

#: backend/db_services/mysql/remote_service/serializers.py:34
msgid "集群信息列表"
msgstr "Cluster information list"

#: backend/db_services/mysql/remote_service/serializers.py:44
msgid "查询的DB列表"
msgstr "Query DB list"

#: backend/db_services/mysql/remote_service/serializers.py:46
msgid "集群数据库信息"
msgstr "Cluster database information"

#: backend/db_services/mysql/remote_service/serializers.py:62
msgid "DB名列表"
msgstr "DB name list"

#: backend/db_services/mysql/remote_service/serializers.py:62
msgid "DB名"
msgstr "DB name"

#: backend/db_services/mysql/remote_service/serializers.py:64
msgid "集群校验信息"
msgstr "Cluster verification information"

#: backend/db_services/mysql/remote_service/serializers.py:78
#: backend/db_services/mysql/remote_service/serializers.py:94
#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:43
#: backend/ticket/builders/mysql/mysql_flashback.py:36
#: backend/ticket/builders/tendbcluster/tendb_fixpoint_rollback.py:52
msgid "目标库列表"
msgstr "target db list"

#: backend/db_services/mysql/remote_service/serializers.py:79
#: backend/db_services/mysql/remote_service/serializers.py:95
#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:44
#: backend/ticket/builders/mysql/mysql_flashback.py:37
#: backend/ticket/builders/tendbcluster/tendb_fixpoint_rollback.py:54
msgid "忽略库列表"
msgstr "ignore db list"

#: backend/db_services/mysql/remote_service/serializers.py:80
#: backend/ticket/builders/mysql/mysql_dump_data.py:33
#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:45
#: backend/ticket/builders/mysql/mysql_flashback.py:38
#: backend/ticket/builders/tendbcluster/tendb_fixpoint_rollback.py:56
msgid "目标table列表"
msgstr "target table list"

#: backend/db_services/mysql/remote_service/serializers.py:81
#: backend/ticket/builders/mysql/mysql_dump_data.py:34
#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:46
#: backend/ticket/builders/mysql/mysql_flashback.py:39
#: backend/ticket/builders/tendbcluster/tendb_fixpoint_rollback.py:57
msgid "忽略table列表"
msgstr "ignore table list"

#: backend/db_services/mysql/remote_service/serializers.py:83
#: backend/ticket/builders/mysql/mysql_flashback.py:45
msgid "flashback信息"
msgstr "flashback information"

#: backend/db_services/mysql/remote_service/serializers.py:97
msgid "正则库信息"
msgstr "Regular library information"

#: backend/db_services/mysql/remote_service/views.py:51
msgid "查询集群数据库列表"
msgstr "Query the list of cluster databases"

#: backend/db_services/mysql/remote_service/views.py:67
msgid "查询集群数据表列表"
msgstr "Query cluster data table list"

#: backend/db_services/mysql/remote_service/views.py:80
msgid "校验DB是否在集群内"
msgstr "Check whether the DB is in the cluster"

#: backend/db_services/mysql/remote_service/views.py:93
msgid "校验flashback信息是否合法"
msgstr "Verify whether flashback information is legal"

#: backend/db_services/mysql/remote_service/views.py:104
msgid "根据库表正则查询集群库信息"
msgstr "Query cluster library information based on library table regularity"

#: backend/db_services/mysql/resources/tendbcluster/query.py:47
msgid "运维节点"
msgstr "Operation and maintenance node"

#: backend/db_services/mysql/resources/tendbcluster/query.py:48
#: backend/db_services/mysql/resources/tendbha/query.py:40
#: backend/db_services/mysql/resources/tendbsingle/query.py:35
#: backend/db_services/sqlserver/resources/sqlserver_ha/query.py:36
#: backend/db_services/sqlserver/resources/sqlserver_single/query.py:33
msgid "所属db模块"
msgstr "Belonging to the db module"

#: backend/db_services/mysql/sql_import/constants.py:31
msgid "DEFAULT"
msgstr "DEFAULT"

#: backend/db_services/mysql/sql_import/constants.py:32
msgid "UTF8"
msgstr "UTF8"

#: backend/db_services/mysql/sql_import/constants.py:33
msgid "UTF8MB4"
msgstr "UTF8MB4"

#: backend/db_services/mysql/sql_import/constants.py:34
msgid "LATIN1"
msgstr "LATIN 1"

#: backend/db_services/mysql/sql_import/constants.py:35
msgid "gbk"
msgstr "gbk"

#: backend/db_services/mysql/sql_import/constants.py:36
msgid "gb2312"
msgstr "GB2312"

#: backend/db_services/mysql/sql_import/constants.py:44
msgid "手动执行"
msgstr "Manual execution"

#: backend/db_services/mysql/sql_import/constants.py:45
#: backend/db_services/redis/redis_dts/enums/type_enums.py:56
msgid "自动执行"
msgstr "automatic execution"

#: backend/db_services/mysql/sql_import/constants.py:46
#: backend/db_services/redis/redis_dts/enums/type_enums.py:57
#: backend/ticket/builders/mysql/mysql_force_import_sqlfile.py:96
#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:200
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:134
msgid "定时执行"
msgstr "Timed execution"

#: backend/db_services/mysql/sql_import/constants.py:54
#: backend/ticket/builders/common/constants.py:150
msgid "文件上传"
msgstr "File Upload"

#: backend/db_services/mysql/sql_import/constants.py:55
#: backend/ticket/builders/common/constants.py:151
msgid "手动输入"
msgstr "manual input"

#: backend/db_services/mysql/sql_import/constants.py:63
msgid "执行失败"
msgstr "Execution failed"

#: backend/db_services/mysql/sql_import/constants.py:64
#: backend/ticket/flow_manager/delivery.py:91
msgid "执行成功"
msgstr "Executed successfully"

#: backend/db_services/mysql/sql_import/constants.py:65
msgid "导入表结构失败"
msgstr "Import table structure failed"

#: backend/db_services/mysql/sql_import/exceptions.py:19
msgid "SQL导入接口请求通用异常"
msgstr "SQL import interface request general exception"

#: backend/db_services/mysql/sql_import/handlers.py:95
msgid "当前SQL文件过大，暂不提供内容预览..."
msgstr "The current SQL file is too large and content preview is not available yet..."

#: backend/db_services/mysql/sql_import/handlers.py:197
msgid "模拟流程构建失败，错误信息: {}"
msgstr "Simulation process build failed, error message: {}"

#: backend/db_services/mysql/sql_import/mock_data.py:22
msgid "存在高危命令:drop_table"
msgstr "There are high-risk commands: drop_table"

#: backend/db_services/mysql/sql_import/serializers.py:30
msgid "sql文件名列表"
msgstr "sql file name list"

#: backend/db_services/mysql/sql_import/serializers.py:32
#: backend/db_services/sqlserver/sql_import/serializers.py:21
msgid "sql文件列表"
msgstr "sql file list"

#: backend/db_services/mysql/sql_import/serializers.py:32
#: backend/db_services/sqlserver/sql_import/serializers.py:21
msgid "sql文件"
msgstr "sql file"

#: backend/db_services/mysql/sql_import/serializers.py:37
msgid "版本列表"
msgstr "Version list"

#: backend/db_services/mysql/sql_import/serializers.py:44
#: backend/db_services/sqlserver/sql_import/serializers.py:29
msgid "不允许语法检查的sql的内容为空！"
msgstr "The content of the syntax checked sql is not allowed to be empty!"

#: backend/db_services/mysql/sql_import/serializers.py:48
msgid "请保证单个文件{}不超过1G"
msgstr "Please ensure that a single file {} does not exceed 1G"

#: backend/db_services/mysql/sql_import/serializers.py:50
#: backend/db_services/sqlserver/sql_import/serializers.py:33
msgid "请保证sql文件[{}]的后缀为.sql"
msgstr "Please ensure that the suffix of the sql file [{}] is .sql"

#: backend/db_services/mysql/sql_import/serializers.py:57
msgid "语法错误"
msgstr "Grammatical errors"

#: backend/db_services/mysql/sql_import/serializers.py:58
msgid "高危警告"
msgstr "High risk warning"

#: backend/db_services/mysql/sql_import/serializers.py:59
msgid "禁止命令"
msgstr "prohibition order"

#: backend/db_services/mysql/sql_import/serializers.py:61
msgid "语法检查结果"
msgstr "grammar check result"

#: backend/db_services/mysql/sql_import/serializers.py:69
#: backend/db_services/mysql/sql_import/serializers.py:119
msgid "目标变更DB"
msgstr "target change DB"

#: backend/db_services/mysql/sql_import/serializers.py:70
#: backend/db_services/mysql/sql_import/serializers.py:120
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:32
msgid "忽略DB"
msgstr "ignore DB"

#: backend/db_services/mysql/sql_import/serializers.py:71
#: backend/db_services/mysql/sql_import/serializers.py:124
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:33
msgid "sql执行文件"
msgstr "sql execution file"

#: backend/db_services/mysql/sql_import/serializers.py:72
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:34
msgid "sql导入模式"
msgstr "sql import mode"

#: backend/db_services/mysql/sql_import/serializers.py:75
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:37
msgid "单据执行模式"
msgstr "Ticket Execution Mode"

#: backend/db_services/mysql/sql_import/serializers.py:76
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:38
msgid "定时任务触发时间"
msgstr "Timing task trigger time"

#: backend/db_services/mysql/sql_import/serializers.py:80
#: backend/ticket/builders/mongodb/base.py:35
#: backend/ticket/builders/mysql/mysql_checksum.py:40
#: backend/ticket/builders/mysql/mysql_ha_backup.py:28
#: backend/ticket/builders/mysql/mysql_ha_clear.py:30
#: backend/ticket/builders/tendbcluster/tendb_backup.py:27
#: backend/ticket/builders/tendbcluster/tendb_checksum.py:51
msgid "匹配DB列表"
msgstr "match DB list"

#: backend/db_services/mysql/sql_import/serializers.py:81
#: backend/ticket/builders/mongodb/base.py:37
#: backend/ticket/builders/mysql/mysql_checksum.py:42
#: backend/ticket/builders/mysql/mysql_ha_backup.py:30
#: backend/ticket/builders/mysql/mysql_ha_clear.py:32
#: backend/ticket/builders/tendbcluster/tendb_backup.py:29
#: backend/ticket/builders/tendbcluster/tendb_checksum.py:53
msgid "匹配Table列表"
msgstr "Match Table list"

#: backend/db_services/mysql/sql_import/serializers.py:83
#: backend/ticket/builders/mongodb/base.py:36
#: backend/ticket/builders/mysql/mysql_checksum.py:41
#: backend/ticket/builders/mysql/mysql_ha_backup.py:29
#: backend/ticket/builders/mysql/mysql_ha_clear.py:31
#: backend/ticket/builders/tendbcluster/tendb_backup.py:28
#: backend/ticket/builders/tendbcluster/tendb_checksum.py:52
msgid "忽略DB列表"
msgstr "ignore DB list"

#: backend/db_services/mysql/sql_import/serializers.py:86
#: backend/ticket/builders/mongodb/base.py:38
#: backend/ticket/builders/mysql/mysql_checksum.py:43
#: backend/ticket/builders/mysql/mysql_ha_backup.py:31
#: backend/ticket/builders/mysql/mysql_ha_clear.py:33
#: backend/ticket/builders/tendbcluster/tendb_backup.py:30
#: backend/ticket/builders/tendbcluster/tendb_checksum.py:54
msgid "忽略Table列表"
msgstr "Ignore the Table list"

#: backend/db_services/mysql/sql_import/serializers.py:90
#: backend/ticket/builders/mysql/mysql_dump_data.py:30
#: backend/ticket/builders/mysql/mysql_single_apply.py:64
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:44
#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:63
#: backend/ticket/builders/tendbcluster/tendb_apply.py:50
msgid "字符集"
msgstr "character set"

#: backend/db_services/mysql/sql_import/serializers.py:93
#: backend/db_services/mysql/sql_import/serializers.py:128
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:47
msgid "sql执行体信息"
msgstr "sql execution body information"

#: backend/db_services/mysql/sql_import/serializers.py:96
#: backend/ticket/builders/mongodb/mongo_backup.py:41
#: backend/ticket/builders/mongodb/mongo_full_backup.py:28
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:50
#: backend/ticket/builders/tendbcluster/tendb_checksum.py:58
msgid "备份信息"
msgstr "backup information"

#: backend/db_services/mysql/sql_import/serializers.py:98
msgid "集群类型，默认为mysql"
msgstr "Cluster type, default is mysql"

#: backend/db_services/mysql/sql_import/serializers.py:100
msgid "模拟执行成功后是否自动提单"
msgstr "Whether to automatically pick up the bill after successful simulation execution"

#: backend/db_services/mysql/sql_import/serializers.py:110
#: backend/db_services/mysql/sql_import/serializers.py:132
#: backend/db_services/mysql/sql_import/serializers.py:141
#: backend/db_services/mysql/sql_import/serializers.py:163
#: backend/db_services/mysql/sql_import/serializers.py:185
#: backend/db_services/mysql/sql_import/serializers.py:201
#: backend/db_services/mysql/sql_import/serializers.py:214
#: backend/db_services/mysql/sql_import/serializers.py:224
msgid "流程id"
msgstr "process id"

#: backend/db_services/mysql/sql_import/serializers.py:111
msgid "语义测试的node_id"
msgstr "The node_id of the semantic test"

#: backend/db_services/mysql/sql_import/serializers.py:122
msgid "sql执行内容"
msgstr "sql execution content"

#: backend/db_services/mysql/sql_import/serializers.py:133
#: backend/db_services/mysql/sql_import/serializers.py:145
#: backend/db_services/partition/serializers.py:57
msgid "是否自动创建单据"
msgstr "Whether to automatically create tickets"

#: backend/db_services/mysql/sql_import/serializers.py:134
#: backend/db_services/mysql/sql_import/serializers.py:146
msgid "是否自动跳过确认"
msgstr "Whether to automatically skip confirmation"

#: backend/db_services/mysql/sql_import/serializers.py:154
msgid "集群类型mysql/tendbcluster,为空查询所有任务"
msgstr "Cluster type mysql/tendbcluster, query all tasks if empty"

#: backend/db_services/mysql/sql_import/serializers.py:165
msgid "执行状态"
msgstr "execution state"

#: backend/db_services/mysql/sql_import/serializers.py:167
msgid "语义检查执行信息列表"
msgstr "Semantic check execution information list"

#: backend/db_services/mysql/sql_import/serializers.py:175
msgid "语义执行的root id列表"
msgstr "List of root ids for semantic execution"

#: backend/db_services/mysql/sql_import/serializers.py:192
msgid "是否撤销成功"
msgstr "Is the cancellation successful?"

#: backend/db_services/mysql/sql_import/serializers.py:193
msgid "撤销相关信息"
msgstr "Withdraw related information"

#: backend/db_services/mysql/sql_import/serializers.py:194
msgid "撤销相关数据"
msgstr "Withdraw related data"

#: backend/db_services/mysql/sql_import/serializers.py:215
msgid "节点id"
msgstr "Node id"

#: backend/db_services/mysql/sql_import/views.py:87
msgid "sql语义检查"
msgstr "sql semantic check"

#: backend/db_services/mysql/sql_import/views.py:97
msgid "获取用户语义检查任务列表"
msgstr "Get user semantic check task list"

#: backend/db_services/mysql/sql_import/views.py:107
msgid "删除用户语义检查任务列表"
msgstr "Delete User Semantic Check Task List"

#: backend/db_services/mysql/sql_import/views.py:116
msgid "终止语义检查流程"
msgstr "Terminate the semantic checking process"

#: backend/db_services/mysql/sql_import/views.py:126
msgid "根据语义执行id查询语义执行的数据"
msgstr ""
"Query the data of semantic execution according to the semantic execution id"

#: backend/db_services/mysql/sql_import/views.py:136
msgid "获取语义执行的结果日志"
msgstr "Get the result log of semantic execution"

#: backend/db_services/mysql/sql_import/views.py:146
msgid "获取语义执行结果"
msgstr "Get semantic execution results"

#: backend/db_services/mysql/sqlparse/exceptions.py:19
msgid "SQL解析通用异常"
msgstr "SQL parsing common exception"

#: backend/db_services/mysql/sqlparse/handlers.py:135
msgid "LIMIT限制为空或者超过1000"
msgstr "LIMIT limit is empty or exceeds 1000"

#: backend/db_services/mysql/sqlparse/handlers.py:143
msgid "请保证一次只解析一条select语句"
msgstr "Please ensure that only one select statement is parsed at a time"

#: backend/db_services/mysql/sqlparse/handlers.py:152
msgid "不允许查询以下系统库表:{}"
msgstr "Querying the following system library tables is not allowed: {}"

#: backend/db_services/mysql/sqlparse/handlers.py:156
msgid "SQL语句不为查询语句，或者不包含{}命令"
msgstr "The SQL statement is not a query statement, or does not contain the {} command"

#: backend/db_services/mysql/toolbox/serializers.py:29
msgid "源业务ID"
msgstr "Source business ID"

#: backend/db_services/mysql/toolbox/serializers.py:30
msgid "目标业务ID"
msgstr "Target business ID"

#: backend/db_services/mysql/toolbox/serializers.py:53
msgid "TenDBHa集群迁移到其他业务"
msgstr "TenDBHa cluster is migrated to other businesses"

#: backend/db_services/mysql/toolbox/views.py:44
msgid "查询 MySQL 可以用的升级包"
msgstr "Query available upgrade packages for MySQL"

#: backend/db_services/mysql/toolbox/views.py:60
msgid "TenDBHA 集群转移到其他业务"
msgstr "TenDBHA cluster moved to other businesses"

#: backend/db_services/mysql/toolbox/views.py:75
msgid "目标业务的db模块不存在"
msgstr "The db module of the target business does not exist"

#: backend/db_services/mysql/toolbox/views.py:77
msgid "目标业务不能是自己"
msgstr "The target business cannot be yourself"

#: backend/db_services/mysql/toolbox/views.py:88
msgid "迁移的集群必须在同一个类型"
msgstr "The migrated cluster must be of the same type"

#: backend/db_services/mysql/toolbox/views.py:92
msgid "目前只能转移 TenDBHA 和 TenDBSingle 集群"
msgstr "Currently only TenDBHA and TenDBSingle clusters can be transferred"

#: backend/db_services/mysql/toolbox/views.py:103
msgid "源模块和目标模块的版本或字符集不一致,请检查一下"
msgstr "The versions or character sets of the source module and the target module are inconsistent, please check"

#: backend/db_services/partition/constants.py:34
msgid "整型"
msgstr "integer"

#: backend/db_services/partition/constants.py:35
msgid "日期类型"
msgstr "date type"

#: backend/db_services/partition/constants.py:36
msgid "时间戳类型"
msgstr "timestamp type"

#: backend/db_services/partition/exceptions.py:18
msgid "分区管理创建异常"
msgstr "Partition management creation exception"

#: backend/db_services/partition/exceptions.py:23
msgid "服务器内部错误"
msgstr "Server internal error"

#: backend/db_services/partition/exceptions.py:28
msgid "不合法的分区字段"
msgstr "Illegal partition field"

#: backend/db_services/partition/exceptions.py:33
msgid "分区配置不存在"
msgstr "Partition configuration does not exist"

#: backend/db_services/partition/exceptions.py:38
msgid "分区不支持该集群类型"
msgstr "The cluster type is not supported by the partition"

#: backend/db_services/partition/exceptions.py:43
msgid "没有需要执行的操作"
msgstr "No action required"

#: backend/db_services/partition/exceptions.py:48
msgid "分区名格式错误"
msgstr "Partition name format error"

#: backend/db_services/partition/handlers.py:79
msgid "分区管理创建失败，创建参数:{}, 错误信息: {}"
msgstr ""
"Partition management creation failed, creation parameter: {}, error message: "


#: backend/db_services/partition/handlers.py:144
msgid "分区单据执行"
msgstr "Partition document execution"

#: backend/db_services/partition/handlers.py:199
msgid "字段信息查询错误：{}"
msgstr "Field information query error: {}"

#: backend/db_services/partition/handlers.py:206
msgid "【{}】【{}】当前库表模式匹配为空，请检查是否是合法库表"
msgstr "[{}][{}]The current database table pattern matching is empty, please check whether it is a legal database table"

#: backend/db_services/partition/handlers.py:225
msgid "【{}】【{}】分区字段{}不满足属于主键部分或唯一键交集的要求"
msgstr "[{}][{}] The partition field {} does not meet the requirements of being part of the primary key or the intersection of unique keys"

#: backend/db_services/partition/handlers.py:238
msgid "【{}】【{}】分区字段{}与该表对应的字段类型不匹配"
msgstr "[{}][{}]Partition field{} does not match the field type corresponding to the table"

#: backend/db_services/partition/handlers.py:243
msgid ""
"表没有主键或者唯一键，将表改造为分区表的过程中会锁表，会阻塞查询、删除、修"
"改、添加、表结构变更等语句"
msgstr "The table does not have a primary key or a unique key. During the process of transforming the table into a partitioned table, the table will be locked, which will block queries, deletes, modifications, additions, table structure changes and other statements."

#: backend/db_services/partition/serializers.py:28
msgid "匹配库"
msgstr "matching database"

#: backend/db_services/partition/serializers.py:29
msgid "匹配表"
msgstr "match table"

#: backend/db_services/partition/serializers.py:50
#: backend/db_services/partition/serializers.py:152
msgid "匹配库列表(支持通配)"
msgstr "List of matching libraries (supports wildcards)"

#: backend/db_services/partition/serializers.py:51
#: backend/db_services/partition/serializers.py:153
msgid "匹配表列表(不支持通配)"
msgstr "List of matching tables (wildcards are not supported)"

#: backend/db_services/partition/serializers.py:52
#: backend/db_services/partition/serializers.py:154
msgid "分区字段"
msgstr "partition field"

#: backend/db_services/partition/serializers.py:53
#: backend/db_services/partition/serializers.py:155
msgid "分区字段类型"
msgstr "Partition field type"

#: backend/db_services/partition/serializers.py:54
msgid "过期时间"
msgstr "Expiration"

#: backend/db_services/partition/serializers.py:55
msgid "分区间隔"
msgstr "partition interval"

#: backend/db_services/partition/serializers.py:56
msgid "是否需要获取分区执行数据"
msgstr "Do you need to obtain partition execution data?"

#: backend/db_services/partition/serializers.py:62
msgid "在自动创建单据的条件下，请保证need_dry_run选项为真"
msgstr "Under the condition of automatically creating documents, please ensure that the need_dry_run option is true"

#: backend/db_services/partition/serializers.py:67
msgid "分区表不支持通配"
msgstr "Partition table does not support wildcarding"

#: backend/db_services/partition/serializers.py:71
msgid "过期时间大于等于分区间隔，且为分区间隔的整数倍"
msgstr "The expiration time is greater than or equal to the partition interval and is an integer multiple of the partition interval."

#: backend/db_services/partition/serializers.py:100
#: backend/db_services/partition/serializers.py:116
msgid "分区策略ID"
msgstr "Partition policy ID"

#: backend/db_services/partition/serializers.py:130
msgid "分区配置ID"
msgstr "Partition Configuration ID"

#: backend/db_services/partition/serializers.py:132
msgid "PORT"
msgstr "PORT"

#: backend/db_services/partition/serializers.py:146
#: backend/ticket/builders/mysql/mysql_partition.py:50
msgid "分区执行对象列表"
msgstr "Partition execution object list"

#: backend/db_services/partition/views.py:65
msgid "获取分区策略列表"
msgstr "Get list of partition strategies"

#: backend/db_services/partition/views.py:96
msgid "修改分区策略"
msgstr "Modify partition strategy"

#: backend/db_services/partition/views.py:106
msgid "增加分区策略"
msgstr "Add partition strategy"

#: backend/db_services/partition/views.py:116
msgid "批量删除分区策略"
msgstr "Delete partition policies in batches"

#: backend/db_services/partition/views.py:126
msgid "禁用分区策略"
msgstr "disable partition policy"

#: backend/db_services/partition/views.py:136
msgid "启用分区策略"
msgstr "enable partition strategy"

#: backend/db_services/partition/views.py:146
msgid "查询分区策略日志"
msgstr "Query partition policy logs"

#: backend/db_services/partition/views.py:159
msgid "分区策略前置执行"
msgstr "Pre-execution of partition strategy"

#: backend/db_services/partition/views.py:178
msgid "分区策略执行"
msgstr "Partition policy enforcement"

#: backend/db_services/partition/views.py:188
msgid "分区策略字段校验"
msgstr "Partition policy field verification"

#: backend/db_services/plugin/bf/serializers.py:23
msgid "登录用户"
msgstr "Login user"

#: backend/db_services/plugin/bf/serializers.py:24
msgid "登录主机信息"
msgstr "Log in host information"

#: backend/db_services/plugin/bf/views.py:33
msgid "是否具有BF机器权限"
msgstr "Do you have BF machine permissions?"

#: backend/db_services/plugin/bf/views.py:44
msgid "主机{}不存在业务{}下"
msgstr "Host {} does not exist under business {}"

#: backend/db_services/plugin/bf/views.py:55
msgid "放行BF申请的白名单业务"
msgstr "Release the whitelist business applied by BF"

#: backend/db_services/plugin/mysql/authorize/serializers.py:18
#: backend/ticket/builders/mysql/mysql_authorize_rules.py:28
msgid "授权账号"
msgstr "Authorized account"

#: backend/db_services/plugin/mysql/authorize/serializers.py:19
#: backend/ticket/builders/mysql/mysql_authorize_rules.py:29
msgid "准入DB"
msgstr "Admission DB"

#: backend/db_services/plugin/mysql/authorize/serializers.py:20
#: backend/ticket/builders/mysql/mysql_authorize_rules.py:30
msgid "源IP列表"
msgstr "Source IP list"

#: backend/db_services/plugin/mysql/authorize/serializers.py:21
#: backend/ticket/builders/mysql/mysql_clone_rules.py:34
msgid "目标域名"
msgstr "target domain name"

#: backend/db_services/plugin/mysql/authorize/serializers.py:24
msgid "GCS业务缩写，如qxzb"
msgstr "GCS business abbreviation, such as qxzb"

#: backend/db_services/plugin/mysql/authorize/serializers.py:25
msgid "Set名称，多个以逗号分隔"
msgstr "Set name, multiple separated by commas"

#: backend/db_services/plugin/mysql/authorize/serializers.py:26
msgid "模块主机信息"
msgstr "Module host information"

#: backend/db_services/plugin/mysql/authorize/serializers.py:27
msgid "模块列表，多个以逗号分隔"
msgstr "List of modules, multiples separated by commas"

#: backend/db_services/plugin/mysql/authorize/serializers.py:29
msgid "调用平台"
msgstr "Calling platform"

#: backend/db_services/plugin/mysql/authorize/serializers.py:33
msgid "请保证至少输入bk_biz_id或者输入app其中之一"
msgstr "Please make sure to enter at least bk_biz_id or enter one of the app"

#: backend/db_services/plugin/mysql/authorize/serializers.py:44
#: backend/db_services/plugin/mysql/authorize/serializers.py:52
msgid "平台"
msgstr "platform"

#: backend/db_services/plugin/mysql/authorize/serializers.py:57
msgid "返回信息"
msgstr "Return information"

#: backend/db_services/plugin/mysql/authorize/views.py:31
msgid "第三方权限申请(兼容GCS)"
msgstr "Third-party permission application (compatible with GCS)"

#: backend/db_services/plugin/mysql/authorize/views.py:42
msgid "查询第三方权限申请结果(兼容GCS)"
msgstr "Query third-party permission application results (compatible with GCS)"

#: backend/db_services/quick_search/constants.py:20
msgid "单号"
msgstr "Order number"

#: backend/db_services/quick_search/constants.py:21
msgid "任务"
msgstr "Task"

#: backend/db_services/quick_search/constants.py:23
msgid "资源池主机"
msgstr "Resource pool host"

#: backend/db_services/quick_search/constants.py:27
msgid "模糊"
msgstr "Vague"

#: backend/db_services/quick_search/constants.py:28
msgid "精确"
msgstr "accurate"

#: backend/db_services/quick_search/serializers.py:22
msgid "数据库类型列表"
msgstr "Database type list"

#: backend/db_services/quick_search/serializers.py:27
#: backend/iam_app/serializers.py:27
msgid "资源列表"
msgstr "resource list"

#: backend/db_services/quick_search/serializers.py:28
#: backend/iam_app/serializers.py:23
msgid "资源类型"
msgstr "Resource Type"

#: backend/db_services/quick_search/serializers.py:31
msgid "检索类型"
msgstr "Search type"

#: backend/db_services/quick_search/views.py:23
msgid "全局搜索"
msgstr "global search"

#: backend/db_services/quick_search/views.py:31
msgid "[quick_search] 快速查询"
msgstr "[quick_search] Quick search"

#: backend/db_services/redis/autofix/bill.py:106
msgid "自动发起-自愈任务-{}"
msgstr "Automatically initiate-self-healing task-{}"

#: backend/db_services/redis/autofix/enums.py:20
msgid "切换中？"
msgstr "Switching?"

#: backend/db_services/redis/autofix/enums.py:21
msgid "切换失败"
msgstr "Switch failed"

#: backend/db_services/redis/autofix/enums.py:22
msgid "切换成功"
msgstr "Switch successful"

#: backend/db_services/redis/autofix/enums.py:28
msgid "自愈开关"
msgstr "Self-healing switch"

#: backend/db_services/redis/autofix/enums.py:29
msgid "监控到的id"
msgstr "Monitored id"

#: backend/db_services/redis/autofix/enums.py:30
msgid "忽略自愈的APP列表"
msgstr "Ignore self-healing APP list"

#: backend/db_services/redis/autofix/enums.py:31
msgid "忽略自愈的集群列表"
msgstr "Ignore list of self-healing clusters"

#: backend/db_services/redis/autofix/enums.py:37
msgid "初始化"
msgstr "initialization"

#: backend/db_services/redis/autofix/enums.py:39
msgid "发起flow流程"
msgstr "Initiate flow process"

#: backend/db_services/redis/autofix/enums.py:40
msgid "监控流程完成状态"
msgstr "Monitor process completion status"

#: backend/db_services/redis/autofix/enums.py:41
msgid "不支持自愈"
msgstr "Does not support self-healing"

#: backend/db_services/redis/autofix/enums.py:42
msgid "自愈成功"
msgstr "Successful self-healing"

#: backend/db_services/redis/autofix/enums.py:43
msgid "自愈失败"
msgstr "Self-healing failed"

#: backend/db_services/redis/autofix/models.py:27
msgid "取值范围"
msgstr "Value range"

#: backend/db_services/redis/autofix/models.py:38
msgid "集群主域名"
msgstr "Cluster main domain name"

#: backend/db_services/redis/autofix/models.py:39
msgid "故障机器"
msgstr "faulty machine"

#: backend/db_services/redis/autofix/models.py:41
msgid "自愈状态"
msgstr "self-healing state"

#: backend/db_services/redis/autofix/models.py:42
msgid "状态版本"
msgstr "status version"

#: backend/db_services/redis/autofix/models.py:57
msgid "机器ID"
msgstr "Machine ID"

#: backend/db_services/redis/autofix/models.py:58
msgid "机器IP"
msgstr "Machine IP"

#: backend/db_services/redis/autofix/models.py:59
msgid "切换端口"
msgstr "switch port"

#: backend/db_services/redis/autofix/models.py:60
msgid "切换最小值"
msgstr "Toggle minimum"

#: backend/db_services/redis/autofix/models.py:61
msgid "切换最大值"
msgstr "Toggle maximum"

#: backend/db_services/redis/autofix/models.py:62
msgid "切换结果"
msgstr "Switch results"

#: backend/db_services/redis/autofix/models.py:63
msgid "忽略类型"
msgstr "ignore type"

#: backend/db_services/redis/autofix/models.py:71
#: backend/ticket/constants.py:53
msgid "待处理"
msgstr "Pending"

#: backend/db_services/redis/autofix/models.py:72
msgid "已取消"
msgstr "Canceled"

#: backend/db_services/redis/autofix/models.py:74
#: backend/ticket/constants.py:78 backend/ticket/constants.py:89
msgid "执行中"
msgstr "in execution"

#: backend/db_services/redis/autofix/models.py:84
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:71
msgid "信息"
msgstr "information"

#: backend/db_services/redis/autofix/models.py:88
msgid "上报IP"
msgstr "Report IP"

#: backend/db_services/redis/autofix/models.py:89
msgid "上报端口"
msgstr "Reporting port"

#: backend/db_services/redis/autofix/models.py:90
msgid "上报的nodes data"
msgstr "Reported nodes data"

#: backend/db_services/redis/autofix/models.py:91
msgid "上报时间"
msgstr "Reporting time"

#: backend/db_services/redis/constants.py:19
msgid "基于正则"
msgstr "Regex-based"

#: backend/db_services/redis/constants.py:20
msgid "基于文件"
msgstr "file based"

#: backend/db_services/redis/constants.py:26
msgid "查询当前版本"
msgstr "Query the current version"

#: backend/db_services/redis/constants.py:27
msgid "查询更新版本"
msgstr "Query updated version"

#: backend/db_services/redis/maxmemory_set/maxmemory_set.py:127
msgid "bk_biz_id {} in blacklist,skip maxmemory set"
msgstr "bk_biz_id {} in blacklist,skip maxmemory set"

#: backend/db_services/redis/maxmemory_set/maxmemory_set.py:131
msgid "domain {} in blacklist,skip maxmemory set"
msgstr "domain {} in blacklist,skip maxmemory set"

#: backend/db_services/redis/maxmemory_set/maxmemory_set.py:135
msgid "cluster {} cluster_type:{} is not redis instance,skip maxmemory set"
msgstr "cluster {} cluster_type:{} is not redis instance,skip maxmemory set"

#: backend/db_services/redis/maxmemory_set/maxmemory_set.py:141
msgid "cluster {} is dts task dstCluster,skip maxmemory set"
msgstr "cluster {} is dts task dstCluster,skip maxmemory set"

#: backend/db_services/redis/maxmemory_set/maxmemory_set.py:166
msgid "首次通过外围程序设置maxmemory"
msgstr "Set maxmemory through the peripheral program for the first time"

#: backend/db_services/redis/maxmemory_set/maxmemory_set.py:177
msgid "集群 master addrs 发生变化"
msgstr "Cluster master addrs changes"

#: backend/db_services/redis/maxmemory_set/maxmemory_set.py:187
msgid "集群master {} 的 used_memory变化了 {}{}"
msgstr "The used_memory of cluster master {} has changed {}{}"

#: backend/db_services/redis/maxmemory_set/maxmemory_set.py:192
msgid "集群master {} 的 used_memory变化了 {}{}%"
msgstr "The used_memory of cluster master {} has changed {}{}%"

#: backend/db_services/redis/maxmemory_set/maxmemory_set.py:193
msgid "集群master 的 used_memory没有发生变化"
msgstr "The used_memory of the cluster master has not changed."

#: backend/db_services/redis/maxmemory_set/models/tb_tendis_maxmemory_backends.py:27
msgid "backends"
msgstr "backends"

#: backend/db_services/redis/maxmemory_set/models/tb_tendis_maxmemory_config.py:33
msgid "配置数据"
msgstr "Configuration data"

#: backend/db_services/redis/maxmemory_set/models/tb_tendis_maxmemory_config.py:37
msgid "redis maxmemory配置"
msgstr "redis maxmemory configuration"

#: backend/db_services/redis/redis_dts/constants.py:20
msgid "tendis ssd备份任务"
msgstr "tendis ssd backup task"

#: backend/db_services/redis/redis_dts/constants.py:21
msgid "tendis ssd备份拉取任务"
msgstr "tendis ssd backup pull task"

#: backend/db_services/redis/redis_dts/constants.py:22
msgid "tendis ssd备份解析任务"
msgstr "Tendis ssd backup analysis task"

#: backend/db_services/redis/redis_dts/constants.py:23
msgid "tendis ssd数据导入任务"
msgstr "Tendis ssd data import task"

#: backend/db_services/redis/redis_dts/constants.py:24
msgid "tendis ssd拉起sync任务"
msgstr "Tendis ssd pulls up the sync task"

#: backend/db_services/redis/redis_dts/constants.py:25
#: backend/db_services/redis/redis_dts/constants.py:29
msgid "tendis ssd监视sync任务"
msgstr "Tendis ssd monitor sync task"

#: backend/db_services/redis/redis_dts/constants.py:28
msgid "redis cache拉起redis-shake任务"
msgstr "Redis cache pulls up the redis-shake task"

#: backend/db_services/redis/redis_dts/constants.py:32
msgid "tendisplus拉起reids-sync任务"
msgstr "Tendisplus pulls up the reids-sync task"

#: backend/db_services/redis/redis_dts/constants.py:34
msgid "tendisplus全量数据同步"
msgstr "Tendisplus full data synchronization"

#: backend/db_services/redis/redis_dts/constants.py:35
msgid "tendisplus增量数据同步"
msgstr "Tendisplus incremental data synchronization"

#: backend/db_services/redis/redis_dts/constants.py:41
msgid "停止数据同步todo"
msgstr "stop data sync todo"

#: backend/db_services/redis/redis_dts/constants.py:42
msgid "停止数据同步失败"
msgstr "Failed to stop data sync"

#: backend/db_services/redis/redis_dts/constants.py:43
msgid "停止数据同步成功"
msgstr "Stop data synchronization successfully"

#: backend/db_services/redis/redis_dts/constants.py:45
msgid "强制暂停任务todo"
msgstr "Forcibly suspend task todo"

#: backend/db_services/redis/redis_dts/constants.py:46
msgid "强制暂停任务失败"
msgstr "Failed to force suspend task"

#: backend/db_services/redis/redis_dts/constants.py:47
msgid "强制暂停任务成功"
msgstr "Succeeded in forcing the task to suspend"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:21
msgid "集群节点数变更"
msgstr "Change in the number of cluster nodes"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:22
msgid "集群类型变更"
msgstr "Cluster type change"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:23
msgid "集群数据复制"
msgstr "Cluster data replication"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:24
msgid "集群回档数据回写"
msgstr "Cluster archive data write back"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:32
msgid "业务内"
msgstr "Within business"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:33
msgid "跨业务"
msgstr "Cross-business"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:34
msgid "业务内至第三方"
msgstr "Within business to third parties"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:35
msgid "自建集群至业务内"
msgstr "Build your own cluster into your business"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:36
msgid "构造实例至业务内"
msgstr "Construct an instance into the business"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:45
msgid "先删除同名redis key, 再执行写入(如:del $key + hset $key)"
msgstr "First delete the redis key with the same name, and then perform writing (such as: del $key + hset $key)"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:47
msgid "保留同名redis key,追加写入(如hset $key)"
msgstr "Keep the redis key with the same name and write additionally (such as hset $key)"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:48
msgid "先清空目标集群所有数据,在写入(如flushall + hset $key)"
msgstr "First clear all data in the target cluster and then write (such as flushall + hset $key)"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:63
msgid "自动切换"
msgstr "auto switch"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:64
msgid "用户确认切换"
msgstr "User confirmation switch"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:72
msgid "复制完成后自动断开同步关系"
msgstr "Automatically disconnect the synchronization relationship after copying is completed"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:73
msgid "复制完成后保持同步关系，定时发送断开同步提醒"
msgstr "After the copy is completed, the synchronization relationship is maintained and the disconnection synchronization reminder is sent regularly."

#: backend/db_services/redis/redis_dts/enums/type_enums.py:81
msgid "每天一次"
msgstr "once a day"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:82
#: backend/db_services/redis/redis_dts/enums/type_enums.py:102
msgid "每周一次"
msgstr "once a week"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:90
#: backend/ticket/constants.py:559
msgid "数据校验并修复"
msgstr "Data verification and repair"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:91
#: backend/ticket/constants.py:560
msgid "仅进行数据校验，不进行修复"
msgstr "Only data verification is performed, no repair is performed"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:92
#: backend/ticket/constants.py:561
msgid "不校验不修复"
msgstr "No verification or repair"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:100
msgid "复制完成后执行一次"
msgstr "Execute once after copying is complete"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:101
msgid "每三天一次"
msgstr "Once every three days"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:110
#: backend/ticket/builders/common/constants.py:96
msgid "自动修复"
msgstr "automatic repair"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:111
msgid "用户确认"
msgstr "User confirmation"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:119
msgid "永不超时"
msgstr "Never times out"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:120
msgid "1小时"
msgstr "1 hour"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:121
msgid "3小时"
msgstr "3 hours"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:122
msgid "6小时"
msgstr "6 hours"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:123
msgid "1天"
msgstr "1 day"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:124
msgid "2天"
msgstr "2 days"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:125
msgid "1周"
msgstr "1 week"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:134
msgid "增量同步中"
msgstr "Incremental sync in progress"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:136
msgid "增量同步失败"
msgstr "Incremental sync failed"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:138
msgid "传输已完成"
msgstr "Transfer completed"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:139
msgid "传输被终止"
msgstr "transfer terminated"

#: backend/db_services/redis/redis_dts/enums/type_enums.py:140
msgid "未知状态"
msgstr "unknown status"

#: backend/db_services/redis/redis_dts/exceptions.py:18
msgid "DBDts模块异常"
msgstr "DBDts module exception"

#: backend/db_services/redis/redis_dts/exceptions.py:23
msgid "获取DTS任务列表异常"
msgstr "Obtaining the DTS task list is abnormal"

#: backend/db_services/redis/redis_dts/exceptions.py:29
msgid "DTS task操作异常"
msgstr "DTS task operation is abnormal"

#: backend/db_services/redis/redis_dts/migrate_cluster_password.py:54
msgid "cluster:{} 密码已经正确存储"
msgstr "cluster:{} password has been stored correctly"

#: backend/db_services/redis/redis_dts/migrate_cluster_password.py:68
msgid "cluster:{} 密码已存储port不正确,重新存储"
msgstr "cluster:{} The password has been stored and the port is incorrect. Please store it again."

#: backend/db_services/redis/redis_dts/migrate_cluster_password.py:79
msgid "cluster:{} 密码从dbconfig中迁移到密码服务中"
msgstr "cluster:{} password is migrated from dbconfig to password service"

#: backend/db_services/redis/redis_dts/migrate_cluster_password.py:89
msgid "cluster:{} 在 dbconfig和密码服务中均不存在"
msgstr "cluster:{} does not exist in both dbconfig and password services"

#: backend/db_services/redis/redis_dts/models/tb_dts_distribute_lock.py:17
msgid "锁的唯一标识"
msgstr "Unique ID of the lock"

#: backend/db_services/redis/redis_dts/models/tb_dts_distribute_lock.py:18
msgid "锁的持有者"
msgstr "lock holder"

#: backend/db_services/redis/redis_dts/models/tb_dts_distribute_lock.py:20
msgid "锁的过期时间"
msgstr "lock expiration time"

#: backend/db_services/redis/redis_dts/models/tb_dts_server.py:18
msgid "DTS_Server IP"
msgstr "DTS_Server IP"

#: backend/db_services/redis/redis_dts/models/tb_dts_server.py:19
msgid "城市ID"
msgstr "City ID"

#: backend/db_services/redis/redis_dts/models/tb_dts_server.py:22
msgid "最近心跳时间"
msgstr "Last heartbeat time"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:28
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_switch_backup.py:21
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:20
msgid "单据号"
msgstr "ticket No"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:29
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:22
msgid "业务bk_biz_id"
msgstr "Business bk_biz_id"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:30
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:23
#: backend/db_services/redis/rollback/models/tb_tendis_data_construction_task.py:13
#: backend/db_services/redis/slots_migrate/models/slots_migration_record.py:13
msgid "云区域id"
msgstr "cloud region id"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:31
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:21
msgid "申请人"
msgstr "applicant"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:33
msgid "DTS单据类型"
msgstr "DTS ticket type"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:36
msgid "DTS数据复制类型"
msgstr "DTS data replication type"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:39
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:26
msgid "写入模式"
msgstr "write mode"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:45
msgid "在线切换类型"
msgstr "Online switch type"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:48
msgid "同步断开类型"
msgstr "Synchronous disconnect type"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:51
msgid "同步断开提醒频率"
msgstr "Synchronous disconnection reminder frequency"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:57
msgid "数据校验修复类型"
msgstr "Data verification repair type"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:63
msgid "数据校验修复执行频率"
msgstr "Data verification repair execution frequency"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:66
msgid "最近一次数据校验与修复 flow id"
msgstr "The most recent data verification and repair flow id"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:68
msgid "最近一次数据校验与修复 单据执行时间"
msgstr "The latest data verification and repair document execution time"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:70
msgid "在线切换 flow id"
msgstr "Switch flow id online"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:72
msgid "目的集群禁用 flow id"
msgstr "Disable flow id in the destination cluster"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:73
msgid "目的集群下架 flow id"
msgstr "The destination cluster removes the flow id"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:76
msgid "源集群id"
msgstr "Source cluster id"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:78
msgid "源集群类型"
msgstr "source cluster type"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:79
msgid "回滚单据号"
msgstr "Rollback ticket number"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:80
msgid "回滚临时环境实例"
msgstr "Rollback a temporary environment instance"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:81
msgid "目标业务id"
msgstr "target business id"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:82
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_switch_backup.py:23
#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:54
msgid "目的集群"
msgstr "destination cluster"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:83
msgid "目的集群id"
msgstr "destination cluster id"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:85
#: backend/ticket/builders/redis/redis_toolbox_type_update.py:52
msgid "目标集群类型"
msgstr "target cluster type"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:86
msgid "key正则(包含key)"
msgstr "key regular (including key)"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_job.py:87
msgid "key正则(排除key)"
msgstr "key regularization (exclude key)"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_switch_backup.py:24
msgid "数据类型"
msgstr "data type"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_switch_backup.py:25
msgid "数据"
msgstr "data"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:24
msgid "执行迁移任务的dts_server"
msgstr "dts_server that executes migration tasks"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:29
msgid "源集群优先级,值越大,优先级越高"
msgstr "Source cluster priority, the larger the value, the higher the priority"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:30
msgid "源slave_ip"
msgstr "source slave ip"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:31
msgid "源slave_port"
msgstr "source slave_port"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:32
msgid "源实例密码base64值"
msgstr "Source instance password base64 value"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:34
msgid "源slave db类型"
msgstr "Source slave db type"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:36
msgid "源实例数据量大小,单位Byte"
msgstr "Source instance data size, unit Byte"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:38
msgid "源实例所属segment_start"
msgstr "The segment_start to which the source instance belongs"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:39
msgid "源实例所属segment_end"
msgstr "The segment_end to which the source instance belongs"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:41
msgid "源实例权重"
msgstr "Source Instance Weight"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:43
msgid "源slave_ip上task并发数控制"
msgstr "Task concurrency control on the source slave_ip"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:44
msgid "源实例所在城市"
msgstr "The time zone where the instance is located"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:46
msgid "源实例slave-keep-log-count的旧值"
msgstr "Old value of source instance slave-keep-log-count"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:47
msgid "源实例slave-keep-log-count的新值"
msgstr "The new value of the source instance slave-keep-log-count"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:48
msgid "源实例slave-keep-log-count是否恢复"
msgstr "Whether the source instance slave-keep-log-count is restored"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:49
msgid "srcRedis是否包含list类型key"
msgstr "Whether srcRedis contains list type key"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:50
msgid "源twemproxy集群是否开启hash_tag"
msgstr "Whether the source twemproxy cluster has hash_tag enabled"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:51
msgid "包含key(正则)"
msgstr "Contains key (regular)"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:52
msgid "排除key(正则)"
msgstr "Exclude key (regular)"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:55
msgid "目的密码base64值"
msgstr "Destination password base64 value"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:58
msgid "tendisssd slave上bakup文件位置"
msgstr "bakup file location on tendisssd slave"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:59
msgid "backup文件拉取到dts_server本地位置"
msgstr "The backup file is pulled to the local location of dts_server"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:60
msgid "tendisdumper得到的sql文件夹"
msgstr "The sql folder obtained by tendisdumper"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:61
msgid "redis-sync端口"
msgstr "redis-sync port"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:62
msgid "sync的进程id"
msgstr "sync process id"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:64
msgid "task重试次数"
msgstr "task retries"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:66
msgid "sync操作"
msgstr "sync operation"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:68
msgid "杀死syncer"
msgstr "kill syncer"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:73
msgid "被忽略的错误"
msgstr "ignored errors"

#: backend/db_services/redis/redis_dts/models/tb_tendis_dts_task.py:74
msgid "sync从该时间点重新同步"
msgstr "sync resynchronizes from this point in time"

#: backend/db_services/redis/redis_dts/serializers.py:29
msgid "页码"
msgstr "page number"

#: backend/db_services/redis/redis_dts/serializers.py:30
msgid "每页数量"
msgstr "Quantity per page"

#: backend/db_services/redis/redis_dts/views.py:61
msgid "获取DTS历史任务以及其对应task cnt"
msgstr "Get DTS historical tasks and their corresponding task cnt"

#: backend/db_services/redis/redis_dts/views.py:83
msgid "dts job断开同步"
msgstr "dts job disconnects synchronization"

#: backend/db_services/redis/redis_dts/views.py:94
msgid "dts job 批量失败重试"
msgstr "Dts job batch failure retry"

#: backend/db_services/redis/redis_dts/views.py:105
msgid "dts 外部redis连接行测试"
msgstr "dts external redis connection line test"

#: backend/db_services/redis/redis_modules/models/redis_module_support.py:14
msgid "module名"
msgstr "module name"

#: backend/db_services/redis/redis_modules/models/redis_module_support.py:15
msgid "so文件名"
msgstr "so file name"

#: backend/db_services/redis/redis_modules/models/redis_module_support.py:18
#: backend/db_services/redis/redis_modules/models/redis_module_support.py:19
msgid "Redis module支持"
msgstr "Redis module support"

#: backend/db_services/redis/rollback/handlers.py:50
msgid "无法查找到在时间范围内{}-{}，主机{}的全备份日志"
msgstr "Unable to find the full backup log of host {} in the time range {}-{}"

#: backend/db_services/redis/rollback/handlers.py:57
#: backend/db_services/redis/rollback/handlers.py:148
msgid "没有找到小于时间点{}附近的备份日志记录，请检查时间点的合法性或稍后重试"
msgstr "No backup log records smaller than the time point {} were found. Please check the validity of the time point or try again later."

#: backend/db_services/redis/rollback/handlers.py:140
msgid "大范围内的查询结果 backup_logs: {}"
msgstr "Query results in a wide range backup_logs: {}"

#: backend/db_services/redis/rollback/handlers.py:146
msgid "latest_log:{},start_time:{}"
msgstr "latest_log:{},start_time:{}"

#: backend/db_services/redis/rollback/handlers.py:166
msgid "backup_logs_cluster_same_batch:{}"
msgstr "backup_logs_cluster_same_batch:{}"

#: backend/db_services/redis/rollback/handlers.py:205
msgid "无法查找到在时间范围内{}-{}，主机{}的binlog日志"
msgstr "Unable to find binlog logs for host {} in the time range {}-{}"

#: backend/db_services/redis/rollback/handlers.py:238
#: backend/db_services/redis/rollback/handlers.py:261
msgid "binlog全部文件信息:{}"
msgstr "All binlog file information:{}"

#: backend/db_services/redis/rollback/handlers.py:240
msgid "节点{}:{}的kvstore:{}的binlog 数少于2，不符合预期，请检查error日志"
msgstr "The number of binlogs of kvstore:{} of node {}:{} is less than 2, which is not as expected. Please check the error log."

#: backend/db_services/redis/rollback/handlers.py:262
msgid "节点{}:{}的binlog 数少于2，不符合预期，请检查error日志"
msgstr "The number of binlogs of node {}:{} is less than 2, which is not as expected. Please check the error log."

#: backend/db_services/redis/rollback/handlers.py:305
msgid "文件序号重复: {}，文件重复: {}"
msgstr "Duplicate file serial number: {}, Duplicate file: {}"

#: backend/db_services/redis/rollback/handlers.py:309
msgid "缺失时打印当前文件:{}和上一个文件: {}"
msgstr "If missing, print current file: {} and previous file: {}"

#: backend/db_services/redis/rollback/handlers.py:357
msgid ""
"无法找到filter:{}小于时间点{}附近的日志记录，请检查时间点的合法性或稍后重试"
msgstr "Unable to find log records near filter:{} less than time point {}. Please check the validity of the time point or try again later."

#: backend/db_services/redis/rollback/handlers.py:366
msgid ""
"无法找到filter:{}大于时间点{}附近的日志记录，请检查时间点的合法性或稍后重试"
msgstr "Unable to find log records where filter:{} is greater than time point {}. Please check the validity of the time point or try again later."

#: backend/db_services/redis/rollback/models/tb_tendis_data_construction_task.py:10
#: backend/db_services/redis/slots_migrate/models/slots_migration_record.py:10
msgid "单据号，关联单据"
msgstr "Document number, associated document"

#: backend/db_services/redis/rollback/models/tb_tendis_data_construction_task.py:11
#: backend/db_services/redis/slots_migrate/models/slots_migration_record.py:11
msgid "业务id"
msgstr "business id"

#: backend/db_services/redis/rollback/models/tb_tendis_data_construction_task.py:16
msgid "构造源集群类型"
msgstr "Construct source cluster type"

#: backend/db_services/redis/rollback/models/tb_tendis_data_construction_task.py:18
msgid "构造的源集群，线上环境cluster"
msgstr "Constructed source cluster, online environment cluster"

#: backend/db_services/redis/rollback/models/tb_tendis_data_construction_task.py:19
#: backend/db_services/redis/slots_migrate/models/slots_migration_record.py:18
msgid "集群id，cluster.id"
msgstr "Cluster id, cluster.id"

#: backend/db_services/redis/rollback/models/tb_tendis_data_construction_task.py:20
msgid "源构造的实例范围"
msgstr "Instance scope of source construct"

#: backend/db_services/redis/rollback/models/tb_tendis_data_construction_task.py:23
msgid "临时集群类型"
msgstr "Temporary cluster type"

#: backend/db_services/redis/rollback/models/tb_tendis_data_construction_task.py:25
msgid "临时集群proxy密码base64值"
msgstr "Temporary cluster proxy password base64 value"

#: backend/db_services/redis/rollback/models/tb_tendis_data_construction_task.py:26
msgid "临时集群构造实例范围"
msgstr "Temporary cluster construction instance scope"

#: backend/db_services/redis/rollback/models/tb_tendis_data_construction_task.py:27
msgid "构造产物访问入口ip:port"
msgstr "Configure product access entrance ip:port"

#: backend/db_services/redis/rollback/models/tb_tendis_data_construction_task.py:29
msgid "构造源实例和临时实例一一对应关系"
msgstr "Construct a one-to-one correspondence between the source instance and the temporary instance"

#: backend/db_services/redis/rollback/models/tb_tendis_data_construction_task.py:40
msgid "销毁状态"
msgstr "Destroyed state"

#: backend/db_services/redis/rollback/models/tb_tendis_data_construction_task.py:42
#: backend/db_services/redis/slots_migrate/models/slots_migration_record.py:42
msgid "规格需求"
msgstr "Specification requirements"

#: backend/db_services/redis/rollback/models/tb_tendis_data_construction_task.py:43
msgid "构造的主机数量"
msgstr "Number of hosts constructed"

#: backend/db_services/redis/rollback/models/tb_tendis_data_construction_task.py:44
msgid "构造到指定时间"
msgstr "Construct to specified time"

#: backend/db_services/redis/rollback/models/tb_tendis_data_construction_task.py:45
msgid "临时集群redis密码base64值"
msgstr "Temporary cluster redis password base64 value"

#: backend/db_services/redis/rollback/serializers.py:36
#: backend/db_services/redis/toolbox/serializers.py:178
#: backend/db_services/redis/toolbox/serializers.py:185
msgid "集群id"
msgstr "cluster id"

#: backend/db_services/redis/rollback/serializers.py:37
#: backend/ticket/builders/redis/redis_toolbox_fixpoint_make.py:36
msgid "master实例列表"
msgstr "master instance list"

#: backend/db_services/redis/rollback/serializers.py:38
msgid "构造时间"
msgstr "Construction time"

#: backend/db_services/redis/rollback/views.py:72
msgid "构造时间合法性检查"
msgstr "Construction time legality check"

#: backend/db_services/redis/slots_migrate/models/slots_migration_record.py:22
msgid "扩缩容前实例主从对"
msgstr "Instance master-slave pair before expansion and contraction"

#: backend/db_services/redis/slots_migrate/models/slots_migration_record.py:23
msgid "扩缩容后实例主从对"
msgstr "Instance master-slave pair after expansion and contraction"

#: backend/db_services/redis/slots_migrate/models/slots_migration_record.py:25
msgid "扩容新增实例主从对"
msgstr "Expanding capacity and adding new instance master-slave pair"

#: backend/db_services/redis/slots_migrate/models/slots_migration_record.py:27
msgid "缩容下架实例主从对"
msgstr "Scale down and remove instance master-slave pair"

#: backend/db_services/redis/slots_migrate/models/slots_migration_record.py:28
msgid "扩缩容前的主机数量"
msgstr "Number of hosts before expansion and contraction"

#: backend/db_services/redis/slots_migrate/models/slots_migration_record.py:29
msgid "扩缩容后的主机数量"
msgstr "Number of hosts after expansion and contraction"

#: backend/db_services/redis/slots_migrate/models/slots_migration_record.py:31
msgid "扩容时新增的主从主机"
msgstr "New master and slave hosts added during capacity expansion"

#: backend/db_services/redis/slots_migrate/models/slots_migration_record.py:34
msgid "特定slots迁移信息"
msgstr "Specific slots migration information"

#: backend/db_services/redis/toolbox/serializers.py:20
msgid "集群id/name/domain列表"
msgstr "Cluster id/name/domain list"

#: backend/db_services/redis/toolbox/serializers.py:187
msgid "limit"
msgstr "limit"

#: backend/db_services/redis/toolbox/serializers.py:188
msgid "offset"
msgstr "offset"

#: backend/db_services/redis/toolbox/serializers.py:219
msgid "集群节点类型"
msgstr "Cluster node type"

#: backend/db_services/redis/toolbox/serializers.py:220
msgid "请求版本类型"
msgstr "Request version type"

#: backend/db_services/redis/toolbox/serializers.py:225
msgid "存储版本"
msgstr "Store version"

#: backend/db_services/redis/toolbox/serializers.py:226
msgid "新规格ID"
msgstr "New specification ID"

#: backend/db_services/redis/toolbox/serializers.py:227
msgid "申请机器组数量"
msgstr "Number of machine groups to apply for"

#: backend/db_services/redis/toolbox/serializers.py:228
msgid "新的分片数量"
msgstr "New number of shards"

#: backend/db_services/redis/toolbox/views.py:41
msgid "根据IP/实例查询关联对"
msgstr "Query related pairs based on IP/instance"

#: backend/db_services/redis/toolbox/views.py:52
msgid "查询集群下的主机列表"
msgstr "Query the host list under the cluster"

#: backend/db_services/redis/toolbox/views.py:64
msgid "根据cluster_id查询主从关系对"
msgstr "Query the master-slave relationship pair based on cluster_id"

#: backend/db_services/redis/toolbox/views.py:74
msgid "查询集群版本信息"
msgstr "Query cluster version information"

#: backend/db_services/redis/toolbox/views.py:88
msgid "获取集群容量变更所需信息"
msgstr "Obtain information required for cluster capacity changes"

#: backend/db_services/sqlserver/cluster/handlers.py:60
msgid "构造 DB 名称"
msgstr "Construct DB name"

#: backend/db_services/sqlserver/cluster/handlers.py:60
msgid "构造后 DB 名称"
msgstr "DB name after construction"

#: backend/db_services/sqlserver/cluster/handlers.py:60
msgid "已存在的 DB"
msgstr "Existing DB"

#: backend/db_services/sqlserver/cluster/handlers.py:77
msgid "导入的源DB不与集群DB匹配，请检查excel数据"
msgstr "The imported source DB does not match the cluster DB, please check the excel data"

#: backend/db_services/sqlserver/cluster/serializers.py:19
#: backend/db_services/sqlserver/cluster/serializers.py:47
msgid "忽略db列表"
msgstr "Ignore db list"

#: backend/db_services/sqlserver/cluster/serializers.py:29
#: backend/db_services/sqlserver/rollback/serializers.py:73
msgid "构造DB的excel文件"
msgstr "Construct DB excel file"

#: backend/db_services/sqlserver/cluster/serializers.py:30
#: backend/db_services/sqlserver/rollback/serializers.py:74
msgid "db列表(逗号分隔)"
msgstr "db list (comma separated)"

#: backend/db_services/sqlserver/cluster/serializers.py:31
#: backend/db_services/sqlserver/rollback/serializers.py:75
msgid "忽略db列表(逗号分割)"
msgstr "Ignore db list (comma separated)"

#: backend/db_services/sqlserver/cluster/views.py:39
msgid "通过库表匹配查询db"
msgstr "Query db through database table matching"

#: backend/db_services/sqlserver/cluster/views.py:50
msgid "通过库表匹配批量查询db"
msgstr "Query db in batches through database table matching"

#: backend/db_services/sqlserver/cluster/views.py:61
msgid "判断库名是否在集群存在"
msgstr "Determine whether the library name exists in the cluster"

#: backend/db_services/sqlserver/cluster/views.py:72
msgid "导入构造DB数据"
msgstr "Import constructed DB data"

#: backend/db_services/sqlserver/data_migrate/serializers.py:27
msgid "请保证单据类型是[SQLServer 增量迁移]"
msgstr "Please ensure that the document type is [SQLServer Incremental Migration]"

#: backend/db_services/sqlserver/data_migrate/serializers.py:29
msgid "请保证迁移模式是[增量备份迁移]"
msgstr "Please ensure that the migration mode is [Incremental backup migration]"

#: backend/db_services/sqlserver/data_migrate/serializers.py:43
msgid "迁移记录{}不存在"
msgstr "Migration record {} does not exist"

#: backend/db_services/sqlserver/data_migrate/views.py:40
msgid "手动断开同步"
msgstr "Disconnect sync manually"

#: backend/db_services/sqlserver/data_migrate/views.py:52
msgid "强制终止"
msgstr "Forced termination"

#: backend/db_services/sqlserver/data_migrate/views.py:63
msgid "获取迁移记录"
msgstr "Get migration records"

#: backend/db_services/sqlserver/permission/db_authorize/handlers.py:66
msgid "不存在集群：{}"
msgstr "Cluster does not exist: {}"

#: backend/db_services/sqlserver/permission/db_authorize/serializers.py:24
msgid "sqlserver账户规则"
msgstr "sqlserver account rules"

#: backend/db_services/sqlserver/rollback/handlers.py:173
msgid "集群【{}】最近的{}天里找不到日志备份"
msgstr "Cluster [{}] cannot find log backup in the last {} days"

#: backend/db_services/sqlserver/rollback/handlers.py:194
msgid ""
"请联系系统管理员，恢复集群[{}]的数据库[{}]中拉取到无关联的日志备份记录[{}]"
msgstr "Please contact the system administrator to recover the unrelated log backup records [{}] pulled from the database [{}] of the cluster [{}]"

#: backend/db_services/sqlserver/rollback/handlers.py:212
msgid ""
"请联系系统管理员，恢复集群[{}]的数据库[{}]中拉取的日志备份存在不连续的情况:"
"the first_lsn [{}]:[{}]; the last_lsn [{}]:[{}]\n"
msgstr "Please contact the system administrator to restore the log backup pulled from the database [{}] of the cluster [{}]. There are discontinuities: the first_lsn [{}]:[{}]; the last_lsn [{}]:[ {}]\n"

#: backend/db_services/sqlserver/rollback/serializers.py:47
msgid "库匹配模式"
msgstr "library matching pattern"

#: backend/db_services/sqlserver/rollback/serializers.py:48
msgid "忽略库匹配模式"
msgstr "Ignore library matching pattern"

#: backend/db_services/sqlserver/rollback/serializers.py:49
#: backend/ticket/builders/sqlserver/sqlserver_rollback.py:53
msgid "备份记录"
msgstr "Backup records"

#: backend/db_services/sqlserver/rollback/serializers.py:54
msgid "请输入备份记录或者备份时间来查询操作库表"
msgstr "Please enter the backup record or backup time to query the operation database table"

#: backend/db_services/sqlserver/rollback/serializers.py:60
msgid "只能选取回滚近15天的时间"
msgstr "You can only choose to roll back the last 15 days"

#: backend/db_services/sqlserver/rollback/serializers.py:77
msgid "备份记录(json转义)"
msgstr "Backup record (json escape)"

#: backend/db_services/sqlserver/rollback/serializers.py:82
msgid "请保证输入回档信息"
msgstr "Please make sure to enter the rollback information"

#: backend/db_services/sqlserver/rollback/views.py:43
msgid "查询集群备份记录"
msgstr "Query cluster backup records"

#: backend/db_services/sqlserver/rollback/views.py:57
msgid "根据回档时间集群最近备份记录"
msgstr "The latest backup records of the cluster based on the rollback time"

#: backend/db_services/sqlserver/rollback/views.py:73
msgid "根据备份记录和库匹配模式查询操作库"
msgstr "Query the operation library based on backup records and library matching patterns"

#: backend/db_services/sqlserver/rollback/views.py:85
msgid "导入构造DB数据(备份信息校验)"
msgstr "Import structural DB data (backup information verification)"

#: backend/db_services/sqlserver/sql_import/views.py:34
msgid "sql文件导入"
msgstr "sql file import"

#: backend/db_services/sqlserver/sql_import/views.py:44
msgid "sqlserver语法检查"
msgstr "sqlserver syntax check"

#: backend/db_services/taskflow/exceptions.py:18
msgid "任务流程模块异常"
msgstr "Task process module exception"

#: backend/db_services/taskflow/exceptions.py:23
msgid "重试节点异常"
msgstr "retry node exception"

#: backend/db_services/taskflow/exceptions.py:28
msgid "回调节点异常"
msgstr "callback node exception"

#: backend/db_services/taskflow/exceptions.py:33
msgid "跳过节点异常"
msgstr "skip node exception"

#: backend/db_services/taskflow/exceptions.py:38
msgid "强制失败节点异常"
msgstr "Force failure node exception"

#: backend/db_services/taskflow/exceptions.py:43
msgid "撤销流程异常"
msgstr "Abnormal cancellation process"

#: backend/db_services/taskflow/handlers.py:58
msgid "pipeline未创建，仅更新FlowTree"
msgstr "pipeline is not created, only FlowTree is updated"

#: backend/db_services/taskflow/handlers.py:101
msgid "人工强制失败"
msgstr "Manual forced failure"

#: backend/db_services/taskflow/handlers.py:206
msgid "节点尚未运行，请稍后查看"
msgstr "The node is not running yet, please check later"

#: backend/db_services/taskflow/handlers.py:208
msgid "节点日志仅保留7天"
msgstr "Node logs are only kept for 7 days"

#: backend/db_services/taskflow/handlers.py:240
msgid "日志上报中，请稍后查看"
msgstr "The log is being reported, please check it later"

#: backend/db_services/taskflow/serializers.py:21
#: backend/ticket/serializers.py:91
msgid "单据类型名称"
msgstr "ticket type name"

#: backend/db_services/taskflow/serializers.py:22
#: backend/ticket/serializers.py:93 backend/ticket/serializers.py:138
#: backend/ticket/serializers.py:215
msgid "耗时"
msgstr "time consuming"

#: backend/db_services/taskflow/serializers.py:48 backend/flow/models.py:43
msgid "节点ID"
msgstr "Node ID"

#: backend/db_services/taskflow/serializers.py:56
msgid "回调描述"
msgstr "callback description"

#: backend/db_services/taskflow/serializers.py:60 backend/flow/models.py:24
#: backend/flow/models.py:42
msgid "流程ID"
msgstr "Process ID"

#: backend/db_services/taskflow/serializers.py:62
msgid "是否严格匹配列名"
msgstr "Whether to strictly match column names"

#: backend/db_services/taskflow/serializers.py:66
msgid "版本ID"
msgstr "version ID"

#: backend/db_services/taskflow/serializers.py:67
msgid "是否下载日志"
msgstr "Whether to download logs"

#: backend/db_services/taskflow/task.py:74
msgid "自动重试次数已超过最大重试次数{}, 请重新手动重试"
msgstr ""
"The number of automatic retries has exceeded the maximum number of retries "
"{}, please try again manually"

#: backend/db_services/taskflow/task.py:93
msgid "存在执行互斥，正在进行重试，当前重试次数为{}"
msgstr ""
"There is an execution mutex, and retrying is in progress, and the current "
"number of retries is {}"

#: backend/db_services/taskflow/task.py:96
msgid "执行互斥错误信息: {}"
msgstr "Execution mutex error message: {}"

#: backend/db_services/taskflow/task.py:103
msgid "存在执行互斥将自动进行重试..."
msgstr "Execution mutexes will automatically be retried..."

#: backend/db_services/taskflow/task.py:113
msgid "重试成功"
msgstr "successful retry"

#: backend/db_services/taskflow/task.py:162
msgid "未开启bamboo数据清理，跳过..."
msgstr "Bamboo data cleaning is not enabled, skip..."

#: backend/db_services/taskflow/task.py:168
msgid "开始清理时间{}前的bamboo数据"
msgstr "Start cleaning bamboo data before {}"

#: backend/db_services/taskflow/task.py:174
msgid "没有需要清理的bamboo数据，跳过..."
msgstr "There is no bamboo data that needs to be cleaned, skip..."

#: backend/db_services/taskflow/task.py:180
msgid "{}数据清理..."
msgstr "{}Data cleaning..."

#: backend/db_services/taskflow/task.py:185
msgid "bamboo数据清理成功"
msgstr "Bamboo data cleaning successful"

#: backend/db_services/taskflow/task.py:187
msgid "bamboo数据清理失败，错误原因: {}"
msgstr "Bamboo data cleanup failed, error reason: {}"

#: backend/db_services/taskflow/views/flow.py:77
msgid "任务列表"
msgstr "task list"

#: backend/db_services/taskflow/views/flow.py:96
msgid "任务详情"
msgstr "Task details"

#: backend/db_services/taskflow/views/flow.py:126
msgid "撤销流程"
msgstr "Rollback process"

#: backend/db_services/taskflow/views/flow.py:135
msgid "重试节点"
msgstr "retry node"

#: backend/db_services/taskflow/views/flow.py:149
msgid "批量重试"
msgstr "Batch retry"

#: backend/db_services/taskflow/views/flow.py:159
msgid "跳过节点"
msgstr "skip node"

#: backend/db_services/taskflow/views/flow.py:169
msgid "强制失败节点"
msgstr "force failure node"

#: backend/db_services/taskflow/views/flow.py:179
msgid "节点版本列表"
msgstr "List of node versions"

#: backend/db_services/taskflow/views/flow.py:190
msgid "节点日志"
msgstr "node log"

#: backend/db_services/taskflow/views/flow.py:212
msgid "回调节点"
msgstr "callback node"

#: backend/db_services/taskflow/views/flow.py:227
msgid "流程Excel文件下载"
msgstr "Process Excel file download"

#: backend/db_services/taskflow/views/flow.py:237
msgid "获取root_id缓存数据失败"
msgstr "Failed to obtain root_id cache data"

#: backend/db_services/taskflow/views/redis.py:57
msgid "结果文件列表"
msgstr "Result file list"

#: backend/db_services/user/serializers.py:16
msgid "模糊搜索"
msgstr "fuzzy search"

#: backend/db_services/user/serializers.py:17
msgid "精确搜索"
msgstr "Exact search"

#: backend/db_services/user/serializers.py:19
msgid "不分页，即将下架，请不要使用，并尽快迁移"
msgstr ""
"No pagination, it will be discontinued soon, please do not use it, and "
"migrate as soon as possible"

#: backend/db_services/version/constants.py:24
msgid "MySQL-5.6"
msgstr "MySQL-5.6"

#: backend/db_services/version/constants.py:25
msgid "MySQL-5.7"
msgstr "MySQL-5.7"

#: backend/db_services/version/constants.py:26
msgid "MySQL-8.0"
msgstr "MySQL-8.0"

#: backend/db_services/version/constants.py:32
msgid "Spider-1"
msgstr "Spider-1"

#: backend/db_services/version/constants.py:33
msgid "Spider-3"
msgstr "Spider-3"

#: backend/db_services/version/constants.py:34
msgid "Spider-3.6"
msgstr "Spider-3.6"

#: backend/db_services/version/constants.py:35
msgid "Spider-3.7"
msgstr "Spider-3.7"

#: backend/db_services/version/constants.py:36
msgid "Spider-3.8"
msgstr "Spider-3.8"

#: backend/db_services/version/constants.py:42
msgid "Redis-2"
msgstr "Redis-2"

#: backend/db_services/version/constants.py:43
msgid "Redis-3"
msgstr "Redis-3"

#: backend/db_services/version/constants.py:44
msgid "Redis-4"
msgstr "Redis-4"

#: backend/db_services/version/constants.py:45
msgid "Redis-4t"
msgstr "Redis-4t"

#: backend/db_services/version/constants.py:46
msgid "Redis-4.0.9"
msgstr "Redis-4.0.9"

#: backend/db_services/version/constants.py:47
msgid "Redis-5"
msgstr "Redis-5"

#: backend/db_services/version/constants.py:48
msgid "Redis-6"
msgstr "Redis-6"

#: backend/db_services/version/constants.py:49
msgid "Redis-7"
msgstr "Redis-7"

#: backend/db_services/version/constants.py:50
msgid "Redis-7.2"
msgstr "Redis-7.2"

#: backend/db_services/version/constants.py:56
msgid "Mongodb-4"
msgstr "Mongodb-4"

#: backend/db_services/version/constants.py:62
msgid "Tendisplus-2.5"
msgstr "Tendisplus-2.5"

#: backend/db_services/version/constants.py:63
msgid "Tendisplus-2.6"
msgstr "Tendisplus-2.6"

#: backend/db_services/version/constants.py:64
msgid "Tendisplus-2.7"
msgstr "Tendisplus-2.7"

#: backend/db_services/version/constants.py:70
msgid "TendisSSD-1.2"
msgstr "TendisSSD-1.2"

#: backend/db_services/version/constants.py:71
msgid "TendisSSD-1.3"
msgstr "TendisSSD-1.3"

#: backend/db_services/version/constants.py:77
msgid "TwemproxyLatest"
msgstr "TwemproxyLatest"

#: backend/db_services/version/constants.py:83
msgid "PredixyLatest"
msgstr "PredixyLatest"

#: backend/db_services/version/constants.py:91
msgid "2008企业版"
msgstr "2008 Enterprise Edition"

#: backend/db_services/version/constants.py:92
msgid "2012企业版"
msgstr "2012 Enterprise Edition"

#: backend/db_services/version/constants.py:93
msgid "2014企业版"
msgstr "2014 Enterprise Edition"

#: backend/db_services/version/constants.py:94
msgid "2016企业版"
msgstr "2016 Enterprise Edition"

#: backend/db_services/version/constants.py:95
msgid "2017企业版"
msgstr "2017 Enterprise Edition"

#: backend/db_services/version/constants.py:96
msgid "2019企业版"
msgstr "2019 Enterprise Edition"

#: backend/db_services/version/constants.py:97
msgid "2022企业版"
msgstr "2022 Enterprise Edition"

#: backend/db_services/version/views.py:29
msgid "查询所有数据库的版本列表"
msgstr "Query the version list of all databases"

#: backend/db_services/version/views.py:39
#: backend/db_services/version/views.py:52
msgid "查询数据库版本列表"
msgstr "Query the list of database versions"

#: backend/db_services/version/views.py:65
msgid "根据sqlserver部署版本查询可支持的系统版本"
msgstr "Query the supported system version based on the sqlserver deployment version"

#: backend/dbm_init/management/commands/cloud_component.py:37
msgid "云区域组件初始化失败，错误信息:{}"
msgstr "Cloud zone component initialization failed, error message: {}"

#: backend/dbm_tools/management/commands/fix_process_ip.py:23
msgid "修改指定模块的服务实例进程绑定的ip"
msgstr "Modify the IP bound to the service instance process of the specified module"

#: backend/dbm_tools/management/commands/fix_process_ip.py:27
msgid "目标端口"
msgstr "target port"

#: backend/dbm_tools/management/commands/fix_process_ip.py:28
msgid "目标ip"
msgstr "target ip"

#: backend/dbm_tools/management/commands/fix_process_ip.py:29
msgid "替换方式"
msgstr "Replacement method"

#: backend/dbm_tools/management/commands/fix_resource_pool.py:27
msgid "清理资源池主机"
msgstr "Clean up the resource pool host"

#: backend/dbm_tools/management/commands/fix_resource_pool.py:30
msgid "资源池模块ID"
msgstr "Resource pool module ID"

#: backend/exceptions.py:53
msgid "系统异常"
msgstr "System exception"

#: backend/exceptions.py:108
msgid "系统错误"
msgstr "system error"

#: backend/exceptions.py:118
msgid "参数验证失败"
msgstr "Parameter validation failed"

#: backend/exceptions.py:123
msgid "远程服务请求结果异常"
msgstr "The result of the remote service request is abnormal"

#: backend/exceptions.py:128
msgid "组件调用异常"
msgstr "Component call exception"

#: backend/exceptions.py:133
msgid "业务不存在"
msgstr "business does not exist"

#: backend/exceptions.py:138
msgid "语言不支持"
msgstr "language not supported"

#: backend/exceptions.py:143
msgid "权限不足"
msgstr "Insufficient permissions"

#: backend/exceptions.py:170
msgid "服务不稳定，请检查组件健康状况"
msgstr "The service is unstable, please check the component health status"

#: backend/flow/consts.py:159
msgid "创建态"
msgstr "creation state"

#: backend/flow/consts.py:160
msgid "准备态"
msgstr "ready state"

#: backend/flow/consts.py:161
msgid "运行态"
msgstr "running state"

#: backend/flow/consts.py:162
msgid "暂停态"
msgstr "pause state"

#: backend/flow/consts.py:163
msgid "闭塞态"
msgstr "Blocked state"

#: backend/flow/consts.py:164
msgid "完成态"
msgstr "Completion"

#: backend/flow/consts.py:165
msgid "失败态"
msgstr "failure state"

#: backend/flow/consts.py:166
msgid "取消态"
msgstr "cancel state"

#: backend/flow/consts.py:167
msgid "已过期"
msgstr "Expired"

#: backend/flow/consts.py:189
msgid "共用参数"
msgstr "Shared parameters"

#: backend/flow/consts.py:190
msgid "redis共用参数"
msgstr "redis shared parameters"

#: backend/flow/consts.py:191
msgid "TenDBHA"
msgstr "TenDBHA"

#: backend/flow/consts.py:192
msgid "RedisCache 主从版"
msgstr "RedisCache master-slave version"

#: backend/flow/consts.py:193
msgid "twemproxy + RedisInstance架构"
msgstr "twemproxy + RedisInstance architecture"

#: backend/flow/consts.py:194
msgid "predixy + tendisplus架构"
msgstr "predixy + tendisplus architecture"

#: backend/flow/consts.py:195
msgid "Es"
msgstr "Es"

#: backend/flow/consts.py:196
msgid "tendb"
msgstr "tendb"

#: backend/flow/consts.py:198
msgid "Hdfs"
msgstr "Hdfs"

#: backend/flow/consts.py:200
msgid "Influxdb"
msgstr "Influxdb"

#: backend/flow/consts.py:201
msgid "tendbcluster"
msgstr "tendbcluster"

#: backend/flow/consts.py:203
msgid "mongodbcommon"
msgstr "mongodbcommon"

#: backend/flow/consts.py:209
msgid "初始化帐户"
msgstr "Initialize account"

#: backend/flow/consts.py:210
msgid "实例和帐户"
msgstr "instance and account"

#: backend/flow/consts.py:211
msgid "系统配置"
msgstr "System Configuration"

#: backend/flow/consts.py:212
msgid "实例配置"
msgstr "instance configuration"

#: backend/flow/consts.py:213 backend/flow/consts.py:239
msgid "默认配置"
msgstr "default allocation"

#: backend/flow/consts.py:214
msgid "proxyconfig"
msgstr "proxyconfig"

#: backend/flow/consts.py:215
msgid "ES实例配置"
msgstr "ES instance configuration"

#: backend/flow/consts.py:216
msgid "act配置"
msgstr "act configuration"

#: backend/flow/consts.py:217
msgid "系统配置类型"
msgstr "system configuration type"

#: backend/flow/consts.py:218
msgid "Kafka实例配置"
msgstr "Kafka instance configuration"

#: backend/flow/consts.py:219
msgid "HDFS集群配置"
msgstr "HDFS cluster configuration"

#: backend/flow/consts.py:220
msgid "HDFS实例hdfs-site配置"
msgstr "HDFS instance hdfs-site configuration"

#: backend/flow/consts.py:221
msgid "HDFS实例core-site配置"
msgstr "HDFS instance core-site configuration"

#: backend/flow/consts.py:222
msgid "HDFS实例安装配置"
msgstr "HDFS instance installation configuration"

#: backend/flow/consts.py:223
msgid "mongod配置"
msgstr "mongod configuration"

#: backend/flow/consts.py:224
msgid "mongos配置"
msgstr "mongos configuration"

#: backend/flow/consts.py:228
msgid "系统"
msgstr "system"

#: backend/flow/consts.py:229
msgid "twemproxy config file"
msgstr "twemproxy config file"

#: backend/flow/consts.py:230
msgid "predixy config file"
msgstr "predixy config file"

#: backend/flow/consts.py:231
msgid "redis config file"
msgstr "redis config file"

#: backend/flow/consts.py:232
msgid "全备配置"
msgstr "full configuration"

#: backend/flow/consts.py:233
msgid "增备配置"
msgstr "Additional configuration"

#: backend/flow/consts.py:234
msgid "心跳配置"
msgstr "heartbeat configuration"

#: backend/flow/consts.py:235
msgid "监控配置"
msgstr "monitoring configuration"

#: backend/flow/consts.py:236
msgid "基本配置"
msgstr "basic configuration"

#: backend/flow/consts.py:237
msgid "热key配置"
msgstr "Hot key configuration"

#: backend/flow/consts.py:238
msgid "大key配置"
msgstr "Big key configuration"

#: backend/flow/consts.py:240
msgid "os配置"
msgstr "os configuration"

#: backend/flow/consts.py:241
msgid "maxmemory配置"
msgstr "maxmemory configuration"

#: backend/flow/consts.py:245
msgid "MASTER"
msgstr "MASTER"

#: backend/flow/consts.py:246
msgid "SLAVE"
msgstr "SLAVE"

#: backend/flow/consts.py:250 backend/flow/consts.py:339
#: backend/flow/consts.py:1065 backend/flow/consts.py:1136
msgid "mysql"
msgstr "mysql"

#: backend/flow/consts.py:251
msgid "mysql-proxy"
msgstr "mysql-proxy"

#: backend/flow/consts.py:255
msgid "dbbackup"
msgstr "dbbackup"

#: backend/flow/consts.py:256
msgid "dbbackup-txsql"
msgstr "dbbackup-txsql"

#: backend/flow/consts.py:257
msgid "actuator"
msgstr "actuator"

#: backend/flow/consts.py:258
msgid "exporter"
msgstr "exporter"

#: backend/flow/consts.py:259
msgid "最新版本"
msgstr "The latest version"

#: backend/flow/consts.py:262
msgid "redis_tools"
msgstr "redis_tools"

#: backend/flow/consts.py:263 backend/flow/consts.py:347
msgid "es"
msgstr "es"

#: backend/flow/consts.py:264 backend/flow/consts.py:348
msgid "kafka"
msgstr "kafka"

#: backend/flow/consts.py:265 backend/flow/consts.py:349
msgid "hdfs"
msgstr "hdfs"

#: backend/flow/consts.py:266 backend/flow/consts.py:350
msgid "pulsar"
msgstr "pulsar"

#: backend/flow/consts.py:268
msgid "dbmon"
msgstr "dbmon"

#: backend/flow/consts.py:269
msgid "mysql-checksum"
msgstr "mysql-checksum"

#: backend/flow/consts.py:270
msgid "Binlog 滚动备份工具"
msgstr "Binlog rotate tool"

#: backend/flow/consts.py:271
msgid "DBA 工具集"
msgstr "DBA toolkit"

#: backend/flow/consts.py:272
msgid "mysql-crond"
msgstr "mysql-crond"

#: backend/flow/consts.py:273
msgid "MySQL 监控"
msgstr "MySQL monitoring"

#: backend/flow/consts.py:274
msgid "nginx 服务"
msgstr "nginx service"

#: backend/flow/consts.py:275
msgid "dns-bind 服务"
msgstr "dns-bind service"

#: backend/flow/consts.py:276
msgid "dns-pull-crond服务"
msgstr "dns-pull-crond service"

#: backend/flow/consts.py:277
msgid "cloud-dbha服务"
msgstr "cloud-dbha service"

#: backend/flow/consts.py:278
msgid "cloud-drs服务"
msgstr "cloud-drs service"

#: backend/flow/consts.py:279
msgid "cloud-drs-tmysqlparse服务"
msgstr "cloud-drs-tmysqlparse service"

#: backend/flow/consts.py:280
msgid "spider节点名称"
msgstr "spider node name"

#: backend/flow/consts.py:281
msgid "spider中控节点名称"
msgstr "Spider control node name"

#: backend/flow/consts.py:283
msgid "riak-monitor"
msgstr "ripple-monitor"

#: backend/flow/consts.py:284
msgid "redis-dts"
msgstr "redis-dts"

#: backend/flow/consts.py:285
msgid "redis-modules"
msgstr "redis-modules"

#: backend/flow/consts.py:286
msgid "tbinlogdumper实例"
msgstr "tbinlogdumper example"

#: backend/flow/consts.py:287
msgid "sqlserver实例"
msgstr "sqlserver instance"

#: backend/flow/consts.py:289 backend/flow/consts.py:360
msgid "doris"
msgstr "doris"

#: backend/flow/consts.py:290 backend/flow/consts.py:361
msgid "vm"
msgstr "vm"

#: backend/flow/consts.py:294
msgid "nginx服务"
msgstr "nginx-service"

#: backend/flow/consts.py:295
msgid "dns服务"
msgstr "dns service"

#: backend/flow/consts.py:296
msgid "drs服务"
msgstr "drs service"

#: backend/flow/consts.py:297
msgid "dbha服务"
msgstr "dbha service"

#: backend/flow/consts.py:298
msgid "redis 数据传输服务"
msgstr "redis data transfer service"

#: backend/flow/consts.py:302
msgid "pull-crond.conf"
msgstr "pull-crond.conf"

#: backend/flow/consts.py:303
msgid "ha-gm.conf"
msgstr "ha-gm.conf"

#: backend/flow/consts.py:304
msgid "ha-agent.conf"
msgstr "ha-agent.conf"

#: backend/flow/consts.py:305
msgid "drs.env"
msgstr "drs.env"

#: backend/flow/consts.py:309
msgid "GM"
msgstr "GM"

#: backend/flow/consts.py:310
msgid "AGENT"
msgstr "AGENT"

#: backend/flow/consts.py:311
msgid "mysql-monitor"
msgstr "mysql-monitor"

#: backend/flow/consts.py:320
msgid "nginx服务模块"
msgstr "nginx service module"

#: backend/flow/consts.py:321
msgid "dns服务模块"
msgstr "dns service module"

#: backend/flow/consts.py:322
msgid "drs服务模块"
msgstr "drs service module"

#: backend/flow/consts.py:323
msgid "dbha服务模块"
msgstr "dbha service module"

#: backend/flow/consts.py:324
msgid "redis_dts服务模块"
msgstr "redis_dts service module"

#: backend/flow/consts.py:329
msgid "蓝盾制品库"
msgstr "Blue Shield Product database"

#: backend/flow/consts.py:334
msgid "V1"
msgstr "V1"

#: backend/flow/consts.py:342
msgid "tendis"
msgstr "tending"

#: backend/flow/consts.py:352
msgid "bkdbmon"
msgstr "bkdbmon"

#: backend/flow/consts.py:353
msgid "download"
msgstr "download"

#: backend/flow/consts.py:355
msgid "spiderctl"
msgstr "spiderctl"

#: backend/flow/consts.py:358
msgid "sqlserer"
msgstr "sqlserer"

#: backend/flow/consts.py:359
msgid "sqlserer_check"
msgstr "sqlserer_check"

#: backend/flow/consts.py:365 backend/flow/consts.py:442
msgid "sysinit"
msgstr "sysinit"

#: backend/flow/consts.py:366 backend/flow/consts.py:589
msgid "deploy"
msgstr "deploy"

#: backend/flow/consts.py:367
msgid "append-deploy"
msgstr "append-deploy"

#: backend/flow/consts.py:368
msgid "import-schema-to-tdbctl"
msgstr "import-schema-to-tdbctl"

#: backend/flow/consts.py:369
msgid "icheck-tdbctl-with-spider-schema"
msgstr "icheck-tdbctl-with-spider-schema"

#: backend/flow/consts.py:370
msgid "find-local-backup"
msgstr "find-local-backup"

#: backend/flow/consts.py:371
msgid "restore-dr"
msgstr "restore-dr"

#: backend/flow/consts.py:372
msgid "recover-binlog"
msgstr "recover-binlog"

#: backend/flow/consts.py:373
msgid "grant-repl"
msgstr "grant-repl"

#: backend/flow/consts.py:374
msgid "change-master"
msgstr "change-master"

#: backend/flow/consts.py:375
msgid "set-backend"
msgstr "set-backend"

#: backend/flow/consts.py:376 backend/flow/consts.py:600
msgid "uninstall"
msgstr "uninstall"

#: backend/flow/consts.py:377
msgid "deploy-dbbackup"
msgstr "deploy-dbbackup"

#: backend/flow/consts.py:378 backend/flow/consts.py:597
msgid "install-monitor"
msgstr "install-monitor"

#: backend/flow/consts.py:379 backend/flow/consts.py:385
msgid "semantic-dumpschema"
msgstr "semantic-dumpschema"

#: backend/flow/consts.py:380
msgid "import-sqlfile"
msgstr "import-sqlfile"

#: backend/flow/consts.py:381
msgid "clone-client-grant"
msgstr "clone-client-grant"

#: backend/flow/consts.py:382
msgid "clone-proxy-user"
msgstr "clone-proxy-user"

#: backend/flow/consts.py:383 backend/flow/consts.py:599
msgid "clear-crontab"
msgstr "clear-crontab"

#: backend/flow/consts.py:384
msgid "semantic-check"
msgstr "semantic-check"

#: backend/flow/consts.py:386
msgid "dump"
msgstr "dump"

#: backend/flow/consts.py:388 backend/flow/consts.py:602
#: backend/flow/utils/doris/consts.py:35 backend/flow/utils/vm/consts.py:31
msgid "restart"
msgstr "restart"

#: backend/flow/consts.py:389
msgid "clean-mysql"
msgstr "clean-mysql"

#: backend/flow/consts.py:390
msgid "backup-database-table"
msgstr "backup-database-table"

#: backend/flow/consts.py:391
msgid "set-backend-toward-slave"
msgstr "set-backend-toward-slave"

#: backend/flow/consts.py:392
msgid "pt-table-checksum"
msgstr "pt-table-checksum"

#: backend/flow/consts.py:393
msgid "执行分区"
msgstr "execution partition"

#: backend/flow/consts.py:394
msgid "ibs-recover"
msgstr "ibs-recover"

#: backend/flow/consts.py:395
msgid "数据修复指令"
msgstr "Data Repair Instructions"

#: backend/flow/consts.py:396
msgid "flashback-binlog"
msgstr "flashback-binlog"

#: backend/flow/consts.py:397
msgid "full-backup"
msgstr "full-backup"

#: backend/flow/consts.py:398
msgid "install-checksum"
msgstr "install-checksum"

#: backend/flow/consts.py:399
msgid "mycnf-change"
msgstr "mycnf-change"

#: backend/flow/consts.py:400
msgid "安装mysql-rotatebinlog程序"
msgstr "Install the mysql-rotatebinlog program"

#: backend/flow/consts.py:401
msgid "安装dba-toolkit程序"
msgstr "Install the dba-toolkit program"

#: backend/flow/consts.py:402
msgid "deploy-mysql-crond"
msgstr "deploy-mysql-crond"

#: backend/flow/consts.py:403
msgid "mysql实例的周边配置清理"
msgstr "Clean up the surrounding configuration of the mysql instance"

#: backend/flow/consts.py:404
msgid "初始化spider集群节点关系"
msgstr "Initialize the spider cluster node relationship"

#: backend/flow/consts.py:405
msgid "添加spider临时节点"
msgstr "Add spider temporary node"

#: backend/flow/consts.py:406
msgid "restart-spider"
msgstr "restart-spider"

#: backend/flow/consts.py:407
msgid "添加spider-slave集群的相关路由信息"
msgstr "Add the relevant routing information of the spider-slave cluster"

#: backend/flow/consts.py:408
msgid "mysql备份请求"
msgstr "mysql backup request"

#: backend/flow/consts.py:409
msgid "TenDBCluster集群做后端切换"
msgstr "TenDBCluster cluster backend switching"

#: backend/flow/consts.py:410
msgid "TenDBCluster集群做后端的成对迁移"
msgstr "TenDBCluster cluster performs paired migration of backend"

#: backend/flow/consts.py:411
msgid "为TBinlogDumper实例导出导入源表结构"
msgstr "Export and import source table structure for TBinlogDumper instance"

#: backend/flow/consts.py:412
msgid "执行os命令"
msgstr "Execute os command"

#: backend/flow/consts.py:413
msgid "Mysql开区导出库表结构"
msgstr "Mysql open area export library table structure"

#: backend/flow/consts.py:414
msgid "Mysql开区导入库表结构"
msgstr "Mysql open area import library table structure"

#: backend/flow/consts.py:415
msgid "Mysql开区导出库表数据"
msgstr "Mysql open zone exports database table data"

#: backend/flow/consts.py:416
msgid "Mysql开区导入库表数据"
msgstr "Mysql open area imports database table data"

#: backend/flow/consts.py:417
msgid "MySQL实例安装tokudb引擎"
msgstr "MySQL instance installation tokudb engine"

#: backend/flow/consts.py:418
msgid "标准化MySQL实例"
msgstr "Standardized MySQL instance"

#: backend/flow/consts.py:419
msgid "标准化Proxy实例"
msgstr "Standardized Proxy instance"

#: backend/flow/consts.py:420
msgid "本地升级"
msgstr "Local upgrade"

#: backend/flow/consts.py:421
msgid "Mysql数据迁移导出库"
msgstr "Mysql data migration export library"

#: backend/flow/consts.py:422
msgid "Mysql数据迁移导入库"
msgstr "Mysql data migration import library"

#: backend/flow/consts.py:423
msgid "修改MySQL配置"
msgstr "Modify MySQL configuration"

#: backend/flow/consts.py:424
msgid "TenDBCluster 清档在中控建立备份库表"
msgstr "TenDBCluster clears files and creates a backup database table in the central control"

#: backend/flow/consts.py:425
msgid "TenDBCluster 清档在remote预清理备份库"
msgstr "TenDBCluster clears files and pre-cleans the backup library in remote"

#: backend/flow/consts.py:426
msgid "MySQL执行清档"
msgstr "MySQL executes cleanup"

#: backend/flow/consts.py:427
msgid "中控执行清档"
msgstr "Central Control Execution Clearance"

#: backend/flow/consts.py:428
msgid "MySQL执行DB重命名"
msgstr "MySQL performs DB rename"

#: backend/flow/consts.py:429
msgid "清档检查库表是否在用"
msgstr "Clear files and check whether the library table is in use"

#: backend/flow/consts.py:430
msgid "重命名检查库表是否在用"
msgstr "Rename to check whether the library table is in use"

#: backend/flow/consts.py:431
msgid "重命名在中控建立目标库"
msgstr "Rename the target library created in the central control"

#: backend/flow/consts.py:432
msgid "TenDBCluster 重命名在remote预清理目标库"
msgstr "TenDBCluster renames the remote pre-clean target library"

#: backend/flow/consts.py:433
msgid "TenDBCluster 重命名在中控删除源库"
msgstr "TenDBCluster renames and deletes the source library in the central control"

#: backend/flow/consts.py:434
msgid "推送mysql-crond配置"
msgstr "Push mysql-crond configuration"

#: backend/flow/consts.py:435
msgid "推送mysql-monitor配置"
msgstr "Push mysql-monitor configuration"

#: backend/flow/consts.py:436
msgid "推送mysql-table-checksum配置"
msgstr "Push mysql-table-checksum configuration"

#: backend/flow/consts.py:437
msgid "推送备份配置"
msgstr "Push backup configuration"

#: backend/flow/consts.py:438
msgid "推送rotatebinlog配置"
msgstr "Push rotatebinlog configuration"

#: backend/flow/consts.py:443
msgid "install"
msgstr "install"

#: backend/flow/consts.py:444
msgid "replica_batch"
msgstr "replica_batch"

#: backend/flow/consts.py:445
msgid "replicaof"
msgstr "replicaof"

#: backend/flow/consts.py:446
msgid "clustermeet_slotsassign"
msgstr "clustermeet_slotassign"

#: backend/flow/consts.py:447
msgid "keyspattern"
msgstr "keyspattern"

#: backend/flow/consts.py:448
msgid "keysdelete_regex"
msgstr "keysdelete_regex"

#: backend/flow/consts.py:449
msgid "keysdelete_files"
msgstr "keysdelete_files"

#: backend/flow/consts.py:451
msgid "flush_data"
msgstr "flush_data"

#: backend/flow/consts.py:452
msgid "shutdown"
msgstr "shutdown"

#: backend/flow/consts.py:453
msgid "open"
msgstr "open"

#: backend/flow/consts.py:454
msgid "close"
msgstr "close"

#: backend/flow/consts.py:455
msgid "operate"
msgstr "operate"

#: backend/flow/consts.py:456
msgid "capturer"
msgstr "capture"

#: backend/flow/consts.py:457
msgid "change_password"
msgstr "change_password"

#: backend/flow/consts.py:458
msgid "kill_conn"
msgstr "kill_conn"

#: backend/flow/consts.py:459
msgid "param_sync"
msgstr "param_sync"

#: backend/flow/consts.py:460
msgid "sync_check"
msgstr "sync_check"

#: backend/flow/consts.py:461
msgid "switch"
msgstr "switch"

#: backend/flow/consts.py:462
msgid "cluster_forget"
msgstr "cluster_forget"

#: backend/flow/consts.py:463
msgid "dr_restore"
msgstr "dr_restore"

#: backend/flow/consts.py:464
msgid "check_backends"
msgstr "check_backends"

#: backend/flow/consts.py:465
msgid "dts_datacheck"
msgstr "dts_datacheck"

#: backend/flow/consts.py:466
msgid "dts_datarepair"
msgstr "dts_datarepair"

#: backend/flow/consts.py:467
msgid "dts_online_switch"
msgstr "dts_online_switch"

#: backend/flow/consts.py:468
msgid "add_dts_server"
msgstr "add_dts_server"

#: backend/flow/consts.py:469
msgid "remove_dts_server"
msgstr "remove_dts_server"

#: backend/flow/consts.py:470
msgid "data_structure"
msgstr "data_structure"

#: backend/flow/consts.py:471
msgid "clustermeet_checkfinish"
msgstr "clustermeet_checkfinish"

#: backend/flow/consts.py:472
msgid "version_update"
msgstr "version_update"

#: backend/flow/consts.py:473
msgid "proxy_version_upgrade"
msgstr "proxy_version_upgrade"

#: backend/flow/consts.py:474
msgid "cluster_failover"
msgstr "cluster_failover"

#: backend/flow/consts.py:475
msgid "migrate_slots"
msgstr "migrate_slots"

#: backend/flow/consts.py:476
msgid "reupload_old_backup_records"
msgstr "reupload_old_backup_records"

#: backend/flow/consts.py:477
msgid "predixy_config_servers_rewrite"
msgstr "predixy_config_servers_rewrite"

#: backend/flow/consts.py:478
msgid "maxmemory_dynamically_set"
msgstr "maxmemory_dynamically_set"

#: backend/flow/consts.py:479
msgid "client_conns_kill"
msgstr "client_conns_kill"

#: backend/flow/consts.py:480
msgid "config_set"
msgstr "config_set"

#: backend/flow/consts.py:481
msgid "load_modules"
msgstr "load_modules"

#: backend/flow/consts.py:482
msgid "predixy_add_modules_cmds"
msgstr "predixy_add_modules_cmds"

#: backend/flow/consts.py:486
msgid "os_mongo_init"
msgstr "os_mongo_heat"

#: backend/flow/consts.py:487
msgid "mongod_install"
msgstr "mongod_install"

#: backend/flow/consts.py:488
msgid "mongos_install"
msgstr "mongos_install"

#: backend/flow/consts.py:489
msgid "init_replicaset"
msgstr "init_replicaset"

#: backend/flow/consts.py:490
msgid "add_shard_to_cluster"
msgstr "add_shard_to_cluster"

#: backend/flow/consts.py:491
msgid "add_user"
msgstr "add_user"

#: backend/flow/consts.py:492
msgid "delete_user"
msgstr "delete_user"

#: backend/flow/consts.py:493
msgid "mongo_execute_script"
msgstr "mongo_execute_script"

#: backend/flow/consts.py:494
msgid "mongodb_backup"
msgstr "mongodb_backup"

#: backend/flow/consts.py:495
msgid "mongodb_remove_ns"
msgstr "mongodb_remove_ns"

#: backend/flow/consts.py:496
msgid "mongodb_restore"
msgstr "mongodb_restore"

#: backend/flow/consts.py:497
msgid "mongodb_pit_restore"
msgstr "mongodb_pit_restore"

#: backend/flow/consts.py:498
msgid "mongo_restart"
msgstr "mongo_restart"

#: backend/flow/consts.py:499
msgid "mongod_replace"
msgstr "mongod_replace"

#: backend/flow/consts.py:500
msgid "mongo_deinstall"
msgstr "mongo_uninstall"

#: backend/flow/consts.py:501
msgid "install_dbmon"
msgstr "install_dbmon"

#: backend/flow/consts.py:502
msgid "mongo_start"
msgstr "mongo_start"

#: backend/flow/consts.py:506 backend/flow/consts.py:531
#: backend/flow/consts.py:551 backend/flow/consts.py:570
#: backend/flow/consts.py:637 backend/flow/consts.py:831
#: backend/flow/consts.py:1486
msgid "init"
msgstr "init"

#: backend/flow/consts.py:507 backend/flow/consts.py:532
#: backend/flow/consts.py:552 backend/flow/consts.py:571
#: backend/flow/consts.py:638 backend/flow/consts.py:832
#: backend/flow/consts.py:1487
msgid "decompress_pkg"
msgstr "decompress_pkg"

#: backend/flow/consts.py:508 backend/flow/consts.py:533
#: backend/flow/consts.py:553 backend/flow/consts.py:572
#: backend/flow/consts.py:639 backend/flow/consts.py:1488
msgid "install_supervisor"
msgstr "install_supervisor"

#: backend/flow/consts.py:509
msgid "install_master"
msgstr "install_master"

#: backend/flow/consts.py:510
msgid "install_hot"
msgstr "install_hot"

#: backend/flow/consts.py:511
msgid "install_cold"
msgstr "install_cold"

#: backend/flow/consts.py:512
msgid "install_client"
msgstr "install_client"

#: backend/flow/consts.py:513 backend/flow/consts.py:642
msgid "init_grant"
msgstr "init_grant"

#: backend/flow/consts.py:514
msgid "install_exporter"
msgstr "install_exporter"

#: backend/flow/consts.py:515
msgid "install_kibana"
msgstr "install_kibana"

#: backend/flow/consts.py:516 backend/flow/consts.py:555
msgid "install_telegraf"
msgstr "install_telegraf"

#: backend/flow/consts.py:517 backend/flow/consts.py:538
#: backend/flow/consts.py:557 backend/flow/consts.py:579
#: backend/flow/consts.py:643 backend/flow/consts.py:1493
msgid "start_process"
msgstr "start_process"

#: backend/flow/consts.py:518 backend/flow/consts.py:539
#: backend/flow/consts.py:558 backend/flow/consts.py:580
#: backend/flow/consts.py:645 backend/flow/consts.py:1494
msgid "stop_process"
msgstr "stop_process"

#: backend/flow/consts.py:519 backend/flow/consts.py:540
#: backend/flow/consts.py:559 backend/flow/consts.py:581
#: backend/flow/consts.py:646 backend/flow/consts.py:1495
msgid "restart_process"
msgstr "restart_process"

#: backend/flow/consts.py:520 backend/flow/consts.py:541
#: backend/flow/consts.py:560 backend/flow/consts.py:582
#: backend/flow/consts.py:647 backend/flow/consts.py:1496
msgid "clean_data"
msgstr "clean_data"

#: backend/flow/consts.py:521
msgid "exclude_node"
msgstr "exclude_node"

#: backend/flow/consts.py:522
msgid "check_shards"
msgstr "check_shards"

#: backend/flow/consts.py:523
msgid "check_connections"
msgstr "check_connections"

#: backend/flow/consts.py:524
msgid "check_nodes"
msgstr "check_nodes"

#: backend/flow/consts.py:525
msgid "replace_master"
msgstr "replace_master"

#: backend/flow/consts.py:526
msgid "gen_certificate"
msgstr "gen_certificate"

#: backend/flow/consts.py:527
msgid "pack_certificate"
msgstr "pack_certificate"

#: backend/flow/consts.py:534 backend/flow/consts.py:573
msgid "install_zookeeper"
msgstr "install_zookeeper"

#: backend/flow/consts.py:535
msgid "init_kafkaUser"
msgstr "init_kafkaUser"

#: backend/flow/consts.py:536 backend/flow/consts.py:576
msgid "install_broker"
msgstr "install_broker"

#: backend/flow/consts.py:537
msgid "install_manager"
msgstr "install_manager"

#: backend/flow/consts.py:542
msgid "reduce_broker"
msgstr "reduce_broker"

#: backend/flow/consts.py:543
msgid "check_reassign"
msgstr "check_reassign"

#: backend/flow/consts.py:544
msgid "reconfig_add"
msgstr "reconfig_add"

#: backend/flow/consts.py:545
msgid "restart_broker"
msgstr "restart_broker"

#: backend/flow/consts.py:546
msgid "reconfig_remove"
msgstr "reconfig_remove"

#: backend/flow/consts.py:547
msgid "replace_broker"
msgstr "replace_broker"

#: backend/flow/consts.py:554
msgid "install_influxdb"
msgstr "install_influxdb"

#: backend/flow/consts.py:556
msgid "init_user"
msgstr "init_user"

#: backend/flow/consts.py:564
msgid "check_broker_config"
msgstr "check_broker_config"

#: backend/flow/consts.py:565
msgid "check_namespace_config"
msgstr "check_namespace_config"

#: backend/flow/consts.py:566
msgid "check_under_replicated"
msgstr "check_under_replicated"

#: backend/flow/consts.py:567
msgid "check_ledger_metadata"
msgstr "check_ledger_metadata"

#: backend/flow/consts.py:568
msgid "set_bookie_readonly"
msgstr "set_bookie_readonly"

#: backend/flow/consts.py:569
msgid "decommission_bookie"
msgstr "decommission_bookie"

#: backend/flow/consts.py:574
msgid "init_cluster"
msgstr "init_cluster"

#: backend/flow/consts.py:575
msgid "install_bookkeeper"
msgstr "install_bookkeeper"

#: backend/flow/consts.py:577
msgid "install_pulsar_manager"
msgstr "install_pulsar_manager"

#: backend/flow/consts.py:578
msgid "init_pulsar_manager"
msgstr "init_pulsar_manager"

#: backend/flow/consts.py:583
msgid "add_hosts"
msgstr "add_hosts"

#: backend/flow/consts.py:584
msgid "modify_hosts"
msgstr "modify_hosts"

#: backend/flow/consts.py:588
msgid "sysinit-riak"
msgstr "sysinits"

#: backend/flow/consts.py:590
msgid "get-config"
msgstr "get-config"

#: backend/flow/consts.py:591
msgid "join-cluster"
msgstr "join-cluster"

#: backend/flow/consts.py:592
msgid "commit-cluster-change"
msgstr "commit-cluster-change"

#: backend/flow/consts.py:593
msgid "init-bucket-type"
msgstr "init-bucket-type"

#: backend/flow/consts.py:594
msgid "remove-node"
msgstr "remove-node"

#: backend/flow/consts.py:595
msgid "transfer"
msgstr "transfer"

#: backend/flow/consts.py:596
msgid "check-connections"
msgstr "check-connections"

#: backend/flow/consts.py:598
msgid "deploy-riak-crond"
msgstr "deploy-ripple-crond"

#: backend/flow/consts.py:601 backend/flow/utils/doris/consts.py:33
#: backend/flow/utils/vm/consts.py:29
msgid "start"
msgstr "start"

#: backend/flow/consts.py:603 backend/flow/utils/doris/consts.py:34
#: backend/flow/utils/vm/consts.py:30
msgid "stop"
msgstr "stop"

#: backend/flow/consts.py:604
msgid "deploy-monitor"
msgstr "deploy-monitor"

#: backend/flow/consts.py:605
msgid "start-monitor"
msgstr "start-monitor"

#: backend/flow/consts.py:606
msgid "stop-monitor"
msgstr "stop-monitor"

#: backend/flow/consts.py:610
#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:796
#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:160
msgid "机器初始化"
msgstr "Machine initialization"

#: backend/flow/consts.py:611
msgid "实例安装"
msgstr "Instance installation"

#: backend/flow/consts.py:612
msgid "SQL文件执行"
msgstr "SQL file execution"

#: backend/flow/consts.py:613 backend/flow/consts.py:614
msgid "备份数据库"
msgstr "Back up database"

#: backend/flow/consts.py:615
msgid "数据库清档"
msgstr "Database cleanup"

#: backend/flow/consts.py:616
msgid "恢复全量备份文件"
msgstr "Restore full backup files"

#: backend/flow/consts.py:617
msgid "恢复日志备份文件"
msgstr "Restore log backup files"

#: backend/flow/consts.py:618
msgid "集群角色互切"
msgstr "Cluster role interaction"

#: backend/flow/consts.py:619
msgid "检查非正常的数据库信息"
msgstr "Check for abnormal database information"

#: backend/flow/consts.py:620
msgid "检查实例连接情况"
msgstr "Check instance connection status"

#: backend/flow/consts.py:621
msgid "实例间克隆用户"
msgstr "Clone users between instances"

#: backend/flow/consts.py:622
msgid "实例间克隆定时作业"
msgstr "Clone scheduled jobs between instances"

#: backend/flow/consts.py:623
msgid "实例间克隆linkservers"
msgstr "Clone linksservers between instances"

#: backend/flow/consts.py:624
msgid "建立数据库的镜像库关系"
msgstr "Establish the mirror library relationship of the database"

#: backend/flow/consts.py:625
msgid "为Always-on做别名初始化"
msgstr "Alias ​​initialization for Always-on"

#: backend/flow/consts.py:626
msgid "建立Always-on通信"
msgstr "Erection Always-on communication"

#: backend/flow/consts.py:627
msgid "数据库加入到Always-on可用组"
msgstr "The database is added to the Always-on availability group"

#: backend/flow/consts.py:628
msgid "卸载sqlserver实例"
msgstr "Uninstall sqlserver instance"

#: backend/flow/consts.py:629
msgid "判断备份文件是否存在，存在则移动"
msgstr "Determine whether the backup file exists and move it if it exists"

#: backend/flow/consts.py:630
msgid "实例接入dbm系统初始化"
msgstr "Instance access to dbm system initialization"

#: backend/flow/consts.py:631
msgid "清理实例周边配置。目前支持清理job、linkserver"
msgstr "Clean up the configuration around the instance. Currently supports cleaning jobs and linkserver"

#: backend/flow/consts.py:632
msgid "将一些dr移除可用组"
msgstr "Remove some dr from available groups"

#: backend/flow/consts.py:633
msgid "部署后需要初始化实例的步骤"
msgstr "Steps required to initialize the instance after deployment"

#: backend/flow/consts.py:640
msgid "install_doris"
msgstr "install_doris"

#: backend/flow/consts.py:641
msgid "render_config"
msgstr "render_config"

#: backend/flow/consts.py:644
msgid "start_fe_by_helper"
msgstr "start_fe_by_helper"

#: backend/flow/consts.py:648
msgid "update_metadata"
msgstr "update_metadata"

#: backend/flow/consts.py:649
msgid "check_decommission"
msgstr "check_decommission"

#: backend/flow/consts.py:650
msgid "check_process_start"
msgstr "check_process_start"

#: backend/flow/consts.py:658
msgid "聊天历史记录"
msgstr "chat history"

#: backend/flow/consts.py:659
msgid "用户战绩数据"
msgstr "User record data"

#: backend/flow/consts.py:660
msgid "玩家按键快捷键信息"
msgstr "Player key shortcut key information"

#: backend/flow/consts.py:661
msgid "test"
msgstr "test"

#: backend/flow/consts.py:662
msgid "mixed"
msgstr "mixed"

#: backend/flow/consts.py:666
msgid "NOT_RUNNING"
msgstr "NOT_RUNNING"

#: backend/flow/consts.py:667 backend/flow/consts.py:728
msgid "RUNNING"
msgstr "RUNNING"

#: backend/flow/consts.py:668 backend/flow/consts.py:729
msgid "SUCCESS"
msgstr "SUCCESS"

#: backend/flow/consts.py:669 backend/flow/consts.py:730
msgid "FAILED"
msgstr "FAILED"

#: backend/flow/consts.py:670
msgid "SKIPPED"
msgstr "SKIPPED"

#: backend/flow/consts.py:671
msgid "IGNORED"
msgstr "IGNORED"

#: backend/flow/consts.py:672
msgid "WAITING"
msgstr "WAITING"

#: backend/flow/consts.py:673
msgid "NORMAL"
msgstr "NORMAL"

#: backend/flow/consts.py:674
msgid "ABNORMAL"
msgstr "ABNORMAL"

#: backend/flow/consts.py:675
msgid "步骤强制终止中"
msgstr "The step is forcibly terminated"

#: backend/flow/consts.py:676
msgid "步骤强制终止成功"
msgstr "Step force terminated successfully"

#: backend/flow/consts.py:680
msgid "准备中"
msgstr "preparing"

#: backend/flow/consts.py:681
msgid "运行中"
msgstr "running"

#: backend/flow/consts.py:682 backend/ticket/constants.py:633
#: backend/ticket/constants.py:638
msgid "完成"
msgstr "Finish"

#: backend/flow/consts.py:688
msgid "available"
msgstr "available"

#: backend/flow/consts.py:690
msgid "locked"
msgstr "locked"

#: backend/flow/consts.py:694
msgid "cluster no"
msgstr "cluster no"

#: backend/flow/consts.py:695
msgid "cluster yes"
msgstr "cluster yes"

#: backend/flow/consts.py:699 backend/flow/consts.py:709
msgid "create"
msgstr "create"

#: backend/flow/consts.py:700
msgid "cluster_delete"
msgstr "cluster_delete"

#: backend/flow/consts.py:701
msgid "recycle_record"
msgstr "recycle_record"

#: backend/flow/consts.py:702 backend/flow/consts.py:710
msgid "update"
msgstr "update"

#: backend/flow/consts.py:703
msgid "select"
msgstr "select"

#: backend/flow/consts.py:704
msgid "add_and_delete"
msgstr "add_and_delete"

#: backend/flow/consts.py:705
msgid "ip_dns对应记录回收"
msgstr "ip_dns corresponding record recycling"

#: backend/flow/consts.py:711
msgid "delete"
msgstr "delete"

#: backend/flow/consts.py:715
msgid "kibana"
msgstr "kibana"

#: backend/flow/consts.py:716
msgid "kafka_manager"
msgstr "kafka_manager"

#: backend/flow/consts.py:717
msgid "pulsar_manager"
msgstr "pulsar_manager"

#: backend/flow/consts.py:718
msgid "ha_proxy"
msgstr "ha_proxy"

#: backend/flow/consts.py:719
msgid "doris_web_ui"
msgstr "doris_web_ui"

#: backend/flow/consts.py:723
msgid "KIBANA_PORT"
msgstr "KIBANA_PORT"

#: backend/flow/consts.py:724
msgid "KAFKA_MANAGER_PORT"
msgstr "KAFKA_MANAGER_PORT"

#: backend/flow/consts.py:734
msgid "proxy默认实例个数"
msgstr "The number of proxy default instances"

#: backend/flow/consts.py:735
msgid "redis角色数"
msgstr "Number of redis roles"

#: backend/flow/consts.py:739
msgid "DB安装目录"
msgstr "DB installation directory"

#: backend/flow/consts.py:743
msgid "gcs 安装路径"
msgstr "gcs installation path"

#: backend/flow/consts.py:744
msgid "key生命周期路径"
msgstr "key lifecycle path"

#: backend/flow/consts.py:748
msgid "truncate_table"
msgstr "truncate_table"

#: backend/flow/consts.py:749
msgid "drop_database"
msgstr "drop_database"

#: backend/flow/consts.py:750
msgid "drop_table"
msgstr "drop_table"

#: backend/flow/consts.py:802
msgid "TendataModuleDefault"
msgstr "TendataModuleDefault"

#: backend/flow/consts.py:803
msgid "RiakModuleDefault"
msgstr "RiakModuleDefault"

#: backend/flow/consts.py:807 backend/flow/consts.py:1098
#: backend/ticket/builders/common/constants.py:49
#: backend/ticket/builders/common/constants.py:70
msgid "hot"
msgstr "hot"

#: backend/flow/consts.py:808 backend/flow/consts.py:1099
#: backend/ticket/builders/common/constants.py:50
#: backend/ticket/builders/common/constants.py:71
msgid "cold"
msgstr "cold"

#: backend/flow/consts.py:809 backend/ticket/builders/common/constants.py:51
msgid "client"
msgstr "client"

#: backend/flow/consts.py:814
msgid "redis key删除正则方式"
msgstr "Redis key deletion regular method"

#: backend/flow/consts.py:815
msgid "redis key删除文件方式"
msgstr "Redis key delete file method"

#: backend/flow/consts.py:819
msgid "get"
msgstr "get"

#: backend/flow/consts.py:820
msgid "release"
msgstr "release"

#: backend/flow/consts.py:824
msgid "覆盖写入上下文变量"
msgstr "overwriting context variables"

#: backend/flow/consts.py:825
msgid "追加写入上下文变量"
msgstr "append to context variable"

#: backend/flow/consts.py:829
msgid "install-supervisor"
msgstr "install-supervisor"

#: backend/flow/consts.py:830
msgid "render-config"
msgstr "render-config"

#: backend/flow/consts.py:833
msgid "install-zookeeper"
msgstr "install-zookeeper"

#: backend/flow/consts.py:834
msgid "install-journalnode"
msgstr "install-journalnode"

#: backend/flow/consts.py:835
msgid "install-nn1"
msgstr "install-nn1"

#: backend/flow/consts.py:836
msgid "install-nn2"
msgstr "install-nn2"

#: backend/flow/consts.py:837
msgid "install-dn"
msgstr "install-dn"

#: backend/flow/consts.py:838
msgid "install-zkfc"
msgstr "install-zkfc"

#: backend/flow/consts.py:839
msgid "install-telegraf"
msgstr "install-telegraf"

#: backend/flow/consts.py:840
msgid "install-haproxy"
msgstr "install-haproxy"

#: backend/flow/consts.py:841
msgid "update-hosts"
msgstr "update-hosts"

#: backend/flow/consts.py:842
msgid "stop-process"
msgstr "stop-process"

#: backend/flow/consts.py:843
msgid "start-component"
msgstr "start-component"

#: backend/flow/consts.py:844
msgid "clean-data"
msgstr "clean-data"

#: backend/flow/consts.py:845
msgid "dfs-host"
msgstr "dfs-host"

#: backend/flow/consts.py:856 backend/ticket/builders/common/constants.py:56
msgid "namenode"
msgstr "namenode"

#: backend/flow/consts.py:857 backend/ticket/builders/common/constants.py:55
msgid "datanode"
msgstr "datanode"

#: backend/flow/consts.py:858
msgid "journalnode"
msgstr "journalnode"

#: backend/flow/consts.py:860
msgid "zkfc"
msgstr "zkfc"

#: backend/flow/consts.py:864 backend/ticket/builders/common/constants.py:65
msgid "bookkeeper"
msgstr "bookkeeper"

#: backend/flow/consts.py:871
msgid "常规备份"
msgstr "regular backup"

#: backend/flow/consts.py:872
msgid "长期备份"
msgstr "long-term backup"

#: backend/flow/consts.py:876
msgid "KAFKA_REPLACE"
msgstr "KAFKA_REPLACE"

#: backend/flow/consts.py:877
msgid "KAFKA_SCALE_UP"
msgstr "KAFKA_SCALE_UP"

#: backend/flow/consts.py:881
msgid "INFLUXDB_REPLACE"
msgstr "INFLUXDB_REPLACE"

#: backend/flow/consts.py:885
msgid "逻辑备份"
msgstr "logical backup"

#: backend/flow/consts.py:886
msgid "物理备份"
msgstr "physical backup"

#: backend/flow/consts.py:903
msgid "备份1个月"
msgstr "Backup for 1 month"

#: backend/flow/consts.py:904
msgid "备份6个月"
msgstr "Backup for 6 months"

#: backend/flow/consts.py:905
msgid "备份1年"
msgstr "Backup for 1 year"

#: backend/flow/consts.py:906
msgid "备份3年"
msgstr "Backup for 3 years"

#: backend/flow/consts.py:910
msgid "常规备份(25天)"
msgstr "Regular backup (25 days)"

#: backend/flow/consts.py:911
msgid "长期备份(3年)"
msgstr "Long-term backup (3 years)"

#: backend/flow/consts.py:919
msgid "Mysql的进程名称"
msgstr "Mysql process name"

#: backend/flow/consts.py:920
msgid "Mysql-proxy进程名称"
msgstr "Mysql-proxy process name"

#: backend/flow/consts.py:921
msgid "Redis的进程名称"
msgstr "Redis process name"

#: backend/flow/consts.py:922
msgid "MONGODB的进程名称"
msgstr "MONGODB process name"

#: backend/flow/consts.py:923
msgid "ES的进程名称"
msgstr "ES process name"

#: backend/flow/consts.py:924
msgid "KAFKA的进程名称"
msgstr "KAFKA process name"

#: backend/flow/consts.py:925
msgid "HDFS-NameNode的进程名称"
msgstr "HDFS-NameNode process name"

#: backend/flow/consts.py:926
msgid "HDFS-DataNode的进程名称"
msgstr "HDFS-DataNode process name"

#: backend/flow/consts.py:927
msgid "Pulsar的进程名称"
msgstr "Pulsar process name"

#: backend/flow/consts.py:928
msgid "InfluxDB 的进程名称"
msgstr "InfluxDB process name"

#: backend/flow/consts.py:929
msgid "Riak的进程名称"
msgstr "Riak process name"

#: backend/flow/consts.py:937
msgid "远程备份+时间"
msgstr "remote backup + time"

#: backend/flow/consts.py:938
msgid "远程备份+备份ID"
msgstr "Remote Backup + Backup ID"

#: backend/flow/consts.py:939
msgid "本地备份+时间"
msgstr "local backup + time"

#: backend/flow/consts.py:940
msgid "本地备份+备份ID"
msgstr "Local backup + backup ID"

#: backend/flow/consts.py:948
msgid "手动单据发起"
msgstr "Manual ticket initiation"

#: backend/flow/consts.py:949
msgid "例行校验单据发起"
msgstr "Routine verification ticket initiation"

#: backend/flow/consts.py:957
msgid "msms"
msgstr "msms"

#: backend/flow/consts.py:974
msgid "redis slot分隔符"
msgstr "redis slot separator"

#: backend/flow/consts.py:975
msgid "redis slot导入分隔符"
msgstr "redis slot import delimiter"

#: backend/flow/consts.py:976
msgid "redis slot迁移分隔符"
msgstr "redis slot migration delimiter"

#: backend/flow/consts.py:984
msgid "redis min slot"
msgstr "redis min slot"

#: backend/flow/consts.py:985
msgid "redis max slot"
msgstr "redis max slot"

#: backend/flow/consts.py:986
msgid "redis total slot"
msgstr "redis total slot"

#: backend/flow/consts.py:994
msgid "redis PFAIL state"
msgstr "redis PFAIL state"

#: backend/flow/consts.py:995
msgid "redis fail state"
msgstr "redis fail state"

#: backend/flow/consts.py:996
msgid "redis handshake state"
msgstr "redis handshake state"

#: backend/flow/consts.py:997
msgid "redis noaddr state"
msgstr "redis noaddr state"

#: backend/flow/consts.py:998
msgid "redis noflags state"
msgstr "redis noflags state"

#: backend/flow/consts.py:1006
msgid "redis master role"
msgstr "redis master role"

#: backend/flow/consts.py:1007
msgid "redis slave role"
msgstr "redis slave role"

#: backend/flow/consts.py:1008
msgid "redis unknown role"
msgstr "redis unknown role"

#: backend/flow/consts.py:1016
msgid "redis master link status up"
msgstr "redis master link status up"

#: backend/flow/consts.py:1017
msgid "redis master link status down"
msgstr "redis master link status down"

#: backend/flow/consts.py:1018
msgid "redis ssd incrSync state"
msgstr "redis ssd incrSync state"

#: backend/flow/consts.py:1019
msgid "redis ssd REPL_FOLLOW state"
msgstr "redis ssd REPL_FOLLOW state"

#: backend/flow/consts.py:1020
msgid "redis connected status"
msgstr "redis connected status"

#: backend/flow/consts.py:1021
msgid "redis disconnected status"
msgstr "redis disconnected status"

#: backend/flow/consts.py:1029
msgid ""
"redis cluster state ok,all slots are covered. 通过 cluster info 命令获取"
msgstr ""
"redis cluster state ok, all slots are covered. Obtained by cluster info "
"command"

#: backend/flow/consts.py:1030
msgid ""
"redis cluster state fail,not all slots are covered.通过 cluster info 命令获取"
msgstr ""
"redis cluster state fail, not all slots are covered. Obtained through the "
"cluster info command"

#: backend/flow/consts.py:1039
msgid "全部机器替换"
msgstr "All machine replacement"

#: backend/flow/consts.py:1047
msgid "bk_biz_id黑名单"
msgstr "bk_biz_id blacklist"

#: backend/flow/consts.py:1048
msgid "cluster_id黑名单"
msgstr "cluster_id blacklist"

#: backend/flow/consts.py:1049
msgid "used_memory变更阈值"
msgstr "used_memory change threshold"

#: backend/flow/consts.py:1050
msgid "used_memory变更百分比"
msgstr "used_memory change percentage"

#: backend/flow/consts.py:1069
msgid "from show master status"
msgstr "from show master status"

#: backend/flow/consts.py:1070
msgid "from backup file"
msgstr "from backup file"

#: backend/flow/consts.py:1084
msgid "北极星"
msgstr "polar star"

#: backend/flow/consts.py:1093
msgid "全量同步"
msgstr "Full synchronization"

#: backend/flow/consts.py:1094
msgid "增量同步"
msgstr "Incremental synchronization"

#: backend/flow/consts.py:1100 backend/ticket/builders/common/constants.py:72
msgid "follower"
msgstr "follower"

#: backend/flow/consts.py:1101 backend/ticket/builders/common/constants.py:73
msgid "observer"
msgstr "observer"

#: backend/flow/consts.py:1118
msgid "root实例账号"
msgstr "root instance account"

#: backend/flow/consts.py:1119
msgid "备份实例账号"
msgstr "Backup instance account"

#: backend/flow/consts.py:1120 backend/flow/consts.py:1121
msgid "监控实例账号"
msgstr "Monitor instance accounts"

#: backend/flow/consts.py:1122
msgid "MYSQL系统账号"
msgstr "MYSQL system account"

#: backend/flow/consts.py:1123
msgid "MYSQL实例同步账号"
msgstr "MYSQL instance synchronization account"

#: backend/flow/consts.py:1124
msgid "MYSQL实例只读账号"
msgstr "MYSQL instance read-only account"

#: backend/flow/consts.py:1125
msgid "PROXY实例账号"
msgstr "PROXY instance account"

#: backend/flow/consts.py:1126
msgid "REDIS默认账号"
msgstr "REDIS default account"

#: backend/flow/consts.py:1127
msgid "HDFS默认账号"
msgstr "HDFS default account"

#: backend/flow/consts.py:1128
msgid "分区实例账号"
msgstr "Partition instance account"

#: backend/flow/consts.py:1140
msgid "redis_proxy"
msgstr "redis_proxy"

#: backend/flow/consts.py:1141
msgid "redis_proxy_admin"
msgstr "redis_proxy_admin"

#: backend/flow/consts.py:1142
msgid "es_user"
msgstr "en_user"

#: backend/flow/consts.py:1143
msgid "kafka_user"
msgstr "kafka_user"

#: backend/flow/consts.py:1144
msgid "influxdb_user"
msgstr "influxdb_user"

#: backend/flow/consts.py:1145
msgid "hdfs_user"
msgstr "hdfs_user"

#: backend/flow/consts.py:1146
msgid "pulsar_user"
msgstr "pulsar_user"

#: backend/flow/consts.py:1147
msgid "doris_user"
msgstr "doris_user"

#: backend/flow/consts.py:1148
msgid "vm_user"
msgstr "vm_user"

#: backend/flow/consts.py:1156
msgid "success"
msgstr "success"

#: backend/flow/consts.py:1164
msgid "MongoDB密码规则"
msgstr "MongoDB password rules"

#: backend/flow/consts.py:1172 backend/flow/consts.py:1444
msgid "configsvr"
msgstr "configsvr"

#: backend/flow/consts.py:1173 backend/flow/consts.py:1443
msgid "shardsvr"
msgstr "shardsvr"

#: backend/flow/consts.py:1181 backend/flow/consts.py:1470
msgid "cache_percent"
msgstr "cache_percent"

#: backend/flow/consts.py:1190
msgid "m1"
msgstr "m1"

#: backend/flow/consts.py:1191
msgid "m2"
msgstr "m2"

#: backend/flow/consts.py:1192
msgid "m3"
msgstr "m3"

#: backend/flow/consts.py:1193
msgid "m4"
msgstr "m4"

#: backend/flow/consts.py:1194
msgid "m5"
msgstr "m5"

#: backend/flow/consts.py:1195
msgid "m6"
msgstr "m6"

#: backend/flow/consts.py:1196
msgid "m7"
msgstr "m7"

#: backend/flow/consts.py:1197
msgid "m8"
msgstr "m8"

#: backend/flow/consts.py:1198
msgid "m9"
msgstr "m9"

#: backend/flow/consts.py:1199
msgid "m10"
msgstr "m10"

#: backend/flow/consts.py:1208 backend/ticket/builders/common/constants.py:140
msgid "KAFKA"
msgstr "KAFKA"

#: backend/flow/consts.py:1209 backend/ticket/builders/common/constants.py:141
msgid "L5_AGENT"
msgstr "L5_AGENT"

#: backend/flow/consts.py:1210 backend/ticket/builders/common/constants.py:142
msgid "TCP/IP"
msgstr "TCP/IP"

#: backend/flow/consts.py:1218
msgid "mssql系统账号"
msgstr "mssql system account"

#: backend/flow/consts.py:1219
msgid "sqlserver系统账号，进程启动"
msgstr "sqlserver system account, process startup"

#: backend/flow/consts.py:1220
msgid "sa实例账号"
msgstr "sa instance account"

#: backend/flow/consts.py:1228
msgid "sqlserver"
msgstr "sqlserver"

#: backend/flow/consts.py:1236
msgid "2008服务器版"
msgstr "2008 Server Edition"

#: backend/flow/consts.py:1237
msgid "2012服务器版"
msgstr "2012 Server Edition"

#: backend/flow/consts.py:1238
msgid "2016服务器版"
msgstr "2016 Server Edition"

#: backend/flow/consts.py:1239
msgid "2019服务器版"
msgstr "2019 Server Edition"

#: backend/flow/consts.py:1240
msgid "2022服务器版"
msgstr "2022 Server Edition"

#: backend/flow/consts.py:1296
msgid "Chinese_PRC_CI_AS"
msgstr "Chinese_PRC_CI_AS"

#: backend/flow/consts.py:1297
msgid "Latin1_General_100_CI_AS"
msgstr "Latin1_General_100_CI_AS"

#: backend/flow/consts.py:1298
msgid "GBK"
msgstr "GBK"

#: backend/flow/consts.py:1310
msgid "镜像同步"
msgstr "Mirror sync"

#: backend/flow/consts.py:1311
msgid "Always_on同步"
msgstr "Always_on sync"

#: backend/flow/consts.py:1329
msgid "清理表数据"
msgstr "Clean table data"

#: backend/flow/consts.py:1331
msgid "删除库"
msgstr "Delete library"

#: backend/flow/consts.py:1339
msgid "全量备份"
msgstr "Full backup"

#: backend/flow/consts.py:1340
msgid "增量备份"
msgstr "incremental backup"

#: backend/flow/consts.py:1348 backend/flow/consts.py:1366
msgid "启动"
msgstr "start up"

#: backend/flow/consts.py:1349 backend/flow/consts.py:1367
msgid "关闭"
msgstr "closure"

#: backend/flow/consts.py:1357
msgid "选择全量备份恢复"
msgstr "Select full backup and restore"

#: backend/flow/consts.py:1358
msgid "选择日志备份恢复"
msgstr "Select log backup and restore"

#: backend/flow/consts.py:1376
msgid "完整备份迁移(一次性)"
msgstr "Full backup migration (one-time)"

#: backend/flow/consts.py:1377
msgid "增量备份迁移(持续的)"
msgstr "Incremental backup migration (continuous)"

#: backend/flow/consts.py:1392
msgid "config_port"
msgstr "config_port"

#: backend/flow/consts.py:1393
msgid "shard_start_port"
msgstr "shard_start_port"

#: backend/flow/consts.py:1399
msgid "dba"
msgstr "dba"

#: backend/flow/consts.py:1400
msgid "appdba"
msgstr "appdba"

#: backend/flow/consts.py:1401
msgid "monitor"
msgstr "monitor"

#: backend/flow/consts.py:1402
msgid "appmonitor"
msgstr "appmonitor"

#: backend/flow/consts.py:1423
msgid "mongodb_init_set"
msgstr "mongodb_init_set"

#: backend/flow/consts.py:1424
msgid "mongodb_extra_user_create"
msgstr "mongodb_extra_user_create"

#: backend/flow/consts.py:1430
msgid "mongod"
msgstr "mongod"

#: backend/flow/consts.py:1437
msgid "admin"
msgstr "admin"

#: backend/flow/consts.py:1452
msgid "直接删除表"
msgstr "Delete table directly"

#: backend/flow/consts.py:1453
msgid "将表暂时重命名"
msgstr "Temporarily rename the table"

#: backend/flow/consts.py:1462
msgid "shard"
msgstr "shard"

#: backend/flow/consts.py:1474
msgid "全备-保留1个月"
msgstr "Fully prepared - retained for 1 month"

#: backend/flow/consts.py:1475
msgid "全备-保留6个月"
msgstr "Fully prepared - retained for 6 months"

#: backend/flow/consts.py:1476
msgid "全备-保留1年"
msgstr "Fully prepared - retained for 1 year"

#: backend/flow/consts.py:1477
msgid "全备-保留3年"
msgstr "Fully prepared - retained for 3 years"

#: backend/flow/consts.py:1478
msgid "增量备份-保留15天"
msgstr "Incremental backups - retained for 15 days"

#: backend/flow/consts.py:1489
msgid "install_vmstorage"
msgstr "install_vmstorage"

#: backend/flow/consts.py:1490
msgid "install_vminsert"
msgstr "install_vminsert"

#: backend/flow/consts.py:1491
msgid "install_vmselect"
msgstr "install_vmselect"

#: backend/flow/consts.py:1492
msgid "install_vmauth"
msgstr "install_vmauth"

#: backend/flow/consts.py:1497
msgid "reload_vmselect"
msgstr "reload_vmselect"

#: backend/flow/consts.py:1498
msgid "reload_vminsert"
msgstr "reload_vminsert"

#: backend/flow/engine/bamboo/engine.py:278
msgid "获取流程失败"
msgstr "Get process failed"

#: backend/flow/engine/bamboo/engine.py:281
msgid "获取流程节点失败"
msgstr "Failed to get process node"

#: backend/flow/engine/bamboo/engine.py:284
msgid "获取节点运行版本失败"
msgstr "Failed to get node running version"

#: backend/flow/engine/bamboo/scene/cloud/base_service_flow.py:124
msgid "[batch{}]{}"
msgstr "[batch{}]{}"

#: backend/flow/engine/bamboo/scene/cloud/base_service_flow.py:162
msgid "下发{}可执行文件包"
msgstr "Deliver {} executable file package"

#: backend/flow/engine/bamboo/scene/cloud/base_service_flow.py:171
msgid "部署{}服务进程"
msgstr "Deploy {} service process"

#: backend/flow/engine/bamboo/scene/cloud/base_service_flow.py:220
msgid "下发{}配置文件"
msgstr "Send {} configuration file"

#: backend/flow/engine/bamboo/scene/cloud/base_service_flow.py:362
msgid "存量集群的权限更新"
msgstr "Permission update for existing clusters"

#: backend/flow/engine/bamboo/scene/cloud/base_service_flow.py:390
msgid "更新服务元信息"
msgstr "Update service meta information"

#: backend/flow/engine/bamboo/scene/cloud/base_service_flow.py:415
msgid "裁撤{}的服务"
msgstr "Cancel {} service"

#: backend/flow/engine/bamboo/scene/cloud/base_service_flow.py:438
msgid "重启nginx服务"
msgstr "Restart the nginx service"

#: backend/flow/engine/bamboo/scene/cloud/dbha_service_flow.py:45
msgid "主机{}部署gm服务"
msgstr "Host{} deploys gm service"

#: backend/flow/engine/bamboo/scene/cloud/dbha_service_flow.py:67
msgid "主机{}部署agent服务"
msgstr "Host {} deploys the agent service"

#: backend/flow/engine/bamboo/scene/cloud/dbha_service_flow.py:84
msgid "部署dbha-gm服务"
msgstr "Deploy dbha-gm service"

#: backend/flow/engine/bamboo/scene/cloud/dbha_service_flow.py:90
msgid "部署dbha-agent服务"
msgstr "Deploy dbha-agent service"

#: backend/flow/engine/bamboo/scene/cloud/dns_service_flow.py:48
#: backend/flow/engine/bamboo/scene/cloud/nginx_service_flow.py:70
msgid "主机{}部署dns服务"
msgstr "Host{} deploys dns service"

#: backend/flow/engine/bamboo/scene/cloud/dns_service_flow.py:54
msgid "部署dns服务"
msgstr "Deploy dns service"

#: backend/flow/engine/bamboo/scene/cloud/dns_service_flow.py:71
msgid "对存量机器的nameserver刷新"
msgstr "Refresh the nameserver of the stock machine"

#: backend/flow/engine/bamboo/scene/cloud/dns_service_flow.py:160
msgid "部署新dns服务流程"
msgstr "Deploy new dns service process"

#: backend/flow/engine/bamboo/scene/cloud/dns_service_flow.py:179
msgid "裁撤旧dns服务流程"
msgstr "Abolish the old dns service process"

#: backend/flow/engine/bamboo/scene/cloud/drs_service_flow.py:34
msgid "部署"
msgstr "deploy"

#: backend/flow/engine/bamboo/scene/cloud/drs_service_flow.py:43
msgid "主机{}部署drs服务"
msgstr "host{} deploy drs service"

#: backend/flow/engine/bamboo/scene/cloud/drs_service_flow.py:47
msgid "{}drs服务"
msgstr "{}drs service"

#: backend/flow/engine/bamboo/scene/cloud/drs_service_flow.py:74
msgid "重装"
msgstr "reinstall"

#: backend/flow/engine/bamboo/scene/cloud/drs_service_flow.py:82
msgid "安装"
msgstr "Install"

#: backend/flow/engine/bamboo/scene/cloud/drs_service_flow.py:154
msgid "部署新drs服务"
msgstr "Deploy new drs service"

#: backend/flow/engine/bamboo/scene/cloud/drs_service_flow.py:187
msgid "裁撤旧drs服务"
msgstr "Abolition of the old drs service"

#: backend/flow/engine/bamboo/scene/cloud/nginx_service_flow.py:79
msgid "串行化部署DNS服务"
msgstr "Serialized deployment of DNS services"

#: backend/flow/engine/bamboo/scene/cloud/nginx_service_flow.py:80
msgid "部署DBHA服务"
msgstr "Deploy DBHA service"

#: backend/flow/engine/bamboo/scene/cloud/redis_dts_server_service_flow.py:37
msgid "主机{}部署redis dts服务 s"
msgstr "Host {} deploys redis dts service s"

#: backend/flow/engine/bamboo/scene/cloud/redis_dts_server_service_flow.py:41
msgid "部署redis dts服务"
msgstr "Deploy redis dts service"

#: backend/flow/engine/bamboo/scene/cloud/redis_dts_server_service_flow.py:122
msgid "部署新redis dts服务流程"
msgstr "Deploy new redis dts service process"

#: backend/flow/engine/bamboo/scene/cloud/redis_dts_server_service_flow.py:140
msgid "裁撤旧redis dts服务流程"
msgstr "Abolish the old redis dts service process"

#: backend/flow/engine/bamboo/scene/common/atom_jobs/set_dns_sub_job.py:48
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/dirty_machine_clear.py:65
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/dirty_machine_clear.py:170
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/predixy_config_servers_rewrite.py:60
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_upgrade.py:54
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_client_conns_kill.py:48
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_client_conns_kill.py:104
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dbmon.py:57
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dbmon.py:118
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dts.py:37
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dts.py:119
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_load_module.py:52
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_maxmemory_set.py:52
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/reupload_old_backup_records.py:64
#: backend/flow/engine/bamboo/scene/redis/redis_add_dts_server.py:79
#: backend/flow/engine/bamboo/scene/redis/redis_backend_scale.py:187
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_backup.py:98
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_check_repair.py:70
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:145
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:525
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:746
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:793
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:208
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:643
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_rename_domain.py:137
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_shutdown.py:117
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:210
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:581
#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:719
#: backend/flow/engine/bamboo/scene/redis/redis_data_structure_task_delete.py:135
#: backend/flow/engine/bamboo/scene/redis/redis_flush_data.py:102
#: backend/flow/engine/bamboo/scene/redis/redis_ins_shutdown.py:134
#: backend/flow/engine/bamboo/scene/redis/redis_instance_apply_flow.py:234
#: backend/flow/engine/bamboo/scene/redis/redis_keys_delete.py:100
#: backend/flow/engine/bamboo/scene/redis/redis_keys_extract.py:88
#: backend/flow/engine/bamboo/scene/redis/redis_open_close.py:107
#: backend/flow/engine/bamboo/scene/redis/redis_open_close.py:333
#: backend/flow/engine/bamboo/scene/redis/redis_predixy_cluster_apply_flow.py:127
#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:158
#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:300
#: backend/flow/engine/bamboo/scene/redis/redis_remove_dts_server.py:65
#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate.py:343
#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:160
#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:357
#: backend/flow/engine/bamboo/scene/redis/redis_twemproxy_cluster_apply_flow.py:164
msgid "初始化配置"
msgstr "Initial configuration"

#: backend/flow/engine/bamboo/scene/common/atom_jobs/set_dns_sub_job.py:61
msgid "获取/etc/resolv.conf: {}"
msgstr "Get /etc/resolv.conf: {}"

#: backend/flow/engine/bamboo/scene/common/atom_jobs/set_dns_sub_job.py:70
msgid "检查/etc/resolv.conf: {}"
msgstr "Check /etc/resolv.conf: {}"

#: backend/flow/engine/bamboo/scene/common/atom_jobs/set_dns_sub_job.py:79
msgid "{}修改DNS配置"
msgstr "{}Modify DNS configuration"

#: backend/flow/engine/bamboo/scene/common/atom_jobs/set_dns_sub_job.py:86
msgid "{}配置DNS子流程"
msgstr "{}Configure DNS sub-process"

#: backend/flow/engine/bamboo/scene/common/bigdata_common_sub_flow.py:47
#: backend/flow/engine/bamboo/scene/common/machine_os_init.py:45
msgid "执行sa空闲检查"
msgstr "Perform sa idle check"

#: backend/flow/engine/bamboo/scene/common/bigdata_common_sub_flow.py:67
#: backend/flow/engine/bamboo/scene/common/machine_os_init.py:54
msgid "执行sa初始化"
msgstr "Execute sa initialization"

#: backend/flow/engine/bamboo/scene/common/bigdata_common_sub_flow.py:89
#: backend/flow/engine/bamboo/scene/mongodb/mongodb_install.py:47
#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:777
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_install.py:110
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_install.py:126
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:240
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:682
#: backend/flow/engine/bamboo/scene/redis/redis_instance_apply_flow.py:273
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:99
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_migrate_flow.py:89
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_out_flow.py:96
#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:136
msgid "安装[{}]插件"
msgstr "Install [{}] plugin"

#: backend/flow/engine/bamboo/scene/common/bigdata_common_sub_flow.py:105
msgid "构建init_machine_sub子流程失败，联系系统管理员, new_ips is null"
msgstr "Failed to build the init_machine_sub sub-process, contact the system administrator, new_ips is null"

#: backend/flow/engine/bamboo/scene/common/bigdata_common_sub_flow.py:129
msgid "机器空闲检查及初始化"
msgstr "Machine idle check and initialization"

#: backend/flow/engine/bamboo/scene/common/builder.py:157
msgid "传入的acts_list参数不合法，请检测"
msgstr "The passed acts_list parameter is illegal, please check"

#: backend/flow/engine/bamboo/scene/common/builder.py:199
msgid "传入的sub_flow_list参数不合法，请检测"
msgstr "The sub_flow_list parameter passed in is illegal, please check"

#: backend/flow/engine/bamboo/scene/common/builder.py:238
msgid "部署bamboo流程任务创建失败，任务结束"
msgstr "Deploying bamboo process task creation failed, the task ended"

#: backend/flow/engine/bamboo/scene/common/download_dbactor.py:27
#: backend/flow/engine/bamboo/scene/common/download_dbactor.py:37
#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:156
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_db_table_backup.py:133
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_full_backup_flow.py:116
#: backend/flow/engine/bamboo/scene/mysql/mysql_partition.py:118
#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:143
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:176
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:260
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:316
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_flashback.py:148
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:167
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:217
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:304
msgid "下发actuator介质"
msgstr "Deliver the actuator medium"

#: backend/flow/engine/bamboo/scene/common/download_file.py:43
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:174
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:217
#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:147
msgid "下发文件"
msgstr "Distribute files"

#: backend/flow/engine/bamboo/scene/common/download_file.py:56
msgid "ip[{}]下载文件"
msgstr "ip[{}] download file"

#: backend/flow/engine/bamboo/scene/common/download_file.py:58
msgid "构建下载文件流程成功"
msgstr "Build download file process successfully"

#: backend/flow/engine/bamboo/scene/common/machine_os_init.py:61
#: backend/ticket/constants.py:443
msgid "资源池导入"
msgstr "Resource pool import"

#: backend/flow/engine/bamboo/scene/common/machine_os_init.py:73
msgid "主机转移至资源池空闲模块"
msgstr "The host is transferred to the resource pool idle module"

#: backend/flow/engine/bamboo/scene/common/transfer_cluster_to_other_biz.py:63
msgid "迁移的集群必须在同一个云区域"
msgstr "The migrated cluster must be in the same cloud region"

#: backend/flow/engine/bamboo/scene/common/transfer_cluster_to_other_biz.py:65
msgid "迁移的集群必须在同一个业务"
msgstr "The migrated cluster must be in the same business"

#: backend/flow/engine/bamboo/scene/common/transfer_cluster_to_other_biz.py:74
msgid "clone权限规则"
msgstr "clone permission rules"

#: backend/flow/engine/bamboo/scene/common/transfer_cluster_to_other_biz.py:80
msgid "迁移元数据"
msgstr "Migrate metadata"

#: backend/flow/engine/bamboo/scene/common/transfer_cluster_to_other_biz.py:89
msgid "请先跑一下集群标准化，完成之后确认"
msgstr "Please run cluster standardization first and confirm after completion."

#: backend/flow/engine/bamboo/scene/common/transfer_cluster_to_other_biz.py:92
msgid "更新dns记录归属业务"
msgstr "Update dns record ownership business"

#: backend/flow/engine/bamboo/scene/doris/doris_apply_flow.py:98
#: backend/flow/engine/bamboo/scene/doris/doris_destroy_flow.py:66
#: backend/flow/engine/bamboo/scene/doris/doris_disable_flow.py:63
#: backend/flow/engine/bamboo/scene/doris/doris_enable_flow.py:63
#: backend/flow/engine/bamboo/scene/doris/doris_reboot_flow.py:61
#: backend/flow/engine/bamboo/scene/doris/doris_scale_up_flow.py:97
#: backend/flow/engine/bamboo/scene/doris/doris_shrink_flow.py:95
#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:88
#: backend/flow/engine/bamboo/scene/es/es_destroy_flow.py:59
#: backend/flow/engine/bamboo/scene/es/es_disable_flow.py:55
#: backend/flow/engine/bamboo/scene/es/es_enable_flow.py:55
#: backend/flow/engine/bamboo/scene/es/es_fake_apply_flow.py:71
#: backend/flow/engine/bamboo/scene/es/es_reboot_flow.py:66
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:73
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:71
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:73
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_destroy_flow.py:69
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_disable_flow.py:65
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:67
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_reboot_flow.py:60
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:71
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:59
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:159
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:87
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_destroy_flow.py:71
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_disable_flow.py:61
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_enable_flow.py:61
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_reboot_flow.py:60
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:73
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_scale_up_flow.py:64
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_shrink_flow.py:55
#: backend/flow/engine/bamboo/scene/vm/vm_apply_flow.py:81
#: backend/flow/engine/bamboo/scene/vm/vm_destroy_flow.py:62
#: backend/flow/engine/bamboo/scene/vm/vm_disable_flow.py:60
#: backend/flow/engine/bamboo/scene/vm/vm_enable_flow.py:60
#: backend/flow/engine/bamboo/scene/vm/vm_reboot_flow.py:69
#: backend/flow/engine/bamboo/scene/vm/vm_scale_up_flow.py:79
#: backend/flow/engine/bamboo/scene/vm/vm_shrink_flow.py:82
msgid "获取集群部署配置"
msgstr "Get cluster deployment configuration"

#: backend/flow/engine/bamboo/scene/doris/doris_apply_flow.py:103
#: backend/flow/engine/bamboo/scene/doris/doris_replace_flow.py:134
#: backend/flow/engine/bamboo/scene/doris/doris_scale_up_flow.py:102
#: backend/flow/engine/bamboo/scene/doris/doris_shrink_flow.py:100
#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:93
#: backend/flow/engine/bamboo/scene/es/es_fake_apply_flow.py:76
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:104
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:78
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:78
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_fake_apply_flow.py:65
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:76
#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:108
#: backend/flow/engine/bamboo/scene/kafka/kafka_fake_apply_flow.py:88
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:213
#: backend/flow/engine/bamboo/scene/kafka/kafka_scale_up_flow.py:137
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:91
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:77
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_scale_up_flow.py:69
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_shrink_flow.py:59
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:80
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_migrate_flow.py:83
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_in_flow.py:69
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_out_flow.py:76
#: backend/flow/engine/bamboo/scene/vm/vm_apply_flow.py:86
#: backend/flow/engine/bamboo/scene/vm/vm_replace_flow.py:102
#: backend/flow/engine/bamboo/scene/vm/vm_scale_up_flow.py:84
#: backend/flow/engine/bamboo/scene/vm/vm_shrink_flow.py:87
msgid "获取机器信息"
msgstr "Get machine information"

#: backend/flow/engine/bamboo/scene/doris/doris_apply_flow.py:108
#: backend/flow/engine/bamboo/scene/doris/doris_replace_flow.py:138
#: backend/flow/engine/bamboo/scene/doris/doris_replace_flow.py:199
#: backend/flow/engine/bamboo/scene/doris/doris_scale_up_flow.py:107
#: backend/flow/engine/bamboo/scene/doris/doris_shrink_flow.py:106
msgid "下发DORIS介质"
msgstr "Deliver DORIS media"

#: backend/flow/engine/bamboo/scene/doris/doris_apply_flow.py:124
msgid "启动Master FE {}"
msgstr "Start Master FE {}"

#: backend/flow/engine/bamboo/scene/doris/doris_apply_flow.py:131
msgid "检查Master FE {}是否正常启动"
msgstr "Check whether Master FE {} starts normally"

#: backend/flow/engine/bamboo/scene/doris/doris_apply_flow.py:138
msgid "账号权限初始化"
msgstr "Account permission initialization"

#: backend/flow/engine/bamboo/scene/doris/doris_apply_flow.py:145
#: backend/flow/engine/bamboo/scene/doris/doris_replace_flow.py:149
#: backend/flow/engine/bamboo/scene/doris/doris_scale_up_flow.py:121
msgid "集群元数据更新"
msgstr "Cluster metadata updates"

#: backend/flow/engine/bamboo/scene/doris/doris_apply_flow.py:166
msgid "插入Doris WebUI实例信息"
msgstr "Insert Doris WebUI instance information"

#: backend/flow/engine/bamboo/scene/doris/doris_apply_flow.py:173
#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:211
#: backend/flow/engine/bamboo/scene/es/es_fake_apply_flow.py:98
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:223
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_fake_apply_flow.py:100
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:138
#: backend/flow/engine/bamboo/scene/vm/vm_apply_flow.py:126
msgid "回写集群配置信息"
msgstr "Write back cluster configuration information"

#: backend/flow/engine/bamboo/scene/doris/doris_apply_flow.py:184
#: backend/flow/engine/bamboo/scene/doris/doris_replace_flow.py:177
#: backend/flow/engine/bamboo/scene/doris/doris_scale_up_flow.py:148
#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:222
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:198
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_enable_flow.py:77
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:161
msgid "添加域名"
msgstr "add domain name"

#: backend/flow/engine/bamboo/scene/doris/doris_apply_flow.py:191
#: backend/flow/engine/bamboo/scene/doris/doris_replace_flow.py:166
#: backend/flow/engine/bamboo/scene/doris/doris_scale_up_flow.py:137
#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:229
#: backend/flow/engine/bamboo/scene/es/es_fake_apply_flow.py:103
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:202
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:173
#: backend/flow/engine/bamboo/scene/vm/vm_apply_flow.py:159
#: backend/flow/engine/bamboo/scene/vm/vm_replace_flow.py:229
#: backend/flow/engine/bamboo/scene/vm/vm_scale_up_flow.py:180
msgid "添加到DBMeta"
msgstr "Add to DBMeta"

#: backend/flow/engine/bamboo/scene/doris/doris_apply_flow.py:201
msgid "DorisFollower主机数不为{},当前选择数量为{}"
msgstr "The number of DorisFollower hosts is not {}, and the currently selected number is {}"

#: backend/flow/engine/bamboo/scene/doris/doris_apply_flow.py:209
#: backend/flow/engine/bamboo/scene/doris/doris_scale_up_flow.py:168
#: backend/flow/engine/bamboo/scene/doris/doris_shrink_flow.py:166
msgid "DorisObserver主机数不能为{}"
msgstr "The number of DorisObserver hosts cannot be {}"

#: backend/flow/engine/bamboo/scene/doris/doris_apply_flow.py:216
msgid "Doris数据节点(hot+cold)数量不能为{}"
msgstr "The number of Doris data nodes (hot+cold) cannot be {}"

#: backend/flow/engine/bamboo/scene/doris/doris_base_flow.py:205
#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:142
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:162
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:133
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:185
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:232
#: backend/flow/engine/bamboo/scene/vm/vm_base_flow.py:179
msgid "节点初始化-{}"
msgstr "node init - {}"

#: backend/flow/engine/bamboo/scene/doris/doris_base_flow.py:212
#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:151
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:171
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:142
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:191
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:238
#: backend/flow/engine/bamboo/scene/vm/vm_base_flow.py:186
msgid "解压缩介质包-{}"
msgstr "unzip media package - {}"

#: backend/flow/engine/bamboo/scene/doris/doris_base_flow.py:219
msgid "渲染集群配置-{}"
msgstr "Rendering cluster configuration-{}"

#: backend/flow/engine/bamboo/scene/doris/doris_base_flow.py:227
#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:160
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:180
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:151
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:198
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:245
#: backend/flow/engine/bamboo/scene/vm/vm_base_flow.py:194
msgid "安装supervisor-{}"
msgstr "install supervisor-{}"

#: backend/flow/engine/bamboo/scene/doris/doris_base_flow.py:231
msgid "安装Doris {}-{}子流程"
msgstr "Install Doris {}-{} subprocess"

#: backend/flow/engine/bamboo/scene/doris/doris_base_flow.py:252
msgid "启动初始化-{}-{}"
msgstr "Start initialization-{}-{}"

#: backend/flow/engine/bamboo/scene/doris/doris_base_flow.py:258
msgid "启动-{}-{}"
msgstr "start up-{}-{}"

#: backend/flow/engine/bamboo/scene/doris/doris_base_flow.py:263
msgid "安装DorisFE {}-{}子流程"
msgstr "Install DorisFE {}-{} subprocess"

#: backend/flow/engine/bamboo/scene/doris/doris_base_flow.py:279
msgid "启动DorisBE-{}-{}"
msgstr "Start DorisBE-{}-{}"

#: backend/flow/engine/bamboo/scene/doris/doris_base_flow.py:294
#: backend/flow/engine/bamboo/scene/doris/doris_base_flow.py:330
msgid "获取集群Payload"
msgstr "Get cluster payload"

#: backend/flow/engine/bamboo/scene/doris/doris_base_flow.py:305
msgid "停止DorisFE-{}-{}"
msgstr "StopDorisFE-{}-{}"

#: backend/flow/engine/bamboo/scene/doris/doris_base_flow.py:316
msgid "集群元数据更新-drop-fe"
msgstr "Cluster metadata update-drop-fe"

#: backend/flow/engine/bamboo/scene/doris/doris_base_flow.py:336
msgid "集群元数据更新-退役-BE"
msgstr "Cluster metadata update-retirement-BE"

#: backend/flow/engine/bamboo/scene/doris/doris_base_flow.py:343
msgid "检查数据节点是否退役"
msgstr "Check whether the data node is retired"

#: backend/flow/engine/bamboo/scene/doris/doris_base_flow.py:350
msgid "集群元数据更新-删除-BE"
msgstr "Cluster metadata update-delete-BE"

#: backend/flow/engine/bamboo/scene/doris/doris_base_flow.py:363
msgid "停止DorisBE-{}-{}"
msgstr "Stop DorisBE-{}-{}"

#: backend/flow/engine/bamboo/scene/doris/doris_destroy_flow.py:72
#: backend/flow/engine/bamboo/scene/doris/doris_disable_flow.py:69
#: backend/flow/engine/bamboo/scene/doris/doris_enable_flow.py:69
#: backend/flow/engine/bamboo/scene/doris/doris_reboot_flow.py:66
msgid "下发doris actuator"
msgstr "Issue doris actuator"

#: backend/flow/engine/bamboo/scene/doris/doris_destroy_flow.py:81
#: backend/flow/engine/bamboo/scene/doris/doris_replace_flow.py:219
#: backend/flow/engine/bamboo/scene/doris/doris_shrink_flow.py:139
msgid "Doris集群节点清理-{}"
msgstr "Doris cluster node cleanup-{}"

#: backend/flow/engine/bamboo/scene/doris/doris_destroy_flow.py:92
#: backend/flow/engine/bamboo/scene/es/es_destroy_flow.py:97
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_destroy_flow.py:107
#: backend/flow/engine/bamboo/scene/kafka/kafka_destroy_flow.py:107
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_destroy_flow.py:97
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/access_manager.py:64
#: backend/flow/engine/bamboo/scene/vm/vm_destroy_flow.py:88
msgid "删除域名"
msgstr "delete domain name"

#: backend/flow/engine/bamboo/scene/doris/doris_destroy_flow.py:104
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_destroy_flow.py:121
msgid "删除PULSAR_MANAGER实例信息"
msgstr "Delete PULSAR_MANAGER instance information"

#: backend/flow/engine/bamboo/scene/doris/doris_destroy_flow.py:110
#: backend/flow/engine/bamboo/scene/doris/doris_disable_flow.py:89
#: backend/flow/engine/bamboo/scene/doris/doris_enable_flow.py:89
#: backend/flow/engine/bamboo/scene/es/es_disable_flow.py:79
#: backend/flow/engine/bamboo/scene/es/es_enable_flow.py:79
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_destroy_flow.py:114
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_disable_flow.py:90
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:144
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_disable_flow.py:83
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_enable_flow.py:84
#: backend/flow/engine/bamboo/scene/kafka/kafka_disable_flow.py:90
#: backend/flow/engine/bamboo/scene/kafka/kafka_enable_flow.py:90
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_destroy_flow.py:127
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_disable_flow.py:89
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_enable_flow.py:87
#: backend/flow/engine/bamboo/scene/vm/vm_destroy_flow.py:94
#: backend/flow/engine/bamboo/scene/vm/vm_disable_flow.py:84
#: backend/flow/engine/bamboo/scene/vm/vm_enable_flow.py:84
msgid "修改Meta"
msgstr "Modify Meta"

#: backend/flow/engine/bamboo/scene/doris/doris_disable_flow.py:79
msgid "停止Doris集群进程-{}"
msgstr "Stop the Doris cluster process-{}"

#: backend/flow/engine/bamboo/scene/doris/doris_enable_flow.py:79
msgid "启动Doris集群进程-{}"
msgstr "Start the Doris cluster process-{}"

#: backend/flow/engine/bamboo/scene/doris/doris_reboot_flow.py:77
#: backend/flow/engine/bamboo/scene/es/es_reboot_flow.py:81
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_reboot_flow.py:69
#: backend/flow/engine/bamboo/scene/kafka/kafka_reboot_flow.py:72
#: backend/flow/engine/bamboo/scene/vm/vm_reboot_flow.py:84
msgid "重启实例-{}"
msgstr "restart instance - {}"

#: backend/flow/engine/bamboo/scene/doris/doris_replace_flow.py:129
msgid "获取Payload"
msgstr "GetPayload"

#: backend/flow/engine/bamboo/scene/doris/doris_replace_flow.py:182
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:227
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:204
#: backend/flow/engine/bamboo/scene/vm/vm_replace_flow.py:232
msgid "扩容子流程"
msgstr "Expansion sub-process"

#: backend/flow/engine/bamboo/scene/doris/doris_replace_flow.py:192
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:237
#: backend/flow/engine/bamboo/scene/vm/vm_replace_flow.py:241
msgid "获取缩容流程集群部署配置"
msgstr "Obtain the cluster deployment configuration of the shrinking process"

#: backend/flow/engine/bamboo/scene/doris/doris_replace_flow.py:205
#: backend/flow/engine/bamboo/scene/doris/doris_shrink_flow.py:125
msgid "缩容管理节点FE"
msgstr "Shrink management node FE"

#: backend/flow/engine/bamboo/scene/doris/doris_replace_flow.py:210
#: backend/flow/engine/bamboo/scene/doris/doris_shrink_flow.py:130
msgid "缩容数据节点BE"
msgstr "Shrink data node BE"

#: backend/flow/engine/bamboo/scene/doris/doris_replace_flow.py:228
#: backend/flow/engine/bamboo/scene/doris/doris_shrink_flow.py:148
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:134
#: backend/flow/engine/bamboo/scene/vm/vm_replace_flow.py:267
#: backend/flow/engine/bamboo/scene/vm/vm_shrink_flow.py:159
msgid "更新DBMeta"
msgstr "Update DBMeta"

#: backend/flow/engine/bamboo/scene/doris/doris_replace_flow.py:239
#: backend/flow/engine/bamboo/scene/doris/doris_shrink_flow.py:117
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:257
#: backend/flow/engine/bamboo/scene/kafka/kafka_scale_up_flow.py:203
msgid "更新域名"
msgstr "update domain name"

#: backend/flow/engine/bamboo/scene/doris/doris_replace_flow.py:243
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:373
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:256
#: backend/flow/engine/bamboo/scene/vm/vm_replace_flow.py:270
msgid "缩容子流程"
msgstr "Shrink subprocess"

#: backend/flow/engine/bamboo/scene/doris/doris_scale_up_flow.py:161
msgid "DorisFollower不支持扩容,当前选择扩容机器数量为{}"
msgstr "DorisFollower does not support expansion. The number of machines currently selected for expansion is {}"

#: backend/flow/engine/bamboo/scene/doris/doris_shrink_flow.py:159
msgid "DorisFollower不支持缩容,当前选择缩容机器数量为{}"
msgstr "DorisFollower does not support scaling. The number of machines currently selected for scaling is {}"

#: backend/flow/engine/bamboo/scene/doris/exceptions.py:18
#: backend/flow/engine/bamboo/scene/vm/exceptions.py:18
msgid "Flow模块Doris异常"
msgstr "Flow module Doris exception"

#: backend/flow/engine/bamboo/scene/doris/exceptions.py:29
#: backend/flow/engine/bamboo/scene/doris/exceptions.py:35
#: backend/flow/engine/bamboo/scene/doris/exceptions.py:41
#: backend/flow/engine/bamboo/scene/doris/exceptions.py:47
#: backend/flow/engine/bamboo/scene/vm/exceptions.py:29
#: backend/flow/engine/bamboo/scene/vm/exceptions.py:35
#: backend/flow/engine/bamboo/scene/vm/exceptions.py:41
#: backend/flow/engine/bamboo/scene/vm/exceptions.py:47
msgid "机器数量异常"
msgstr "Abnormal number of machines"

#: backend/flow/engine/bamboo/scene/doris/exceptions.py:30
#: backend/flow/engine/bamboo/scene/vm/exceptions.py:30
msgid "Doris集群角色{doris_role}数量不能为{machine_count}"
msgstr "The number of Doris cluster roles {doris_role} cannot be {machine_count}"

#: backend/flow/engine/bamboo/scene/doris/exceptions.py:36
#: backend/flow/engine/bamboo/scene/vm/exceptions.py:36
msgid "Doris集群角色{doris_role}机器数量必须为{must_count}"
msgstr "The number of Doris cluster role {doris_role} machines must be {must_count}"

#: backend/flow/engine/bamboo/scene/doris/exceptions.py:42
#: backend/flow/engine/bamboo/scene/vm/exceptions.py:42
#, python-brace-format
msgid "Doris集群数据节点(热+冷)机器数量之和不能为{must_count}"
msgstr "The sum of the number of Doris cluster data node (hot + cold) machines cannot be {must_count}"

#: backend/flow/engine/bamboo/scene/doris/exceptions.py:48
#: backend/flow/engine/bamboo/scene/vm/exceptions.py:48
#, python-brace-format
msgid "Doris集群Follower不支持扩容, 当前选择扩容机器数量为{machine_count}"
msgstr "Doris cluster Follower does not support expansion. The number of machines currently selected for expansion is {machine_count}"

#: backend/flow/engine/bamboo/scene/doris/exceptions.py:53
#: backend/flow/engine/bamboo/scene/vm/exceptions.py:53
msgid "Doris替换机器数量不一致"
msgstr "The number of Doris replacement machines is inconsistent"

#: backend/flow/engine/bamboo/scene/doris/exceptions.py:54
#: backend/flow/engine/bamboo/scene/vm/exceptions.py:54
#, python-brace-format
msgid ""
"Doris集群替换角色{doris_role}数量不一致,已选旧节点个数{old_count},新节点个数"
"{new_count}"
msgstr "The number of Doris cluster replacement roles {doris_role} is inconsistent, the number of old nodes selected is {old_count}, and the number of new nodes is {new_count}"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:106
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:117
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:90
msgid "下发ES介质"
msgstr "Issue ES media"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:114
msgid "生成证书"
msgstr "Generate certificate"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:119
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:139
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:110
msgid "分发证书"
msgstr "Distribute certificate"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:171
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:191
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:162
msgid "安装ES {}-{}节点"
msgstr "install ES {}-{} node"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:176
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:196
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:167
msgid "安装ES {}-{}子流程"
msgstr "install ES {}-{} subprocess"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:184
msgid "初始化鉴权插件"
msgstr "Initialize the authentication plugin"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:192
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:284
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:124
msgid "安装kibana"
msgstr "install kibana"

#: backend/flow/engine/bamboo/scene/es/es_apply_flow.py:204
#: backend/flow/engine/bamboo/scene/es/es_fake_apply_flow.py:91
msgid "插入kibana实例信息"
msgstr "Insert kibana instance information"

#: backend/flow/engine/bamboo/scene/es/es_destroy_flow.py:65
#: backend/flow/engine/bamboo/scene/es/es_disable_flow.py:61
#: backend/flow/engine/bamboo/scene/es/es_enable_flow.py:61
#: backend/flow/engine/bamboo/scene/es/es_reboot_flow.py:71
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_reboot_flow.py:58
#: backend/flow/engine/bamboo/scene/kafka/kafka_reboot_flow.py:61
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_destroy_flow.py:64
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_disable_flow.py:64
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_in_flow.py:73
#: backend/flow/engine/bamboo/scene/vm/vm_destroy_flow.py:68
#: backend/flow/engine/bamboo/scene/vm/vm_disable_flow.py:66
#: backend/flow/engine/bamboo/scene/vm/vm_enable_flow.py:66
msgid "下发actuator"
msgstr "Issue the actuator"

#: backend/flow/engine/bamboo/scene/es/es_destroy_flow.py:74
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:341
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:182
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_destroy_flow.py:75
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:187
#: backend/flow/engine/bamboo/scene/kafka/kafka_destroy_flow.py:85
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:324
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:441
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:196
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:126
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:243
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_shrink_flow.py:99
msgid "节点清理-{}"
msgstr "node cleanup -{}"

#: backend/flow/engine/bamboo/scene/es/es_destroy_flow.py:89
msgid "删除kibana实例信息"
msgstr "Delete kibana instance information"

#: backend/flow/engine/bamboo/scene/es/es_destroy_flow.py:103
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_destroy_flow.py:85
#: backend/flow/engine/bamboo/scene/kafka/kafka_destroy_flow.py:114
msgid "清理Meta"
msgstr "Clean up Meta"

#: backend/flow/engine/bamboo/scene/es/es_disable_flow.py:70
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_disable_flow.py:73
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:178
#: backend/flow/engine/bamboo/scene/kafka/kafka_disable_flow.py:80
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:316
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:433
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:179
msgid "停止进程-{}"
msgstr "stop process - {}"

#: backend/flow/engine/bamboo/scene/es/es_enable_flow.py:70
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_enable_flow.py:74
#: backend/flow/engine/bamboo/scene/kafka/kafka_enable_flow.py:80
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_enable_flow.py:77
msgid "启动进程-{}"
msgstr "start process - {}"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:97
#: backend/flow/engine/bamboo/scene/vm/vm_replace_flow.py:95
msgid "获取扩容流程集群部署配置"
msgstr "Obtain the cluster deployment configuration of the expansion process"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:124
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:246
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:83
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:120
msgid "下发dbactuator"
msgstr "Issue dbactuator"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:132
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:105
msgid "打包证书"
msgstr "Package certificate"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:213
#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:265
#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:184
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:102
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:229
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_shrink_flow.py:85
msgid "更新域名映射"
msgstr "update domain mapping"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:222
msgid "校验扩容结果"
msgstr "Verify expansion results"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:252
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:89
msgid "排斥缩容节点"
msgstr "Repulsion and shrinkage nodes"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:298
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:138
msgid "更新kibana实例信息"
msgstr "Update kibana instance information"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:306
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:147
msgid "校验搬迁状态"
msgstr "Check relocation status"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:318
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:158
msgid "校验连接状态"
msgstr "Check connection status"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:327
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:167
msgid "停止节点-{}"
msgstr "stop-node-{}"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:332
msgid "停止ES子流程"
msgstr "Stop the ES subprocess"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:351
#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:190
msgid "清理DBMeta"
msgstr "Clean up DBMeta"

#: backend/flow/engine/bamboo/scene/es/es_replace_flow.py:366
msgid "{}-替换master ip"
msgstr "{} - replace master ip"

#: backend/flow/engine/bamboo/scene/es/es_scale_up_flow.py:97
msgid "原有机器下发dbactuator"
msgstr "The original machine issues dbactuator"

#: backend/flow/engine/bamboo/scene/es/es_shrink_flow.py:171
msgid "停止ES-{}子流程"
msgstr "stop ES-{} subprocess"

#: backend/flow/engine/bamboo/scene/hdfs/exceptions.py:18
msgid "Flow模块HDFS异常"
msgstr "Flow module HDFS exception"

#: backend/flow/engine/bamboo/scene/hdfs/exceptions.py:29
msgid "手动部署选择机器数量异常"
msgstr "The number of machines selected for manual deployment is abnormal"

#: backend/flow/engine/bamboo/scene/hdfs/exceptions.py:30
#, python-brace-format
msgid "HDFS集群角色{hdfs_role}数量不能为{machine_count}"
msgstr "The number of HDFS cluster roles {hdfs_role} cannot be {machine_count}"

#: backend/flow/engine/bamboo/scene/hdfs/exceptions.py:35
msgid "替换旧机器不能为空"
msgstr "replace old machine cannot be empty"

#: backend/flow/engine/bamboo/scene/hdfs/exceptions.py:36
msgid "HDFS集群替换旧机器不能为空"
msgstr "HDFS cluster to replace the old machine cannot be empty"

#: backend/flow/engine/bamboo/scene/hdfs/exceptions.py:41
msgid "HDFS替换新旧机器数量不一致"
msgstr "The number of new and old machines replaced by HDFS is inconsistent"

#: backend/flow/engine/bamboo/scene/hdfs/exceptions.py:42
#, python-brace-format
msgid "HDFS集群替换角色{hdfs_role}数量不一致"
msgstr ""
"The number of HDFS cluster replacement roles {hdfs_role} is inconsistent"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:94
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:96
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:75
msgid "下发hdfs介质包"
msgstr "Deliver hdfs media package"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:98
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:102
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:79
#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:762
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:257
#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:245
msgid "初始化机器"
msgstr "Initialize the machine"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:103
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:107
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:83
msgid "解压缩文件"
msgstr "unzip the file"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:108
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:112
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:87
msgid "渲染集群配置"
msgstr "Rendering cluster configuration"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:113
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:117
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:91
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_apply_flow.py:98
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:113
#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:145
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:249
#: backend/flow/engine/bamboo/scene/kafka/kafka_scale_up_flow.py:175
msgid "安装supervisor"
msgstr "install supervisor"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:123
#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:162
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:269
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:147
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:128
msgid "安装zookeeper-{}"
msgstr "install zookeeper-{}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:133
msgid "安装JournalNode"
msgstr "Install JournalNodes"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:141
msgid "安装NN1"
msgstr "Install NN1"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:147
msgid "安装NN2"
msgstr "Install NN2"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:153
msgid "安装ZKFC"
msgstr "Install ZKFC"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:161
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:152
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:124
msgid "安装DataNode-{}"
msgstr "Install DataNodes - {}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:171
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:162
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:134
msgid "安装HAProxy"
msgstr "Install HAProxy"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:185
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_fake_apply_flow.py:80
msgid "插入haproxy实例信息"
msgstr "Insert haproxy instance information"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:205
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:151
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:219
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_fake_apply_flow.py:95
msgid "添加元数据到DBMeta"
msgstr "Add metadata to DBMeta"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:210
msgid "回写集群部署配置"
msgstr "Write back cluster deployment configuration"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:221
msgid "NameNode主机数不为2"
msgstr "The number of NameNode hosts is not 2"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:225
msgid "ZooKeeper主机数不为3"
msgstr "The number of ZooKeeper hosts is not 3"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:229
msgid "DataNode主机数少于2"
msgstr "The number of DataNode hosts is less than 2"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_apply_flow.py:256
msgid "复用NN主机 {} 作为ZK"
msgstr "Reuse NN host{} as ZK"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_destroy_flow.py:65
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_disable_flow.py:61
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:63
msgid "检查集群状态"
msgstr "Check cluster status"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_destroy_flow.py:75
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_disable_flow.py:71
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:73
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_reboot_flow.py:65
msgid "下发hdfs actuator"
msgstr "Issue hdfs actuator"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_destroy_flow.py:84
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:242
msgid "HDFS集群节点清理-{}"
msgstr "HDFS cluster node cleaning -{}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_destroy_flow.py:99
msgid "删除haproxy实例信息"
msgstr "Delete haproxy instance information"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_disable_flow.py:80
msgid "停止HDFS集群进程-{}"
msgstr "Stop HDFS cluster process -{}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:83
msgid "启动HDFS集群ZK-{}"
msgstr "Start HDFS cluster ZK-{}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:97
msgid "启动HDFS集群JN-{}"
msgstr "Start HDFS cluster JN-{}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:112
msgid "启动HDFS集群NN-{}"
msgstr "Start HDFS cluster NN-{}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:121
msgid "启动HDFS集群ZKFC-{}"
msgstr "Start HDFS cluster ZKFC-{}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:125
msgid "启动HDFS集群NN服务-{}子流程"
msgstr "Start HDFS cluster NN service-{} sub-process"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_enable_flow.py:135
msgid "启动HDFS集群DN-{}"
msgstr "Start HDFS cluster DN-{}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_fake_apply_flow.py:86
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_apply_flow.py:154
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_fake_apply_flow.py:64
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:196
#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:238
#: backend/flow/engine/bamboo/scene/kafka/kafka_fake_apply_flow.py:106
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:449
#: backend/flow/engine/bamboo/scene/kafka/kafka_scale_up_flow.py:209
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:244
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:284
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:202
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_scale_up_flow.py:129
#: backend/flow/engine/bamboo/scene/spider/spider_add_mnt.py:95
#: backend/flow/engine/bamboo/scene/spider/spider_add_nodes.py:137
#: backend/flow/engine/bamboo/scene/spider/spider_add_nodes.py:176
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:389
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:622
#: backend/flow/engine/bamboo/scene/spider/spider_slave_cluster_deploy.py:101
msgid "更新DBMeta元信息"
msgstr "Update DBMeta meta information"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_fake_apply_flow.py:90
msgid "回写hdfs集群配置"
msgstr "Write back hdfs cluster configuration"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_reboot_flow.py:76
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_reboot_flow.py:76
msgid "重启实例-{}-{}"
msgstr "restart instance-{}-{}"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:65
msgid "集群DN替换-扩容DN"
msgstr "Cluster DN replacement - expansion DN"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:69
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_shrink_flow.py:62
msgid "集群DN替换-缩容DN"
msgstr "Cluster DN replacement - shrinking DN"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:146
msgid "没有需要替换的角色IP"
msgstr "There are no character IPs to replace"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_replace_flow.py:152
msgid "替换HDFS DataNode角色IP不一致"
msgstr "Inconsistent IP addresses for replacing HDFS DataNode roles"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:126
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:99
msgid "更新主机映射"
msgstr "Update host mapping"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:135
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:107
msgid "include增加数据节点"
msgstr "include to increase the data node"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:143
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:115
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:172
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:195
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:210
msgid "刷新节点配置"
msgstr "Refresh node configuration"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:175
#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:146
msgid "添加新DN到域名"
msgstr "Add new DN to domain name"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_scale_up_flow.py:181
msgid "元数据DBMeta更新及转移主机"
msgstr "Metadata DBMeta update and transfer host"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:63
msgid "添加DN获取机器信息"
msgstr "Add DN to get machine information"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:164
msgid "添加数据节点到exclude"
msgstr "Add data nodes to exclude"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:178
msgid "检查节点退役信息"
msgstr "Check node decommissioning information"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:187
msgid "include剔除数据节点"
msgstr "include removes data nodes"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:202
msgid "exclude剔除数据节点"
msgstr "exclude removes data nodes"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:230
msgid "更新haproxy实例信息"
msgstr "Update haproxy instance information"

#: backend/flow/engine/bamboo/scene/hdfs/hdfs_sub_flow.py:264
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:252
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_shrink_flow.py:108
msgid "DBMeta删除下架IP"
msgstr "DBMeta deletes the off-the-shelf IP"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_apply_flow.py:74
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:79
msgid "下发influxdb介质"
msgstr "Deliver influxdb media"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_apply_flow.py:80
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:87
#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:129
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:233
#: backend/flow/engine/bamboo/scene/kafka/kafka_scale_up_flow.py:159
msgid "初始化节点"
msgstr "initialize node"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_apply_flow.py:88
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:103
msgid "解压influxdb包"
msgstr "Unzip the influxdb package"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_apply_flow.py:113
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:130
msgid "安装influxdb-{}"
msgstr "install influxdb-{}"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_apply_flow.py:130
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:146
msgid "{}-初始化User"
msgstr "{} - Initialize User"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_apply_flow.py:146
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:162
msgid "安装telegraf-{}"
msgstr "install telegraf-{}"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_apply_flow.py:158
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_fake_apply_flow.py:68
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:200
msgid "回写influxdb集群配置"
msgstr "Write back the influxdb cluster configuration"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_destroy_flow.py:64
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_disable_flow.py:63
#: backend/flow/engine/bamboo/scene/influxdb/influxdb_enable_flow.py:63
msgid "下发influxdb actuator"
msgstr "Issue influxdb actuator"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_destroy_flow.py:79
msgid "清理Influxdb {}子流程"
msgstr "Clean up Influxdb{} subprocesses"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_disable_flow.py:77
msgid "禁用Influxdb {}子流程"
msgstr "disable influxdb{} subprocess"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_enable_flow.py:78
msgid "启用Influxdb {}子流程"
msgstr "enable influxdb{} subprocess"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:167
msgid "安装Influxdb {}子流程"
msgstr "install influxdb {} subprocess"

#: backend/flow/engine/bamboo/scene/influxdb/influxdb_replace_flow.py:191
msgid "下架Influxdb {}子流程"
msgstr "Delist Influxdb{} subprocess"

#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:123
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:227
#: backend/flow/engine/bamboo/scene/kafka/kafka_scale_up_flow.py:152
msgid "下发kafka介质"
msgstr "Send kafka media"

#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:137
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:241
#: backend/flow/engine/bamboo/scene/kafka/kafka_scale_up_flow.py:167
msgid "解压kafka包"
msgstr "Unzip the kafka package"

#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:173
msgid "初始化系统kafkaUser"
msgstr "Initialize the system kafkaUser"

#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:180
msgid "初始化kafkaUser"
msgstr "Initialize kafkaUser"

#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:194
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:346
#: backend/flow/engine/bamboo/scene/kafka/kafka_scale_up_flow.py:189
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:274
msgid "安装broker-{}"
msgstr "install broker-{}"

#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:207
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:369
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:224
msgid "安装kafka manager"
msgstr "install kafka-manager"

#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:220
#: backend/flow/engine/bamboo/scene/kafka/kafka_fake_apply_flow.py:100
msgid "插入manager实例信息"
msgstr "Insert manager instance information"

#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:232
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_apply_flow.py:163
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:197
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_scale_up_flow.py:123
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:192
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:370
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:376
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:609
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_enable_deploy.py:101
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_reset.py:203
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_ha_deploy.py:141
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_single_deploy.py:101
msgid "添加集群域名"
msgstr "Add cluster domain name"

#: backend/flow/engine/bamboo/scene/kafka/kafka_apply_flow.py:242
#: backend/flow/engine/bamboo/scene/kafka/kafka_fake_apply_flow.py:110
#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:332
msgid "回写kafka集群配置"
msgstr "Write back kafka cluster configuration"

#: backend/flow/engine/bamboo/scene/kafka/kafka_destroy_flow.py:75
#: backend/flow/engine/bamboo/scene/kafka/kafka_disable_flow.py:70
#: backend/flow/engine/bamboo/scene/kafka/kafka_enable_flow.py:70
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:129
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:218
msgid "下发dbacuator"
msgstr "Issue dbacuator"

#: backend/flow/engine/bamboo/scene/kafka/kafka_destroy_flow.py:89
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:200
msgid "清理Kafka {}子流程"
msgstr "Clean up Kafka{} subprocesses"

#: backend/flow/engine/bamboo/scene/kafka/kafka_destroy_flow.py:99
msgid "删除manager实例信息"
msgstr "Delete manager instance information"

#: backend/flow/engine/bamboo/scene/kafka/kafka_disable_flow.py:84
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:183
msgid "禁用Kafka {}子流程"
msgstr "Disable Kafka{} subprocess"

#: backend/flow/engine/bamboo/scene/kafka/kafka_enable_flow.py:84
msgid "启用Kafka {}子流程"
msgstr "Enable Kafka {} subprocess"

#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:280
msgid "增加zookeeper节点"
msgstr "Add zookeeper nodes"

#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:290
#, python-brace-format
msgid "滚动重启broker节点-{ip}"
msgstr "Rolling restart broker node -{ip}"

#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:301
msgid "移除zookeeper节点"
msgstr "Remove the zookeeper node"

#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:328
msgid "下架zookeeper-{}子流程"
msgstr "Remove zookeeper-{} sub-process"

#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:382
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:237
msgid "更新manager实例信息"
msgstr "Update manager instance information"

#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:395
msgid "更新集群域名"
msgstr "Update the cluster domain name"

#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:408
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:139
msgid "Kafka搬迁数据"
msgstr "Kafka migration data"

#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:418
#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:150
msgid "Kafka检查搬迁进度"
msgstr "Kafka checks the progress of the relocation"

#: backend/flow/engine/bamboo/scene/kafka/kafka_replace_flow.py:445
msgid "下架broker-{}子流程"
msgstr "Remove broker-{} sub-process"

#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:163
msgid "删除broker的域名记录"
msgstr "Delete the domain name record of the broker"

#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:170
msgid "停止进程"
msgstr "stop process"

#: backend/flow/engine/bamboo/scene/kafka/kafka_shrink_flow.py:188
msgid "清理数据"
msgstr "clean data"

#: backend/flow/engine/bamboo/scene/mongodb/mongodb_backup.py:114
msgid "MongoDB-备份-{}"
msgstr "MongoDB-Backup-{}"

#: backend/flow/engine/bamboo/scene/mongodb/mongodb_backup.py:119
#: backend/flow/engine/bamboo/scene/mongodb/mongodb_deinstall.py:49
#: backend/flow/engine/bamboo/scene/mongodb/mongodb_enable_disable.py:49
#: backend/flow/engine/bamboo/scene/mongodb/mongodb_install.py:85
#: backend/flow/engine/bamboo/scene/mongodb/mongodb_restore.py:161
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_increase_node.py:56
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_reduce_node.py:48
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_replace.py:64
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_scale.py:52
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/exec_script.py:45
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/increase_mongos.py:52
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/instance_restart.py:41
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/reduce_mongos.py:47
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_reduce_node.py:51
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_replace.py:53
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_scale.py:55
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_set_increase_node.py:56
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/user.py:43
msgid "MongoDB-介质下发"
msgstr "MongoDB-media delivery"

#: backend/flow/engine/bamboo/scene/mongodb/mongodb_deinstall.py:55
#: backend/flow/engine/bamboo/scene/mongodb/mongodb_enable_disable.py:55
#: backend/flow/engine/bamboo/scene/mongodb/mongodb_install.py:91
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_increase_node.py:62
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_reduce_node.py:54
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_replace.py:70
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_scale.py:58
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/exec_script.py:63
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/increase_mongos.py:58
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/instance_restart.py:47
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/reduce_mongos.py:53
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_reduce_node.py:57
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_replace.py:59
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_scale.py:61
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_set_increase_node.py:62
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/user.py:49
msgid "MongoDB-创建原子任务执行目录"
msgstr "MongoDB-Create atomic task execution directory"

#: backend/flow/engine/bamboo/scene/mongodb/mongodb_fake_install.py:93
#: backend/flow/engine/bamboo/scene/mongodb/mongodb_install.py:214
msgid "MongoDB--添加关系到meta"
msgstr "MongoDB--Add relationship to meta"

#: backend/flow/engine/bamboo/scene/mongodb/mongodb_install.py:97
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_increase_node.py:68
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_replace.py:76
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_scale.py:64
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/increase_mongos.py:64
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_replace.py:65
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_scale.py:67
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_set_increase_node.py:68
msgid "MongoDB-机器初始化"
msgstr "MongoDB-machine initialization"

#: backend/flow/engine/bamboo/scene/mongodb/mongodb_install.py:139
msgid "MongoDB--添加复制集{}-{}关系到meta"
msgstr "MongoDB--Add replica set {}-{} related to meta"

#: backend/flow/engine/bamboo/scene/mongodb/mongodb_install.py:165
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_install.py:76
msgid "MongoDB--获取管理员用户密码"
msgstr "MongoDB--get administrator user password"

#: backend/flow/engine/bamboo/scene/mongodb/mongodb_install.py:206
msgid "MongoDB--添加shards到cluster"
msgstr "MongoDB--Add shards to cluster"

#: backend/flow/engine/bamboo/scene/mongodb/mongodb_install.py:221
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/increase_mongos.py:100
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_install.py:121
msgid "MongoDB--添加domain到dns"
msgstr "MongoDB--Add domain to dns"

#: backend/flow/engine/bamboo/scene/mongodb/mongodb_install_dbmon.py:97
msgid "dbmon-{}"
msgstr "dbmon-{}"

#: backend/flow/engine/bamboo/scene/mongodb/mongodb_install_dbmon.py:102
msgid "CpFile: actuator+dbmon+dbtools+toolkit"
msgstr "CpFile: actuator+dbmon+dbtools+toolkit"

#: backend/flow/engine/bamboo/scene/mongodb/mongodb_remove_ns.py:93
msgid "清档-{}"
msgstr "Clear files-{}"

#: backend/flow/engine/bamboo/scene/mongodb/mongodb_remove_ns.py:98
msgid "MongoDB-介质下发({}个IP)"
msgstr "MongoDB-media delivery ({} IPs)"

#: backend/flow/engine/bamboo/scene/mongodb/mongodb_restore.py:128
msgid "下载备份文件-{}"
msgstr "Download backup file-{}"

#: backend/flow/engine/bamboo/scene/mongodb/mongodb_restore.py:137
msgid "执行回档命令-{}"
msgstr "Execute rollback command-{}"

#: backend/flow/engine/bamboo/scene/mongodb/mongodb_restore.py:150
msgid "MongoDB-预处理"
msgstr "MongoDB-preprocessing"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/backup.py:60
msgid "oplog为True时, 不支持partial备份"
msgstr "When oplog is True, partial backup is not supported."

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/backup.py:110
msgid "MongoDB-备份-[{}:{}]"
msgstr "MongoDB-Backup-[{}:{}]"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_enable_disable.py:59
msgid "MongoDB-{}:{}-mongod开启进程"
msgstr "MongoDB-{}:{}-mongod starts the process"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_enable_disable.py:72
msgid "MongoDB-{}:{}-mongos开启进程"
msgstr "MongoDB-{}:{}-mongos starts the process"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_enable_disable.py:91
msgid "MongoDB-{}:{}-mongod关闭进程"
msgstr "MongoDB-{}:{}-mongod shutdown process"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_enable_disable.py:109
msgid "MongoDB-{}:{}-mongos关闭进程"
msgstr "MongoDB-{}:{}-mongos shutdown process"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_enable_disable.py:119
msgid "修改meta"
msgstr "Modify meta"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_enable_disable.py:124
msgid "MongoDB--cluster-{}"
msgstr "MongoDB--cluster-{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_increase_node.py:107
msgid "MongoDB--{}增加节点"
msgstr "MongoDB--{}add node"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_reduce_node.py:82
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_reduce_node.py:73
msgid "MongoDB--{}减少节点"
msgstr "MongoDB--{}reduce nodes"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_replace.py:120
msgid "MongoDB-{}-mongos修改参数"
msgstr "MongoDB-{}-mongos modify parameters"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_replace.py:144
msgid "MongoDB-mongos修改meta"
msgstr "MongoDB-mongos modify meta"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_replace.py:146
msgid "MongoDB--cluster整机替换"
msgstr "MongoDB--cluster whole machine replacement"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/cluster_scale.py:81
msgid "MongoDB--cluster:{}容量变更"
msgstr "MongoDB--cluster:{} capacity change"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/deinstall.py:39
msgid "MongoDB-{}-{}卸载"
msgstr "MongoDB-{}-{}Uninstall"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/deinstall.py:114
msgid "MongoDB-删除域名"
msgstr "MongoDB-delete domain name"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/deinstall.py:122
msgid "MongoDB-删除密码"
msgstr "MongoDB - remove password"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/deinstall.py:131
msgid "MongoDB-删除db_meta关系"
msgstr "MongoDB - delete db_meta relationship"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/deinstall.py:136
msgid "MongoDB--卸载--cluster_id:{}"
msgstr "MongoDB--uninstall--cluster_id:{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/download_subtask.py:71
msgid "下载备份文件 {} {}"
msgstr "Download backup file{} {}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/exec_script.py:70
msgid "MongoDB-cluster_id:{}-执行脚本"
msgstr "MongoDB-cluster_id:{}-Execute script"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/exec_script.py:76
msgid "MongoDB--执行脚本--cluster_id:{}-{}"
msgstr "MongoDB--Execute script--cluster_id:{}-{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/increase_mongod.py:94
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_install.py:54
msgid "MongoDB-{}-mongod安装"
msgstr "MongoDB-{}-mongod installation"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/increase_mongod.py:102
msgid "MongoDB-添加node"
msgstr "MongoDB-add node"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/increase_mongod.py:111
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/mongod_replace.py:148
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/mongos_replace.py:105
msgid "MongoDB-添加新实例的domain到dns"
msgstr "MongoDB-Add the domain of the new instance to dns"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/increase_mongod.py:126
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/mongod_replace.py:176
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/mongos_replace.py:133
msgid "MongoDB-保存新实例的dba用户及额外管理用户密码"
msgstr "MongoDB-save the dba user and additional administrative user passwords for the new instance"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/increase_mongod.py:132
msgid "MongoDB--{}增加node{}:{}"
msgstr "MongoDB--{}Add node{}:{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/increase_mongos.py:108
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/reduce_mongos.py:88
msgid "MongoDB--修改meta"
msgstr "MongoDB--Modify meta"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/increase_mongos.py:113
msgid "MongoDB--{}增加mongos"
msgstr "MongoDB--{}add mongos"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/install_dbmon_sub.py:105
msgid "node-{}"
msgstr "node-{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/install_dbmon_sub.py:169
msgid "prepare_instance_info:{} ip"
msgstr "prepare_instance_info:{} ip"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/instance_restart.py:63
msgid "MongoDB-cluster_id:{}-ip:{}-port:{}--重启实例"
msgstr "MongoDB-cluster_id:{}-ip:{}-port:{}--Restart the instance"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/instance_restart.py:71
msgid "MongoDB--重启实例--ip:{}"
msgstr "MongoDB--restart instance--ip:{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/migrate_meta.py:46
msgid "检查cluster目标端是否存在"
msgstr "Check if the cluster target exists"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/migrate_meta.py:51
msgid "检查目标端机器规格"
msgstr "Check target machine specifications"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/migrate_meta.py:59
msgid "保存配置"
msgstr "storage arrangement"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/migrate_meta.py:63
msgid "更新dba"
msgstr "updatedba"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/migrate_meta.py:68
msgid "迁移meta"
msgstr "Migrate meta"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/migrate_meta.py:75
msgid "保存密码"
msgstr "save password"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/migrate_meta.py:79
msgid "更新dns的app"
msgstr "Update dns app"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/migrate_meta.py:95
msgid "添加clb到meta"
msgstr "Add clb to meta"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/migrate_meta.py:102
msgid "MongoDB--{}-meta迁移-{}-{}"
msgstr "MongoDB--{}-meta migration-{}-{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/mongod_replace.py:130
msgid "MongoDB-mongod安装-{}:{}"
msgstr "MongoDB-mongod installation-{}:{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/mongod_replace.py:138
msgid "MongoDB-mongod替换"
msgstr "MongoDB-mongod replacement"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/mongod_replace.py:155
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/mongos_replace.py:112
msgid "MongoDB-删除老实例的domain指向"
msgstr "MongoDB-Delete the domain point of the old instance"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/mongod_replace.py:183
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/mongos_replace.py:140
msgid "MongoDB-删除老实例的dba用户及额外管理用户密码"
msgstr "MongoDB-Delete the dba user and additional management user password of the old instance"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/mongod_replace.py:192
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_replace.py:109
msgid "MongoDB-mongod修改meta"
msgstr "MongoDB-mongod modifies meta"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/mongod_replace.py:204
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/mongos_replace.py:153
msgid "MongoDB-老实例下架-{}:{}"
msgstr "MongoDB-old instance removed-{}:{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/mongod_replace.py:210
msgid "MongoDB--mongod替换--{}:{}"
msgstr "MongoDB--mongod replacement--{}:{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/mongos_install.py:44
msgid "MongoDB-{}-mongos安装"
msgstr "MongoDB-{}-mongos installation"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/mongos_install.py:66
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_install.py:102
msgid "MongoDB--保存dba用户及额外管理用户密码"
msgstr "MongoDB--save dba user and additional management user passwords"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/mongos_install.py:75
msgid "MongoDB--安装mongos--{}-{}"
msgstr "MongoDB--Install mongos--{}-{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/mongos_replace.py:96
msgid "MongoDB-mongos安装-{}:{}"
msgstr "MongoDB-mongos installation-{}:{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/mongos_replace.py:158
msgid "MongoDB--mongos替换--{}:{}"
msgstr "MongoDB--mongos replacement--{}:{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/multi_replicaset_migrate_meta.py:47
msgid "MongoDB--复制集迁移元数据"
msgstr "MongoDB--replication set migration metadata"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/reduce_mongod.py:80
msgid "MongoDB-移除node"
msgstr "MongoDB-remove node"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/reduce_mongod.py:90
msgid "MongoDB-{}-mongod下架"
msgstr "MongoDB-{}-mongod removed from shelves"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/reduce_mongod.py:99
msgid "MongoDB-删除node的domain指向"
msgstr "MongoDB-Delete the domain pointed to by the node"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/reduce_mongod.py:107
msgid "MongoDB-删除node的dba用户及额外管理用户密码"
msgstr "MongoDB-Delete the node&#39;s dba user and additional management user password"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/reduce_mongod.py:115
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_set_increase_node_by_ip.py:81
msgid "MongoDB-修改meta"
msgstr "MongoDB-modify meta"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/reduce_mongod.py:121
msgid "MongoDB--{}减少node{}:{}"
msgstr "MongoDB--{}Reduce node{}:{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/reduce_mongos.py:93
msgid "MongoDB--{}减少mongos"
msgstr "MongoDB--{}reduce mongos"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/remove_ns.py:93
msgid "清档 {} {}"
msgstr "Clear files {} {}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_install.py:64
msgid "MongoDB-{}-replicaset初始化"
msgstr "MongoDB-{}-replicaset initialization"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_install.py:82
msgid "MongoDB--创建dba用户"
msgstr "MongoDB--Create dba user"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_install.py:88
msgid "MongoDB--创建额外管理用户"
msgstr "MongoDB--Create additional administrative users"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_install.py:112
msgid "MongoDB-{}-db初始设置"
msgstr "MongoDB-{}-db initial setup"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_install.py:130
msgid "MongoDB--安装复制集--{}-{}"
msgstr "MongoDB--Install replica set--{}-{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_replace.py:95
msgid "MongoDB-mongod修改meta-port:{}"
msgstr "MongoDB-mongod modifies meta-port:{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_replace.py:112
msgid "MongoDB--{}整机替换--ip:{}"
msgstr "MongoDB--{} whole machine replacement--ip:{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_scale.py:96
msgid "MongoDB--{}容量变更"
msgstr "MongoDB--{} capacity change"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_set_increase_node.py:87
#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_set_increase_node_by_ip.py:86
msgid "MongoDB--{}增加node"
msgstr "MongoDB--{}add node"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/replicaset_set_increase_node_by_ip.py:70
msgid "MongoDB-修改meta-{}:{}"
msgstr "MongoDB-modify meta-{}:{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/restore_sub.py:92
msgid "{} {}"
msgstr "{} {}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/user.py:55
msgid "MongoDB-cluster_id:{}-创建用户:{}"
msgstr "MongoDB-cluster_id:{}-Create user:{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/user.py:57
msgid "MongoDB--创建用户--cluster_id:{}-{}"
msgstr "MongoDB--Create user--cluster_id:{}-{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/user.py:60
msgid "MongoDB-cluster_id:{}-删除用户:{}"
msgstr "MongoDB-cluster_id:{}-Delete user:{}"

#: backend/flow/engine/bamboo/scene/mongodb/sub_task/user.py:62
msgid "MongoDB--删除用户--cluster_id:{}-{}"
msgstr "MongoDB--delete user--cluster_id:{}-{}"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:110
msgid "执行ip信息为空"
msgstr "The execution ip information is empty"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:129
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:125
#: backend/flow/engine/bamboo/scene/mysql/mysql_push_peripheral_config.py:99
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:168
#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:98
msgid "下发MySQL周边程序介质"
msgstr "Distribute MySQL peripheral program media"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:196
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:157
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:184
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_remote_flow.py:190
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:164
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:161
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:226
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:490
#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_migrate.py:200
#: backend/flow/engine/bamboo/scene/spider/remote_slave_recover.py:168
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:200
#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:212
#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:642
#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:130
msgid "安装backup-client工具"
msgstr "Install backup-client tool"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:210
msgid "安装MySql周边程序"
msgstr "Install MySql peripheral program"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:229
msgid "Master[{}]安装rotate_binlog程序"
msgstr "Master[{}] installs the rotate_binlog program"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:245
msgid "Master[{}]安装mysql-monitor"
msgstr "Master[{}] install mysql-monitor"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:262
msgid "Master[{}]安装备份程序"
msgstr "Master[{}] install backup program"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:281
msgid "Master[{}]安装校验程序"
msgstr "Master[{}] installs the verification program"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:298
msgid "Master[{}]安装DBATools工具箱"
msgstr "Master[{}] installs the DBATools toolbox"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:330
msgid "Slave[{}]安装rotate_binlog程序"
msgstr "Slave[{}] installs the rotate_binlog program"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:346
msgid "Slave[{}]安装mysql-monitor"
msgstr "Slave[{}] install mysql-monitor"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:363
msgid "Slave[{}]安装备份程序"
msgstr "Slave[{}] install backup program"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:382
msgid "Slave[{}]安装校验程序"
msgstr "Slave[{}] installation verification program"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:399
msgid "Slave[{}]安装DBATools工具箱"
msgstr "Slave[{}] installs the DBATools toolbox"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:424
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:274
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:320
msgid "Proxy安装mysql-monitor"
msgstr "Proxy install mysql-monitor"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:471
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:213
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:524
#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:263
#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:417
msgid "新增repl帐户"
msgstr "Add repl account"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:491
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:222
#: backend/flow/engine/bamboo/scene/redis/redis_twemproxy_cluster_apply_flow.py:223
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:539
#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:278
msgid "建立主从关系"
msgstr "Establish a master-slave relationship"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:503
msgid "建立主从同步[{}]"
msgstr "Create master-slave synchronization[{}]"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:570
msgid "获取旧实例系统参数"
msgstr "Get the old instance system parameters"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:592
#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:610
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:132
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:219
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:480
msgid "下发MySQL介质包"
msgstr "Deliver the MySQL media package"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:631
msgid "部署mysql-crond {}"
msgstr "deploy mysql-crond {}"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:648
msgid "安装MySQL实例 {}"
msgstr "Install MySQL instance {}"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:655
msgid "安装mysql实例flow"
msgstr "Install mysql instance flow"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:679
msgid "构建子流程失败，联系系统管理员, check_client_conn_inst is null"
msgstr "Failed to build subprocess, contact system administrator, check_client_conn_inst is null"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:681
msgid "构建子流程失败，联系系统管理员, verify_checksum_tuples is null"
msgstr "Failed to build subprocess, contact system administrator, verify_checksum_tuples is null"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:687
msgid "检测客户端连接情况"
msgstr "Check client connection status"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:701
msgid "检测checksum结果"
msgstr "Detect checksum results"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:718
msgid "[{}]预检测"
msgstr "[{}]Pre-detection"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:742
msgid ""
"构建init_machine_sub子流程失败，联系系统管理员, sys_init_ips & "
"init_check_ips & yum_install_perl_ips is null"
msgstr "Failed to build the init_machine_sub sub-process, contact the system administrator, sys_init_ips &amp; init_check_ips &amp; yum_install_perl_ips is null"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:752
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:88
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_out_flow.py:85
#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:120
msgid "空闲检查[{}]"
msgstr "Idle check[{}]"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:787
msgid "安装MySQL Perl相关依赖"
msgstr "Install MySQL Perl related dependencies"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:810
#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:832
msgid "获取机器系统信息"
msgstr "Get machine system information"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:822
msgid "更新主机system info"
msgstr "Update host system info"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:864
msgid "修改{}上实例的的my.cnf配置"
msgstr "Modify the my.cnf configuration of the instance on {}"

#: backend/flow/engine/bamboo/scene/mysql/common/common_sub_flow.py:877
msgid "同步修改my.cnf配置"
msgstr "Synchronously modify the my.cnf configuration"

#: backend/flow/engine/bamboo/scene/mysql/common/exceptions.py:17
msgid "Flow模块TenDB 异常"
msgstr "Flow module TenDB exception"

#: backend/flow/engine/bamboo/scene/mysql/common/exceptions.py:28
#: backend/flow/engine/bamboo/scene/redis/common/exceptions.py:28
#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:52
msgid "获取备份失败"
msgstr "Failed to get backup"

#: backend/flow/engine/bamboo/scene/mysql/common/exceptions.py:34
#: backend/flow/engine/bamboo/scene/redis/common/exceptions.py:34
#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:58
msgid "获取binlog失败"
msgstr "Failed to obtain binlog"

#: backend/flow/engine/bamboo/scene/mysql/common/get_binlog_backup.py:26
msgid "备份时间点:{} 大于 回滚时间点:{}"
msgstr "Backup time point: {} is greater than rollback time point: {}"

#: backend/flow/engine/bamboo/scene/mysql/common/get_binlog_backup.py:54
msgid "原备份节点节点{} 的binlog失败"
msgstr "The binlog of the original backup node node {} failed"

#: backend/flow/engine/bamboo/scene/mysql/common/get_local_backup.py:109
msgid "使用的备份信息: {}"
msgstr "Backup information used: {}"

#: backend/flow/engine/bamboo/scene/mysql/common/master_and_slave_switch.py:111
msgid "给master添加切换临时账号"
msgstr "Add and switch temporary account to master"

#: backend/flow/engine/bamboo/scene/mysql/common/master_and_slave_switch.py:119
msgid "给新slave添加切换临时账号"
msgstr "Add and switch temporary account to new slave"

#: backend/flow/engine/bamboo/scene/mysql/common/master_and_slave_switch.py:141
msgid "新master克隆旧master权限,新slave克隆旧slave权限"
msgstr "The new master clones the old master&#39;s permissions, and the new slave clones the old slave&#39;s permissions"

#: backend/flow/engine/bamboo/scene/mysql/common/master_and_slave_switch.py:164
#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:305
msgid "执行集群切换"
msgstr "Perform a cluster switchover"

#: backend/flow/engine/bamboo/scene/mysql/common/master_and_slave_switch.py:179
msgid "其余slave节点同步新master数据"
msgstr "The rest of the slave nodes synchronize the new master data"

#: backend/flow/engine/bamboo/scene/mysql/common/master_and_slave_switch.py:189
msgid "回收旧slave的域名映射"
msgstr "Recycle the domain name mapping of the old slave"

#: backend/flow/engine/bamboo/scene/mysql/common/master_and_slave_switch.py:207
msgid "对新slave添加域名映射"
msgstr "Add domain name mapping to new slave"

#: backend/flow/engine/bamboo/scene/mysql/common/master_and_slave_switch.py:223
#: backend/flow/engine/bamboo/scene/mysql/mysql_master_fail_over.py:195
#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:340
msgid "联动TBinlogDumper切换单据"
msgstr "Linkage TBinlogDumper to switch documents"

#: backend/flow/engine/bamboo/scene/mysql/common/master_and_slave_switch.py:236
msgid "{}集群执行成对切换"
msgstr "{} cluster performs pairwise switchover"

#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:63
msgid "获取集群 {} 的本地备份信息失败"
msgstr "Failed to obtain local backup information for cluster {}"

#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:73
#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:187
#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:287
#: backend/flow/engine/bamboo/scene/mysql/common/recover_slave_instance.py:92
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:154
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:307
#: backend/flow/engine/bamboo/scene/spider/spider_recover.py:46
#: backend/flow/engine/bamboo/scene/spider/spider_recover.py:150
#: backend/flow/engine/bamboo/scene/spider/spider_remote_node_migrate.py:67
msgid "创建目录 {}"
msgstr "create directory{}"

#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:79
#: backend/flow/engine/bamboo/scene/mysql/common/recover_slave_instance.py:98
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:333
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_remote_flow.py:326
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:297
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:272
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:393
#: backend/flow/engine/bamboo/scene/spider/remote_local_slave_recover.py:100
#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_migrate.py:370
#: backend/flow/engine/bamboo/scene/spider/remote_slave_recover.py:339
#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:377
msgid "下发db-actor到节点{}"
msgstr "Send db-actor to node {}"

#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:94
#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:308
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_sub_flow.py:194
msgid "本地备份文件下载"
msgstr "Local backup file download"

#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:118
#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:216
#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:351
#: backend/flow/engine/bamboo/scene/mysql/common/recover_slave_instance.py:136
#: backend/flow/engine/bamboo/scene/spider/spider_remote_node_migrate.py:142
msgid "恢复新从节点数据 {}:{}"
msgstr "Restore new slave node data{}:{}"

#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:133
#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:367
#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:395
#: backend/flow/engine/bamboo/scene/mysql/common/recover_slave_instance.py:151
#: backend/flow/engine/bamboo/scene/spider/spider_remote_node_migrate.py:158
#: backend/flow/engine/bamboo/scene/spider/spider_remote_node_migrate.py:186
msgid "新增repl帐户{}"
msgstr "add repl account{}"

#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:146
msgid "建立主从关系 {}:{}"
msgstr "Establish master-slave relationship{}:{}"

#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:150
msgid "用本地备份恢复数据{}"
msgstr "Restore data using local backup{}"

#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:177
#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:277
#: backend/flow/engine/bamboo/scene/mysql/common/recover_slave_instance.py:72
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_remote_flow.py:227
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_sub_flow.py:52
#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_migrate.py:139
#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:119
msgid "获取集群 {} 的备份信息失败"
msgstr "Failed to obtain backup information of cluster {}"

#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:197
msgid "下载备份到{}"
msgstr "Download backup to {}"

#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:243
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_sub_flow.py:108
msgid "下载定点恢复的binlog到{}"
msgstr "Download the binlog of fixed-point recovery to {}"

#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:251
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_sub_flow.py:115
msgid "定点恢复之前滚binlog{}"
msgstr "Roll binlog{} before fixed-point recovery"

#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:256
msgid "用本地备份恢复数据{}:{}"
msgstr "Restore data using local backup{}:{}"

#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:293
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:296
#: backend/flow/engine/bamboo/scene/spider/spider_remote_node_migrate.py:73
msgid "下发db-actor到节点"
msgstr "Send db-actor to the node"

#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:334
#: backend/flow/engine/bamboo/scene/spider/spider_remote_node_migrate.py:125
msgid "恢复新主节点数据 {}:{}"
msgstr "Restore new master node data{}:{}"

#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:382
#: backend/flow/engine/bamboo/scene/spider/spider_remote_node_migrate.py:173
msgid "建立主从关系:新从库指向新主库 {} {}:"
msgstr "Establish a master-slave relationship: the new slave library points to the new master library {} {}:"

#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:409
#: backend/flow/engine/bamboo/scene/mysql/common/recover_slave_instance.py:165
#: backend/flow/engine/bamboo/scene/spider/spider_remote_node_migrate.py:200
msgid "建立主从关系:新主库指向旧主库 {}:{}"
msgstr "Establish a master-slave relationship: the new master library points to the old master library {}:{}"

#: backend/flow/engine/bamboo/scene/mysql/common/mysql_resotre_data_sub_flow.py:413
#: backend/flow/engine/bamboo/scene/spider/spider_remote_node_migrate.py:204
msgid "RemoteDB主从节点成对迁移子流程{}"
msgstr "RemoteDB master-slave node pair migration sub-process{}"

#: backend/flow/engine/bamboo/scene/mysql/common/recover_slave_instance.py:78
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_rollback_flow.py:185
msgid "获取remotedb分片 {} 的备份信息不存在"
msgstr "Obtaining the backup information of remotedb fragment {} does not exist"

#: backend/flow/engine/bamboo/scene/mysql/common/recover_slave_instance.py:80
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_rollback_flow.py:187
msgid "获取remotedb分片 {} 的备份信息为空"
msgstr "Obtaining the backup information of remotedb fragment {} is empty"

#: backend/flow/engine/bamboo/scene/mysql/common/recover_slave_instance.py:120
#: backend/flow/engine/bamboo/scene/spider/spider_remote_node_migrate.py:97
#: backend/flow/engine/bamboo/scene/spider/spider_remote_node_migrate.py:105
msgid "下载全库备份介质到 {}"
msgstr "Download full database backup media to {}"

#: backend/flow/engine/bamboo/scene/mysql/common/recover_slave_instance.py:170
msgid "{}:{}从节点重建"
msgstr "{}:{}Rebuild from node"

#: backend/flow/engine/bamboo/scene/mysql/common/slave_recover_switch.py:54
#: backend/flow/engine/bamboo/scene/mysql/dbconsole.py:59
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_destroy_flow.py:119
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_disable_flow.py:116
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:136
#: backend/flow/engine/bamboo/scene/mysql/mysql_master_fail_over.py:93
#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:202
#: backend/flow/engine/bamboo/scene/mysql/mysql_open_area_flow.py:219
#: backend/flow/engine/bamboo/scene/mysql/mysql_open_area_flow.py:317
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:192
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:207
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:376
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_destroy_flow.py:104
#: backend/flow/engine/bamboo/scene/mysql/pt_table_sync.py:82
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:602
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:777
#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_swtich.py:113
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_destroy.py:126
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_disable_deploy.py:124
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:179
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_sql_execute.py:99
#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:158
#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:109
msgid "下发db-actuator介质"
msgstr "Deliver db-actuator media"

#: backend/flow/engine/bamboo/scene/mysql/common/slave_recover_switch.py:86
msgid "新从库加入checksum记录 {}"
msgstr "Add checksum record {} to the new slave library"

#: backend/flow/engine/bamboo/scene/mysql/common/slave_recover_switch.py:118
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:529
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:495
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:826
msgid "克隆权限"
msgstr "Clone permissions"

#: backend/flow/engine/bamboo/scene/mysql/common/slave_recover_switch.py:128
msgid "先添加新从库域名{}:{}"
msgstr "First add the new slave domain name {}:{}"

#: backend/flow/engine/bamboo/scene/mysql/common/slave_recover_switch.py:144
msgid "再删除旧从库域名{}"
msgstr "Then delete the old slave domain name {}"

#: backend/flow/engine/bamboo/scene/mysql/common/slave_recover_switch.py:154
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:837
msgid "[{}]成对切换"
msgstr "[{}] Switch in pairs"

#: backend/flow/engine/bamboo/scene/mysql/common/uninstall_instance.py:40
#: backend/flow/engine/bamboo/scene/spider/spider_remote_node_migrate.py:222
msgid "卸载MySQL实例:{}:{}"
msgstr "Uninstall the MySQL instance: {}:{}"

#: backend/flow/engine/bamboo/scene/mysql/common/uninstall_instance.py:53
#: backend/flow/engine/bamboo/scene/spider/spider_remote_node_migrate.py:236
msgid "Remote node {} 卸载整机实例"
msgstr "Remote node {} uninstalls the entire instance"

#: backend/flow/engine/bamboo/scene/mysql/dbconsole.py:71
msgid "运行数据导出任务"
msgstr "Run data export task"

#: backend/flow/engine/bamboo/scene/mysql/dbconsole.py:107
#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:246
msgid "查询不到可执行的实例！！！"
msgstr "Executable instance could not be found! ! !"

#: backend/flow/engine/bamboo/scene/mysql/dbconsole.py:136
msgid "DRS查询主从延迟失败：{}"
msgstr "DRS query master-slave delay failed: {}"

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:89
#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:91
msgid "下发db-actuator介质[云区域ID:{}]"
msgstr "Deliver db-actuator media [cloud area ID: {}]"

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:102
#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:104
msgid "下发SQL文件[云区域ID:{}]"
msgstr "Send SQL file [cloud area ID: {}]"

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:129
#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:128
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_sql_execute.py:152
msgid "执行SQL导入"
msgstr "Execute SQL import"

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:142
#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:141
msgid "[{}]执行SQL变更"
msgstr "[{}] Execute SQL Alteration"

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:156
msgid "查询不到可执行的集群！！！"
msgstr "No executable cluster found! ! !"

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:181
#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:167
msgid "给模板集群下发db-actuator"
msgstr "Deliver db-actuator to the template cluster"

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:193
#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:179
msgid "备份测试库表结构"
msgstr "Backup test database table structure"

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:206
#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:192
msgid "对SQL文件进行语义测试"
msgstr "Semantic testing of SQL files"

#: backend/flow/engine/bamboo/scene/mysql/import_sqlfile_flow.py:226
#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:210
msgid "创建SQL执行单据"
msgstr "Create SQL execution tickets"

#: backend/flow/engine/bamboo/scene/mysql/mysql_authorize_rules.py:42
#: backend/flow/engine/bamboo/scene/mysql/mysql_open_area_flow.py:293
msgid "添加mysql规则授权"
msgstr "Add mysql rule authorization"

#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:126
msgid "检查元数据信息是否存在主备关系"
msgstr ""
"Check whether the metadata information has a master-backup relationship"

#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:131
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_check_repair.py:58
#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:137
#: backend/flow/plugins/components/collections/common/sleep_time_service.py:97
#: backend/ticket/constants.py:475
msgid "定时"
msgstr "timing"

#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:149
msgid "创建临时用户"
msgstr "create temporary user"

#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:168
#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:178
msgid "actuator执行checksum"
msgstr "Actuator executes checksum"

#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:191
#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:200
msgid "删除临时用户"
msgstr "delete temporary user"

#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:210
#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:219
msgid "生成校验报告"
msgstr "Generate verification report"

#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:216
msgid "master[{}{}{}],slave[{}{}{}]的校验结果"
msgstr "Check result of master[{}{}{}],slave[{}{}{}]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:229
msgid "master[{}{}{}]的校验任务"
msgstr "Verification task of master[{}{}{}]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_checksum.py:235
#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:251
msgid "构建checksum流程成功"
msgstr "Build the checksum process successfully"

#: backend/flow/engine/bamboo/scene/mysql/mysql_clone_rules.py:41
msgid "添加mysql权限克隆"
msgstr "Add mysql permission to clone"

#: backend/flow/engine/bamboo/scene/mysql/mysql_data_migrate_flow.py:64
#: backend/flow/engine/bamboo/scene/mysql/mysql_open_area_flow.py:86
msgid "集群实例类型不适用于开区"
msgstr "Cluster instance type is not applicable to open zones"

#: backend/flow/engine/bamboo/scene/mysql/mysql_data_migrate_flow.py:144
msgid "下发db_actuator介质"
msgstr "Deliver db_actuator media"

#: backend/flow/engine/bamboo/scene/mysql/mysql_data_migrate_flow.py:157
msgid "从源实例{}#{}获取库"
msgstr "Get library from source instance {}#{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_data_migrate_flow.py:176
msgid "下发库表文件到目标实例"
msgstr "Deliver database table files to the target instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_data_migrate_flow.py:194
msgid "向目标实例:{}#{}导入库"
msgstr "Import the library into the target instance:{}#{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_data_migrate_flow.py:210
msgid "数据迁移流程"
msgstr "Data migration process"

#: backend/flow/engine/bamboo/scene/mysql/mysql_edit_config_flow.py:67
msgid "下发db-actor到集群主从节点{}"
msgstr "Send db-actor to the master and slave nodes of the cluster {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_edit_config_flow.py:82
msgid "修改mysql实例配置{}"
msgstr "Modify the mysql instance configuration {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_edit_config_flow.py:97
msgid "开始修改mysql配置"
msgstr "Start to modify the mysql configuration"

#: backend/flow/engine/bamboo/scene/mysql/mysql_fake_sql_semantic_check.py:42
msgid "串行1"
msgstr "serial 1"

#: backend/flow/engine/bamboo/scene/mysql/mysql_fake_sql_semantic_check.py:43
msgid "串行2"
msgstr "serial 2"

#: backend/flow/engine/bamboo/scene/mysql/mysql_fake_sql_semantic_check.py:44
msgid "串行3"
msgstr "Serial 3"

#: backend/flow/engine/bamboo/scene/mysql/mysql_fake_sql_semantic_check.py:48
msgid "并行1"
msgstr "Parallel 1"

#: backend/flow/engine/bamboo/scene/mysql/mysql_fake_sql_semantic_check.py:53
msgid "并行2"
msgstr "Parallel 2"

#: backend/flow/engine/bamboo/scene/mysql/mysql_fake_sql_semantic_check.py:58
msgid "错误并行3"
msgstr "error parallel 3"

#: backend/flow/engine/bamboo/scene/mysql/mysql_fake_sql_semantic_check.py:65
msgid "串行结束"
msgstr "end of serial"

#: backend/flow/engine/bamboo/scene/mysql/mysql_flashback_flow.py:80
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_flashback.py:114
msgid "获取回档库表"
msgstr "Get the archive table"

#: backend/flow/engine/bamboo/scene/mysql/mysql_flashback_flow.py:87
#: backend/flow/plugins/components/collections/spider/check_cluster_table_using_sub.py:39
msgid "检查库表是否在用"
msgstr "Check if the library table is in use"

#: backend/flow/engine/bamboo/scene/mysql/mysql_flashback_flow.py:93
msgid "下发db-actor到集群主节点{}"
msgstr "Send db-actor to the cluster master node {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_flashback_flow.py:110
msgid "flashback启动恢复数据中{}"
msgstr "flashback starts restoring data {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_flashback_flow.py:122
msgid "flash开始恢复数据"
msgstr "flash starts to restore data"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:145
msgid "下发Proxy介质包"
msgstr "Deliver the proxy media package"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:164
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:226
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:291
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:159
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:168
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_apply_flow.py:145
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:125
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:272
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:253
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:514
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:294
#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:213
msgid "部署mysql-crond"
msgstr "Deploy mysql-crond"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:178
msgid "安装proxy实例"
msgstr "Install proxy instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:188
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_apply_flow.py:152
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:267
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:528
msgid "安装MySQL实例"
msgstr "Install MySQL instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:233
msgid "proxy配置后端实例"
msgstr "proxy configuration backend instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:243
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_enable_flow.py:98
msgid "添加主集群域名"
msgstr "Add the main cluster domain name"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:255
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_enable_flow.py:117
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_enable_deploy.py:119
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_reset.py:219
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_ha_deploy.py:153
msgid "添加从集群域名"
msgstr "Add slave cluster domain name"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:270
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:426
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:662
msgid "{}集群部署"
msgstr "{} cluster deployment"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_apply_flow.py:310
msgid "部署MySQL高可用集群"
msgstr "Deploy MySQL HA Cluster"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_db_table_backup.py:100
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_full_backup_flow.py:94
msgid "{} standby slave 不存在"
msgstr "{} standby slave does not exist"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_db_table_backup.py:121
msgid "构造mydumper正则"
msgstr "Construct mydumper regular"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_db_table_backup.py:127
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:170
msgid "检查正则匹配"
msgstr "Check for regular matches"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_db_table_backup.py:145
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_full_backup_flow.py:128
msgid "执行库表备份"
msgstr "Execute database table backup"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_db_table_backup.py:159
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_full_backup_flow.py:143
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:127
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:134
msgid "关联备份id"
msgstr "Associated backup id"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_db_table_backup.py:164
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:133
msgid "{} 库表备份"
msgstr "{} database table backup"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_db_table_backup.py:167
msgid "构建库表备份流程成功"
msgstr "Build database table backup process successfully"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_destroy_flow.py:107
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:364
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_destroy_flow.py:93
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:590
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_destroy.py:114
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_destroy.py:73
msgid "删除注册CC系统的服务实例"
msgstr "Delete the service instance registered with the CC system"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_destroy_flow.py:137
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_destroy_flow.py:159
msgid "清理实例周边配置"
msgstr "Clean up the configuration around the instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_destroy_flow.py:146
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:398
msgid "卸载proxy实例"
msgstr "Uninstall proxy instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_destroy_flow.py:168
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_destroy_flow.py:130
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_destroy.py:183
msgid "卸载mysql实例"
msgstr "Uninstall mysql instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_destroy_flow.py:177
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_destroy_flow.py:144
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:656
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_destroy.py:192
#: backend/flow/engine/bamboo/scene/spider/spider_slave_cluster_destroy.py:128
msgid "清理db_meta元信息"
msgstr "Clean up db_meta meta information"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_destroy_flow.py:191
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_destroy.py:142
msgid "清理机器级别配置"
msgstr "Clean up machine-level configuration"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_destroy_flow.py:197
msgid "下架MySQL高可用集群[{}]"
msgstr "Remove MySQL HA Cluster[{}]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_disable_flow.py:89
msgid "检测Proxy端连接情况"
msgstr "Detect Proxy side connection status"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_disable_flow.py:104
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_disable_deploy.py:111
#: backend/flow/engine/bamboo/scene/spider/spider_slave_cluster_destroy.py:102
msgid "删除集群域名"
msgstr "Delete the cluster domain name"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_disable_flow.py:131
msgid "重启proxy实例"
msgstr "Restart the proxy instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_disable_flow.py:148
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_disable_flow.py:80
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_disable_deploy.py:156
msgid "集群变更OFFLINE状态"
msgstr "Cluster changes to OFFLINE state"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_disable_flow.py:159
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_disable_deploy.py:166
msgid "禁用MySQL高可用集群[{}]"
msgstr "Disable MySQL HA Cluster[{}]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_enable_flow.py:133
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_enable_flow.py:93
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_enable_deploy.py:135
msgid "集群变更ONLINE状态"
msgstr "Change the status of the cluster to ONLINE"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_enable_flow.py:144
msgid "启动MySQL高可用集群[{}]"
msgstr "Start MySQL high availability cluster[{}]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_full_backup_flow.py:96
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:124
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:131
msgid "不支持的备份位置 {}"
msgstr "Unsupported backup location {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_full_backup_flow.py:148
msgid "{} 全库备份"
msgstr "{} full database backup"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_full_backup_flow.py:151
msgid "构建全库备份流程成功"
msgstr "The process of building a full database backup is successful"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_metadata_import.py:44
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_metadata_import_flow.py:39
#: backend/flow/engine/bamboo/scene/tendbsingle/metadata_import.py:39
msgid "写入元数据"
msgstr "Write metadata"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_metadata_import.py:49
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:180
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:289
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_upgrade.py:103
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:517
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:483
#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:303
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_metadata_import_flow.py:44
#: backend/flow/engine/bamboo/scene/spider/spider_reduce_mnt.py:93
#: backend/flow/engine/bamboo/scene/spider/spider_reduce_nodes.py:169
#: backend/flow/engine/bamboo/scene/spider/spider_slave_cluster_destroy.py:114
#: backend/flow/engine/bamboo/scene/tendbsingle/metadata_import.py:44
#: backend/ticket/builders/__init__.py:366
#: backend/ticket/builders/common/constants.py:97
#: backend/ticket/builders/mysql/mysql_checksum.py:197
#: backend/ticket/builders/mysql/mysql_checksum.py:221
#: backend/ticket/constants.py:469 backend/ticket/constants.py:496
msgid "人工确认"
msgstr "manual confirmation"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_metadata_import.py:52
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_metadata_import_flow.py:47
#: backend/flow/engine/bamboo/scene/tendbsingle/metadata_import.py:47
msgid "修改集群状态"
msgstr "Modify cluster status"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_metadata_import.py:55
msgid "TenDBHA 元数据导入"
msgstr "TenDBHA metadata import"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_metadata_import.py:57
msgid "构建TenDBHA元数据导入流程成功"
msgstr "Building TenDBHA metadata import process successfully"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:114
msgid "构建TenDBHA集群标准化流程成功"
msgstr "The standardization process for building TenDBHA cluster was successful"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:149
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:192
#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:122
msgid "安装{}插件"
msgstr "Install{}plugin"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:169
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:212
#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:142
msgid "cloud {} 下发文件"
msgstr "cloud {} delivers files"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:183
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:151
#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:156
msgid "模块标准化"
msgstr "Module standardization"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:186
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:154
#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:159
msgid "{} CC 模块标准化"
msgstr "{} CC module standardization"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:190
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:158
#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:163
msgid "CC标准化"
msgstr "CC standardization"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:199
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:136
#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:172
msgid "实例化配置"
msgstr "Instantiation configuration"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:201
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:138
#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:174
msgid "实例化 {} 配置"
msgstr "instantiation{} configuration"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:205
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:142
#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:178
msgid "实例化集群配置"
msgstr "Instantiate cluster configuration"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:213
msgid "标准化proxy"
msgstr "Standardized proxy"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:239
#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:304
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:307
#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:226
msgid "部署监控程序"
msgstr "Deployment monitoring program"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:251
msgid "{} 部署dba工具"
msgstr "{} Deploy dba tools"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:256
msgid "接入层标准化"
msgstr "Access layer standardization"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:272
#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:194
msgid "实例标准化"
msgstr "Instance normalization"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:317
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:320
#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:239
msgid "部署备份程序"
msgstr "Deploy backup procedures"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:330
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:333
msgid "部署rotate binlog"
msgstr "Deploy rotate binlog"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:343
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:346
msgid "部署数据校验程序"
msgstr "Deploy data verification program"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:356
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:359
#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:252
msgid "部署DBA工具箱"
msgstr "Deploy DBA Toolbox"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:368
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:243
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:263
#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:264
msgid "{} 标准化"
msgstr "{} standardization"

#: backend/flow/engine/bamboo/scene/mysql/mysql_ha_standardize_flow.py:372
#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:268
msgid "存储层标准化"
msgstr "Storage layer standardization"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_fail_over.py:159
msgid "执行集群主故障转移"
msgstr "Perform cluster master failover"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_fail_over.py:174
#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:319
msgid "salve节点同步新master数据"
msgstr "The salve node synchronizes the new master data"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_fail_over.py:207
msgid "{}集群执行主故障切换"
msgstr "{} cluster performs master failover"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_fail_over.py:214
#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:359
#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_swtich.py:150
msgid "变更db_meta元信息"
msgstr "Change db_meta meta information"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_fail_over.py:237
msgid "主故障切换流程[整机切换]"
msgstr "Main failover process [whole machine switchover]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:102
msgid "the is_stand_by of new-master-instance [{}] is False "
msgstr "the is_stand_by of new-master-instance [{}] is False"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:144
msgid "回收新master的域名映射"
msgstr "Recycle the domain name mapping of the new master"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:159
msgid "对旧master添加域名映射"
msgstr "Add domain name mapping to the old master"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:269
msgid "旧master添加切换临时账号"
msgstr "Old master add switch temporary account"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:284
msgid "新master克隆旧master权限"
msgstr "The new master clones the old master permission"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:352
msgid "{}集群执行主从切换"
msgstr "{} Cluster performs master-slave switchover"

#: backend/flow/engine/bamboo/scene/mysql/mysql_master_slave_switch.py:382
msgid "主从切换流程[整机切换]"
msgstr "Master-slave switching process [whole machine switching]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:173
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_remote_flow.py:179
msgid "安装完毕,写入初始化实例的db_meta元信息"
msgstr "After the installation is completed, write the db_meta meta information of the initialization instance."

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:203
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_remote_flow.py:209
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:183
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:180
#: backend/flow/engine/bamboo/scene/spider/append_deploy_ctl_flow.py:268
#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_migrate.py:220
#: backend/flow/engine/bamboo/scene/spider/remote_slave_recover.py:187
#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:231
msgid "安装临时备份程序"
msgstr "Install temporary backup program"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:207
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_remote_flow.py:213
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_install.py:139
msgid "安装实例"
msgstr "Installation example"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:257
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_remote_flow.py:251
msgid "数据恢复完毕,写入新主节点和旧主节点的关系链元数据"
msgstr ""
"After the data is restored, write the metadata of the relationship chain "
"between the new master node and the old master node"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:267
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_remote_flow.py:261
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:243
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:221
#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:298
msgid "恢复实例数据"
msgstr "restore instance data"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:306
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_remote_flow.py:300
#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:305
msgid "集群切换完成,写入 {} 的元信息"
msgstr "The cluster switch is completed and the meta information of {} is written."

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:317
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_remote_flow.py:311
#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:317
msgid "集群 {} 切换"
msgstr "cluster{} switch"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:345
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_remote_flow.py:338
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_destroy_flow.py:116
msgid "清理实例级别周边配置"
msgstr "Clean up instance-level perimeter configuration"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:365
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:285
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:261
#: backend/flow/engine/bamboo/scene/spider/remote_slave_recover.py:328
msgid "卸载实例前先删除元数据"
msgstr "Delete metadata before uninstalling an instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:377
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_remote_flow.py:370
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:329
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:309
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:283
#: backend/flow/engine/bamboo/scene/mysql/mysql_single_destroy_flow.py:155
#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_migrate.py:393
#: backend/flow/engine/bamboo/scene/spider/remote_slave_recover.py:351
#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:401
msgid "清理机器配置"
msgstr "Clean up machine configuration"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:392
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_remote_flow.py:385
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:330
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:302
#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_migrate.py:408
#: backend/flow/engine/bamboo/scene/spider/remote_slave_recover.py:366
#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:416
msgid "卸载remote节点{}"
msgstr "Uninstall remote node{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:415
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_remote_flow.py:409
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:353
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:324
#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:320
#: backend/flow/engine/bamboo/scene/spider/remote_local_slave_recover.py:240
#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_migrate.py:418
#: backend/flow/engine/bamboo/scene/spider/remote_slave_recover.py:376
#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:425
msgid "人工确认切换"
msgstr "Manual confirmation switch"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:445
msgid "更新集群模块"
msgstr "Update cluster module"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:459
#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_remote_flow.py:454
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:370
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:341
#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_migrate.py:424
#: backend/flow/engine/bamboo/scene/spider/remote_slave_recover.py:382
#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:431
msgid "人工确认卸载实例"
msgstr "Manually confirm the uninstallation instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_flow.py:463
msgid "集群{}开始成对迁移"
msgstr "Cluster {} starts migrating in pairs"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_remote_flow.py:358
msgid "实例卸载前删除元数据"
msgstr "Delete metadata before instance uninstallation"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_remote_flow.py:440
msgid "更新集群db模块"
msgstr "Update cluster db module"

#: backend/flow/engine/bamboo/scene/mysql/mysql_migrate_cluster_remote_flow.py:457
msgid "集群开始成对迁移"
msgstr "Clusters start migrating in pairs"

#: backend/flow/engine/bamboo/scene/mysql/mysql_open_area_flow.py:232
#: backend/flow/engine/bamboo/scene/mysql/mysql_open_area_flow.py:356
msgid "从源实例:{}#{}获取开区所需库表结构"
msgstr "Obtain the library table structure required for the development zone from the source instance: {}#{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_open_area_flow.py:250
msgid "下发开区库表文件"
msgstr "Distribute development zone database table files"

#: backend/flow/engine/bamboo/scene/mysql/mysql_open_area_flow.py:269
msgid "向目标实例:{}#{}导入库表结构"
msgstr "Import the library table structure to the target instance:{}#{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_open_area_flow.py:282
msgid "目标集群开区导入表结构流程"
msgstr "Target cluster development zone import table structure process"

#: backend/flow/engine/bamboo/scene/mysql/mysql_open_area_flow.py:330
msgid "上传开区参数文件"
msgstr "Upload zone parameter file"

#: backend/flow/engine/bamboo/scene/mysql/mysql_open_area_flow.py:341
msgid "下发开区参数文件"
msgstr "Distribute development zone parameter file"

#: backend/flow/engine/bamboo/scene/mysql/mysql_open_area_flow.py:374
msgid "下发开区库表数据文件"
msgstr "Deliver development zone database table data files"

#: backend/flow/engine/bamboo/scene/mysql/mysql_open_area_flow.py:393
msgid "向目标实例:{}#{}导入库表数据"
msgstr "Import database table data to target instance:{}#{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_open_area_flow.py:408
msgid "开区数据迁移流程"
msgstr "Open zone data migration process"

#: backend/flow/engine/bamboo/scene/mysql/mysql_partition.py:93
msgid "上传sql文件"
msgstr "upload sql file"

#: backend/flow/engine/bamboo/scene/mysql/mysql_partition.py:104
#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:117
msgid "下发sql文件"
msgstr "Send sql file"

#: backend/flow/engine/bamboo/scene/mysql/mysql_partition.py:131
#: backend/flow/engine/bamboo/scene/mysql/mysql_partition_cron.py:56
#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:149
#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:169
#: backend/flow/engine/bamboo/scene/spider/spider_partition_cron.py:59
msgid "actuator执行partition"
msgstr "Actuator executes partition"

#: backend/flow/engine/bamboo/scene/mysql/mysql_partition.py:147
#: backend/flow/engine/bamboo/scene/mysql/mysql_partition_cron.py:71
#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:164
#: backend/flow/engine/bamboo/scene/spider/spider_partition_cron.py:74
msgid "生成分区执行报告"
msgstr "Generate partition execution report"

#: backend/flow/engine/bamboo/scene/mysql/mysql_partition.py:153
#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:177
msgid "cluster[{}]的分区任务"
msgstr "Partition task of cluster[{}]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_partition.py:156
msgid "构建mysql partition流程成功"
msgstr "Build mysql partition process successfully"

#: backend/flow/engine/bamboo/scene/mysql/mysql_partition_cron.py:75
#: backend/flow/engine/bamboo/scene/spider/spider_partition_cron.py:78
msgid "ip[{}]的分区任务"
msgstr "Partition task for ip[{}]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_partition_cron.py:77
msgid "构建mysql partition 定时任务流程成功"
msgstr "The scheduled task process of building mysql partition was successful"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:146
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:154
msgid "下发proxy安装介质"
msgstr "Deliver proxy installation media"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:166
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:175
msgid "部署proxy实例"
msgstr "Deploy proxy instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:206
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:221
msgid "新的proxy配置后端实例"
msgstr "New proxy configuration backend instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:214
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:231
msgid "克隆proxy用户白名单"
msgstr "Clone proxy user whitelist"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:227
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:244
msgid "集群对新的proxy添加权限"
msgstr "The cluster adds permissions to the new proxy"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:239
#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:256
msgid "增加新proxy域名映射"
msgstr "Add new proxy domain name mapping"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:254
msgid "{}集群添加proxy实例"
msgstr "{}Cluster add proxy instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:261
msgid "添加db_meta元信息"
msgstr "Add db_meta meta information"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_add.py:279
msgid "添加proxy子流程"
msgstr "Add proxy subprocess"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:271
msgid "{}集群替换proxy实例"
msgstr "{} cluster replaces the proxy instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:278
msgid "新proxy记录元数据"
msgstr "New proxy record metadata"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:307
msgid "回收旧proxy机器的元数据信息"
msgstr "Recycle the metadata information of the old proxy machine"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:334
msgid "替换proxy子流程"
msgstr "Replace proxy subprocess"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:391
msgid "清理proxy实例级别周边配置"
msgstr "Clean up proxy instance level peripheral configuration"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:404
msgid "回收对应proxy集群映射"
msgstr "Recycle the corresponding proxy cluster mapping"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_cluster_switch.py:415
msgid "[{}:{}]下线"
msgstr "[{}:{}] offline"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_upgrade.py:75
msgid "根据cluster ids:{}法找到对应的proxy实例"
msgstr "Find the corresponding proxy instance according to the cluster ids:{} method"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_upgrade.py:89
msgid "待升级版本大于等于新版本，请确认升级的版本"
msgstr "The version to be upgraded is greater than or equal to the new version. Please confirm the version to be upgraded."

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_upgrade.py:105
msgid "本地升级proxy版本"
msgstr "Upgrade proxy version locally"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_upgrade.py:124
#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:389
msgid "下发升级的安装包"
msgstr "Distribute the upgraded installation package"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_upgrade.py:141
#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:416
msgid "执行本地升级"
msgstr "Perform a local upgrade"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_upgrade.py:147
msgid "更新proxy version meta信息"
msgstr "Update proxy version meta information"

#: backend/flow/engine/bamboo/scene/mysql/mysql_proxy_upgrade.py:156
msgid "{}proxy实例升级"
msgstr "{}proxy instance upgrade"

#: backend/flow/engine/bamboo/scene/mysql/mysql_push_peripheral_config.py:86
msgid "下发actuator介质 云区域ID: {}"
msgstr "Deliver actuator media cloud area ID: {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_push_peripheral_config.py:114
msgid "下发mysql-crond配置 {}"
msgstr "Deliver mysql-crond configuration {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_push_peripheral_config.py:131
msgid "下发MySQL rotatebinlog配置"
msgstr "Deliver MySQL rotatebinlog configuration"

#: backend/flow/engine/bamboo/scene/mysql/mysql_push_peripheral_config.py:161
msgid "配置推送"
msgstr "Configuration push"

#: backend/flow/engine/bamboo/scene/mysql/mysql_push_peripheral_config.py:162
msgid "构建配置推送流程完成"
msgstr "The build configuration push process is completed"

#: backend/flow/engine/bamboo/scene/mysql/mysql_push_peripheral_config.py:182
#: backend/flow/engine/bamboo/scene/mysql/mysql_push_peripheral_config.py:227
msgid "{}下发mysql-monitor配置"
msgstr "{}Delivery mysql-monitor configuration"

#: backend/flow/engine/bamboo/scene/mysql/mysql_push_peripheral_config.py:204
#: backend/flow/engine/bamboo/scene/mysql/mysql_push_peripheral_config.py:269
msgid "{}下发备份配置"
msgstr "{}Delivery backup configuration"

#: backend/flow/engine/bamboo/scene/mysql/mysql_push_peripheral_config.py:248
msgid "{}下发mysql-table-checksum配置"
msgstr "{}Delivery mysql-table-checksum configuration"

#: backend/flow/engine/bamboo/scene/mysql/mysql_push_peripheral_config.py:294
msgid "{} 推送周边配置"
msgstr "{} Push peripheral configuration"

#: backend/flow/engine/bamboo/scene/mysql/mysql_random_password.py:50
msgid "mysql密码随机化"
msgstr "mysql password randomization"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rename_database_flow.py:79
#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:94
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:114
#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:97
msgid "下发actuator介质[云区域ID: {}"
msgstr "Deliver actuator media [cloud region ID: {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rename_database_flow.py:128
#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:138
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:164
#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:149
#: backend/flow/plugins/components/collections/spider/check_cluster_table_using_sub.py:50
msgid "{} 检查库表是否在用"
msgstr "{} Check if the database table is in use"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rename_database_flow.py:146
msgid "{} 执行 rename"
msgstr "{} execute rename"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rename_database_flow.py:163
msgid "{} 重命名数据库"
msgstr "{} rename database"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rename_database_flow.py:168
#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:271
msgid "DB重命名"
msgstr "DB rename"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rename_database_flow.py:169
msgid "构建重命名数据库流程成功"
msgstr "build rename database process succeeded"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:152
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:455
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:556
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:149
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:406
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:524
#: backend/flow/engine/bamboo/scene/spider/remote_local_slave_recover.py:122
#: backend/flow/engine/bamboo/scene/spider/remote_local_slave_recover.py:213
#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_migrate.py:188
#: backend/flow/engine/bamboo/scene/spider/remote_slave_recover.py:156
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_rollback_flow.py:153
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_rollback_flow.py:171
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_rollback_flow.py:227
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_rollback_flow.py:248
#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:201
msgid "写入初始化实例的db_meta元信息"
msgstr "Write the db_meta meta information of the initialized instance"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:188
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:185
msgid "安装从节点"
msgstr "Install slave node"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:232
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:211
#: backend/flow/engine/bamboo/scene/spider/remote_slave_recover.py:238
msgid "同步完毕,写入主从关系,设置节点为running状态"
msgstr "After synchronization is completed, the master-slave relationship is written and the node is set to running state."

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:268
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:246
msgid "slave切换完毕，修改集群 {} 数据"
msgstr "After the slave switch is complete, modify the cluster {} data"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:278
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:256
msgid "切换到新从节点"
msgstr "Switch to new slave node"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:376
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:346
msgid "slave重建迁移{}"
msgstr "slave rebuild migration{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:424
msgid "下发db-actor到节点{} {}"
msgstr "Send db-actor to node {} {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:468
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:434
#: backend/flow/engine/bamboo/scene/spider/remote_local_slave_recover.py:150
msgid "屏蔽监控 {}"
msgstr "Block monitoring{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:480
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:446
#: backend/flow/engine/bamboo/scene/spider/remote_local_slave_recover.py:162
msgid "从库reset slave {}"
msgstr "reset slave {} from the library"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:500
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:460
#: backend/flow/engine/bamboo/scene/spider/remote_local_slave_recover.py:176
msgid "slave重建之清理从库{}"
msgstr "Slave reconstruction to clean up the slave {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:539
#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:506
msgid "添加从库域名{}:{}"
msgstr "Add slave domain name {}:{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_flow.py:579
#: backend/flow/engine/bamboo/scene/spider/remote_local_slave_recover.py:259
msgid "slave原地重建{}"
msgstr "slave rebuilds in situ {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_restore_slave_remote_flow.py:547
msgid "{}slave原地重建"
msgstr "{}slave rebuilt in situ"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:205
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:358
msgid "rollback_type不存在"
msgstr "rollback_type does not exist"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:207
msgid "定点恢复"
msgstr "fixed point recovery"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:259
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_rollback_flow.py:128
msgid "回档集群 {} 空闲检查不通过，请确认回档集群是否存在非系统数据库"
msgstr "The rollback cluster {} failed the idle check. Please confirm whether there is a non-system database in the rollback cluster."

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:362
msgid "定点回档到{}:{}"
msgstr "Fixed point return to {}:{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_flow.py:367
msgid "定点回档到{}"
msgstr "Return to {} at fixed point"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_sub_flow.py:75
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_sub_flow.py:153
msgid "下载定点恢复的全库备份介质到{}"
msgstr "Download the full database backup media of fixed-point recovery to {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_sub_flow.py:83
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_sub_flow.py:161
#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_sub_flow.py:210
msgid "定点恢复之恢复数据{}"
msgstr "Fixed-point recovery restore data{}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_sub_flow.py:120
msgid "{}:{}定点回滚数据 REMOTE_AND_TIME "
msgstr "{}:{} Fixed-point rollback data REMOTE_AND_TIME"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_sub_flow.py:168
msgid "{}:{}定点回滚数据 REMOTE_AND_BACKUPID "
msgstr "{}:{} Fixed-point rollback data REMOTE_AND_BACKUPID"

#: backend/flow/engine/bamboo/scene/mysql/mysql_rollback_data_sub_flow.py:217
msgid "{}:{}定点回滚数据 LOCAL_AND_BACKUPID "
msgstr "{}:{} Fixed-point rollback data LOCAL_AND_BACKUPID"

#: backend/flow/engine/bamboo/scene/mysql/mysql_single_apply_flow.py:130
msgid "下发MySQL介质"
msgstr "Deliver MySQL media"

#: backend/flow/engine/bamboo/scene/mysql/mysql_single_apply_flow.py:180
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_disable.py:146
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_enable.py:76
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_standardization.py:158
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_ha_deploy.py:175
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_single_deploy.py:117
msgid "录入db_meta元信息"
msgstr "Enter db_meta meta information"

#: backend/flow/engine/bamboo/scene/mysql/mysql_single_apply_flow.py:204
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_single_deploy.py:139
msgid "部署单节点集群"
msgstr "Deploy a single-node cluster"

#: backend/flow/engine/bamboo/scene/mysql/mysql_single_apply_flow.py:207
msgid "部署子流程"
msgstr "Deployment subprocess"

#: backend/flow/engine/bamboo/scene/mysql/mysql_single_destroy_flow.py:168
msgid "下架MySQL单节点集群[{}]"
msgstr "Remove MySQL single-node cluster[{}]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_single_disable_flow.py:58
msgid "检测实例连接情况"
msgstr "Check instance connection status"

#: backend/flow/engine/bamboo/scene/mysql/mysql_single_disable_flow.py:69
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_destroy.py:115
msgid "回收集群域名"
msgstr "Recycle the cluster domain name"

#: backend/flow/engine/bamboo/scene/mysql/mysql_single_disable_flow.py:90
msgid "禁用MySQL单节点集群[{}]"
msgstr "Disable MySQL single-node cluster[{}]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_single_enable_flow.py:104
msgid "启动MySQL单节点集群[{}]"
msgstr "Start MySQL single-node cluster[{}]"

#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:155
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:249
msgid "{} 执行清档"
msgstr "{} Execute file clearing"

#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:173
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:287
msgid "生成删除备份库sql"
msgstr "Generate and delete backup database sql"

#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:183
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:297
msgid "{} 清档"
msgstr "{} clear file"

#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:188
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:302
msgid "生成删除备份库变更SQL单据"
msgstr "Generate SQL documents for deleting backup database changes"

#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:193
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:307
#: backend/ticket/builders/redis/redis_purge.py:56
msgid "集群清档"
msgstr "Cluster cleanup"

#: backend/flow/engine/bamboo/scene/mysql/mysql_truncate_flow.py:194
msgid "构建清档流程成功"
msgstr "Build clearance process succeeded"

#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:51
msgid "不允许跨多个大版本升级"
msgstr "Upgrading across multiple major versions is not allowed"

#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:58
msgid "当前集群MySQL升级版本大于等于新版本,请确认"
msgstr "The current cluster MySQL upgrade version is greater than or equal to the new version, please confirm"

#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:110
msgid "查询集群{}stanb_by slave实例为None"
msgstr "Query cluster {}stanb_by slave instance is None"

#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:117
msgid "请先升级{}stanb_by的其他slave实例"
msgstr "Please upgrade other slave instances of {}stanb_by first"

#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:120
msgid "{}升级前后字符集不一致,原字符集：{},新模块的字符集{}"
msgstr "{}The character set before and after the upgrade is inconsistent, the original character set: {}, the character set of the new module {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:173
msgid "当前集群,请确认"
msgstr "Current cluster, please confirm"

#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:176
msgid "必须把主机关联的集群都选上,请确认"
msgstr "All clusters associated with the host must be selected, please confirm"

#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:233
msgid "无法找到对应的从实例记录"
msgstr "Unable to find the corresponding slave instance record"

#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:242
#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:353
msgid "集群的master应该同属于一个机器,当前分布在{}"
msgstr "The masters of the cluster should belong to the same machine and are currently distributed in {}"

#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:340
msgid "[TendbHa]本地升级MySQL版本"
msgstr "[TendbHa] Upgrade MySQL version locally"

#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:365
msgid "[TendbSingle]本地升级MySQL版本"
msgstr "[TendbSingle] Upgrade MySQL version locally"

#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:367
msgid "不支持的集群类型"
msgstr "Unsupported cluster type"

#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:405
msgid "执行本地升级前置检查"
msgstr "Perform local upgrade pre-checks"

#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:422
msgid "更新mysql instance version meta信息"
msgstr "Update mysql instance version meta information"

#: backend/flow/engine/bamboo/scene/mysql/mysql_upgrade.py:431
msgid "MySQL实例升级"
msgstr "MySQL instance upgrade"

#: backend/flow/engine/bamboo/scene/mysql/pt_table_sync.py:94
msgid "修复单据找不到可修复的存储对"
msgstr "The repair document cannot find a repairable storage pair."

#: backend/flow/engine/bamboo/scene/mysql/pt_table_sync.py:122
msgid "执行数据修复"
msgstr "perform data repair"

#: backend/flow/engine/bamboo/scene/mysql/pt_table_sync.py:135
msgid "{}:{}做数据修复"
msgstr "{}:{} do data repair"

#: backend/flow/engine/bamboo/scene/mysql/pt_table_sync.py:140
msgid "{}数据修复"
msgstr "{} data repair"

#: backend/flow/engine/bamboo/scene/mysql/pt_table_sync.py:143
msgid "修复单据找不到可修复的集群"
msgstr "The repair document cannot find a repairable cluster."

#: backend/flow/engine/bamboo/scene/name_service/name_service.py:51
msgid "创建clb"
msgstr "create clb"

#: backend/flow/engine/bamboo/scene/name_service/name_service.py:55
msgid "clb信息写入meta"
msgstr "clb information is written to meta"

#: backend/flow/engine/bamboo/scene/name_service/name_service.py:61
msgid "clb域名添加到dns，clb域名信息写入meta"
msgstr "The clb domain name is added to dns, and the clb domain name information is written into meta."

#: backend/flow/engine/bamboo/scene/name_service/name_service.py:80
#: backend/flow/engine/bamboo/scene/name_service/name_service.py:184
msgid "主域名解绑clb ip"
msgstr "Unbind clb ip from main domain name"

#: backend/flow/engine/bamboo/scene/name_service/name_service.py:86
msgid "dns删除clb域名，从meta删除clb域名信息"
msgstr "dns deletes the clb domain name and deletes the clb domain name information from meta"

#: backend/flow/engine/bamboo/scene/name_service/name_service.py:92
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/access_manager.py:164
msgid "删除clb"
msgstr "delete clb"

#: backend/flow/engine/bamboo/scene/name_service/name_service.py:96
msgid "从meta删除clb信息"
msgstr "Remove clb information from meta"

#: backend/flow/engine/bamboo/scene/name_service/name_service.py:115
msgid "创建polaris"
msgstr "create polaris"

#: backend/flow/engine/bamboo/scene/name_service/name_service.py:121
msgid "polaris信息写入meta"
msgstr "polaris information written to meta"

#: backend/flow/engine/bamboo/scene/name_service/name_service.py:140
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/access_manager.py:211
msgid "删除polaris"
msgstr "remove polaris"

#: backend/flow/engine/bamboo/scene/name_service/name_service.py:146
msgid "从meta删除polaris信息"
msgstr "Remove polaris information from meta"

#: backend/flow/engine/bamboo/scene/name_service/name_service.py:165
msgid "主域名绑定clb ip"
msgstr "The main domain name is bound to clb ip"

#: backend/flow/engine/bamboo/scene/pulsar/exceptions.py:18
msgid "Flow模块Pulsar集群异常"
msgstr "Flow module Pulsar cluster exception"

#: backend/flow/engine/bamboo/scene/pulsar/exceptions.py:29
msgid "Pulsar-Broker异常"
msgstr "Pulsar-Broker exception"

#: backend/flow/engine/bamboo/scene/pulsar/exceptions.py:30
msgid "Pulsar集群Broker数量不能为0"
msgstr "The number of Brokers in the Pulsar cluster cannot be 0"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:105
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:97
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:163
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_scale_up_flow.py:82
msgid "下发pulsar介质"
msgstr "Issue Pulsar media"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:121
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_fake_apply_flow.py:69
msgid "添加ZK域名"
msgstr "Add ZK domain name"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:133
msgid "仅非DNS环境使用-添加broker hosts"
msgstr "Only used in non-DNS environments - add broker hosts"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:170
msgid "初始化集群配置-{}"
msgstr "Init cluster config-{}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:185
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:184
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_scale_up_flow.py:107
msgid "分发密钥及token"
msgstr "Distribute secretkey and token"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:201
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:307
msgid "安装pulsar manager"
msgstr "Install pulsar-manager"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:214
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_fake_apply_flow.py:83
msgid "插入pulsar manager实例信息"
msgstr "Insert pulsar manager instance information"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_apply_flow.py:230
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:315
msgid "初始化pulsar manager"
msgstr "Initialize pulsar-manager"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:205
msgid "仅非DNS环境使用-添加zookeeper hosts"
msgstr "Only used in non-DNS environment - add zookeeper hosts"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:210
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:249
msgid "安装Pulsar-{}-common子流程"
msgstr "Install Pulsar-{}-common subprocess"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:259
msgid "安装bookkeeper-{}"
msgstr "Install bookkeeper-{}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:289
msgid "缩容Pulsar-Broker-{}"
msgstr "Shrink Pulsar-Broker-{}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:319
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:193
msgid "检查Broker配置-{}"
msgstr "Check Broker Configuration - {}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:330
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:205
msgid "检查NameSpace配置-{}"
msgstr "Check NameSpace Configuration - {}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:337
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:216
msgid "检查未复制ledger-{}"
msgstr "check not replicated ledger-{}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:344
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:274
msgid "停止BookKeeper服务-{}"
msgstr "Stop BookKeeper service - {}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:350
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:280
msgid "退役BookKeeper-{}"
msgstr "Decommissioned BookKeeper-{}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_base_flow.py:355
msgid "缩容Pulsar-BookKeeper-{}-子流程"
msgstr "Shrinking Pulsar-BookKeeper-{}-subprocesses"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_destroy_flow.py:77
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_disable_flow.py:67
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_enable_flow.py:67
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_reboot_flow.py:65
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_shrink_flow.py:66
msgid "下发pulsar actuator"
msgstr "Issue the pulsar actuator"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_destroy_flow.py:86
msgid "Pulsar集群节点清理-{}"
msgstr "Pulsar cluster node cleanup -{}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_destroy_flow.py:110
msgid "删除ZK域名"
msgstr "Delete ZK domain name"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_disable_flow.py:78
msgid "停止Pulsar集群进程-{}-{}"
msgstr "Stop Pulsar cluster process -{}-{}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_fake_apply_flow.py:90
msgid "写入token"
msgstr "write token"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:116
msgid "替换pulsar manager子流程"
msgstr "Replace pulsar manager subprocess"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:143
msgid "替换ZooKeeper子流程"
msgstr "Replace ZooKeeper subprocess"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:216
#: backend/flow/engine/bamboo/scene/pulsar/pulsar_shrink_flow.py:73
msgid "缩容BookKeeper子流程"
msgstr "Shrink the BookKeeper sub-process"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:283
msgid "更新pulsar_manager实例信息"
msgstr "Update pulsar_manager instance information"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_replace_flow.py:296
msgid "仅非DNS环境使用-添加broker域名"
msgstr "Only used in non-DNS environment - add broker domain name"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:86
msgid "停止ZooKeeper服务-{}"
msgstr "stop ZooKeeper service - {}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:100
msgid "更新ZK域名"
msgstr "Update ZK domain name"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:117
msgid "仅非DNS环境使用-更新ZK映射"
msgstr "Only used in non-DNS environments - update ZK mapping"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:133
msgid "替换Pulsar-ZooKeeper-{}-子流程"
msgstr "Replace Pulsar-ZooKeeper-{}-subprocess"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:230
msgid "检查Ledger Metadata-{}"
msgstr "Check Ledger Metadata - {}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:243
msgid "修改Bookie参数为ReadOnly-{}"
msgstr "Modify the Bookie parameter to ReadOnly-{}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:257
msgid "滚动重启BookKeeper-{}"
msgstr "Rolling Restart BookKeeper -{}"

#: backend/flow/engine/bamboo/scene/pulsar/pulsar_sub_flow.py:264
msgid "等待数据过期"
msgstr "wait for data to expire"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/access_manager.py:44
msgid "添加域名映射"
msgstr "Add domain name mapping"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/access_manager.py:69
msgid "域名变更子流程"
msgstr "Domain name change sub-process"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/access_manager.py:96
msgid "add_ips 和 del_ips 不能同时为空"
msgstr "add_ips and del_ips cannot be empty at the same time"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/access_manager.py:107
msgid "添加记录{}"
msgstr "add record{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/access_manager.py:118
msgid "删除记录{}"
msgstr "delete record{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/access_manager.py:122
msgid "更新域名{}"
msgstr "Update domain name {}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/access_manager.py:139
msgid "clb添加rs"
msgstr "clbaddrs"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/access_manager.py:153
msgid "clb剔除rs"
msgstr "clb cull rs"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/access_manager.py:169
msgid "CLB变更子流程"
msgstr "CLB change sub-process"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/access_manager.py:186
msgid "polaris添加rs"
msgstr "polarisaddrs"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/access_manager.py:200
msgid "polaris剔除rs"
msgstr "polaris removers"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/access_manager.py:216
msgid "北极星变更子流程"
msgstr "Polaris change sub-process"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/access_manager.py:284
msgid "{}-{}-dns/clb 接入层子任务"
msgstr "{}-{}-dns/clb access layer subtask"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/dirty_machine_clear.py:71
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/predixy_config_servers_rewrite.py:69
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_upgrade.py:63
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_client_conns_kill.py:57
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_client_conns_kill.py:113
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dbmon.py:66
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dbmon.py:127
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_maxmemory_set.py:61
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_shutdown.py:55
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_mss.py:219
msgid "{}-下发介质包"
msgstr "{}-Delivery media package"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/dirty_machine_clear.py:86
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_shutdown.py:72
msgid "请求检查-{}"
msgstr "Request Check-{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/dirty_machine_clear.py:100
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/dirty_machine_clear.py:197
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_shutdown.py:87
msgid "卸载监控-{}"
msgstr "Uninstall monitoring-{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/dirty_machine_clear.py:114
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_shutdown.py:129
#: backend/flow/engine/bamboo/scene/redis/redis_open_close.py:415
msgid "干掉非活跃链接-{}"
msgstr "Kill inactive links-{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/dirty_machine_clear.py:126
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_shutdown.py:141
msgid "下架实例-{}"
msgstr "Delisting example-{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/dirty_machine_clear.py:138
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_shutdown.py:99
msgid "清理元数据-{}"
msgstr "Clean metadata-{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/dirty_machine_clear.py:143
msgid "Redis-{}-下架原子任务"
msgstr "Redis-{}-offset atomic task"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/dirty_machine_clear.py:183
msgid "Proxy-{}-下发介质包"
msgstr "Proxy-{}-deliver media package"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/dirty_machine_clear.py:211
msgid "Proxy-{}-卸载实例"
msgstr "Proxy-{}-Uninstall instance"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/dirty_machine_clear.py:222
msgid "Proxy-{}-删除元数据"
msgstr "Proxy-{}-remove metadata"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/dirty_machine_clear.py:227
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_uninstall.py:126
msgid "Proxy-{}-卸载原子任务"
msgstr "Proxy-{}-offload atomic tasks"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/predixy_config_servers_rewrite.py:88
msgid "{}-rewrite配置servers"
msgstr "{}-rewrite configuration servers"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/predixy_config_servers_rewrite.py:95
msgid "{}-predixy rewrite配置servers"
msgstr "{}-predixy rewrite configuration servers"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_install.py:80
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_uninstall.py:73
msgid "Proxy-001-{}-下发介质包"
msgstr "Proxy-001-{}-deliver media package"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_install.py:87
msgid "Proxy-002-{}-初始化机器"
msgstr "Proxy-002-{}-initialize machine"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_install.py:96
msgid "Proxy-002-{}-安装backup-client工具"
msgstr "Proxy-002-{}-Install backup-client tool"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_install.py:158
msgid "Proxy-003-{}-安装实例"
msgstr "Proxy-003-{}-Installation example"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_install.py:169
msgid "Proxy-004-{}-写入元数据"
msgstr "Proxy-004-{}-write metadata"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_install.py:192
msgid "Proxy-005-{}-安装监控"
msgstr "Proxy-005-{}-installation monitoring"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_install.py:197
msgid "Proxy-{}-安装原子任务"
msgstr "Proxy-{}-install atomic tasks"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_uninstall.py:95
msgid "Proxy-002-{}-卸载监控"
msgstr "Proxy-002-{}-Uninstall monitoring"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_uninstall.py:108
msgid "Proxy-003-{}-卸载实例"
msgstr "Proxy-003-{}-Uninstall instance"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_uninstall.py:121
msgid "Proxy-004-{}-删除元数据"
msgstr "Proxy-004-{}-Remove metadata"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_upgrade.py:83
msgid "{}-proxy版本升级"
msgstr "{}-proxy version upgrade"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/proxy_upgrade.py:90
msgid "{}-集群proxy版本升级"
msgstr "{}-Cluster proxy version upgrade"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_change_password.py:58
msgid "修改{}配置中心密码"
msgstr "Modify {} configuration center password"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_change_password.py:74
msgid "修改实例密码: {}:{}"
msgstr "Change instance password: {}:{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_change_password.py:80
msgid "redis集群修改密码子任务"
msgstr "redis cluster modify codon subtask"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_client_conns_kill.py:75
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_client_conns_kill.py:131
msgid "{}-kill客户端连接"
msgstr "{}-kill client connection"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_client_conns_kill.py:82
msgid "{}-集群机器kill客户端连接"
msgstr "{}-Cluster machine kill client connection"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_client_conns_kill.py:138
msgid "{}-集群kill客户端连接"
msgstr "{}-Cluster kill client connection"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_cluster_master_rep.py:209
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_cluster_master_rep.py:219
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_cluster_slave_rep.py:205
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_auotfix.py:515
msgid "{}-刷新监控"
msgstr "{}-Refresh monitoring"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_cluster_master_rep.py:245
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_cluster_master_rep.py:386
msgid "主从替换-{}"
msgstr "Master-slave replacement-{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_cluster_master_rep.py:340
msgid "元数据角色互换-{}"
msgstr "Metadata role swap-{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_cluster_slave_rep.py:177
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_auotfix.py:472
msgid "Redis-新节点加入集群"
msgstr "Redis-new node joins the cluster"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_cluster_slave_rep.py:189
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_switch.py:170
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_switch.py:192
msgid "刷新域名-{}"
msgstr "Refresh domain name-{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_cluster_slave_rep.py:217
msgid "Redis-更新sbind_entry元数据"
msgstr "Redis - update sbind_entry metadata"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_cluster_slave_rep.py:241
msgid "Redis-初始化nodes域名"
msgstr "Redis-initialize nodes domain name"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_cluster_slave_rep.py:279
msgid "-e \"s/{}{}{}/{}{}{}/\""
msgstr "-e \"s/{}{}{}/{}{}{}/\""

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_cluster_slave_rep.py:299
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_auotfix.py:501
msgid "刷新Predixy本地配置"
msgstr "Refresh Predixy local configuration"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_cluster_slave_rep.py:320
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_auotfix.py:544
msgid "Slave替换-{}"
msgstr "Slave replacement-{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dbmon.py:85
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dbmon.py:146
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:359
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:800
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:812
#: backend/flow/engine/bamboo/scene/redis/redis_instance_apply_flow.py:494
#: backend/flow/engine/bamboo/scene/redis/redis_predixy_cluster_apply_flow.py:319
#: backend/flow/engine/bamboo/scene/redis/redis_twemproxy_cluster_apply_flow.py:346
msgid "{}-安装bkdbmon"
msgstr "{}-install bkdbmon"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dbmon.py:92
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dbmon.py:153
msgid "{}-集群机器安装bkdbmon"
msgstr "{}-Cluster machine installation bkdbmon"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dts.py:59
msgid "{}磁盘信息 "
msgstr "{}disk information"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dts.py:67
msgid "redis dts前置检查,{}->{}"
msgstr "redis dts pre-check,{}-&gt;{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dts.py:74
msgid "redis dts发起任务并等待至增量同步阶段"
msgstr ""
"redis dts initiates a task and waits until the incremental synchronization "
"phase"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dts.py:78
msgid "redis dts任务发起并等待同步完成"
msgstr "The redis dts task is initiated and waits for synchronization to complete"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dts.py:121
#: backend/flow/engine/bamboo/scene/redis/redis_add_dts_server.py:83
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_backup.py:103
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:217
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_shutdown.py:122
#: backend/flow/engine/bamboo/scene/redis/redis_flush_data.py:107
#: backend/flow/engine/bamboo/scene/redis/redis_ins_shutdown.py:140
#: backend/flow/engine/bamboo/scene/redis/redis_keys_delete.py:105
#: backend/flow/engine/bamboo/scene/redis/redis_keys_extract.py:94
#: backend/flow/engine/bamboo/scene/redis/redis_open_close.py:112
#: backend/flow/engine/bamboo/scene/redis/redis_open_close.py:338
#: backend/flow/engine/bamboo/scene/redis/redis_remove_dts_server.py:69
msgid "下发介质包"
msgstr "Deliver the media package"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dts.py:129
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_backup.py:112
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_shutdown.py:145
#: backend/flow/engine/bamboo/scene/redis/redis_flush_data.py:133
#: backend/flow/engine/bamboo/scene/redis/redis_ins_shutdown.py:173
msgid "redis备份: {}"
msgstr "redis backup: {}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dts.py:144
msgid "redis 清档: {}"
msgstr "redis clear file: {}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_dts.py:155
msgid "redis 备份后清档"
msgstr "Clear files after redis backup"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_install.py:88
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_load_module.py:65
#: backend/flow/engine/bamboo/scene/vm/vm_replace_flow.py:248
#: backend/flow/engine/bamboo/scene/vm/vm_shrink_flow.py:92
msgid "下发介质"
msgstr "Deliver media"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_install.py:93
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_switch.py:113
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:651
#: backend/flow/engine/bamboo/scene/redis/redis_instance_apply_flow.py:242
msgid "Redis-{}-下发介质包"
msgstr "Redis-{}-deliver media package"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_install.py:101
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:660
#: backend/flow/engine/bamboo/scene/redis/redis_instance_apply_flow.py:251
msgid "Redis-{}-初始化机器"
msgstr "Redis-{}-initialize the machine"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_install.py:108
msgid "|安装插件"
msgstr "|Install plugin"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_install.py:112
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:668
#: backend/flow/engine/bamboo/scene/redis/redis_instance_apply_flow.py:259
msgid "Redis-{}-安装backup-client工具"
msgstr "Redis-{}-install backup-client tool"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_install.py:155
msgid "{}-{}-安装实例"
msgstr "{}-{}-Installation Example"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_install.py:173
msgid "{}-{}-写入元数据"
msgstr "{}-{}-Write metadata"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_install.py:199
msgid "Redis-{}-安装监控"
msgstr "Redis-{}-installation monitoring"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_install.py:204
msgid "Redis-{}-{}"
msgstr "Redis-{}-{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_load_module.py:83
msgid "master:{}-加载module"
msgstr "master:{}-load module"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_load_module.py:99
msgid "slave:{}-加载module"
msgstr "slave:{}-load module"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_load_module.py:122
msgid "predixy:{}-加载module命令"
msgstr "predixy:{}-load module command"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_load_module.py:134
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_rename_domain.py:171
msgid "更新集群dbconfig配置"
msgstr "Update cluster dbconfig configuration"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_load_module.py:140
msgid "{}-集群加载modules"
msgstr "{}-Cluster loading modules"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_makesync.py:63
msgid "下发介质包-{}"
msgstr "Deliver media package-{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_makesync.py:84
msgid "卸载dbmon-{}"
msgstr "Uninstall dbmon-{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_makesync.py:132
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_makesync.py:147
msgid "拉起dbmon-{}"
msgstr "Pull up dbmon-{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_makesync.py:152
msgid "Redis-{}-创建同步关系原子任务"
msgstr "Redis-{}-Create a synchronization relational atomic task"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_makesync.py:177
#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_makesync.py:197
msgid "建立主从关系-{}"
msgstr "Establish master-slave relationship-{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_makesync.py:259
msgid "发起备份-{}"
msgstr "Initiate backup-{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_makesync.py:270
msgid "发送备份文件-{}==>>{}"
msgstr "Send backup file-{}==&gt;&gt;{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_makesync.py:282
msgid "恢复备份-{}"
msgstr "Restore backup-{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_makesync.py:312
msgid "加入集群-{}"
msgstr "Join cluster-{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_makesync.py:330
msgid "同步数据-{}"
msgstr "Sync data-{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_maxmemory_set.py:80
msgid "{}-设置maxmemory"
msgstr "{}-set maxmemory"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_maxmemory_set.py:87
msgid "{}-集群设置maxmemory"
msgstr "{}-cluster settings maxmemory"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_repair.py:47
msgid "Redis-301-{}-下发介质包"
msgstr "Redis-301-{}-deliver media package"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_repair.py:62
msgid "Redis-302-{}-检查同步状态"
msgstr "Redis-302-{}-check sync status"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_shutdown.py:116
msgid "踢掉旧节点-{}"
msgstr "Kick off old nodes-{}"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_shutdown.py:146
msgid "Redis-{}-下架"
msgstr "Redis-{}-removed"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_shutdown.py:148
msgid "Redis-{}-{}-下架"
msgstr "Redis-{}-{}-removed"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_switch.py:104
msgid "Redis-元数据加入集群"
msgstr "Redis-metadata join the cluster"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_switch.py:123
#: backend/flow/engine/bamboo/scene/redis/redis_backend_scale.py:556
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:573
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:645
msgid "Redis-人工确认"
msgstr "Redis-manual confirmation"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_switch.py:146
msgid "Redis-{}-实例切换"
msgstr "Redis-{}-instance switching"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_switch.py:158
msgid "{}-检查切换状态"
msgstr "{} - Check switching status"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_switch.py:226
msgid "元数据切换"
msgstr "metadata switch"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_switch.py:241
msgid "刷新-{}-dbmon"
msgstr "refresh-{}-dbmon"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/redis_switch.py:249
msgid "{}-实例切换"
msgstr "{}-instance switching"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/reupload_old_backup_records.py:71
msgid "{}下发介质包"
msgstr "{}Delivery media package"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/reupload_old_backup_records.py:84
msgid "{}-gcs备份记录获取并保存到本地文件"
msgstr "{}-gcs backup records are obtained and saved to local files"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/reupload_old_backup_records.py:105
msgid "{}-备份记录上报到bklog"
msgstr "{}-Backup records are reported to bklog"

#: backend/flow/engine/bamboo/scene/redis/atom_jobs/reupload_old_backup_records.py:109
msgid "{}-重新上报备份记录"
msgstr "{}-Re-submit backup records"

#: backend/flow/engine/bamboo/scene/redis/common/exceptions.py:17
msgid "Flow模块Tendis 异常"
msgstr "Flow module Tendis exception"

#: backend/flow/engine/bamboo/scene/redis/redis_add_dts_server.py:73
#: backend/flow/engine/bamboo/scene/redis/redis_remove_dts_server.py:59
msgid "DTS_Server-{}-下发介质"
msgstr "DTS_Server-{}-deliver media"

#: backend/flow/engine/bamboo/scene/redis/redis_add_dts_server.py:88
msgid "DTS_Server-{}-部署"
msgstr "DTS_Server-{}-Deployment"

#: backend/flow/engine/bamboo/scene/redis/redis_add_dts_server.py:94
msgid "DTS_Server-{}-写入dbmeta"
msgstr "DTS_Server-{}-write dbmeta"

#: backend/flow/engine/bamboo/scene/redis/redis_add_dts_server.py:99
msgid "ADD DTS_SERVER"
msgstr "ADD DTS_SERVER"

#: backend/flow/engine/bamboo/scene/redis/redis_backend_scale.py:425
msgid "Redis集群扩缩容"
msgstr "Redis cluster expansion and contraction"

#: backend/flow/engine/bamboo/scene/redis/redis_backend_scale.py:517
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:405
msgid "更新storageinstance_bind_entry元数据"
msgstr "Update storageinstance_bind_entry metadata"

#: backend/flow/engine/bamboo/scene/redis/redis_backend_scale.py:551
msgid "初始化新增nodes域名"
msgstr "Initialize the new nodes domain name"

#: backend/flow/engine/bamboo/scene/redis/redis_backend_scale.py:597
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_add_slave.py:520
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:827
msgid "{}-重装bkdbmon"
msgstr "{}-Reinstall bkdbmon"

#: backend/flow/engine/bamboo/scene/redis/redis_backend_scale.py:609
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:528
msgid "Redis-更新dbconfig中集群版本"
msgstr "Redis-Update the cluster version in dbconfig"

#: backend/flow/engine/bamboo/scene/redis/redis_backend_scale.py:626
msgid "{}backend扩缩容"
msgstr "{}backend expansion and contraction"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_add_slave.py:286
msgid "slave:{}:{} 实例安装"
msgstr "slave:{}:{} instance installation"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_add_slave.py:301
msgid "new_slave 写入元数据"
msgstr "new_slave writes metadata"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_add_slave.py:371
msgid "同步关系 {}:{} -> {}:{}"
msgstr "Synchronization relationship {}:{} -&gt; {}:{}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_add_slave.py:420
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_instance_shutdown.py:116
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_auotfix.py:211
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_mss.py:160
msgid "初始化配置-{}"
msgstr "Initialization configuration-{}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_add_slave.py:467
#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:468
msgid "元数据更新"
msgstr "Metadata updates"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_add_slave.py:538
msgid "Redis-{}-新建从库"
msgstr "Redis-{}-new slave library"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_backup.py:119
msgid "集群[{}]备份"
msgstr "cluster[{}] backup"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_check_repair.py:85
msgid "下发介质包,ips:{}"
msgstr "Deliver media package,ips:{}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_check_repair.py:97
msgid "redis dts数据校验: {}"
msgstr "Redis dts data verification: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_check_repair.py:107
msgid "数据修复人工确认"
msgstr "Data repair manual confirmation"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_check_repair.py:116
msgid "redis dts数据修复: {}"
msgstr "redis dts data repair: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_check_repair.py:125
msgid "数据校验与修复,源集群:{} 目的集群:{}"
msgstr "Data verification and repair, source cluster: {} destination cluster: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:186
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:877
msgid "断开同步关系"
msgstr "Disconnect synchronization relationship"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:203
msgid "数据复制:{}->{}"
msgstr "Data copy:{}-&gt;{}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:232
msgid "bk_cloud_id:{} 未找到DNS nameserver"
msgstr "bk_cloud_id:{} DNS nameserver not found"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:235
msgid "bk_cloud_id:{} DNS nameserver ip 为空"
msgstr "bk_cloud_id:{} DNS nameserver ip is empty"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:247
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:378
msgid "源集群{}重复了"
msgstr "Source cluster {} is duplicated"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:268
msgid "目标集群 {} 不存在"
msgstr "Target cluster{} does not exist"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:285
msgid ""
"回档任务(src_cluster:{} recovery_time_point:"
"{}                                      destroyed_status:0) 不存在?"
msgstr "The rollback task (src_cluster:{} recovery_time_point:{} destroyed_status:0) does not exist?"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:304
msgid "回档临时环境如何(temp_cluster_proxy:{}) ping 失败, {}"
msgstr "How to roll back the temporary environment (temp_cluster_proxy:{}) ping failed, {}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:318
msgid "数据构造临时集群存在 redis 访问失败的情况,临时集群 redis:{}, {}"
msgstr "There is a redis access failure in the temporary cluster of data structure. Temporary cluster redis: {}, {}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:390
msgid "集群当前分片数:{} 等于 目标分片数:{}"
msgstr "The current number of shards in the cluster: {} is equal to the target number of shards: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:397
msgid "集群:{} 当前running_master个数:{} 等于 目标分片数:{}"
msgstr "Cluster: {} Current number of running_masters: {} equal to target number of shards: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:404
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:426
msgid "集群:{} 目标版本:{} 不在 集群类型:{} 版本列表:{}中"
msgstr "Cluster:{} Target version:{} Not in cluster type:{} Version list:{}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:414
msgid "当前集群类型:{} == 目标集群类型:{}"
msgstr "Current cluster type: {} == Target cluster type: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:418
msgid "目标集群类型:{} == 集群:{} 当前类型:{}"
msgstr "Target cluster type: {} == Cluster: {} Current type: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:423
msgid "集群:{} 目标版本为空"
msgstr "Cluster:{} target version is empty"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:534
msgid "集群:{}安装任务并检测任务状态"
msgstr "Cluster:{}Install tasks and detect task status"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:544
msgid "集群:{}清档任务并检测任务状态"
msgstr "Cluster:{}Clear tasks and detect task status"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:576
msgid "在线切换任务并检测任务状态"
msgstr "Switch tasks online and detect task status"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:581
msgid "集群:{}禁用任务并检测任务状态"
msgstr "Cluster: {} disable tasks and detect task status"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:586
msgid "集群:{}下架任务并检测任务状态"
msgstr "Cluster:{}Remove tasks and check task status"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:763
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:783
msgid "{} 前置检查"
msgstr "{} Pre-check"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:804
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:814
msgid "{} proxys下发介质"
msgstr "{} Proxies deliver media"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:825
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:835
msgid "{} backend下发介质"
msgstr "{} backend delivers media"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:864
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:904
msgid "{} 执行在线切换"
msgstr "{} Perform online switching"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:918
msgid "交换源集群、目标集群的storageinstance 元数据"
msgstr "Exchange storage instance metadata of source cluster and target cluster"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:930
msgid "更新源集群、目标集群的nodes域名"
msgstr "Update the node domain names of the source cluster and target cluster"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:952
msgid "交换源集群、目标集群的 redis 配置"
msgstr "Exchange the redis configuration of the source cluster and target cluster"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:974
msgid "交换源集群、目标集群的 proxy 版本信息"
msgstr "Exchange proxy version information of source cluster and target cluster"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:1031
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:1048
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:1088
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_data_copy.py:1105
msgid "{} 重装 dbmon"
msgstr "{} Reinstall dbmon"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_instance_shutdown.py:104
msgid "REDIS-实例下架"
msgstr "REDIS-Instance removed from shelves"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_instance_shutdown.py:162
msgid "实例下架-{}"
msgstr "Instance removed from shelves-{}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_load_modules.py:62
msgid "cluster:{} major_version:{}  redis module {}"
msgstr "cluster:{} major_version:{}  redis module {}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:147
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:629
#: backend/flow/engine/bamboo/scene/redis/redis_open_close.py:372
msgid "{}-更新redis状态"
msgstr "{}-Update redis status"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:159
#: backend/flow/engine/bamboo/scene/redis/redis_open_close.py:146
msgid "{}-更新proxy状态"
msgstr "{}-Update proxy status"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:199
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:635
msgid "{}更新状态子任务"
msgstr "{}Update status subtask"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:274
msgid "Proxy写入元数据"
msgstr "Proxy writes metadata"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:296
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:702
#: backend/flow/engine/bamboo/scene/redis/redis_instance_apply_flow.py:371
msgid "Redis-{}-写入元数据"
msgstr "Redis-{}-write metadata"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:310
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:725
#: backend/flow/engine/bamboo/scene/redis/redis_instance_apply_flow.py:393
#: backend/flow/engine/bamboo/scene/redis/redis_predixy_cluster_apply_flow.py:200
#: backend/flow/engine/bamboo/scene/redis/redis_twemproxy_cluster_apply_flow.py:236
msgid "redis建立主从 元数据"
msgstr "Redis establishes master-slave metadata"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:347
#: backend/flow/engine/bamboo/scene/redis/redis_predixy_cluster_apply_flow.py:240
#: backend/flow/engine/bamboo/scene/redis/redis_twemproxy_cluster_apply_flow.py:275
msgid "建立集群 元数据"
msgstr "Create cluster metadata"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:372
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:761
msgid "更新业务NOSQL DBA"
msgstr "Update business NOSQL DBA"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:383
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:850
msgid "clb元数据写入"
msgstr "clb metadata writing"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:393
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:860
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_rename_domain.py:251
msgid "polairs元数据写入"
msgstr "polars metadata writing"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:447
#: backend/flow/engine/bamboo/scene/redis/redis_predixy_cluster_apply_flow.py:254
#: backend/flow/engine/bamboo/scene/redis/redis_twemproxy_cluster_apply_flow.py:296
msgid "回写集群配置[Redis]"
msgstr "Write back cluster configuration [Redis]"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:465
msgid "回写集群proxy配置"
msgstr "Write back cluster proxy configuration"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:496
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:865
msgid "{}迁移子任务"
msgstr "{}Migrate subtask"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:748
#: backend/flow/engine/bamboo/scene/redis/redis_instance_apply_flow.py:414
msgid "{}-主从实例集群元数据"
msgstr "{}-Master-slave instance cluster metadata"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_migrate_load.py:784
#: backend/flow/engine/bamboo/scene/redis/redis_instance_apply_flow.py:444
msgid "{}-回写集群配置[Redis]"
msgstr "{}-writeback cluster configuration [Redis]"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_proxy_version_upgrade.py:52
msgid "redis集群 {} 目标版本文件为空?"
msgstr "redis cluster{} target version file is empty?"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_proxy_version_upgrade.py:68
msgid "redis集群:{} cluster_type:{} 不认识"
msgstr "redis cluster:{} cluster_type:{} Don&#39;t know"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_proxy_version_upgrade.py:73
msgid "redis集群:{} 目标版本文件:{} 与'版本文件'中文件名称:{} 不同"
msgstr "redis cluster: {} Target version file: {} is different from the file name in &#39;version file&#39;: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_rename_domain.py:115
msgid "cluster_id:{} 当前域名已经是{}，无需重命名"
msgstr "cluster_id:{} The current domain name is already {}, no need to rename it"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_rename_domain.py:158
msgid "更新元数据和cc模块"
msgstr "Update metadata and cc modules"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_rename_domain.py:189
msgid "删除旧域名记录{}"
msgstr "Delete old domain name record{}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_rename_domain.py:206
msgid "删除旧nodes域名记录{}"
msgstr "Delete old nodes domain name records{}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_rename_domain.py:218
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_rename_domain.py:232
msgid "添加新域名记录{}"
msgstr "Add new domain name record{}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_rename_domain.py:264
msgid "集群:{}重命名域名为{}"
msgstr "Cluster:{}Rename the domain name to {}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_auotfix.py:199
msgid "REDIS-故障自愈"
msgstr "REDIS-fault self-healing"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_auotfix.py:252
msgid "故障自愈-{}"
msgstr "Fault self-healing-{}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_auotfix.py:301
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_cmr.py:341
msgid "Proxy-加入集群-{}"
msgstr "Proxy-join cluster-{}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_auotfix.py:338
msgid "提交Proxy下架单-{}"
msgstr "Submit Proxy removal order-{}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_auotfix.py:358
msgid "Proxy自愈-{}"
msgstr "Proxy self-healing-{}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_auotfix.py:523
msgid "提交Redis下架单-{}"
msgstr "Submit Redis delisting order-{}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_cmr.py:212
msgid "REDIS-整机替换"
msgstr "REDIS-whole machine replacement"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_cmr.py:240
msgid "初始化-{}"
msgstr "initialization-{}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_cmr.py:292
msgid "整机替换-{}"
msgstr "Whole machine replacement-{}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_cmr.py:376
msgid "旧Proxy下架-等待确认"
msgstr "The old Proxy has been removed from the shelves - waiting for confirmation"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_mss.py:145
msgid "REDIS-主从切换"
msgstr "REDIS-master-slave switching"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_mss.py:247
msgid "Redis-{}-角色互换"
msgstr "Redis-{}-role reversal"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_mss.py:283
msgid "Redis-{}-刷新监控"
msgstr "Redis-{}-Refresh Monitoring"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_scene_mss.py:292
msgid "Redis-{}-主从切换"
msgstr "Redis-{}-master-slave switching"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_shutdown.py:131
#: backend/flow/engine/bamboo/scene/redis/redis_flush_data.py:118
#: backend/flow/engine/bamboo/scene/redis/redis_ins_shutdown.py:152
#: backend/flow/engine/bamboo/scene/redis/redis_open_close.py:121
#: backend/flow/engine/bamboo/scene/redis/redis_open_close.py:349
msgid "redis请求检查: {}"
msgstr "redis request check: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_shutdown.py:189
msgid "{}卸载bkdbmon"
msgstr "{}Uninstall bkdbmon"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_shutdown.py:208
#: backend/flow/engine/bamboo/scene/redis/redis_data_structure_task_delete.py:191
msgid "{}下架proxy实例"
msgstr "{}Remove the proxy instance"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_shutdown.py:220
msgid "{}下架redis实例"
msgstr "{}Remove the redis instance"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_shutdown.py:235
msgid "删除集群元数据"
msgstr "delete cluster metadata"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:103
msgid "redis集群 {} 目标版本为空?"
msgstr "redis cluster{} target version is empty?"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:115
msgid "redis集群 {},节点类型:{},目标版本 {} 不合法,合法的版本:{}"
msgstr "redis cluster {}, node type: {}, target version {} is illegal, legal version: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:127
msgid "集群{} proxy当前版本{} == 目标版本:{},无需升级"
msgstr "Cluster {} proxy current version {} == target version: {}, no upgrade required"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:133
msgid "集群{} storage当前版本{} == 目标版本:{},无需升级"
msgstr "Cluster {} storage current version {} == target version: {}, no upgrade required"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:137
msgid "集群{} storage当前版本{} > 目标版本:{},不支持降级"
msgstr "Cluster {} storage current version {} &gt; Target version: {}, downgrade is not supported"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:222
msgid "主从所有IP 下发介质包"
msgstr "Master and slave deliver media packages to all IPs"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:255
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:624
msgid "old_slave:{} 版本升级"
msgstr "old_slave:{} version upgrade"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:273
msgid "{} 集群:{}执行 cluster failover"
msgstr "{} Cluster:{}Execute cluster failover"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:295
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:383
msgid "new slave:{} 版本升级"
msgstr "new slave:{} version upgrade"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:319
msgid "集群:{} 主从切换"
msgstr "Cluster:{} master-slave switching"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:329
msgid "Redis-{}-检查切换状态"
msgstr "Redis-{}-check switch status"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:347
msgid "old_master:{} 删除slaveof配置"
msgstr "old_master:{} delete slaveof configuration"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:359
msgid "old_slave:{} 删除slaveof配置"
msgstr "old_slave:{} delete slaveof configuration"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:406
msgid "old_master:{} 清档"
msgstr "old_master:{} Clear files"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:486
msgid "Redis-元数据切换"
msgstr "Redis-metadata switching"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:498
msgid "master:{}-slave:{}-主从交换"
msgstr "master:{}-slave:{}-master-slave exchange"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:513
#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:793
msgid "Redis-元数据更新集群版本"
msgstr "Redis-metadata update cluster version"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:548
msgid "集群{}版本在线升级"
msgstr "Cluster {} version online upgrade"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:578
msgid "master ip:{} 包含了两种角色{}"
msgstr "master ip:{} contains two roles{}"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:594
msgid "主从IP 下发介质包"
msgstr "Master-slave IP delivers media package"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:607
msgid "{}-暂停bkdbmon"
msgstr "{}-pause bkdbmon"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:639
msgid "old_slave:{} slave-read-only设置为yes"
msgstr "old_slave:{} slave-read-only is set to yes"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:656
msgid "cluster:{} 域名指向修改"
msgstr "cluster:{} domain name pointer modification"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:689
msgid "{}-slave提升为master"
msgstr "{}-slave promoted to master"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:706
msgid "new_slave:{} 版本升级"
msgstr "new_slave:{} version upgrade"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:717
msgid "cluster:{} 元数据master和slave互换"
msgstr "cluster:{} Metadata master and slave exchange"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:741
msgid "old master:{} ports:{} 清档"
msgstr "old master:{} ports:{} clear files"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:812
msgid "{}-dbconfig更新版本"
msgstr "{}-dbconfig updated version"

#: backend/flow/engine/bamboo/scene/redis/redis_cluster_version_update_online.py:833
msgid "{}-主从集群版本升级"
msgstr "{}-Master-slave cluster version upgrade"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:122
msgid "REDIS_DATA_STRUCTURE"
msgstr "REDIS_DATA_STRUCTURE"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:144
msgid "是否是集群维度：is_cluster_all:{}"
msgstr "Whether it is a cluster dimension: is_cluster_all:{}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:149
msgid ""
"tendisplus 需要按集群维度进行数据构造，请检查传入的节点：cluster_type is :{},"
"传入节点：master_instances is：{},redis_master_set is :{}"
msgstr "tendisplus needs to construct data according to the cluster dimension, please check the incoming node: cluster_type is: {}, the incoming node: master_instances is: {}, redis_master_set is: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:165
msgid "redis_data_structure_flow 从db_meta 查询的备份节点信息"
msgstr "redis_data_structure_flow backup node information queried from db_meta"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:171
msgid "redis_data_structure_flow 从bklog查询的备份节点信息"
msgstr "redis_data_structure_flow backup node information queried from bklog"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:174
msgid "这个值和部署proxy有关系 redis_instance_set: {}"
msgstr "This value is related to the deployment of proxy redis_instance_set: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:219
msgid ""
"redis_data_structure_flow 源集群和临时集群的节点一一对应关系node_pairs: {}"
msgstr "redis_data_structure_flow One-to-one correspondence between the nodes of the source cluster and the temporary cluster node_pairs: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:229
msgid "Redis-{}-下发actuator包"
msgstr "Redis-{}-distribute actuator package"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:260
msgid "Redis-安装backup-client工具-{}"
msgstr "Redis-install backup-client tool-{}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:291
#: backend/flow/engine/bamboo/scene/redis/redis_keys_delete.py:139
msgid "获取磁盘使用情况: {}"
msgstr "Get disk usage: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:307
msgid "redis_data_structure_flow acts_list_push_json: {}"
msgstr "redis_data_structure_flow acts_list_push_json: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:351
msgid "Redis-临时节点加入源集群cc模块"
msgstr "Redis-temporary node joins the source cluster cc module"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:365
msgid "建立meet关系"
msgstr "Establish a meet relationship"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:391
msgid "{}proxy下发介质包"
msgstr "{}proxy delivers media package"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:409
msgid "{}安装proxy实例"
msgstr "{} install proxy instance"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:426
msgid "meet建立集群关系并检查集群状态"
msgstr "meet establishes cluster relationships and checks cluster status"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:454
msgid "写入构造记录元数据"
msgstr "Writing construction record metadata"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:458
msgid "集群[{}]数据构造"
msgstr "Cluster[{}] data structure"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:474
msgid "generate_acts_list_disk_check_data_params: {}"
msgstr "generate_acts_list_disk_check_data_params: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:478
msgid "generate_acts_list_disk_check full: {}"
msgstr "generate_acts_list_disk_check full: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:486
msgid "generate_acts_list_disk_check binlog: {}"
msgstr "generate_acts_list_disk_check binlog: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:495
msgid "redis 数据构造前置磁盘检查"
msgstr "Redis data structure pre-disk check"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:545
msgid "len(master_instances):{} != len(all_master_instances):{}"
msgstr "len(master_instances):{} != len(all_master_instances):{}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:566
msgid ""
"cluster_type:{}、master_instances_set：{}、all_master_instances_set：{}-> "
"diff:{}"
msgstr "cluster_type:{}、master_instances_set：{}、all_master_instances_set：{}-> diff:{}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:580
msgid "获取的同一批次备份信息_instance_backup: {}"
msgstr "Obtained backup information of the same batch_instance_backup: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:594
msgid ""
"备份文件中没有上报shard_value，集群维度的场景需要校验shard_value信息，请检查"
"备份情况！备份文件：{}"
msgstr "The shard_value is not reported in the backup file. In cluster-dimensional scenarios, the shard_value information needs to be verified. Please check the backup situation! Backup file: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:602
msgid "实例 segment 对应关系，instance_shard_dict: {}"
msgstr "Instance segment correspondence, instance_shard_dict: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:604
msgid "重复的instance值，duplicate_instances: {}"
msgstr "Duplicate instance values, duplicate_instances: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:606
msgid "没有重复的instance值，cluster_id: {}"
msgstr "There are no duplicate instance values, cluster_id: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:622
msgid ""
"cluster_id:{},缺失的shard_value值missing_ranges:{}，可以从instance_shard_dict"
"中看出:{}"
msgstr "cluster_id:{}, missing shard_value missing_ranges:{}, which can be seen from instance_shard_dict: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:628
msgid "没有缺失的shard_value值，cluster_id: {}"
msgstr "No missing shard_value, cluster_id: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:634
msgid "cluster_id: {},所有的instance:{}"
msgstr "cluster_id: {}, all instances: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:635
msgid "cluster_id: {},所有的redis_instance_set:{}"
msgstr "cluster_id: {}, all redis_instance_set: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:701
msgid "__init_builder_cluster_info: {}"
msgstr "__init_builder_cluster_info: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:834
msgid "get_prod_temp_instance_pairs rollback_time: {}"
msgstr "get_prod_temp_instance_pairs rollback_time: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:853
msgid "new_temp_node_pairs: {}"
msgstr "new_temp_node_pairs: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:856
msgid "len(source_ip_map) > 1, source_ip_map: {}"
msgstr "len(source_ip_map) > 1, source_ip_map: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:869
msgid "source_ip_map_source_ports: {}"
msgstr "source_ip_map_source_ports: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:890
msgid "get_prod_temp_instance_pairs len(source_ip_map) = 1"
msgstr "get_prod_temp_instance_pairs len(source_ip_map) = 1"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:913
msgid "redis_data_structure_flow_full_backupinfo: {}"
msgstr "redis_data_structure_flow_full_backupinfo: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:914
msgid "redis_data_structure_flow_binlog_backupinfo: {}"
msgstr "redis_data_structure_flow_binlog_backupinfo: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:974
msgid "源{}构造到临时机{}"
msgstr "source {} constructed into temporary machine {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure.py:976
msgid "源{}payload json下发到临时机{}"
msgstr "Source{}payload json is delivered to the temporary machine{}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure_sub.py:55
msgid "下载{}全备文件到{}"
msgstr "Download {}full file to{}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure_sub.py:65
msgid "集群类型为:{},但是下载的binlog备份信息为0，不符合预期，最少有2个binlog"
msgstr "The cluster type is: {}, but the downloaded binlog backup information is 0, which is not as expected. There are at least 2 binlogs."

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure_sub.py:80
msgid "下载{}binlog文件到{}"
msgstr "Download {}binlog file to {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure_sub.py:85
msgid "下载备份文件到{}"
msgstr "Download backup file to {}"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure_task_delete.py:131
msgid "更新构造记录为销毁中"
msgstr "Update the construction record to be destroyed"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure_task_delete.py:157
#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:72
#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:203
msgid "Redis-{}-下发工具包"
msgstr "Redis-{}-delivery toolkit"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure_task_delete.py:206
msgid "更新构造记录为已销毁"
msgstr "Update the construction record to be destroyed"

#: backend/flow/engine/bamboo/scene/redis/redis_data_structure_task_delete.py:210
msgid "集群[{}]数据构造销毁"
msgstr "Cluster[{}] data structure destruction"

#: backend/flow/engine/bamboo/scene/redis/redis_flush_data.py:146
msgid "redis清档: {}"
msgstr "redis file clear: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_flush_data.py:154
msgid "集群[{}]清档"
msgstr "Cluster[{}] clear file"

#: backend/flow/engine/bamboo/scene/redis/redis_ins_shutdown.py:90
#: backend/flow/engine/bamboo/scene/redis/redis_open_close.py:286
msgid "存在不同的cluster_type。 {} and {}"
msgstr "There are different cluster_types. {} and {}"

#: backend/flow/engine/bamboo/scene/redis/redis_ins_shutdown.py:207
msgid "删除集群{}元数据"
msgstr "Delete cluster{} metadata"

#: backend/flow/engine/bamboo/scene/redis/redis_ins_shutdown.py:221
msgid "{}下架redis实例{}"
msgstr "{}Delete the redis instance{}"

#: backend/flow/engine/bamboo/scene/redis/redis_ins_shutdown.py:237
msgid "{}-卸载bkdbmon"
msgstr "{}-Uninstall bkdbmon"

#: backend/flow/engine/bamboo/scene/redis/redis_instance_apply_flow.py:302
#: backend/flow/engine/bamboo/scene/redis/redis_instance_apply_flow.py:312
msgid "Redis-{}:{}-安装实例"
msgstr "Redis-{}:{}-Installation instance"

#: backend/flow/engine/bamboo/scene/redis/redis_instance_apply_flow.py:381
msgid "建立主从关系-{}-{}"
msgstr "Establish master-slave relationship-{}-{}"

#: backend/flow/engine/bamboo/scene/redis/redis_instance_apply_flow.py:462
msgid "主注册域名"
msgstr "Primary registered domain name"

#: backend/flow/engine/bamboo/scene/redis/redis_instance_apply_flow.py:479
msgid "从注册域名"
msgstr "Register a domain name from"

#: backend/flow/engine/bamboo/scene/redis/redis_instance_apply_flow.py:501
msgid "Redis主从安装-{}"
msgstr "Redis master-slave installation-{}"

#: backend/flow/engine/bamboo/scene/redis/redis_keys_delete.py:115
msgid "按正则删除key: {}"
msgstr "Delete key according to regex: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_keys_delete.py:123
msgid "集群[{}]按正则删除keys"
msgstr "Cluster[{}] deletes keys according to the rules"

#: backend/flow/engine/bamboo/scene/redis/redis_keys_delete.py:148
msgid "获取磁盘空闲最大机器"
msgstr "Get disk free max machine"

#: backend/flow/engine/bamboo/scene/redis/redis_keys_delete.py:158
msgid "按文件删除key"
msgstr "Delete key by file"

#: backend/flow/engine/bamboo/scene/redis/redis_keys_delete.py:163
msgid "集群[{}]按文件删除keys"
msgstr "cluster[{}] delete keys by file"

#: backend/flow/engine/bamboo/scene/redis/redis_keys_extract.py:103
msgid "提取key: {}"
msgstr "Extract key: {}"

#: backend/flow/engine/bamboo/scene/redis/redis_keys_extract.py:110
msgid "集群[{}提取keys"
msgstr "cluster[{} extract keys"

#: backend/flow/engine/bamboo/scene/redis/redis_open_close.py:179
msgid "[{}]卸载bkdbmon"
msgstr "[{}] uninstall bkdbmon"

#: backend/flow/engine/bamboo/scene/redis/redis_open_close.py:181
msgid "[{}]安装bkdbmon"
msgstr "[{}] install bkdbmon"

#: backend/flow/engine/bamboo/scene/redis/redis_open_close.py:201
msgid "集群[{}]启停"
msgstr "Cluster[{}] starts and stops"

#: backend/flow/engine/bamboo/scene/redis/redis_open_close.py:210
msgid "更新集群状态"
msgstr "update cluster status"

#: backend/flow/engine/bamboo/scene/redis/redis_open_close.py:431
msgid "更新集群状态-{}"
msgstr "Update cluster status-{}"

#: backend/flow/engine/bamboo/scene/redis/redis_predixy_cluster_apply_flow.py:183
msgid "建立集群meet关系"
msgstr "Establish a cluster meet relationship"

#: backend/flow/engine/bamboo/scene/redis/redis_predixy_cluster_apply_flow.py:274
msgid "回写集群配置[predixy]"
msgstr "Write back cluster configuration [predixy]"

#: backend/flow/engine/bamboo/scene/redis/redis_predixy_cluster_apply_flow.py:290
msgid "nodes注册域名"
msgstr "nodes registered domain name"

#: backend/flow/engine/bamboo/scene/redis/redis_predixy_cluster_apply_flow.py:304
#: backend/flow/engine/bamboo/scene/redis/redis_twemproxy_cluster_apply_flow.py:331
msgid "proxy注册域名"
msgstr "Register domain name with proxy"

#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:195
msgid "proxy加入集群元数据"
msgstr "proxy joins cluster metadata"

#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:210
msgid "{}新增proxy实例"
msgstr "{}Add proxy instance"

#: backend/flow/engine/bamboo/scene/redis/redis_proxy_scale.py:322
msgid "{}卸载proxy实例"
msgstr "{}Uninstall proxy instance"

#: backend/flow/engine/bamboo/scene/redis/redis_remove_dts_server.py:74
msgid "DTS_Server-{}-删除"
msgstr "DTS_Server-{}-delete"

#: backend/flow/engine/bamboo/scene/redis/redis_remove_dts_server.py:80
msgid "DTS_Server-{}-清理dbmeta"
msgstr "DTS_Server-{}-clean dbmeta"

#: backend/flow/engine/bamboo/scene/redis/redis_remove_dts_server.py:85
msgid "REMOVE DTS_SERVER"
msgstr "REMOVE DTS_SERVER"

#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate.py:120
#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate.py:181
#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate.py:226
msgid "REDIS_SLOTS_MIGRATE"
msgstr "REDIS_SLOTS_MIGRATE"

#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate.py:136
#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate.py:235
msgid "{}slots 迁移"
msgstr "{}slots migration"

#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate.py:191
msgid "{}slots迁移扩容"
msgstr "{}slots migration and expansion"

#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:91
msgid "迁移特定slots子任务-{}"
msgstr "Migrate specific slots subtask-{}"

#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:111
msgid "写入slots 迁移记录数据"
msgstr "Write slots migration record data"

#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:117
msgid "迁移slots{}"
msgstr "Migrate slots{}"

#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:171
msgid "缩容组数: {}小于1 ,pelase check!"
msgstr "Number of shrinking groups: {} is less than 1, pelase check!"

#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:179
msgid "+===+++++===缩容节点 contraction_instance: {} +++++===++++ "
msgstr "+====++++++===Shrink node contraction_instance: {} +++++===++++"

#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:186
msgid "+===+++++===下架实例shutdown_ip_ports: {} +++++===++++ "
msgstr "+====++++++===Shutdown_ip_ports: {} +++++===++++"

#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:223
msgid "集群迁移slots缩容-{}"
msgstr "Cluster migration slots reduction-{}"

#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:250
msgid "集群关系清理"
msgstr "Cluster relationship cleanup"

#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:297
msgid "写入slots 迁移缩容记录数据"
msgstr "Write slots and migrate the shrinkage record data"

#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:303
msgid "迁移slots缩容{}"
msgstr "Migrate slots and shrink {}"

#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:408
msgid "+===+++++===新部署节点new_ins_pair_map: {} +++++===++++ "
msgstr "+====++++++===New deployment node new_ins_pair_map: {} +++++===++++"

#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:414
msgid "新节点加入源集群和做主从-{}"
msgstr "New nodes join the source cluster and act as master-slave-{}"

#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:440
msgid "集群reblance扩容-{}"
msgstr "Cluster reblance expansion-{}"

#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:503
msgid "写入slots 迁移扩容记录数据"
msgstr "Write slots migration expansion record data"

#: backend/flow/engine/bamboo/scene/redis/redis_slots_migrate_sub.py:508
msgid "迁移slots扩容{}"
msgstr "Migrate slots and expand {}"

#: backend/flow/engine/bamboo/scene/redis/redis_twemproxy_cluster_apply_flow.py:316
msgid "回写集群配置[Twemproxy]"
msgstr "Write back cluster configuration [Twemproxy]"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:109
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_enable_flow.py:64
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_migrate_flow.py:99
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_reboot_flow.py:60
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_out_flow.py:106
msgid "下发actuator以及riak介质"
msgstr "Deliver actuator and riak media"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:121
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_out_flow.py:132
msgid "actuator_riak系统配置初始化"
msgstr "actuator_riak system configuration initialization"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:135
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_out_flow.py:145
msgid "actuator_riak部署节点"
msgstr "actuator_riak deployment node"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:149
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_out_flow.py:158
msgid "actuator_riak节点加入集群"
msgstr "The actuator_riak node joins the cluster"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:163
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_in_flow.py:124
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_out_flow.py:171
msgid "actuator_集群变更生效"
msgstr "actuator_cluster changes take effect"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:176
msgid "actuator_初始化bucket_type"
msgstr "actuator_init bucket_type"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:190
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_destroy_flow.py:102
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_disable_flow.py:115
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_enable_flow.py:89
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_migrate_flow.py:113
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_in_flow.py:163
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_out_flow.py:197
msgid "riak修改元数据"
msgstr "riak modify metadata"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:209
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_migrate_flow.py:132
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_out_flow.py:216
msgid "actuator_{}部署定时任务和riak监控"
msgstr "actuator_{} deploys scheduled tasks and riak monitoring"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_apply_flow.py:215
msgid "部署Riak集群"
msgstr "Deploy the Riak cluster"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_destroy_flow.py:62
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_disable_flow.py:61
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_enable_flow.py:61
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_in_flow.py:70
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_out_flow.py:77
msgid "获取集群中的节点"
msgstr "Get the nodes in the cluster"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_destroy_flow.py:76
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_disable_flow.py:76
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_in_flow.py:85
msgid "actuator_连接检查"
msgstr "actuator_connection check"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_destroy_flow.py:89
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_in_flow.py:150
msgid "actuator_下架"
msgstr "actuator_removed"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_destroy_flow.py:112
msgid "Riak集群下架"
msgstr "Riak cluster removed"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_disable_flow.py:89
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_in_flow.py:98
msgid "actuator_关闭riak监控"
msgstr "actuator_turn off riak monitoring"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_disable_flow.py:102
msgid "actuator_关闭riak实例"
msgstr "actuator_close riak instance"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_disable_flow.py:125
msgid "Riak集群禁用"
msgstr "Riak cluster disabled"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_enable_flow.py:76
msgid "actuator_开启riak实例"
msgstr "actuator_Open riak instance"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_enable_flow.py:100
msgid "actuator_开启riak监控"
msgstr "actuator_turn on riak monitoring"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_enable_flow.py:112
msgid "Riak集群启用"
msgstr "Riak cluster enabled"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_migrate_flow.py:137
msgid "集群[{}]的迁移任务"
msgstr "Migration tasks for cluster [{}]"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_migrate_flow.py:139
msgid "构建riak集群迁移流程成功"
msgstr "The migration process of building riak cluster was successful"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_reboot_flow.py:72
msgid "actuator_重启riak实例"
msgstr "actuator_restart riak instance"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_reboot_flow.py:84
msgid "Riak重启实例"
msgstr "Riak restart instance"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_in_flow.py:111
msgid "actuator_riak集群剔除节点"
msgstr "actuator_riak cluster culling nodes"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_in_flow.py:137
#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_out_flow.py:184
msgid "actuator_检查数据搬迁进度"
msgstr "actuator_Check data migration progress"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_in_flow.py:173
msgid "Riak集群缩容"
msgstr "Riak cluster scaling down"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_out_flow.py:118
msgid "actuator_riak获取集群配置"
msgstr "actuator_riak gets cluster configuration"

#: backend/flow/engine/bamboo/scene/riak/riak_cluster_scale_out_flow.py:222
msgid "Riak集群扩容"
msgstr "Riak cluster expansion"

#: backend/flow/engine/bamboo/scene/spider/append_deploy_ctl_flow.py:162
msgid "DRS查询集群系统密码失败:{}"
msgstr "DRS failed to query the cluster system password: {}"

#: backend/flow/engine/bamboo/scene/spider/append_deploy_ctl_flow.py:165
msgid "查询原系统账户存在多个或者不存在,暂时与dbm系统不兼容"
msgstr "Query whether there are multiple or non-existent accounts in the original system. It is temporarily incompatible with the dbm system."

#: backend/flow/engine/bamboo/scene/spider/append_deploy_ctl_flow.py:183
msgid "DRS查询字符集失败:{}"
msgstr "DRS query character set failed: {}"

#: backend/flow/engine/bamboo/scene/spider/append_deploy_ctl_flow.py:187
msgid "获取字符集为空..."
msgstr "Get charset is empty..."

#: backend/flow/engine/bamboo/scene/spider/append_deploy_ctl_flow.py:188
msgid "获取字符集为空"
msgstr "get character set is empty"

#: backend/flow/engine/bamboo/scene/spider/append_deploy_ctl_flow.py:216
msgid "至少需要2个以上的spider节点"
msgstr "At least 2 spider nodes are required"

#: backend/flow/engine/bamboo/scene/spider/append_deploy_ctl_flow.py:223
msgid "沒有发现remote节点"
msgstr "No remote node found"

#: backend/flow/engine/bamboo/scene/spider/append_deploy_ctl_flow.py:255
msgid "下发tdbCtl介质包"
msgstr "Deliver tdbCtl media package"

#: backend/flow/engine/bamboo/scene/spider/append_deploy_ctl_flow.py:293
msgid "安装Tdbctl集群中控实例"
msgstr "Install Tdbctl cluster central control instance"

#: backend/flow/engine/bamboo/scene/spider/append_deploy_ctl_flow.py:312
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:357
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:588
msgid "集群内部节点间授权"
msgstr "Inter-node authorization within the cluster"

#: backend/flow/engine/bamboo/scene/spider/append_deploy_ctl_flow.py:330
msgid "初始化中控tdbctl节点间关系"
msgstr "Initialize the relationship between central control tdbctl nodes"

#: backend/flow/engine/bamboo/scene/spider/append_deploy_ctl_flow.py:349
msgid "从本地spider复制表结构到Master中控节点"
msgstr "Copy the table structure from the local spider to the Master central control node"

#: backend/flow/engine/bamboo/scene/spider/append_deploy_ctl_flow.py:358
msgid "校验spider和tdbctl节点表的数量"
msgstr "Verify the number of spider and tdbctl node tables"

#: backend/flow/engine/bamboo/scene/spider/append_deploy_ctl_flow.py:369
msgid "初始化中控节与spider,remote点间关系"
msgstr "Initialize the relationship between the central control node and spider and remote points"

#: backend/flow/engine/bamboo/scene/spider/append_deploy_ctl_flow.py:375
msgid "[{}]追加部署tdbctl&迁移表结构"
msgstr "[{}]Additional deployment of tdbctl&amp;migration table structure"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:108
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:255
msgid "下发spider安装介质"
msgstr "Deliver the spider installation media"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:141
msgid "安装Spider_slave实例"
msgstr "Install the spider_slave instance"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:157
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:320
msgid "克隆权限到spider节点[{}]"
msgstr "Clone permissions to the spider node [{}]"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:177
#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:344
msgid "添加对应路由关系"
msgstr "Add corresponding routing relationship"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:204
msgid "集群[{}]添加spider slave节点"
msgstr "Cluster [{}] add spider slave node"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:288
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:302
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:563
msgid "安装Spider实例"
msgstr "Install the Spider instance"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:304
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:318
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:579
msgid "安装Spider集群中控实例"
msgstr "Install the control instance of the Spider cluster"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:383
msgid "集群[{}]添加spider {}节点"
msgstr "Cluster [{}] adds spider {} node"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:411
msgid "下发Spider周边程序介质"
msgstr "Deliver Spider peripheral program media"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:438
msgid "spider[{}]安装DBATools工具箱"
msgstr "spider[{}] installs the DBATools toolbox"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:454
msgid "spider[{}]安装mysql-monitor"
msgstr "spider[{}] install mysql-monitor"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:474
msgid "spider[{}]安装备份程序"
msgstr "spider[{}] install backup program"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:503
msgid "安装Spider周边程序"
msgstr "Install the Spider peripheral program"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:553
msgid "建立spider-ctl数据同步"
msgstr "Establish spider-ctl data synchronization"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:621
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_destroy.py:155
msgid "卸载spider实例"
msgstr "Uninstall the spider instance"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:647
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_destroy.py:169
msgid "卸载中控实例"
msgstr "Uninstall the central control instance"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:669
msgid "清理机器周边配置"
msgstr "Clean up machine peripheral configuration"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:674
msgid "下架spider节点"
msgstr "Remove spider node"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:704
msgid "切换ctl中控集群"
msgstr "Switch ctl central control cluster"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:719
msgid "卸载中控实例路由[{}]"
msgstr "Uninstall central control instance routing[{}]"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:732
msgid "删除中控的路由节点"
msgstr "Delete the routing node of the central control"

#: backend/flow/engine/bamboo/scene/spider/common/common_sub_flow.py:832
msgid "执行成对切换"
msgstr "Perform pairwise switching"

#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:17
msgid "Flow模块TenDB Cluster异常"
msgstr "Flow Module TenDB Cluster Abnormal"

#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:28
msgid "添加spider-master节点是分配incr初始值失败"
msgstr "Adding a spider-master node fails to assign the initial value of incr"

#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:34
msgid "添加spider节点路由失败"
msgstr "Failed to add spider node route"

#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:40
msgid "中控集群切换失败"
msgstr "Central control cluster switching failed"

#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:46
msgid "删除spider节点路由失败"
msgstr "Failed to delete spider node route"

#: backend/flow/engine/bamboo/scene/spider/common/exceptions.py:64
msgid "获取集群信息失败"
msgstr "Failed to obtain cluster information"

#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:248
msgid "查询remotedb version 失败"
msgstr "Query remotedb version failed"

#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:254
msgid "backend remote 存在多个版本:{}"
msgstr "There are multiple versions of backend remote:{}"

#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:264
msgid "查询spider version 失败"
msgstr "Query spider version failed"

#: backend/flow/engine/bamboo/scene/spider/import_sqlfile_flow.py:273
msgid "spider中存在多个大版本不一致的情况:{},请找DBA处理下"
msgstr "There are inconsistencies between multiple major versions in the spider: {}, please ask the DBA to handle it"

#: backend/flow/engine/bamboo/scene/spider/remote_local_slave_recover.py:225
msgid "{} shard {} 原地重建"
msgstr "{} shard {} Rebuild in place"

#: backend/flow/engine/bamboo/scene/spider/remote_local_slave_recover.py:242
msgid "切换回原slave节点"
msgstr "Switch back to the original slave node"

#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_migrate.py:224
#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:235
msgid "安装remote主从节点"
msgstr "Install remote master-slave nodes"

#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_migrate.py:255
#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:264
msgid "获取集群分片 {} shard {}  的备份信息失败"
msgstr "Failed to obtain backup information of cluster shard {} shard {}"

#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_migrate.py:279
#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:288
msgid "同步完毕,写入数据节点的主从关系"
msgstr "After synchronization is completed, the master-slave relationship of the data node is written."

#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_migrate.py:290
msgid "恢复分片{}数据"
msgstr "Restore shard {} data"

#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_migrate.py:319
msgid "remote机器切换完毕后修改元数据指向"
msgstr "Modify the metadata pointer after the remote machine is switched."

#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_migrate.py:329
#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:332
msgid "切换remote node 节点"
msgstr "Switch remote node node"

#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_migrate.py:347
#: backend/flow/engine/bamboo/scene/spider/remote_slave_recover.py:306
#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:352
msgid "新机器安装周边组件"
msgstr "New machine installation peripheral components"

#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_migrate.py:362
#: backend/flow/engine/bamboo/scene/spider/remote_slave_recover.py:320
#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:368
msgid "切换后重新安装周边组件"
msgstr "Reinstall peripheral components after switching"

#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_migrate.py:382
msgid "整机卸载成功前删除元数据"
msgstr "Delete metadata before successful uninstallation of the entire machine"

#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_migrate.py:428
#: backend/flow/engine/bamboo/scene/spider/remote_slave_recover.py:386
#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:435
msgid "集群迁移{}"
msgstr "Cluster migration{}"

#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_swtich.py:138
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_master_slave_switch.py:173
msgid "执行切换"
msgstr "Execute switch"

#: backend/flow/engine/bamboo/scene/spider/remote_master_slave_swtich.py:173
msgid "[{}]集群后端切换"
msgstr "[{}]Cluster backend switching"

#: backend/flow/engine/bamboo/scene/spider/remote_slave_recover.py:191
msgid "安装remote从节点"
msgstr "Install remote slave node"

#: backend/flow/engine/bamboo/scene/spider/remote_slave_recover.py:250
msgid "{}:{}恢复实例数据"
msgstr "{}:{}Restore instance data"

#: backend/flow/engine/bamboo/scene/spider/remote_slave_recover.py:273
msgid "切换到新SLAVE机器"
msgstr "Switch to new SLAVE machine"

#: backend/flow/engine/bamboo/scene/spider/remote_slave_recover.py:279
msgid "SLAVE切换完毕后修改元数据指向"
msgstr "After the SLAVE switch is completed, modify the metadata pointer"

#: backend/flow/engine/bamboo/scene/spider/remote_slave_recover.py:289
msgid "切换SLAVE节点"
msgstr "Switch SLAVE node"

#: backend/flow/engine/bamboo/scene/spider/spider_add_mnt.py:111
msgid "{}添加spider_mnt节点流程"
msgstr "{}Add spider_mnt node process"

#: backend/flow/engine/bamboo/scene/spider/spider_add_nodes.py:100
msgid "[{}]The cluster has not added a slave cluster, skip"
msgstr "[{}]The cluster has not added a slave cluster, skip"

#: backend/flow/engine/bamboo/scene/spider/spider_add_nodes.py:106
msgid "[{}]This type of role addition is not supported"
msgstr "[{}]This type of role addition is not supported"

#: backend/flow/engine/bamboo/scene/spider/spider_add_nodes.py:109
msgid "build spider-add-nodes-pipeline failed"
msgstr "build spider-add-nodes-pipeline failed"

#: backend/flow/engine/bamboo/scene/spider/spider_add_nodes.py:153
msgid "[{}]添加spider-master节点流程"
msgstr "[{}] Add spider-master node process"

#: backend/flow/engine/bamboo/scene/spider/spider_add_nodes.py:192
msgid "[{}]添加spider-slave节点流程"
msgstr "[{}] Add spider-slave node process"

#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:171
msgid "分片{}:创建临时用户"
msgstr "Shard{}: create temporary user"

#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:225
msgid "分片{}:master[{}{}{}],slave[{}{}{}]的校验结果"
msgstr "Verification results of fragment {}:master[{}{}{}],slave[{}{}{}]"

#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:240
msgid "分片{}:master[{}{}{}]的校验任务"
msgstr "Fragment {}:master[{}{}{}] verification task"

#: backend/flow/engine/bamboo/scene/spider/spider_checksum.py:248
msgid "集群[{}]的校验任务"
msgstr "Validation task for cluster [{}]"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:137
msgid "构造库表备份流程成功"
msgstr "The database table backup process is successful"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:164
msgid "构造 spider/ctl mydumper正则"
msgstr "Construct spider/ctl mydumper regular"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:188
msgid "spider 执行库表备份"
msgstr "spider performs database table backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:200
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:191
msgid "spider/ctl备份库表结构"
msgstr "spider/ctl backup database table structure"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:254
msgid "构造remote mydumper正则"
msgstr "Construct remote mydumper regular"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:272
msgid "remote 执行库表备份"
msgstr "Remote performs database table backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:284
msgid "remote 备份库表"
msgstr "remote backup database table"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:310
msgid "构造运维节点正则"
msgstr "Construct operation and maintenance node rules"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:328
msgid "运维节点执行库表备份"
msgstr "The operation and maintenance node performs database table backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_db_table_backup.py:339
msgid "spider_mnt库表备份"
msgstr "spider_mnt database table backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:93
msgid ""
"传入参数有异常，请检查！len(remote_group)*remote_shard_num != "
"cluster_shard_num"
msgstr "There is an exception in the parameters passed in, please check! len(remote_group)*remote_shard_num != cluster_shard_num"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:232
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:493
msgid "下发Spider/tdbCtl介质包"
msgstr "Deliver the Spider/tdbCtl media package"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:283
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:544
msgid "安装tokudb引擎"
msgstr "Install tokudb engine"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:369
#: backend/flow/engine/bamboo/scene/spider/spider_cluster_deploy.py:602
msgid "初始化集群节点间关系"
msgstr "Initialize the relationship between cluster nodes"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_destroy.py:203
msgid "下架TenDB-Cluster集群[{}]"
msgstr "Remove the TenDB-Cluster cluster[{}]"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_disable_deploy.py:97
msgid "检测Spider端连接情况"
msgstr "Detect Spider side connection status"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_disable_deploy.py:140
msgid "重启spider实例"
msgstr "Restart the spider instance"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_enable_deploy.py:146
msgid "启用spider集群[{}]"
msgstr "Enable spider cluster[{}]"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_flashback.py:173
msgid "端口 {} 执行闪回"
msgstr "Port{} perform flashback"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_flashback.py:189
msgid "{} 闪回"
msgstr "{} Flashback"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_flashback.py:193
msgid "{} flashback"
msgstr "{} flashback"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_flashback.py:197
msgid "构造flashback流程成功"
msgstr "Constructing flashback process successfully"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:139
msgid "{} 全备"
msgstr "{} full recovery"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:142
msgid "构造全库备份流程成功"
msgstr "The process of constructing the full database backup is successful"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:179
msgid "spider 执行全库备份"
msgstr "The spider performs a full database backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:229
msgid "remote 执行全库备份"
msgstr "remote perform full database backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:242
msgid "remote 全库备份"
msgstr "remote full database backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:316
msgid "运维节点执行全库备份"
msgstr "The operation and maintenance node performs full database backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_full_backup.py:328
msgid "spider_mnt全库备份"
msgstr "spider_mnt full database backup"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_metadata_import_flow.py:52
msgid "构建TenDB Cluster元数据导入流程成功"
msgstr "Building TenDB Cluster metadata import process successfully"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_rollback_flow.py:101
#: backend/flow/plugins/components/collections/mysql/mysql_rollback_data_download_binlog.py:55
msgid "获取实例 {} 的备份信息失败"
msgstr "Failed to obtain backup information for instance {}"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_rollback_flow.py:108
msgid "下发actuator工具 {}"
msgstr "Distribute actuator tool{}"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_rollback_flow.py:122
msgid "获取spider节点备份信息不存在"
msgstr "Obtaining spider node backup information does not exist"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_rollback_flow.py:124
msgid "获取spider节点备份信息为空"
msgstr "Obtaining spider node backup information is empty"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_rollback_flow.py:182
msgid "恢复spider节点数据"
msgstr "Restore spider node data"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_rollback_flow.py:258
msgid "恢复remote节点数据"
msgstr "Restore remote node data"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_rollback_flow.py:262
msgid "集群回档: src:{} desc:{}"
msgstr "Cluster rollback: src:{} desc:{}"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:126
msgid "构建TenDBCluster集群标准化流程成功"
msgstr "The standardization process for building TenDBCluster cluster was successful"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:220
msgid "spider master 标准化"
msgstr "spider master standardization"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:223
msgid "spider slave 标准化"
msgstr "spider slave standardization"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:226
msgid "spider mnt 标准化"
msgstr "spider mnt standardization"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:247
msgid "remote 标准化"
msgstr "remote standardization"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_standardize_flow.py:275
msgid "系统库表权限标准化"
msgstr "Standardization of system library table permissions"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:183
msgid "在中控建立备份库表"
msgstr "Create a backup database table in the central control"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:221
msgid "{} 预清理备份库"
msgstr "{} Pre-clean backup library"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:273
msgid "在中控执行清档"
msgstr "Perform clearance in central control"

#: backend/flow/engine/bamboo/scene/spider/spider_cluster_truncate_database.py:308
msgid "构造清档流程成功"
msgstr "Construction cleanup process succeeded"

#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:104
msgid "partition_sql_file_{}_{}.json"
msgstr "partition_sql_file_{}_{}.json"

#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:106
#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:117
#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:132
#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:149
#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:169
msgid "{}: {}"
msgstr "{}: {}"

#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:132
msgid "下发dbactor文件"
msgstr "Distribute dbactor files"

#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:183
#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:187
#: backend/flow/engine/bamboo/scene/spider/spider_partition_cron.py:82
#: backend/flow/engine/bamboo/scene/spider/spider_partition_cron.py:86
msgid "录入分区日志"
msgstr "Enter partition log"

#: backend/flow/engine/bamboo/scene/spider/spider_partition.py:188
msgid "构建spider partition流程成功"
msgstr "Build the spider partition process successfully"

#: backend/flow/engine/bamboo/scene/spider/spider_partition_cron.py:87
msgid "构建spider partition 定时任务流程成功"
msgstr "The scheduled task process of building spider partition was successful"

#: backend/flow/engine/bamboo/scene/spider/spider_recover.py:67
#: backend/flow/engine/bamboo/scene/spider/spider_recover.py:165
msgid "下载定点恢复的全库备份介质到{}:{}"
msgstr "Download the full database backup media for fixed-point recovery to {}:{}"

#: backend/flow/engine/bamboo/scene/spider/spider_recover.py:75
#: backend/flow/engine/bamboo/scene/spider/spider_recover.py:173
msgid "定点恢复之恢复数据{}:{}"
msgstr "Fixed-point recovery of recovered data{}:{}"

#: backend/flow/engine/bamboo/scene/spider/spider_recover.py:101
#: backend/flow/engine/bamboo/scene/spider/spider_recover.py:199
msgid "下载定点恢复的binlog到{}:{}"
msgstr "Download the binlog of fixed-point recovery to {}:{}"

#: backend/flow/engine/bamboo/scene/spider/spider_recover.py:109
#: backend/flow/engine/bamboo/scene/spider/spider_recover.py:206
msgid "定点恢复之前滚binlog{}:{}"
msgstr "Roll binlog{}:{} before fixed-point recovery"

#: backend/flow/engine/bamboo/scene/spider/spider_recover.py:114
msgid "spider恢复:{}"
msgstr "spider recovery:{}"

#: backend/flow/engine/bamboo/scene/spider/spider_recover.py:211
msgid "定点恢复 {}:{}"
msgstr "Fixed point recovery{}:{}"

#: backend/flow/engine/bamboo/scene/spider/spider_recover.py:216
msgid "Remote node {} 恢复: 主 {} 从 {} "
msgstr "Remote node {} recovery: master {} slave {}"

#: backend/flow/engine/bamboo/scene/spider/spider_reduce_mnt.py:68
#: backend/flow/engine/bamboo/scene/spider/spider_reduce_nodes.py:144
msgid "删除spider的路由关系"
msgstr "Delete spider&#39;s routing relationship"

#: backend/flow/engine/bamboo/scene/spider/spider_reduce_mnt.py:81
#: backend/flow/engine/bamboo/scene/spider/spider_reduce_nodes.py:157
msgid "回收对应spider集群映射"
msgstr "Recycle the corresponding spider cluster mapping"

#: backend/flow/engine/bamboo/scene/spider/spider_reduce_mnt.py:105
msgid "[{}]下架spider运维节点流程"
msgstr "[{}] Process of delisting spider operation and maintenance nodes"

#: backend/flow/engine/bamboo/scene/spider/spider_reduce_nodes.py:74
msgid "集群最后不能少于{}个spider_master实例,或者不能大于集群存量[{}]"
msgstr "The final cluster cannot have less than {} spider_master instances, or cannot be larger than the cluster stock [{}]"

#: backend/flow/engine/bamboo/scene/spider/spider_reduce_nodes.py:84
msgid "集群最后不能少于{}个spider_slave实例，或者不能大于集群存量[{}]"
msgstr "The final cluster cannot have less than {} spider_slave instances, or cannot be larger than the cluster stock [{}]"

#: backend/flow/engine/bamboo/scene/spider/spider_reduce_nodes.py:182
msgid "[{}]减少spider节点流程"
msgstr "[{}] Reduce spider node process"

#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:135
msgid "{}集群分片计算错误 remote_shard_num:{} x remote_group:{} != {}"
msgstr "{}Cluster shard calculation error remote_shard_num:{} x remote_group:{} != {}"

#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:322
msgid "整集群切换完毕后修改元数据指向"
msgstr "After the entire cluster is switched, modify the metadata pointer."

#: backend/flow/engine/bamboo/scene/spider/spider_remotedb_rebalance_flow.py:389
msgid "整机卸载前删除元数据"
msgstr "Delete metadata before uninstalling the entire machine"

#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:169
msgid "在中控建立目标库表"
msgstr "Create a target database table in the central control"

#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:204
msgid "{} 预清理目标库"
msgstr "{} Pre-clean target library"

#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:232
msgid "{} 执行重命名"
msgstr "{} perform rename"

#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:253
msgid "在中控执行重命名"
msgstr "Perform rename in central control"

#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:266
msgid "{} 库表重命名"
msgstr "{} rename database table"

#: backend/flow/engine/bamboo/scene/spider/spider_rename_database_flow.py:272
msgid "构造数据库重命名流程成功"
msgstr "Construction database renaming process succeeded"

#: backend/flow/engine/bamboo/scene/spider/spider_slave_cluster_deploy.py:117
msgid "[{}]添加slave集群"
msgstr "[{}]Add slave cluster"

#: backend/flow/engine/bamboo/scene/spider/spider_slave_cluster_destroy.py:89
msgid "删除spider路由关系"
msgstr "Delete spider routing relationship"

#: backend/flow/engine/bamboo/scene/spider/spider_slave_cluster_destroy.py:138
msgid "只读接入层[{}]下架"
msgstr "Read-only access layer [{}] removed"

#: backend/flow/engine/bamboo/scene/sqlserver/build_database_sync.py:61
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_add_slave.py:145
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_backup_dbs.py:78
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_clean_dbs.py:93
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_disable.py:79
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_reset.py:111
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_db_construct.py:176
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:110
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:322
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_master_slave_switch.py:137
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_rename_dbs.py:93
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:122
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:330
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_sql_execute.py:140
msgid "create job user"
msgstr "create job user"

#: backend/flow/engine/bamboo/scene/sqlserver/build_database_sync.py:93
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_add_slave.py:191
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_backup_dbs.py:130
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_clean_dbs.py:139
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_disable.py:157
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_reset.py:260
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_db_construct.py:287
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:259
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:426
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_master_slave_switch.py:196
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_rename_dbs.py:139
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:256
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:454
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_sql_execute.py:165
msgid "drop job user"
msgstr "drop job user"

#: backend/flow/engine/bamboo/scene/sqlserver/build_database_sync.py:98
msgid "{}集群建立数据库同步"
msgstr "{}Cluster establishment database synchronization"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:97
msgid "流程中安装机器【{}】没有存入bk_host_id,请联系系统管理员\n"
msgstr "The installation machine [{}] during the process did not save bk_host_id, please contact the system administrator\n"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:149
msgid "下发安装包介质"
msgstr "Distribute installation package media"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:173
msgid "安装Sqlserver实例:{}"
msgstr "Install Sqlserver instance:{}"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:189
msgid "初始化Sqlserver实例:{}"
msgstr "Initialize Sqlserver instance:{}"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:200
msgid "安装sqlserver实例"
msgstr "Install sqlserver instance"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:230
msgid "[{}]替换主域名映射"
msgstr "[{}]Replace primary domain name mapping"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:247
msgid "[{}]替换从域名映射"
msgstr "[{}] Replacement from domain name mapping"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:261
msgid "变更集群[{}]域名映射"
msgstr "Change cluster [{}] domain name mapping"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:296
msgid "检查实例{}:{}是否存在没有同步的数据库"
msgstr "Check if there is an unsynchronized database in instance {}:{}"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:305
msgid "检查实例{}:{}是否有异常状态DB"
msgstr "Check whether the instance {}:{} has an abnormal status DB"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:319
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_disable.py:102
msgid "检查实例{}:{}是否有业务链接"
msgstr "Check whether the instance {}:{} has a business link"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:330
msgid "预检测"
msgstr "pretest"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:343
msgid "克隆实例周边配置"
msgstr "Clone instance peripheral configuration"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:375
msgid "克隆Users"
msgstr "CloneUsers"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:389
msgid "克隆LinkServer"
msgstr "CloneLinkServer"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:403
msgid "克隆Jobs"
msgstr "Clone Jobs"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:424
msgid "建立数据库同步子流程"
msgstr "Establish database synchronization sub-process"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:466
msgid "禁用backup jobs"
msgstr "Disable backup jobs"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:474
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_backup_dbs.py:100
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_clean_dbs.py:115
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_destroy.py:85
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_disable.py:91
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_reset.py:123
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_standardization.py:78
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:131
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:334
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_master_slave_switch.py:82
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_rename_dbs.py:115
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:134
msgid "下发执行器"
msgstr "Issue executor"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:485
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_backup_dbs.py:112
msgid "执行数据库备份"
msgstr "Perform database backup"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:502
msgid "执行数据库日志备份"
msgstr "Perform database log backup"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:519
msgid "传送文件到目标机器"
msgstr "Transfer files to target machine"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:535
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_db_construct.py:244
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:198
msgid "恢复全量备份数据[{}]"
msgstr "Restore full backup data[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:556
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:221
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:388
msgid "恢复增量备份数据[{}]"
msgstr "Restore incremental backup data[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:582
msgid "在master建立数据同步[{}]"
msgstr "Establish data synchronization on master[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:594
msgid "启动backup jobs"
msgstr "Start backup jobs"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:661
msgid "集群[{}]初始化app_setting表"
msgstr "Cluster[{}] initialize app_setting table"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:678
msgid "install_surrounding_apps_sub_flow的子流程列表为空"
msgstr "The subprocess list for install_surrounding_apps_sub_flow is empty"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:681
msgid "部署sqlserver周边程序"
msgstr "Deploy sqlserver peripheral programs"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:726
msgid "[{}]为alwaysOn做别名初始化"
msgstr "[{}] Do alias initialization for alwaysOn"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:747
msgid "[{}]集群配置可用组"
msgstr "[{}]Cluster configuration available group"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:764
msgid "集群[{}]建立AlwaysOn可用组"
msgstr "Cluster [{}] creates AlwaysOn availability group"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:774
#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:801
msgid "下载备份文件"
msgstr "Download backup file"

#: backend/flow/engine/bamboo/scene/sqlserver/common_sub_flow.py:787
msgid "判断备份文件存在本地机器"
msgstr "Determine whether the backup file exists on the local machine"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_add_slave.py:202
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:465
msgid "[{}]集群与新slave建立关系"
msgstr "[{}]The cluster establishes a relationship with the new slave"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_add_slave.py:209
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_master_slave_switch.py:208
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:472
msgid "变更元信息"
msgstr "Change meta information"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_add_slave.py:232
msgid "添加slave[{}]"
msgstr "add slave[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_authorize_rules.py:40
msgid "添加sqlserver规则授权"
msgstr "Add sqlserver rule authorization"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_backup_dbs.py:89
msgid "检查需要备份的库是否存在"
msgstr "Check whether the library to be backed up exists"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_backup_dbs.py:135
msgid "{}执行备份"
msgstr "{}Perform backup"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_clean_dbs.py:104
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_rename_dbs.py:104
msgid "检查需要清理的库是否存在"
msgstr "Check whether the library that needs to be cleaned exists"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_clean_dbs.py:127
msgid "执行数据库清档"
msgstr "Perform database cleanup"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_clean_dbs.py:144
msgid "{}集群执行清档"
msgstr "{}Cluster execution cleanup"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_destroy.py:100
msgid "卸载实例[{}:{}]"
msgstr "Uninstall instance[{}:{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_destroy.py:127
msgid "清理元信息"
msgstr "Clean up meta information"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_destroy.py:136
msgid "{}集群下架"
msgstr "{}Cluster removed"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_disable.py:118
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:664
msgid "[{}]禁用业务账号"
msgstr "[{}]Disable business account"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_disable.py:133
msgid "主动在实例{}:{}kill业务链接"
msgstr "Actively kill business links in instance {}:{}"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_disable.py:162
msgid "{}集群禁用"
msgstr "{}Cluster disabled"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_enable.py:61
msgid "[{}]启动业务账号"
msgstr "[{}]Activate business account"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_enable.py:85
msgid "{}集群启动"
msgstr "{}Cluster startup"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_reset.py:141
msgid "[{}]清理Job/LinkServer"
msgstr "[{}]Clean up Job/LinkServer"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_reset.py:163
msgid "[{}]清理业务账号"
msgstr "[{}]Clear business account"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_reset.py:179
msgid "清理数据库"
msgstr "Clean database"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_reset.py:191
msgid "回收集群的旧域名"
msgstr "Recycle the old domain name of the cluster"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_reset.py:235
msgid "重置集群元信息"
msgstr "Reset cluster meta information"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_reset.py:265
msgid "{}集群重置"
msgstr "{}Cluster reset"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_standardization.py:102
msgid "实例接入标准化[{}:{}]"
msgstr "Instance access standardization [{}:{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_standardization.py:120
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_standardization.py:135
msgid "添加域名{}"
msgstr "Add domain name{}"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_standardization.py:151
msgid "集群标准化[{}]"
msgstr "Cluster normalization[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_cluster_standardization.py:177
msgid "集群标准化"
msgstr "cluster normalization"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_db_construct.py:188
msgid "下发执行器到目标集群master[{}]"
msgstr "Send the executor to the target cluster master[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_db_construct.py:209
msgid "下载全量备份文件到目标集群master[{}]"
msgstr "Download the full backup file to the target cluster master[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_db_construct.py:233
msgid "下载日志备份文件到目标集群master[{}]"
msgstr "Download the log backup file to the target cluster master[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_db_construct.py:264
msgid "恢复日志备份数据[{}]"
msgstr "Restore log backup data[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_db_construct.py:294
msgid "[{}]->[{}]数据构造流程"
msgstr "[{}]-&gt;[{}]Data construction process"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:122
msgid "禁用源master[{}]的backup jobs"
msgstr "Disable backup jobs for source master[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:146
msgid "在源集群[{}]执行数据库备份"
msgstr "Perform database backup on source cluster [{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:164
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:349
msgid "在源集群[{}]执行数据库日志备份"
msgstr "Perform database log backup on source cluster [{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:182
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:367
msgid "传送文件到目标机器[{}]"
msgstr "Transfer files to target machine[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:240
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:407
msgid "启动源master[{}]的backup jobs"
msgstr "Start backup jobs of source master[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:248
#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:415
msgid "更新任务状态"
msgstr "Update task status"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:266
msgid "[{}]->[{}]全量数据迁移流程"
msgstr "[{}]-&gt;[{}] Full data migration process"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:433
msgid "[{}]->[{}]增量数据迁移流程"
msgstr "[{}]-&gt;[{}]Incremental data migration process"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_dts.py:454
msgid "启动backup jobs cluster:{}"
msgstr "Start backup jobs cluster:{}"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_ha_deploy.py:167
msgid "部署HA集群[{}]"
msgstr "Deploy HA cluster[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_ha_deploy.py:197
msgid "部署主从集群"
msgstr "Deploy master-slave cluster"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_master_slave_switch.py:201
msgid "{}集群互切"
msgstr "{}Cluster mutual switching"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_master_slave_switch.py:231
msgid "切换子流程"
msgstr "Switch subprocess"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_rename_dbs.py:127
msgid "执行数据库重命名"
msgstr "Perform database rename"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_rename_dbs.py:144
msgid "{}集群执行重命名"
msgstr "{}Cluster execution rename"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:147
msgid "[{}]重建可用组"
msgstr "[{}]Rebuild available groups"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:173
msgid "清理slave实例数据库"
msgstr "Clean the slave instance database"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:231
msgid "实例设置running状态"
msgstr "Instance settings running status"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:263
msgid "{}集群slave[{}:{}]原地重建"
msgstr "{}cluster slave[{}:{}] is rebuilt in place"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:496
msgid "人工确认[{}]"
msgstr "Manual confirmation[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:507
msgid "删除注册CC系统的服务实例[{}:{}]"
msgstr "Delete the service instance registered in the CC system [{}:{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:522
msgid "下发执行器在旧slave[{}]"
msgstr "Issue the executor to the old slave[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:534
msgid "卸载实例[{}]"
msgstr "Uninstall instance[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:547
msgid "回收旧slave的元信息"
msgstr "Recycle old slave’s meta information"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:558
msgid "{}->{}新机重建"
msgstr "{}-&gt;{}New machine reconstruction"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:587
msgid "回收master[{}]的域名映射"
msgstr "Recycle the domain name mapping of master[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:602
msgid "回收slave[{}]的域名映射"
msgstr "Recycle the domain name mapping of slave[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:620
msgid "添加slave[{}]的域名映射"
msgstr "Add domain name mapping for slave[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:641
msgid "处理[{}]的域名关系"
msgstr "Process the domain name relationship of [{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:679
msgid "移除可用组"
msgstr "Remove available group"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_slave_rebuild.py:692
msgid "移除可用组[{}]"
msgstr "Remove available group[{}]"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_sql_execute.py:109
msgid "下发SQL文件"
msgstr "Send the SQL file"

#: backend/flow/engine/bamboo/scene/sqlserver/sqlserver_sql_execute.py:170
msgid "{}SQL文件导入"
msgstr "{}SQL file import"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/add_nodes.py:112
msgid "非法上架特性，请联系系统管理员：add_type:{}"
msgstr "Illegal listing of features, please contact the system administrator: add_type:{}"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/add_nodes.py:117
msgid "写入实例元信息"
msgstr "Write instance meta information"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/add_nodes.py:127
msgid "[{}]集群添加TBinlogDumper实例"
msgstr "[{}]Add TBinlogDumper instance to the cluster"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/add_nodes.py:131
msgid "计算不到需要上架的实例，拼装TBinlogDumper上架流程失败"
msgstr "The instances that need to be put on the shelf cannot be calculated, and the assembly process of TBinlogDumper fails."

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:97
msgid "下发TBinlogDumper介质包"
msgstr "Deliver TBinlogDumper media package"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:110
msgid "安装TBinlogDumper实例"
msgstr "Install TBinlogDumper instance"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:122
msgid "安装TBinlogDumper实例flow"
msgstr "Install TBinlogDumper instance flow"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:154
#: backend/flow/engine/bamboo/scene/tbinlogdumper/disable_nodes.py:48
#: backend/flow/engine/bamboo/scene/tbinlogdumper/enable_nodes.py:49
msgid "传入的TBinlogDumper进程信息已不存在[{}]，请联系系统管理员"
msgstr "The incoming TBinlogDumper process information no longer exists [{}], please contact the system administrator"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:174
msgid "卸载TBinlogDumper实例[{}:{}]"
msgstr "Uninstall TBinlogDumper instance [{}:{}]"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:189
msgid "云区域[{}]卸载TBinlogDumper实例flow"
msgstr "Cloud region [{}] uninstall TBinlogDumper instance flow"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:235
#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:338
#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:403
msgid "导入相关表结构"
msgstr "Import related table structure"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:249
#: backend/flow/engine/bamboo/scene/tbinlogdumper/disable_nodes.py:64
msgid "中断同步"
msgstr "Interrupt synchronization"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:297
msgid "切换到新实例[{}:{}]"
msgstr "Switch to new instance [{}:{}]"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:303
msgid "集群[{}]切换TBinlogDumper"
msgstr "Cluster[{}] switch TBinlogDumper"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:365
msgid "实例TBinlogDumper[{}:{}]做增量同步"
msgstr "Instance TBinlogDumper[{}:{}] does incremental synchronization"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:433
msgid "在slave[{}:{}]备份数据"
msgstr "Back up data on slave[{}:{}]"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:449
msgid "传输备份文件到TBinlogDumper[{}]"
msgstr "Transfer backup files to TBinlogDumper[{}]"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:465
msgid "导入备份数据"
msgstr "Import backup data"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:479
msgid "实例TBinlogDumper[{}:{}]做全量同步"
msgstr "Instance TBinlogDumper[{}:{}] does full synchronization"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:506
msgid "安装L5agent"
msgstr "Install L5agent"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/common_sub_flow.py:530
msgid "初始化tbinlogdumper机器"
msgstr "Initialize the tbinlogdumper machine"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/exceptions.py:17
msgid "Flow模块TBinlogDumper异常"
msgstr "Flow module TBinlogDumper exception"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/util.py:52
msgid "获取预安装端口失败, 期望生成端口数:{}，实际生成端口数:{}"
msgstr "Failed to obtain pre-installed ports, expected number of generated ports: {}, actual number of generated ports: {}"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/util.py:72
msgid "get charset failed: {}"
msgstr "get charset failed: {}"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/util.py:88
msgid "非TenDB-HA架构不支持添加TBinlogDumper实例"
msgstr "Non-TenDB-HA architecture does not support adding TBinlogDumper instances"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/common/util.py:107
msgid "get server_id failed: {}"
msgstr "get server_id failed: {}"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/disable_nodes.py:76
#: backend/flow/engine/bamboo/scene/tbinlogdumper/enable_nodes.py:78
msgid "变更实例状态"
msgstr "Change instance status"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/disable_nodes.py:86
msgid "[{}:{}]实例禁用"
msgstr "[{}:{}]Instance disabled"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/enable_nodes.py:66
msgid "启动同步"
msgstr "Start sync"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/enable_nodes.py:88
msgid "[{}:{}]实例启动同步"
msgstr "[{}:{}]Instance starts synchronization"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/reduce_node.py:70
msgid "删除实例元信息"
msgstr "Delete instance metainformation"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/reduce_node.py:80
msgid "云区域[{}]下架TBinlogDumper实例"
msgstr "The TBinlogDumper instance has been removed from cloud region [{}]"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/reduce_node.py:84
msgid "找不到需要下架的实例，拼装TBinlogDumper下架流程失败"
msgstr "The instance that needs to be removed cannot be found, and the removal process of assembling TBinlogDumper failed."

#: backend/flow/engine/bamboo/scene/tbinlogdumper/switch_nodes.py:202
msgid "变更实例元信息"
msgstr "Change instance metainformation"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/switch_nodes.py:213
msgid "[{}]集群迁移TBinlogDumper实例"
msgstr "[{}]Cluster migration TBinlogDumper instance"

#: backend/flow/engine/bamboo/scene/tbinlogdumper/switch_nodes.py:217
msgid "没检测到需要迁移的实例，拼装TBinlogDumper迁移部署流程失败"
msgstr "The instance that needs to be migrated is not detected, and the migration and deployment process of assembling TBinlogDumper fails."

#: backend/flow/engine/bamboo/scene/tendbsingle/metadata_import.py:52
msgid "构建 TenDB Single 元数据导入流程成功"
msgstr "Constructing TenDB Single metadata import process successfully"

#: backend/flow/engine/bamboo/scene/tendbsingle/standardize.py:87
msgid "构建TenDBSingle集群标准化流程成功"
msgstr "The standardization process for building TenDBSingle cluster was successful"

#: backend/flow/engine/bamboo/scene/vm/vm_apply_flow.py:91
#: backend/flow/engine/bamboo/scene/vm/vm_replace_flow.py:108
#: backend/flow/engine/bamboo/scene/vm/vm_scale_up_flow.py:89
msgid "下发vm介质和dbactuator"
msgstr "Deliver vm media and dbactuator"

#: backend/flow/engine/bamboo/scene/vm/vm_apply_flow.py:138
#: backend/flow/engine/bamboo/scene/vm/vm_replace_flow.py:180
#: backend/flow/engine/bamboo/scene/vm/vm_scale_up_flow.py:158
msgid "添加vminsert域名"
msgstr "Add vminsert domain name"

#: backend/flow/engine/bamboo/scene/vm/vm_apply_flow.py:152
#: backend/flow/engine/bamboo/scene/vm/vm_replace_flow.py:209
#: backend/flow/engine/bamboo/scene/vm/vm_scale_up_flow.py:173
msgid "添加vmselect域名"
msgstr "Add vmselect domain name"

#: backend/flow/engine/bamboo/scene/vm/vm_base_flow.py:198
msgid "安装Vm {}-{}子流程"
msgstr "Install Vm {}-{} subprocess"

#: backend/flow/engine/bamboo/scene/vm/vm_base_flow.py:211
msgid "安装vmstorage-{}"
msgstr "Install vmstorage-{}"

#: backend/flow/engine/bamboo/scene/vm/vm_base_flow.py:228
msgid "安装vminsert-{}"
msgstr "Install vminsert-{}"

#: backend/flow/engine/bamboo/scene/vm/vm_base_flow.py:248
#, python-brace-format
msgid "PreInstall {role}-{vm_ip}"
msgstr "PreInstall {role}-{vm_ip}"

#: backend/flow/engine/bamboo/scene/vm/vm_destroy_flow.py:77
msgid "vm集群节点清理-{}"
msgstr "VM cluster node cleanup-{}"

#: backend/flow/engine/bamboo/scene/vm/vm_disable_flow.py:75
msgid "停止vm集群进程-{}"
msgstr "Stop vm cluster process-{}"

#: backend/flow/engine/bamboo/scene/vm/vm_enable_flow.py:75
msgid "启动vm集群进程-{}"
msgstr "Start vm cluster process-{}"

#: backend/flow/engine/bamboo/scene/vm/vm_reboot_flow.py:74
msgid "下发 actuator"
msgstr "Issue actuator"

#: backend/flow/engine/bamboo/scene/vm/vm_replace_flow.py:155
#: backend/flow/engine/bamboo/scene/vm/vm_scale_up_flow.py:135
#: backend/flow/engine/bamboo/scene/vm/vm_shrink_flow.py:131
msgid "Reload vmselect"
msgstr "Reload vmselect"

#: backend/flow/engine/bamboo/scene/vm/vm_replace_flow.py:164
#: backend/flow/engine/bamboo/scene/vm/vm_scale_up_flow.py:143
#: backend/flow/engine/bamboo/scene/vm/vm_shrink_flow.py:139
msgid "Reload vminsert"
msgstr "Reload vminsert"

#: backend/flow/engine/bamboo/scene/vm/vm_replace_flow.py:193
#: backend/flow/engine/bamboo/scene/vm/vm_shrink_flow.py:105
msgid "回收vminsert实例域名记录"
msgstr "Recycle vminsert instance domain name records"

#: backend/flow/engine/bamboo/scene/vm/vm_replace_flow.py:222
#: backend/flow/engine/bamboo/scene/vm/vm_shrink_flow.py:120
msgid "回收vmselect实例域名记录"
msgstr "Recycle vmselect instance domain name records"

#: backend/flow/engine/bamboo/scene/vm/vm_replace_flow.py:258
#: backend/flow/engine/bamboo/scene/vm/vm_shrink_flow.py:151
msgid "Vm集群节点清理-{}"
msgstr "Vm cluster node cleanup-{}"

#: backend/flow/engine/exceptions.py:28
msgid "组件服务未部署"
msgstr "Component Services is not deployed"

#: backend/flow/engine/exceptions.py:32
msgid "MySQL备份位置异常"
msgstr "The MySQL backup location is abnormal"

#: backend/flow/engine/exceptions.py:37
msgid "MySQL备份方式和位置不兼容"
msgstr "MySQL backup method and location are incompatible"

#: backend/flow/engine/exceptions.py:38
#, python-brace-format
msgid "MySQL备份方式{backup_type}和位置{backup_local}不兼容"
msgstr ""
"MySQL backup method {backup_type} and location {backup_local} are "
"incompatible"

#: backend/flow/models.py:22
msgid "组件类型"
msgstr "Component type"

#: backend/flow/models.py:25
msgid "流程树"
msgstr "process tree"

#: backend/flow/models.py:27 backend/ticket/serializers.py:133
msgid "流程状态"
msgstr "process status"

#: backend/flow/models.py:29
msgid "流程创建人"
msgstr "Process Creator"

#: backend/flow/models.py:30
msgid "启动时间"
msgstr "Start Time"

#: backend/flow/models.py:31
msgid "流程结束时间"
msgstr "process end time"

#: backend/flow/models.py:32 backend/flow/models.py:52
msgid "是否已经过期"
msgstr "Has it expired?"

#: backend/flow/models.py:32 backend/flow/models.py:52
msgid "运行时被定期清理即为过期"
msgstr "It is expired if it is cleaned regularly during runtime."

#: backend/flow/models.py:44
msgid "当前版本ID"
msgstr "current version id"

#: backend/flow/models.py:46
msgid "节点状态"
msgstr "node status"

#: backend/flow/models.py:48
msgid "节点运行时IP"
msgstr "Node runtime IP"

#: backend/flow/models.py:50
msgid "开始执行时间"
msgstr "start execution time"

#: backend/flow/plugins/components/collections/cloud/exec_service_script.py:57
msgid "该节点{}获取到执行ip信息为空，请联系系统管理员"
msgstr ""
"The execution ip information obtained by the node {} is empty, please "
"contact the system administrator"

#: backend/flow/plugins/components/collections/cloud/push_config_file.py:55
#: backend/flow/plugins/components/collections/cloud/trans_files.py:59
#: backend/flow/plugins/components/collections/doris/trans_files.py:63
#: backend/flow/plugins/components/collections/es/trans_files.py:63
#: backend/flow/plugins/components/collections/hdfs/trans_flies.py:70
#: backend/flow/plugins/components/collections/mongodb/send_media.py:58
#: backend/flow/plugins/components/collections/mysql/trans_flies.py:106
#: backend/flow/plugins/components/collections/pulsar/trans_files.py:85
#: backend/flow/plugins/components/collections/redis/psuh_data_structure_json_script.py:126
#: backend/flow/plugins/components/collections/redis/redis_trans_files.py:69
#: backend/flow/plugins/components/collections/redis/trans_flies.py:78
#: backend/flow/plugins/components/collections/riak/trans_files.py:99
#: backend/flow/plugins/components/collections/sqlserver/trans_files.py:80
#: backend/flow/plugins/components/collections/vm/trans_files.py:63
msgid "[{}] 下发介质包参数：{}"
msgstr "[{}] Delivery media package parameters: {}"

#: backend/flow/plugins/components/collections/cloud/trans_files.py:44
msgid "该节点{}获取到执行ip信息为空，请联系系统管理员{}"
msgstr ""
"The execution ip information obtained by the node {} is empty, please "
"contact the system administrator {}"

#: backend/flow/plugins/components/collections/common/L5_agent_install.py:41
msgid "安装L5 agent"
msgstr "Install L5 agent"

#: backend/flow/plugins/components/collections/common/L5_agent_install.py:70
msgid "L5agent安装"
msgstr "L5agent installation"

#: backend/flow/plugins/components/collections/common/base_service.py:132
msgid "该数据{}:{}无法被序列化，跳过此次缓存"
msgstr "The data {}:{} cannot be serialized, skip this cache"

#: backend/flow/plugins/components/collections/common/base_service.py:156
msgid "下载excel文件失败，未获取到{}相关的数据"
msgstr "Failed to download excel file, no data related to {} was obtained."

#: backend/flow/plugins/components/collections/common/base_service.py:166
msgid "下载excel文件失败，获取数据格式错误"
msgstr "Failed to download excel file, the data format is wrong"

#: backend/flow/plugins/components/collections/common/base_service.py:185
msgid "[{}] 运行成功"
msgstr "[{}] ran successfully"

#: backend/flow/plugins/components/collections/common/base_service.py:189
msgid "[{}] 失败: {}"
msgstr "[{}] fail: {}"

#: backend/flow/plugins/components/collections/common/base_service.py:316
msgid "[写入上下文结果失败] failed: {}"
msgstr "[Failed to write context result] failed: {}"

#: backend/flow/plugins/components/collections/common/base_service.py:352
msgid "[{}] 任务正在执行🤔"
msgstr "[{}] Task is executing 🤔"

#: backend/flow/plugins/components/collections/common/base_service.py:376
msgid "[{}]  任务调度失败😱"
msgstr "[{}] Task scheduling failed 😱"

#: backend/flow/plugins/components/collections/common/base_service.py:388
msgid "[{}]任务调度成功🥳︎"
msgstr "[{}] Task scheduling succeeded 🥳︎"

#: backend/flow/plugins/components/collections/common/base_service.py:397
msgid "[{}]该节点需要获取执行后日志，赋值到流程上下文"
msgstr "[{}] This node needs to obtain the post-execution log and assign it to the process context."

#: backend/flow/plugins/components/collections/common/base_service.py:410
msgid "[{}] 获取执行后写入流程上下文失败，ip:[{}]"
msgstr "[{}] Failed to write process context after obtaining execution, ip:[{}]"

#: backend/flow/plugins/components/collections/common/base_service.py:442
msgid "任务失败"
msgstr "Task failed"

#: backend/flow/plugins/components/collections/common/base_service.py:444
msgid "任务状态异常{}"
msgstr "The task status is abnormal {}"

#: backend/flow/plugins/components/collections/common/base_service.py:446
msgid "查询日志失败"
msgstr "Failed to query log"

#: backend/flow/plugins/components/collections/common/bigdata_manager_service.py:120
msgid "无法找到Manager处理类型,请联系系统管理员:{}"
msgstr ""
"Unable to find Manager processing type, please contact the system "
"administrator: {}"

#: backend/flow/plugins/components/collections/common/check_resolv_conf.py:42
#: backend/flow/plugins/components/collections/common/clb_manage.py:43
#: backend/flow/plugins/components/collections/common/clb_manage.py:59
#: backend/flow/plugins/components/collections/common/clb_manage.py:68
#: backend/flow/plugins/components/collections/common/dns_server.py:88
#: backend/flow/plugins/components/collections/common/polaris_manage.py:43
#: backend/flow/plugins/components/collections/common/polaris_manage.py:67
#: backend/flow/plugins/components/collections/doris/doris_dns_manage.py:62
#: backend/flow/plugins/components/collections/es/es_dns_manage.py:61
#: backend/flow/plugins/components/collections/kafka/dns_manage.py:37
#: backend/flow/plugins/components/collections/kafka/dns_manage.py:48
#: backend/flow/plugins/components/collections/kafka/dns_manage.py:75
#: backend/flow/plugins/components/collections/mysql/dns_manage.py:57
#: backend/flow/plugins/components/collections/mysql/dns_manage.py:69
#: backend/flow/plugins/components/collections/pulsar/pulsar_dns_manage.py:29
#: backend/flow/plugins/components/collections/redis/dns_manage.py:43
#: backend/flow/plugins/components/collections/redis/dns_manage.py:87
#: backend/flow/plugins/components/collections/redis/exec_shell_script.py:46
#: backend/flow/plugins/components/collections/redis/exec_shell_script.py:282
#: backend/flow/plugins/components/collections/vm/vm_dns_manage.py:57
#: backend/flow/plugins/components/collections/vm/vm_dns_manage.py:69
msgid "该节点获取到执行ip信息为空，请联系系统管理员"
msgstr ""
"The node obtained execution ip information is empty, please contact the "
"system administrator"

#: backend/flow/plugins/components/collections/common/check_resolv_conf.py:100
#: backend/flow/plugins/components/collections/common/check_resolv_conf.py:102
msgid "/etc/resolv.conf 不为空 {}"
msgstr "/etc/resolv.conf is not empty{}"

#: backend/flow/plugins/components/collections/common/clb_manage.py:77
#: backend/flow/plugins/components/collections/common/polaris_manage.py:76
#: backend/flow/plugins/components/collections/doris/doris_dns_manage.py:146
#: backend/flow/plugins/components/collections/es/es_dns_manage.py:146
#: backend/flow/plugins/components/collections/hdfs/hdfs_dns_manage.py:71
#: backend/flow/plugins/components/collections/kafka/dns_manage.py:93
#: backend/flow/plugins/components/collections/mysql/dns_manage.py:96
#: backend/flow/plugins/components/collections/pulsar/pulsar_dns_manage.py:61
#: backend/flow/plugins/components/collections/pulsar/pulsar_zk_dns_manage.py:51
#: backend/flow/plugins/components/collections/redis/dns_manage.py:93
#: backend/flow/plugins/components/collections/vm/vm_dns_manage.py:89
msgid "无法适配到传入的域名处理类型,请联系系统管理员:{}"
msgstr ""
"Unable to adapt to the incoming domain name processing type, please contact "
"the system administrator: {}"

#: backend/flow/plugins/components/collections/common/clone_priv_rules_to_other_biz.py:32
msgid "从{}复制权限规则到业务{}成功"
msgstr "Copy permission rules from {} to business {} successfully"

#: backend/flow/plugins/components/collections/common/clone_priv_rules_to_other_biz.py:34
msgid "复制权限规则异常，相关信息: {}"
msgstr "Copy permission rule exception, related information: {}"

#: backend/flow/plugins/components/collections/common/create_random_job_user.py:49
msgid "在[{}]创建添加账号成功"
msgstr "Create and add account successfully in [{}]"

#: backend/flow/plugins/components/collections/common/create_random_job_user.py:51
#: backend/flow/plugins/components/collections/spider/add_spider_routing.py:215
#: backend/flow/plugins/components/collections/spider/add_system_user_in_cluster.py:24
msgid "[{}]添加用户接口异常，相关信息: {}"
msgstr "[{}] Add user interface exception, related information: {}"

#: backend/flow/plugins/components/collections/common/create_random_job_user.py:129
msgid "不支持改实例的主机类型授权[{}]: machine_type: {}"
msgstr "Changing the instance&#39;s host type authorization is not supported [{}]: machine_type: {}"

#: backend/flow/plugins/components/collections/common/create_ticket.py:38
msgid "未在输入参数或者上下文参数中找到提单数据"
msgstr "Bill of lading data not found in input parameters or context parameters"

#: backend/flow/plugins/components/collections/common/create_ticket.py:48
msgid "未知单据类型, {}不存在于已知单据类型中"
msgstr "Unknown ticket type, {} does not exist in known ticket types"

#: backend/flow/plugins/components/collections/common/create_ticket.py:53
msgid "不允许自动创建单据，单据创建流程结束"
msgstr ""
"Automatic ticket creation is not allowed, and the ticket creation process "
"ends"

#: backend/flow/plugins/components/collections/common/external_service.py:39
msgid "第三方接口: {} 请求成功! 返回参数为: {}"
msgstr ""
"Third-party interface: {} The request is successful! The return parameter "
"is: {}"

#: backend/flow/plugins/components/collections/common/external_service.py:41
msgid "第三方接口:{} 调用失败！错误信息为: {}"
msgstr "Third-party interface: {} call failed! The error message is: {}"

#: backend/flow/plugins/components/collections/common/external_service.py:44
msgid "请求遇到未知错误！错误信息为: {}"
msgstr "The request encountered an unknown error! The error message is: {}"

#: backend/flow/plugins/components/collections/common/pause.py:44
msgid "【{}】流程待确认,是否继续？"
msgstr "【{}】The process is pending confirmation, do you want to continue?"

#: backend/flow/plugins/components/collections/common/pause.py:78
msgid "回调数据"
msgstr "callback data"

#: backend/flow/plugins/components/collections/common/pause.py:87
msgid "暂停"
msgstr "pause"

#: backend/flow/plugins/components/collections/common/sa_idle_check.py:59
msgid "空闲检查FOR_DBM"
msgstr "Idle check FOR_DBM"

#: backend/flow/plugins/components/collections/common/sa_idle_check.py:80
msgid "sa空闲检查"
msgstr "sa idle check"

#: backend/flow/plugins/components/collections/common/sa_init.py:28
msgid "SA初始化"
msgstr "SA initialization"

#: backend/flow/plugins/components/collections/common/sa_init.py:47
msgid "sa初始化"
msgstr "sa initialization"

#: backend/flow/plugins/components/collections/common/sleep_time_service.py:34
msgid "定时时间"
msgstr "Timing"

#: backend/flow/plugins/components/collections/common/sleep_time_service.py:37
#, python-format
msgid "定时时间，格式为秒(s) 或 (%%Y-%%m-%%d %%H:%%M:%%S)"
msgstr "Timing time, the format is seconds (s) or (%%Y-%%m-%%d %%H:%%M:%%S)"

#: backend/flow/plugins/components/collections/common/sleep_time_service.py:40
msgid "是否强制晚于当前时间"
msgstr "Whether to force later than the current time"

#: backend/flow/plugins/components/collections/common/sleep_time_service.py:43
msgid ""
"用户输入日期格式时是否强制要求时间晚于当前时间，只对日期格式定时输入有效"
msgstr ""
"Whether to force the time to be later than the current time when the user "
"enters the date format, only valid for timing input in the date format"

#: backend/flow/plugins/components/collections/common/sleep_time_service.py:65
msgid "定时时间需晚于当前时间"
msgstr "The timing time needs to be later than the current time"

#: backend/flow/plugins/components/collections/common/transfer_cluster_meta_to_other_biz.py:53
msgid "迁移集群元数据"
msgstr "Migrate cluster metadata"

#: backend/flow/plugins/components/collections/common/transfer_cluster_meta_to_other_biz.py:75
msgid "更新dns记录成功"
msgstr "Updated dns record successfully"

#: backend/flow/plugins/components/collections/common/transfer_cluster_meta_to_other_biz.py:77
msgid "更新dns记录异常，相关信息: {}"
msgstr "Exception in updating dns record, related information: {}"

#: backend/flow/plugins/components/collections/common/transfer_cluster_meta_to_other_biz.py:84
msgid "更新dns记录"
msgstr "Update dns records"

#: backend/flow/plugins/components/collections/common/transfer_host_service.py:39
msgid "主机{}转移目标模块{}失败, {}"
msgstr "Host {} failed to transfer target module {}, {}"

#: backend/flow/plugins/components/collections/doris/exec_doris_actuator_script.py:65
#: backend/flow/plugins/components/collections/doris/trans_files.py:47
#: backend/flow/plugins/components/collections/es/exec_es_actuator_script.py:65
#: backend/flow/plugins/components/collections/es/trans_files.py:47
#: backend/flow/plugins/components/collections/hdfs/exec_actuator_script.py:69
#: backend/flow/plugins/components/collections/hdfs/trans_flies.py:53
#: backend/flow/plugins/components/collections/influxdb/exec_actuator_script.py:62
#: backend/flow/plugins/components/collections/kafka/exec_actuator_script.py:62
#: backend/flow/plugins/components/collections/mongodb/exec_actuator_job.py:147
#: backend/flow/plugins/components/collections/mongodb/exec_actuator_job2.py:74
#: backend/flow/plugins/components/collections/mongodb/fast_exec_script.py:73
#: backend/flow/plugins/components/collections/mysql/exec_actuator_script.py:82
#: backend/flow/plugins/components/collections/mysql/trans_flies.py:60
#: backend/flow/plugins/components/collections/pulsar/exec_actuator_script.py:66
#: backend/flow/plugins/components/collections/pulsar/trans_files.py:46
#: backend/flow/plugins/components/collections/redis/exec_actuator_script.py:80
#: backend/flow/plugins/components/collections/redis/exec_data_structure_actuator_script.py:87
#: backend/flow/plugins/components/collections/redis/psuh_data_structure_json_script.py:85
#: backend/flow/plugins/components/collections/redis/trans_flies.py:60
#: backend/flow/plugins/components/collections/riak/exec_actuator_script.py:80
#: backend/flow/plugins/components/collections/riak/trans_files.py:60
#: backend/flow/plugins/components/collections/sqlserver/exec_actuator_script.py:66
#: backend/flow/plugins/components/collections/sqlserver/trans_files.py:41
#: backend/flow/plugins/components/collections/vm/exec_vm_actuator_script.py:64
#: backend/flow/plugins/components/collections/vm/trans_files.py:47
msgid "该节点获取到执行ip信息为空，请联系系统管理员{}"
msgstr ""
"The execution ip information obtained by this node is empty, please contact "
"the system administrator {}"

#: backend/flow/plugins/components/collections/doris/get_doris_resource.py:56
#: backend/flow/plugins/components/collections/es/get_es_resource.py:55
#: backend/flow/plugins/components/collections/kafka/get_kafka_resource.py:50
#: backend/flow/plugins/components/collections/vm/get_vm_resource.py:56
msgid "获取机器资源成功成功。 {}"
msgstr "Acquiring the machine resource was successful. {}"

#: backend/flow/plugins/components/collections/hdfs/get_hdfs_resource.py:57
#: backend/flow/plugins/components/collections/riak/get_riak_resource.py:51
msgid "获取机器资源成功。 {}"
msgstr "Acquiring machine resource successfully. {}"

#: backend/flow/plugins/components/collections/hdfs/hdfs_dns_manage.py:48
msgid "获取DNS操作IP为空"
msgstr "Get DNS operation IP is empty"

#: backend/flow/plugins/components/collections/hdfs/update_hdfs_resource.py:67
msgid "更新机器资源成功成功。 {}"
msgstr "Updating the machine resource succeeded successfully. {}"

#: backend/flow/plugins/components/collections/influxdb/trans_flies.py:52
#: backend/flow/plugins/components/collections/kafka/trans_flies.py:52
msgid " 下发介质包参数：{}"
msgstr "Send media package parameters: {}"

#: backend/flow/plugins/components/collections/mongodb/mongo_download_backup_files.py:64
#: backend/flow/plugins/components/collections/mysql/mysql_download_backupfile.py:46
#: backend/flow/plugins/components/collections/redis/redis_download_backup_files.py:56
msgid "调起下载 {}"
msgstr "Call up download{}"

#: backend/flow/plugins/components/collections/mongodb/mongo_download_backup_files.py:86
#: backend/flow/plugins/components/collections/mysql/mysql_download_backupfile.py:57
#: backend/flow/plugins/components/collections/redis/redis_download_backup_files.py:65
msgid "下载单据ID {}"
msgstr "Download document ID {}"

#: backend/flow/plugins/components/collections/mongodb/mongo_download_backup_files.py:88
msgid "下载单据ID {} resp: {}"
msgstr "Download document ID {} ​​resp: {}"

#: backend/flow/plugins/components/collections/mongodb/mongo_download_backup_files.py:93
#: backend/flow/plugins/components/collections/mysql/mysql_download_backupfile.py:68
#: backend/flow/plugins/components/collections/redis/redis_download_backup_files.py:70
msgid "{} 下载成功"
msgstr "{} Download successful"

#: backend/flow/plugins/components/collections/mongodb/mongo_download_backup_files.py:97
#: backend/flow/plugins/components/collections/mysql/mysql_download_backupfile.py:72
#: backend/flow/plugins/components/collections/redis/redis_download_backup_files.py:74
msgid "{} 下载失败"
msgstr "{} Download failed"

#: backend/flow/plugins/components/collections/mongodb/mongo_download_backup_files.py:102
#: backend/flow/plugins/components/collections/mysql/mysql_download_backupfile.py:77
#: backend/flow/plugins/components/collections/redis/redis_download_backup_files.py:79
msgid "{} 下载中: todo {}"
msgstr "{} Downloading: todo {}"

#: backend/flow/plugins/components/collections/mongodb/send_media.py:64
msgid "下发介质包失败，resp:{}"
msgstr "Failed to deliver media package, resp:{}"

#: backend/flow/plugins/components/collections/mysql/authorize_rules.py:44
msgid "{}. 账号规则: {}-{}, 来源ip: {}, 目标集群: {}"
msgstr "{}. Account rule: {}-{}, source ip: {}, target cluster: {}"

#: backend/flow/plugins/components/collections/mysql/authorize_rules.py:76
msgid ""
"授权规则明细:\n"
"{}\n"
msgstr ""
"Authorization rule details:\n"
"{}\n"

#: backend/flow/plugins/components/collections/mysql/authorize_rules.py:91
msgid "「授权接口调用异常」{}"
msgstr "Authorization interface call exception {}"

#: backend/flow/plugins/components/collections/mysql/authorize_rules.py:92
msgid "授权异常，相关信息: {}\n"
msgstr "Authorization exception, related information: {}\n"

#: backend/flow/plugins/components/collections/mysql/authorize_rules.py:99
msgid "授权整体结果{}"
msgstr "Authorization overall result{}"

#: backend/flow/plugins/components/collections/mysql/authorize_rules.py:103
msgid "Excel导入授权行数:{}，成功授权数目:{}，失败授权数目:{}"
msgstr ""
"The number of Excel import authorization lines: {}, the number of successful "
"authorization: {}, the number of failed authorization: {}"

#: backend/flow/plugins/components/collections/mysql/authorize_rules.py:114
msgid ""
"授权结果详情请下载excel: <a href='{}/apis/{}/bizs/{}/permission/authorize/"
"get_authorize_info_excel/?ticket_id={}'>excel 下载</a>"
msgstr "Please download excel for details of authorization results: <a href='{}/apis/{}/bizs/{}/permission/authorize/get_authorize_info_excel/?ticket_id={}'>excel download</a>"

#: backend/flow/plugins/components/collections/mysql/build_database_table_filter_regex.py:46
msgid "[{}] 成功: db_table_filter_regex: {}, db_filter_regex: {}"
msgstr "[{}] Success: db_table_filter_regex: {}, db_filter_regex: {}"

#: backend/flow/plugins/components/collections/mysql/check_client_connections.py:61
msgid ""
"检测结果详情请下载excel:<a href='{}/apis/taskflow/excel_download/?root_id={}"
"&key={}'>excel 下载</a>"
msgstr "For details of the test results, please download excel: <a href='{}/apis/taskflow/excel_download/?root_id={}&key={}'>excel download</a>"

#: backend/flow/plugins/components/collections/mysql/clear_machine.py:46
msgid "机器还在系统中注册，暂不用清理[{}]"
msgstr ""
"The machine is still registered in the system, there is no need to clean "
"up[{}]"

#: backend/flow/plugins/components/collections/mysql/clear_machine.py:51
msgid "本次操作没有机器可以清理，提前结束活动节点"
msgstr ""
"There is no machine to clean up in this operation, and the active node is "
"terminated early"

#: backend/flow/plugins/components/collections/mysql/clear_machine.py:91
msgid "输入了不是 tendbcluster 的 ip: {} {}"
msgstr "An ip that is not tendbcluster was entered: {} {}"

#: backend/flow/plugins/components/collections/mysql/clone_rules.py:95
msgid "「权限克隆异常」{}"
msgstr "Permission cloning exception{}"

#: backend/flow/plugins/components/collections/mysql/clone_rules.py:97
msgid "权限克隆失败，错误信息: {}\n"
msgstr "Permission clone failed, error message: {}\n"

#: backend/flow/plugins/components/collections/mysql/clone_rules.py:104
msgid "权限克隆整体执行结果——总数:{}，成功数:{}，失败数:{}\n"
msgstr ""
"The overall execution result of permission cloning—total: {}, success: {}, "
"failure: {}\n"

#: backend/flow/plugins/components/collections/mysql/clone_rules.py:110
msgid ""
"详情请下载excel: <a href='{}/apis/mysql/bizs/{}/permission/clone/"
"get_clone_info_excel/?ticket_id={}&clone_type={}'>excel 下载</a>"
msgstr ""
"For details, please download excel: <a href='{}/apis/mysql/bizs/{}/"
"permission/clone/get_clone_info_excel/?ticket_id={}&clone_type={}'>excel "
"download</a>"

#: backend/flow/plugins/components/collections/mysql/clone_user.py:71
msgid "「权限克隆返回结果异常」{}"
msgstr "The return result of permission cloning is abnormal {}"

#: backend/flow/plugins/components/collections/mysql/clone_user.py:73
msgid "「权限克隆调用异常」{}"
msgstr "Privilege clone call exception {}"

#: backend/flow/plugins/components/collections/mysql/clone_user.py:74
msgid "执行克隆失败!"
msgstr "Failed to execute clone!"

#: backend/flow/plugins/components/collections/mysql/cluster_standardize_trans_module.py:33
msgid "[{}] CC 模块标准化完成"
msgstr "[{}] CC module standardization completed"

#: backend/flow/plugins/components/collections/mysql/create_user.py:48
msgid "在「{}」创建临时用户「{}@{}」成功"
msgstr "Successfully created temporary user {}@{} at {}"

#: backend/flow/plugins/components/collections/mysql/create_user.py:50
msgid "创建用户接口异常，相关信息: {}"
msgstr "Create user interface exception, related information: {}"

#: backend/flow/plugins/components/collections/mysql/drop_user.py:38
msgid "在「{}」执行sql失败，相关信息: {}"
msgstr "Failed to execute sql in \"{}\", related information: {}"

#: backend/flow/plugins/components/collections/mysql/drop_user.py:42
msgid "在「{}」执行sql{}失败，相关信息: {}"
msgstr "Failed to execute sql{} in \"{}\", related information: {}"

#: backend/flow/plugins/components/collections/mysql/drop_user.py:49
msgid "删除用户接口异常，相关信息: {}"
msgstr "Delete user interface exception, related information: {}"

#: backend/flow/plugins/components/collections/mysql/drop_user.py:52
msgid "在「{}」删除临时用户「{}@{}」成功"
msgstr "Successfully deleted temporary user {}@{} at {}"

#: backend/flow/plugins/components/collections/mysql/fake_semantic_check.py:44
msgid "这是一个fake的模拟执行"
msgstr "This is a simulated execution of a fake"

#: backend/flow/plugins/components/collections/mysql/fake_semantic_check.py:54
msgid "语义检查执行成功"
msgstr "Semantic check performed successfully"

#: backend/flow/plugins/components/collections/mysql/filter_database_table_from_regex.py:95
msgid "[{}] 过滤所得库表: {}"
msgstr "[{}] Filtered database table: {}"

#: backend/flow/plugins/components/collections/mysql/filter_database_table_from_regex.py:98
msgid "[{}] 未匹配到任何库"
msgstr "[{}] did not match any libraries"

#: backend/flow/plugins/components/collections/mysql/generate_drop_stage_db_sql.py:79
msgid ""
"清档自动发起的变更SQL单据\n"
"关联单据：{}"
msgstr "Clear the change SQL document automatically initiated\nAssociated document: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:57
msgid "在{}执行sql失败，相关信息: {}"
msgstr "Failed to execute sql in {}, related information: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:62
#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:69
msgid "在{}执行sql{}失败，相关信息: {}"
msgstr "Failed to execute sql{} in {}, related information: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:88
msgid "查询数据库接口异常，相关信息: {}"
msgstr "Query database interface exception, related information: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:91
msgid "uid:{}"
msgstr "uid:{}"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:123
msgid "ERROR 数据不一致的表的数量: {}"
msgstr "ERROR Number of tables with inconsistent data: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:124
msgid "WARNING 被跳过校验的表的数量: {}"
msgstr "WARNING Number of tables skipped for validation: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:125
msgid "SUCCESS 数据一致的表的数量: {}"
msgstr "Number of tables with consistent SUCCESS data: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:130
msgid "ERROR 校验失败，数据不一致的表:"
msgstr "ERROR Validation failed, table with inconsistent data:"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:136
msgid "WARNING 校验程序没有校验的表:"
msgstr "WARNING Table not validated by validator:"

#: backend/flow/plugins/components/collections/mysql/mysql_checksum_report.py:142
msgid "SUCCESS 校验成功，数据一致的表:"
msgstr "SUCCESS verification is successful, the table with consistent data:"

#: backend/flow/plugins/components/collections/mysql/mysql_cluster_instantiate_config.py:43
msgid "[{}] 实例化 {} 配置成功: {}"
msgstr "[{}] Instantiated {} configuration successfully: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_crond_control.py:41
msgid "执行ip信息为空，请联系系统管理员"
msgstr "The execution IP information is empty, please contact the system administrator."

#: backend/flow/plugins/components/collections/mysql/mysql_db_meta.py:41
#: backend/flow/plugins/components/collections/redis/get_redis_payload.py:45
#: backend/flow/plugins/components/collections/redis/redis_db_meta.py:45
#: backend/flow/plugins/components/collections/spider/spider_db_meta.py:40
msgid "集群元信息:{}"
msgstr "Cluster meta information: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_ha_import_metadata.py:101
#: backend/flow/plugins/components/collections/spider/import_metadata.py:93
#: backend/flow/plugins/components/collections/tendbsingle/metadata_import.py:190
msgid "[{}] get trans_data: {}"
msgstr "[{}] get trans_data: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_ha_import_metadata.py:146
#: backend/flow/plugins/components/collections/spider/import_metadata.py:140
#: backend/flow/plugins/components/collections/tendbsingle/metadata_import.py:220
msgid "[{}] cluster ids = {}"
msgstr "[{}] cluster ids = {}"

#: backend/flow/plugins/components/collections/mysql/mysql_ha_import_metadata.py:150
#: backend/flow/plugins/components/collections/spider/import_metadata.py:144
#: backend/flow/plugins/components/collections/tendbsingle/metadata_import.py:224
msgid "[{}] 元数据写入完成"
msgstr "[{}] Metadata writing completed"

#: backend/flow/plugins/components/collections/mysql/mysql_ha_modify_cluster_phase.py:34
msgid "[{}] 修改集群状态完成"
msgstr "[{}] Modification of cluster status completed"

#: backend/flow/plugins/components/collections/mysql/mysql_link_backup_id_bill_id.py:26
msgid "[{}] 备份 id: {}"
msgstr "[{}] backup id: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_master_slave_relationship_check.py:72
msgid "主备关系校验成功"
msgstr "Master-standby relationship verification succeeded"

#: backend/flow/plugins/components/collections/mysql/mysql_partition_report.py:62
#: backend/flow/plugins/components/collections/spider/spider_partition_callback.py:58
msgid "不支持的状态类型: [{}]"
msgstr "Unsupported status types: [{}]"

#: backend/flow/plugins/components/collections/mysql/mysql_partition_report.py:78
#: backend/flow/plugins/components/collections/spider/spider_partition_callback.py:68
msgid "callback分区create_log接口异常: {}"
msgstr "callback partition create_log interface exception: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_partition_report.py:95
msgid "不支持的单据类型: [{}]"
msgstr "Unsupported document types: [{}]"

#: backend/flow/plugins/components/collections/mysql/mysql_partition_report.py:107
msgid "ERROR 执行失败的分区规则的数量: {}"
msgstr "ERROR Number of partition rules that failed to execute: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_partition_report.py:108
msgid "SUCCESS 执行成功的分区规则的数量: {}"
msgstr "SUCCESS The number of successfully executed partition rules: {}"

#: backend/flow/plugins/components/collections/mysql/mysql_partition_report.py:113
msgid "ERROR 执行失败的分区规则:"
msgstr "ERROR Partition rule that failed to execute:"

#: backend/flow/plugins/components/collections/mysql/mysql_partition_report.py:119
msgid "SUCCESS 执行成功的分区规则:"
msgstr "SUCCESS Partition rules executed successfully:"

#: backend/flow/plugins/components/collections/mysql/mysql_rds_execute.py:30
msgid "传入参数:{}"
msgstr "Incoming parameters:{}"

#: backend/flow/plugins/components/collections/mysql/rename_database_confirm_empty_from.py:69
#: backend/flow/plugins/components/collections/mysql/truncate_data_confirm_empty.py:64
msgid "确认源数据库已空完成"
msgstr "Confirm that the source database is empty"

#: backend/flow/plugins/components/collections/mysql/rename_database_drop_from.py:51
msgid "删除源数据库完成"
msgstr "Delete source database complete"

#: backend/flow/plugins/components/collections/mysql/rename_database_prepare_param.py:27
msgid "[{}] 构造 old_new_map 完成: {}"
msgstr "[{}] Construct old_new_map completed: {}"

#: backend/flow/plugins/components/collections/mysql/rollback_trans_flies.py:52
#: backend/flow/plugins/components/collections/mysql/slave_trans_flies.py:66
msgid "没有符合的备份文件提供定点恢复"
msgstr "There is no matching backup file to provide fixed-point recovery"

#: backend/flow/plugins/components/collections/mysql/semantic_check.py:50
msgid "创建模拟执行任务resp{}"
msgstr "Create a simulated execution task resp{}"

#: backend/flow/plugins/components/collections/mysql/semantic_check.py:54
msgid "创建模拟任务失败:{}"
msgstr "Failed to create mock task: {}"

#: backend/flow/plugins/components/collections/mysql/semantic_check.py:56
msgid "创建模拟任务成功"
msgstr "Create mock task successfully"

#: backend/flow/plugins/components/collections/mysql/semantic_check.py:60
#: backend/flow/plugins/components/collections/mysql/semantic_check.py:62
msgid "「执行语义分析任务异常」{}"
msgstr "Execution of semantic analysis task exception {}"

#: backend/flow/plugins/components/collections/mysql/semantic_check.py:63
msgid "创建模拟任务失败!"
msgstr "Failed to create simulation task!"

#: backend/flow/plugins/components/collections/mysql/slave_trans_flies.py:42
msgid "仅在主库查找备份源"
msgstr "Find the backup source only in the master"

#: backend/flow/plugins/components/collections/mysql/slave_trans_flies.py:46
msgid "在主、从库查找备份源"
msgstr "Find the backup source in the master and slave libraries"

#: backend/flow/plugins/components/collections/mysql/slave_trans_flies.py:53
msgid "从备份源中筛选符合的备份"
msgstr "Filter matching backups from backup sources"

#: backend/flow/plugins/components/collections/mysql/trans_flies.py:66
#: backend/flow/plugins/components/collections/pulsar/trans_files.py:52
#: backend/flow/plugins/components/collections/riak/trans_files.py:66
msgid ""
"选择服务器之间文件传输模式，应当源文件的机器ip列表不能为空，请联系系统管理员"
msgstr ""
"Select the file transfer mode between servers. The machine ip list that "
"should be the source file cannot be empty. Please contact the system "
"administrator{}"

#: backend/flow/plugins/components/collections/mysql/truncate_data_create_stage_database.py:54
msgid "建立备份库完成"
msgstr "Create a backup db complete"

#: backend/flow/plugins/components/collections/mysql/truncate_data_drop.py:47
msgid "删除据库完成"
msgstr "Database deletion completed"

#: backend/flow/plugins/components/collections/mysql/truncate_data_drop_stage_database.py:48
msgid "删除备份库完成"
msgstr "Deleting the backup repository is complete"

#: backend/flow/plugins/components/collections/mysql/truncate_data_generate_stage_database_name.py:31
msgid "生成备份库名完成"
msgstr "Generate backup db name complete"

#: backend/flow/plugins/components/collections/mysql/truncate_data_recreate_table.py:61
msgid "重建表成功"
msgstr "rebuild table successfully"

#: backend/flow/plugins/components/collections/mysql/truncate_data_rename_table.py:68
msgid "[{}] 备份清档表完成"
msgstr "[{}] Backup cleanup table completed"

#: backend/flow/plugins/components/collections/mysql/upload_file.py:38
msgid "分区sql为空无需上传"
msgstr "Partition sql is empty and no need to upload"

#: backend/flow/plugins/components/collections/mysql/upload_file.py:43
msgid "单据id{}"
msgstr "ticket id {}"

#: backend/flow/plugins/components/collections/mysql/upload_file.py:44
msgid "分区sql文件上传成功"
msgstr "Partition sql file uploaded successfully"

#: backend/flow/plugins/components/collections/pulsar/blank_schedule_service.py:66
msgid "successfully enter blank schedule, interval times: {}"
msgstr "successfully enter blank schedule, interval times: {}"

#: backend/flow/plugins/components/collections/redis/exec_actuator_script.py:98
#: backend/flow/plugins/components/collections/redis/exec_data_structure_actuator_script.py:105
#: backend/flow/plugins/components/collections/redis/psuh_data_structure_json_script.py:103
msgid "[{}] kwargs['payload'] 是不完整，需要将{}内容加到payload中"
msgstr ""
"[{}] kwargs[&#39;payload&#39;] is incomplete, you need to add {} content to "
"payload"

#: backend/flow/plugins/components/collections/redis/exec_shell_script.py:115
msgid "无符合要求机器"
msgstr "No matching machine"

#: backend/flow/plugins/components/collections/redis/exec_shell_script.py:119
msgid "获取最大磁盘空闲机器失败：{}"
msgstr "Failed to get max disk free machines: {}"

#: backend/flow/plugins/components/collections/redis/exec_shell_script.py:191
msgid "源Redis服务器：{} {} 磁盘使用率：{}% > 85%"
msgstr "Source Redis server: {} {} Disk usage: {}% &gt; 85%"

#: backend/flow/plugins/components/collections/redis/exec_shell_script.py:201
msgid "源Redis服务器：{} 磁盘使用情况：{}+Redis数据大小：{} 将会 >=90%"
msgstr "Source Redis server: {} Disk usage: {}+Redis data size: {} will &gt;=90%"

#: backend/flow/plugins/components/collections/redis/exec_shell_script.py:216
msgid "所有临时Redis服务器的备份目录都相同：{}"
msgstr "The backup directory for all temporary Redis servers is the same: {}"

#: backend/flow/plugins/components/collections/redis/exec_shell_script.py:218
msgid "备份目录的值不一致：{}"
msgstr "The backup directory has inconsistent values: {}"

#: backend/flow/plugins/components/collections/redis/exec_shell_script.py:223
msgid "检查源Redis服务器磁盘使用情况：{}"
msgstr "Check source Redis server disk usage: {}"

#: backend/flow/plugins/components/collections/redis/exec_shell_script.py:241
msgid "redis 临时机器:{} 磁盘空间检查通过"
msgstr "redis temporary machine: {} disk space check passed"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:132
msgid "包含key正则:{} 不合法"
msgstr "Contains key regular: {} is illegal"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:136
msgid "排除key正则:{} 不合法"
msgstr "Exclude key regularity:{} is illegal"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:143
msgid "包含key正则:{} 不合法,err:{}"
msgstr "Containing key regular: {} is illegal, err: {}"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:150
msgid "排除key正则:{} 不合法,err:{}"
msgstr "Exclude key regular: {} is illegal, err: {}"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:163
msgid "源redis集群{}存在{}个非running状态的slave"
msgstr "There are {} non-running slaves in the source redis cluster {}"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:223
msgid "所有源redis slave机器:{} 磁盘空间检查通过"
msgstr "All source redis slave machines: {} disk space check passed"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:234
msgid "src_cluster:{} type:{} 无需检查cluster nodes是否ok"
msgstr ""
"src_cluster:{} type:{} No need to check whether the cluster nodes are ok"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:311
msgid "src_cluster:{} 类型是:{} 无需检查cluster state"
msgstr "src_cluster: {} type is: {} no need to check cluster state"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:546
msgid ""
"bill_id:{} src_cluster:{} dst_cluster:{} 所有tasks都成功且终止了同步task"
msgstr "bill_id:{} src_cluster:{} dst_cluster:{} All tasks were successful and the synchronization task was terminated"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:557
msgid "bill_id:{} src_cluster:{} dst_cluster:{} 某些tasks迁移失败"
msgstr "bill_id:{} src_cluster:{} dst_cluster:{} Some tasks migration failed"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:567
msgid "bill_id:{} src_cluster:{} dst_cluster:{} 所有tasks都是增量同步"
msgstr ""
"bill_id:{} src_cluster:{} dst_cluster:{} All tasks are incremental "
"synchronization"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:575
msgid "bill_id:{} src_cluster:{} dst_cluster:{} 开始新的校验修复"
msgstr "bill_id:{} src_cluster:{} dst_cluster:{} Start a new verification repair"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:587
msgid ""
"bill_id:{} src_cluster:{} dst_cluster:{} 上次校验修复正在进行中...,flow_id:{}"
msgstr "bill_id:{} src_cluster:{} dst_cluster:{} The last verification repair is in progress..., flow_id:{}"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:599
msgid ""
"bill_id:{} src_cluster:{} dst_cluster:{} 上次校验修复失败,flow_id:{},请处理该"
"失败信息而后再到当前页面重试"
msgstr "bill_id:{} src_cluster:{} dst_cluster:{} The last verification and repair failed, flow_id:{}, please handle the failure information and try again on the current page."

#: backend/flow/plugins/components/collections/redis/redis_dts.py:611
msgid "bill_id:{} src_cluster:{} dst_cluster:{} 上次校验修复已完成,flow_id:{}"
msgstr "bill_id:{} src_cluster:{} dst_cluster:{} The last verification repair has been completed, flow_id:{}"

#: backend/flow/plugins/components/collections/redis/redis_dts.py:623
msgid ""
"bill_id:{} src_cluster:{} dst_cluster:{} 数据同步已 ok,后续将断开同步关系..."
msgstr "bill_id:{} src_cluster:{} dst_cluster:{} Data synchronization is ok, the synchronization relationship will be disconnected later..."

#: backend/flow/plugins/components/collections/redis/redis_dts.py:637
msgid ""
"bill_id:{} src_cluster:{} dst_cluster:{} 数据同步已 ok,校验修复已完成,将继续"
"执行等待切换步骤..."
msgstr "bill_id:{} src_cluster:{} dst_cluster:{} Data synchronization is ok, verification repair is completed, and the waiting for switching step will continue..."

#: backend/flow/plugins/components/collections/redis/redis_dts.py:648
msgid "bill_id:{} src_cluster:{} dst_cluster:{} 所有tasks开始断开同步关系"
msgstr "bill_id:{} src_cluster:{} dst_cluster:{} All tasks begin to disconnect the synchronization relationship"

#: backend/flow/plugins/components/collections/redis/redis_ticket.py:43
msgid "自愈发起-实例下架-{}"
msgstr "Self-healing initiated-instance removed-{}"

#: backend/flow/plugins/components/collections/redis/trans_flies.py:86
msgid "下发介质包失败: [{}/{}] resp:{}"
msgstr "Failed to deliver media package: [{}/{}] resp:{}"

#: backend/flow/plugins/components/collections/riak/get_riak_cluster_node.py:47
msgid "获取集群所有节点成功。{}"
msgstr "Successfully obtained all nodes of the cluster. {}"

#: backend/flow/plugins/components/collections/riak/get_riak_cluster_node.py:76
msgid "获取集群中running节点成功。{}"
msgstr "Successfully obtained the running node in the cluster. {}"

#: backend/flow/plugins/components/collections/riak/get_riak_resource.py:48
msgid "获取机器资源失败，新建集群至少选择3台机器，扩容或缩容至少选择1台机器"
msgstr "Failed to obtain machine resources. Select at least 3 machines for new cluster and at least 1 machine for expansion or reduction."

#: backend/flow/plugins/components/collections/spider/add_spider_routing.py:113
#: backend/flow/plugins/components/collections/spider/ctl_drop_routing.py:48
#: backend/flow/plugins/components/collections/spider/ctl_switch_to_slave.py:151
#: backend/flow/plugins/components/collections/spider/drop_spider_ronting.py:66
msgid "select mysql.servers failed: {}"
msgstr "select mysql.servers failed: {}"

#: backend/flow/plugins/components/collections/spider/add_spider_routing.py:204
#: backend/flow/plugins/components/collections/spider/add_spider_routing.py:212
#: backend/flow/plugins/components/collections/spider/add_system_user_in_cluster.py:22
msgid "在[{}]创建添加内置账号成功"
msgstr "Created and added built-in account in [{}] successfully"

#: backend/flow/plugins/components/collections/spider/add_spider_routing.py:262
msgid "This spider-role is not supported,check"
msgstr "This spider-role is not supported,check"

#: backend/flow/plugins/components/collections/spider/check_cluster_table_using_sub.py:45
msgid "{} {} 检查库表是否在用"
msgstr "{} {} Check if the database table is in use"

#: backend/flow/plugins/components/collections/spider/clear_database_on_remote_service.py:55
msgid "remote drop 新库完成"
msgstr "remote drop new database completed"

#: backend/flow/plugins/components/collections/spider/create_database_like_via_ctl.py:118
msgid "建立集群备份库表完成"
msgstr "The establishment of the cluster backup database table is completed"

#: backend/flow/plugins/components/collections/spider/ctl_drop_routing.py:68
#: backend/flow/plugins/components/collections/spider/drop_spider_ronting.py:86
msgid "exec TDBCTL-DROP-NODE failed: {}"
msgstr "exec TDBCTL-DROP-NODE failed: {}"

#: backend/flow/plugins/components/collections/spider/ctl_switch_to_slave.py:50
#: backend/flow/plugins/components/collections/spider/drop_spider_ronting.py:29
msgid "select processlist failed: {}"
msgstr "select processlist failed: {}"

#: backend/flow/plugins/components/collections/spider/ctl_switch_to_slave.py:85
msgid ""
"After two detections, there are still non-sleep state threads in the instance"
msgstr "After two detections, there are still non-sleep state threads in the instance"

#: backend/flow/plugins/components/collections/spider/ctl_switch_to_slave.py:103
#: backend/flow/plugins/components/collections/spider/ctl_switch_to_slave.py:172
msgid "exec TDBCTL-DISABLE-PRIMARY failed: {}"
msgstr "exec TDBCTL-DISABLE-PRIMARY failed: {}"

#: backend/flow/plugins/components/collections/spider/ctl_switch_to_slave.py:123
msgid "exec [{ctl.ip_port}] stop slave failed: {res[0]['error_msg']}"
msgstr "exec [{ctl.ip_port}] stop slave failed: {res[0]['error_msg']}"

#: backend/flow/plugins/components/collections/spider/ctl_switch_to_slave.py:163
msgid "exec reset-slave-all failed: {}"
msgstr "exec reset-slave-all failed: {}"

#: backend/flow/plugins/components/collections/spider/ctl_switch_to_slave.py:209
msgid "在[{}]创建添加同步账号成功"
msgstr "Successfully created and added synchronization account in [{}]"

#: backend/flow/plugins/components/collections/spider/ctl_switch_to_slave.py:231
msgid "exec change master  failed: {res[0]['error_msg']}"
msgstr "exec change master  failed: {res[0]['error_msg']}"

#: backend/flow/plugins/components/collections/spider/ctl_switch_to_slave.py:250
msgid "预检测成功"
msgstr "Pre-test successful"

#: backend/flow/plugins/components/collections/spider/ctl_switch_to_slave.py:258
msgid "关闭所有从节点的主从同步成功"
msgstr "Close master-slave synchronization of all slave nodes successfully"

#: backend/flow/plugins/components/collections/spider/ctl_switch_to_slave.py:265
msgid "在其余节点同步新的primary节点[{}]成功"
msgstr "Synchronization of the new primary node [{}] on the remaining nodes was successful"

#: backend/flow/plugins/components/collections/spider/ctl_switch_to_slave.py:269
msgid "节点[{}]提升自己为primary成功"
msgstr "Node [{}] promoted itself to primary successfully"

#: backend/flow/plugins/components/collections/spider/drop_spider_table_via_ctl.py:49
msgid "删除老数据库完成"
msgstr "Delete the old database complete"

#: backend/flow/plugins/components/collections/spider/truncate_database_drop_stage_db_via_ctl.py:47
msgid "清理备份库完成"
msgstr "Clean up the backup database is complete"

#: backend/flow/plugins/components/collections/spider/truncate_database_on_spider_via_ctl.py:145
msgid "处理集群表完成"
msgstr "Processing cluster table complete"

#: backend/flow/plugins/components/collections/sqlserver/exec_sqlserver_login.py:33
msgid "集群[{}]没有对应填入的ip[{}]的实例，请联系系统管理员"
msgstr "Cluster [{}] does not have an instance corresponding to the filled in ip [{}]. Please contact the system administrator."

#: backend/flow/plugins/components/collections/sqlserver/trans_files.py:48
msgid ""
"选择服务器之间文件传输模式，应当源文件的机器ip列表不能为空，请联系系统管理"
"员: source_hosts:{}"
msgstr "Select the file transfer mode between servers. The machine IP list of the source file cannot be empty. Please contact the system administrator: source_hosts:{}"

#: backend/flow/plugins/components/collections/sqlserver/trans_files.py:53
msgid ""
"选择服务器之间文件传输模式，目标路径不能为空，请联系系统管理员: "
"file_target_path:{}"
msgstr "Select the file transfer mode between servers. The target path cannot be empty. Please contact the system administrator: file_target_path:{}"

#: backend/flow/signal/handlers.py:34
msgid "【状态信号捕获】{} root_id={}, node_id={}, status:{}"
msgstr "【Status signal capture】{} root_id={}, node_id={}, status:{}"

#: backend/flow/signal/handlers.py:45
msgid "【状态信号捕获】未查找到FlowTree root_id={}"
msgstr "[Status signal capture] FlowTree root_id={} not found"

#: backend/flow/signal/handlers.py:74
msgid "【状态信号捕获】污点池处理/回调单据 发生错误，错误信息{}"
msgstr "[Status signal capture] An error occurred in the taint pool processing/callback document, error message {}"

#: backend/flow/utils/cloud/cloud_act_payload.py:52
msgid "单据中不包含DRS的部署信息"
msgstr "The ticket does not contain the deployment information of DRS"

#: backend/flow/utils/cloud/cloud_act_payload.py:60
msgid "DNS服务未部署，请在DNS服务部署后再进行该服务的部署"
msgstr ""
"The DNS service has not been deployed, please deploy the service after the "
"DNS service is deployed"

#: backend/flow/utils/cloud/cloud_act_payload.py:68
msgid "Nginx服务未部署，请在Nginx服务部署后再进行该服务的部署"
msgstr ""
"The Nginx service is not deployed, please deploy the service after the Nginx "
"service is deployed"

#: backend/flow/utils/cloud/cloud_act_payload.py:192
msgid "Nginx服务未部署,请在Nginx服务部署后再进行该服务的部署"
msgstr "The Nginx service has not been deployed. Please deploy the service after the Nginx service is deployed."

#: backend/flow/utils/cloud/cloud_act_payload.py:199
msgid "DNS服务未部署,请在DNS服务部署后再进行该服务的部署"
msgstr "The DNS service has not been deployed. Please deploy the service after the DNS service is deployed."

#: backend/flow/utils/cloud/cloud_db_proxy.py:53
msgid "找不到单据类型需要变更的proxy函数，服务信息入库失败"
msgstr ""
"The proxy function that needs to be changed in the ticket type cannot be "
"found, and the service information storage fails"

#: backend/flow/utils/cloud/cloud_module_operate.py:73
msgid "主机{}转移{}失败，转移参数:{}, 错误信息:{}"
msgstr "Host {} transfer {} failed, transfer parameters: {}, error message: {}"

#: backend/flow/utils/cloud/cloud_module_operate.py:134
msgid "主机{}转移待回收失败，错误信息:{}"
msgstr "The transfer of host {} to be recycled failed, error message: {}"

#: backend/flow/utils/doris/consts.py:17
msgid "fe http端口"
msgstr "fe http port"

#: backend/flow/utils/doris/consts.py:18
msgid "fe query 端口"
msgstr "fe query port"

#: backend/flow/utils/doris/consts.py:19
msgid "fe"
msgstr "fe"

#: backend/flow/utils/doris/consts.py:20
msgid "be"
msgstr "be"

#: backend/flow/utils/doris/consts.py:21
msgid "访问Doris 管理员账户名"
msgstr "Access Doris administrator account name"

#: backend/flow/utils/doris/consts.py:22
msgid "访问Doris 管理员密码"
msgstr "Access Doris administrator password"

#: backend/flow/utils/doris/consts.py:26 backend/flow/utils/vm/consts.py:22
msgid "ADD"
msgstr "ADD"

#: backend/flow/utils/doris/consts.py:27 backend/flow/utils/vm/consts.py:23
msgid "DROP"
msgstr "DROP"

#: backend/flow/utils/doris/consts.py:28 backend/flow/utils/vm/consts.py:24
msgid "DECOMMISSION"
msgstr "DECOMMISSION"

#: backend/flow/utils/doris/consts.py:29 backend/flow/utils/vm/consts.py:25
msgid "DROPP"
msgstr "DRIP"

#: backend/flow/utils/doris/doris_db_meta.py:105
#: backend/flow/utils/es/es_db_meta.py:101
#: backend/flow/utils/vm/vm_db_meta.py:106
msgid "找不到单据类型需要变更的cmdb函数{}，请联系系统管理员"
msgstr ""
"The cmdb function {} that needs to be changed cannot be found, please "
"contact the system administrator"

#: backend/flow/utils/hdfs/hdfs_db_meta.py:58
#: backend/flow/utils/influxdb/influxdb_db_meta.py:126
#: backend/flow/utils/kafka/kafka_db_meta.py:180
#: backend/flow/utils/redis/redis_db_meta.py:89
msgid "找不到单据类型需要变更的cmdb函数，请联系系统管理员"
msgstr ""
"The cmdb function that needs to be changed cannot be found, please contact "
"the system administrator"

#: backend/flow/utils/mongodb/db_table_filter.py:41
#: backend/flow/utils/mysql/db_table_filter/filter.py:42
msgid "include patterns 不能为空"
msgstr "include patterns cannot be empty"

#: backend/flow/utils/mongodb/db_table_filter.py:48
msgid "exclude patterns 要么同时为空, 要么都不为空"
msgstr ""
"exclude patterns are either empty at the same time, or none of them are empty"

#: backend/flow/utils/mongodb/db_table_filter.py:65
msgid "{}校验不成功! 只能包含字母、数字或通配*且不超过最大长度"
msgstr "{}Verification failed! Can only contain letters, numbers or wildcards* and does not exceed the maximum length"

#: backend/flow/utils/mongodb/migrate_meta.py:40
msgid "找不到单据类型，请联系系统管理员"
msgstr "Document type not found, please contact the system administrator"

#: backend/flow/utils/mysql/db_resource.py:106
msgid " 获取资源失败: {}"
msgstr "Failed to fetch resource: {}"

#: backend/flow/utils/mysql/db_table_filter/exception.py:18
msgid "库表过滤异常"
msgstr "Database table filtering exception"

#: backend/flow/utils/mysql/db_table_filter/exception.py:23
msgid "输入校验异常"
msgstr "input validation exception"

#: backend/flow/utils/mysql/db_table_filter/filter.py:50
msgid "exclude patterns 不能包含 *"
msgstr "exclude patterns cannot contain *"

#: backend/flow/utils/mysql/db_table_filter/tools.py:30
msgid "使用通配符时, 只能有一个模式: {}"
msgstr "When using wildcards, there can only be one pattern: {}"

#: backend/flow/utils/mysql/db_table_filter/tools.py:33
msgid "% ? 不能独立使用"
msgstr "% ? cannot be used independently"

#: backend/flow/utils/mysql/db_table_filter/tools.py:36
msgid "* 只能独立使用"
msgstr "* can only be used independently"

#: backend/flow/utils/mysql/mysql_act_dataclass_validator.py:27
msgid "exec_ip变量和get_trans_data_ip_var变量不能同时赋值"
msgstr ""
"The exec_ip variable and the get_trans_data_ip_var variable cannot be "
"assigned at the same time"

#: backend/flow/utils/mysql/mysql_act_dataclass_validator.py:29
msgid "exec_ip变量和get_trans_data_ip_var变量不能同时为None"
msgstr ""
"The exec_ip variable and the get_trans_data_ip_var variable cannot be None "
"at the same time"

#: backend/flow/utils/mysql/mysql_act_playload.py:187
msgid "传入的安装mysql端口列表为空或者非法值，请联系系统管理员"
msgstr ""
"The incoming mysql port list is empty or an illegal value, please contact "
"the system administrator"

#: backend/flow/utils/mysql/mysql_act_playload.py:241
msgid "传入的安装spider端口列表为空或者非法值，请联系系统管理员"
msgstr ""
"The incoming installation spider port list is empty or an illegal value, "
"please contact the system administrator"

#: backend/flow/utils/mysql/mysql_act_playload.py:600
#: backend/flow/utils/mysql/mysql_act_playload.py:679
#: backend/flow/utils/mysql/mysql_act_playload.py:2093
msgid "不支持的机器类型: {}"
msgstr "Unsupported machine type: {}"

#: backend/flow/utils/mysql/mysql_act_playload.py:2043
msgid "start binlog  {} not exist"
msgstr "start binlog  {} not exist"

#: backend/flow/utils/mysql/mysql_commom_query.py:34
msgid "DRS{}:{}查询变量失败,返回为空值"
msgstr "DRS{}:{} failed to query variables and returned a null value"

#: backend/flow/utils/mysql/mysql_commom_query.py:37
msgid "DRS查询字符集失败：{}"
msgstr "DRS query character set failed: {}"

#: backend/flow/utils/pulsar/consts.py:21
msgid "broker默认分区数"
msgstr "broker default number of partitions"

#: backend/flow/utils/pulsar/consts.py:22
msgid "broker认证配置"
msgstr "Broker authentication configuration"

#: backend/flow/utils/pulsar/consts.py:23
msgid "默认bookie池大小"
msgstr "Default bookie pool size"

#: backend/flow/utils/pulsar/consts.py:24
msgid "写入副本数"
msgstr "Write replicas"

#: backend/flow/utils/pulsar/consts.py:25
msgid "确认写入副本数"
msgstr "Acknowledge the number of replicas written"

#: backend/flow/utils/pulsar/consts.py:26
msgid "数据保留时间，单位为分钟"
msgstr "Data retention time, in minutes"

#: backend/flow/utils/pulsar/consts.py:27
#: backend/flow/utils/pulsar/consts.py:30
msgid "broker服务端口"
msgstr "broker service port"

#: backend/flow/utils/pulsar/consts.py:28
msgid "访问Pulsar Manager账户名"
msgstr "Access Pulsar Manager account name"

#: backend/flow/utils/pulsar/consts.py:29
msgid "访问Pulsar Manager密码"
msgstr "Access Pulsar Manager Password"

#: backend/flow/utils/redis/redis_act_playload.py:327
msgid "开始交换源集群和目标集群的redis配置"
msgstr "Start exchanging the redis configuration of the source cluster and the target cluster"

#: backend/flow/utils/redis/redis_act_playload.py:335
msgid "获取源集群:{} redis配置"
msgstr "Get the source cluster: {} redis configuration"

#: backend/flow/utils/redis/redis_act_playload.py:359
msgid "获取目标集群:{} redis配置"
msgstr "Get the target cluster: {} redis configuration"

#: backend/flow/utils/redis/redis_act_playload.py:405
msgid "删除源集群:{} redis配置,upsert_param:{}"
msgstr "Delete source cluster: {} redis configuration, upsert_param: {}"

#: backend/flow/utils/redis/redis_act_playload.py:413
msgid "删除目标集群:{} redis配置,upsert_param:{}"
msgstr "Delete target cluster: {} redis configuration, upsert_param: {}"

#: backend/flow/utils/redis/redis_act_playload.py:421
msgid "更新源集群redis配置 为 目标集群的配置,upsert_param:{}"
msgstr "Update the source cluster redis configuration to the target cluster configuration, upsert_param:{}"

#: backend/flow/utils/redis/redis_act_playload.py:428
msgid "更新目标集群redis配置 为 源集群的配置,upsert_param:{}"
msgstr "Update the redis configuration of the target cluster to the configuration of the source cluster, upsert_param:{}"

#: backend/flow/utils/redis/redis_act_playload.py:550
msgid "交换源集群和目标集群 dbconfig 中的proxy版本信息"
msgstr "Exchange the proxy version information in the dbconfig of the source cluster and the target cluster"

#: backend/flow/utils/redis/redis_act_playload.py:558
msgid "获取源集群:{} proxy配置"
msgstr "Get the source cluster:{} proxy configuration"

#: backend/flow/utils/redis/redis_act_playload.py:571
msgid "获取目标集群:{} proxy配置"
msgstr "Get the target cluster:{} proxy configuration"

#: backend/flow/utils/redis/redis_act_playload.py:617
msgid "src_conf_upsert_items==>{}"
msgstr "src_conf_upsert_items==>{}"

#: backend/flow/utils/redis/redis_act_playload.py:618
msgid "dst_conf_upsert_items==>{}"
msgstr "dst_conf_upsert_items==>{}"

#: backend/flow/utils/redis/redis_act_playload.py:647
msgid "删除源集群:{} proxy配置,src_remove_param:{}"
msgstr "Delete source cluster:{} proxy configuration, src_remove_param:{}"

#: backend/flow/utils/redis/redis_act_playload.py:661
msgid "删除目标集群:{} proxy配置,dst_remove_param:{}"
msgstr "Delete target cluster:{} proxy configuration,dst_remove_param:{}"

#: backend/flow/utils/redis/redis_act_playload.py:672
msgid "更新源集群:{} dbconfig 中proxy版本等信息,src_upsert_param:{}"
msgstr "Update source cluster: {} proxy version and other information in dbconfig, src_upsert_param: {}"

#: backend/flow/utils/redis/redis_act_playload.py:685
msgid "更新目标集群:{} dbconfig 中proxy版本等信息,dst_upsert_param:{}"
msgstr "Update the target cluster: {} proxy version and other information in dbconfig, dst_upsert_param: {}"

#: backend/flow/utils/redis/redis_act_playload.py:1209
msgid "集群{}中没有找到{}相关实例"
msgstr "No related instance of {} found in cluster {}"

#: backend/flow/utils/redis/redis_act_playload.py:2054
msgid "删除集群:{} redis配置,upsert_param:{}"
msgstr "Delete cluster: {} redis configuration, upsert_param: {}"

#: backend/flow/utils/redis/redis_act_playload.py:2062
msgid "更新集群:{} redis配置 为 目标集群的配置,upsert_param:{}"
msgstr "Update cluster: {} redis configuration is the configuration of the target cluster, upsert_param: {}"

#: backend/flow/utils/redis/redis_db_meta.py:97
msgid "找不到单据类型需要查询的cmdb函数，请联系系统管理员"
msgstr ""
"The cmdb function that needs to be queried for the ticket type cannot be "
"found, please contact the system administrator"

#: backend/flow/utils/redis/redis_db_meta.py:1420
#, python-format
msgid "redis集群:%s cluster_type:%s 新增 %s cluster_entry"
msgstr "redis cluster:%s cluster_type:%s new %s cluster_entry"

#: backend/flow/utils/redis/redis_db_meta.py:1430
#, python-format
msgid "redis集群:%s cluster_type:%s 更新 cluster_entry:%s"
msgstr "redis cluster:%s cluster_type:%s update cluster_entry:%s"

#: backend/flow/utils/redis/redis_db_meta.py:1440
#, python-format
msgid "redis集群:%s cluster_type:%s 删除 cluster_entry:%s"
msgstr "redis cluster:%s cluster_type:%s delete cluster_entry:%s"

#: backend/flow/utils/redis/redis_db_meta.py:1466
msgid ""
"dts_online_switch_swap_two_cluster_storage 1111 first get src_inst_list:{}"
msgstr "dts_online_switch_swap_two_cluster_storage 1111 first get src_inst_list:{}"

#: backend/flow/utils/redis/redis_db_meta.py:1471
msgid ""
"dts_online_switch_swap_two_cluster_storage 1111 first get src dst_inst_list:"
msgstr "dts_online_switch_swap_two_cluster_storage 1111 first get src dst_inst_list:{}"

#: backend/flow/utils/redis/redis_db_meta.py:1493
msgid "dts 交换两个集群的 cluster_type 等信息"
msgstr "dts exchanges cluster_type and other information between two clusters"

#: backend/flow/utils/redis/redis_db_meta.py:1505
msgid "dts 交换两个集群的 storageinstances"
msgstr "dts exchanges storage instances of two clusters"

#: backend/flow/utils/redis/redis_db_meta.py:1515
msgid ""
"dts_online_switch_swap_two_cluster_storage 2222 交换两个集群strorageinstance"
"完成 src_inst_list:{}"
msgstr "dts_online_switch_swap_two_cluster_storage 2222 Swap two clusters storageinstance to complete src_inst_list:{}"

#: backend/flow/utils/redis/redis_db_meta.py:1520
msgid ""
"dts_online_switch_swap_two_cluster_storage 2222 交换两个集群strorageinstance"
"完成 dst_inst_list:{}"
msgstr "dts_online_switch_swap_two_cluster_storage 2222 Swap two cluster storageinstance to complete dst_inst_list:{}"

#: backend/flow/utils/redis/redis_db_meta.py:1526
msgid "dts 交换两个集群的 nosqlstoragesetdtl"
msgstr "dts swaps nosqlstoragesetdtl between two clusters"

#: backend/flow/utils/redis/redis_db_meta.py:1536
msgid "dts 交换两个集群 proxy 的 storageinstances"
msgstr "dts exchanges storage instances of two cluster proxies"

#: backend/flow/utils/redis/redis_db_meta.py:1564
msgid "dts 交换两个集群的 cc module"
msgstr "dts exchanges the cc module of two clusters"

#: backend/flow/utils/redis/redis_db_meta.py:1567
msgid ""
"dts_online_switch_swap_two_cluster_storage 3333 转移目标机器模块到源集群下,"
"src_cluster:{} dst_inst_list:{}"
msgstr "dts_online_switch_swap_two_cluster_storage 3333 Transfer the target machine module to the source cluster, src_cluster:{} dst_inst_list:{}"

#: backend/flow/utils/redis/redis_db_meta.py:1573
msgid ""
"dts_online_switch_swap_two_cluster_storage 3333 转移源机器模块到目标集群下,"
"dst_cluster:{} src_inst_list:{}"
msgstr "dts_online_switch_swap_two_cluster_storage 3333 Transfer the source machine module to the target cluster, dst_cluster:{} src_inst_list:{}"

#: backend/flow/utils/redis/redis_db_meta.py:1804
msgid "redis集群:{} cluster_type:{} 新增 {} cluster_entry"
msgstr "redis cluster:{} cluster_type:{} add {} cluster_entry"

#: backend/flow/utils/redis/redis_db_meta.py:1814
msgid "redis集群:{} cluster_type:{} 更新 cluster_entry:{}"
msgstr "redis cluster:{} cluster_type:{} update cluster_entry:{}"

#: backend/flow/utils/redis/redis_proxy_util.py:382
#: backend/flow/utils/redis/redis_proxy_util.py:410
#: backend/flow/utils/redis/redis_proxy_util.py:490
msgid "集群类型:{} 不是一个 redis 集群类型?"
msgstr "Cluster type: {} is not a redis cluster type?"

#: backend/flow/utils/redis/redis_proxy_util.py:637
msgid "redis集群 {} 没有running_master??"
msgstr "redis cluster{} does not have running_master??"

#: backend/flow/utils/redis/redis_proxy_util.py:720
msgid "分片数 不能被 机器组数 整除"
msgstr "The number of shards is not divisible by the number of machine groups"

#: backend/flow/utils/redis/redis_proxy_util.py:729
msgid "集群机器规格、分片数、机器组数都没变,只是版本变了.请使用 版本升级 单据"
msgstr "The cluster machine specifications, number of shards, and number of machine groups have not changed, but the version has changed. Please use the version upgrade document"

#: backend/flow/utils/redis/redis_proxy_util.py:750
msgid "集群版本变更时,分片数不能变,请先使用 版本升级 单据"
msgstr "When the cluster version changes, the number of shards cannot be changed. Please use the version upgrade document first."

#: backend/flow/utils/redis/redis_proxy_util.py:758
msgid "当前集群规格、版本、分片数、机器组数均已满足,无需变更"
msgstr "The current cluster specifications, versions, number of shards, and number of machine groups are all met and no changes are required."

#: backend/flow/utils/redis/redis_proxy_util.py:765
msgid "redis 集群协议类型,机器组数不能小于3"
msgstr "redis cluster protocol type, the number of machine groups cannot be less than 3"

#: backend/flow/utils/redis/redis_proxy_util.py:791
msgid ""
"tendisplus集群 分片数变多,不允许机器数不变 or 变少。如果有需要,请使用 集群分"
"片数变更 单据"
msgstr "The number of tendisplus cluster shards increases, and the number of machines is not allowed to remain the same or decrease. If necessary, please use the cluster shard number change document"

#: backend/flow/utils/redis/redis_proxy_util.py:804
msgid ""
"tendisplus集群 分片数变少,不允许机器数 变多。如果有需要,请使用 集群分片数变"
"更 单据"
msgstr "The number of tendisplus cluster shards is reduced and the number of machines is not allowed to increase. If necessary, please use the cluster shard number change document"

#: backend/flow/utils/redis/redis_proxy_util.py:1027
msgid "集群{}不存在DRS可访问的实例"
msgstr "There is no instance accessible to DRS in cluster {}"

#: backend/flow/utils/redis/redis_proxy_util.py:1036
msgid "redis集群 {} 不存在"
msgstr "redis cluster{} does not exist"

#: backend/flow/utils/redis/redis_proxy_util.py:1041
msgid "redis集群 {} 存在 {} 个状态非 running 的 proxy"
msgstr "There are {} non-running proxies in the redis cluster {}."

#: backend/flow/utils/redis/redis_proxy_util.py:1047
msgid "redis集群 {} 存在 {} 个状态非 running 的 redis"
msgstr "The redis cluster {} has {} redis in non-running status."

#: backend/flow/utils/redis/redis_proxy_util.py:1063
msgid "redis集群:{} proxy:{} ping失败"
msgstr "redis cluster:{} proxy:{} ping failed"

#: backend/flow/utils/redis/redis_proxy_util.py:1077
msgid "redis集群:{} redis:{} ping失败"
msgstr "redis cluster:{} redis:{} ping failed"

#: backend/flow/utils/redis/redis_proxy_util.py:1080
msgid "redis集群 {} 没有master??"
msgstr "redis cluster{} has no master??"

#: backend/flow/utils/redis/redis_proxy_util.py:1084
msgid "redis集群{} master {} 没有 slave"
msgstr "redis cluster {} master {} no slave"

#: backend/flow/utils/spider/get_spider_incr.py:42
msgid "select spider_auto_increment failed: {}"
msgstr "select spider_auto_increment failed: {}"

#: backend/flow/utils/spider/get_spider_incr.py:46
msgid "select spider_auto_increment is null, check "
msgstr "select spider_auto_increment is null, check"

#: backend/flow/utils/spider/get_spider_incr.py:55
msgid "there are several different self incrementing steps"
msgstr "there are several different self incrementing steps"

#: backend/flow/utils/spider/get_spider_incr.py:69
msgid "The obtained incr is greater than MAX_SPIDER_MASTER_COUNT, check"
msgstr "The obtained incr is greater than MAX_SPIDER_MASTER_COUNT, check"

#: backend/flow/utils/sqlserver/sqlserver_act_payload.py:56
msgid "找不到对应版本的install key"
msgstr "The install key for the corresponding version cannot be found"

#: backend/flow/utils/sqlserver/sqlserver_act_payload.py:72
#: backend/flow/utils/sqlserver/sqlserver_act_payload.py:106
msgid ""
"传入的安装sqlserver端口列表为空或者非法值，请联系系统管理员: install_ports {}"
msgstr "The incoming installation sqlserver port list is empty or an illegal value, please contact the system administrator: install_ports {}"

#: backend/flow/utils/tbinlogdumper/tbinlogdumper_act_payload.py:111
msgid "非法协议，请联系系统管理员：protocol_type:{}"
msgstr "Illegal protocol, please contact the system administrator: protocol_type:{}"

#: backend/flow/utils/vm/consts.py:17
msgid "数据过期时间"
msgstr "Data expiration time"

#: backend/flow/utils/vm/consts.py:18
msgid "数据副本数"
msgstr "Number of data copies"

#: backend/flow/views/append_deploy_ctl.py:30
msgid "开始执行迁移后置操作,部署tdbctl中控"
msgstr "Start performing migration post-operation and deploy tdbctl central control"

#: backend/flow/views/base.py:39 backend/flow/views/base.py:51
msgid "权限不足，无法访问!"
msgstr "Insufficient permissions to access!"

#: backend/flow/views/cloud_dbha_apply.py:39
#: backend/flow/views/cloud_dns_bind_apply.py:39
msgid "开始部署dns-bind服务场景"
msgstr "Start deploying the dns-bind service scenario"

#: backend/flow/views/cloud_drs_apply.py:44
msgid "开始部署drs服务场景"
msgstr "Start deploying the drs service scenario"

#: backend/flow/views/cloud_nginx_apply.py:44
msgid "开始部署nginx服务场景"
msgstr "Start deploying nginx service scenarios"

#: backend/flow/views/cloud_nginx_apply.py:54
msgid "开始替换nginx服务场景"
msgstr "Start to replace the nginx service scenario"

#: backend/flow/views/cloud_redis_dts_server_apply.py:43
msgid "开始部署redis dts服务场景"
msgstr "Start deploying redis dts service scenario"

#: backend/flow/views/cloud_redis_dts_server_apply.py:69
msgid "删除redis dts服务场景"
msgstr "Delete redis dts service scenario"

#: backend/flow/views/doris_apply.py:64
msgid "开始部署Doris场景"
msgstr "Start deploying the Doris scene"

#: backend/flow/views/doris_destroy.py:39
msgid "开始删除Doris集群场景"
msgstr "Start deleting the Doris cluster scenario"

#: backend/flow/views/doris_disable.py:39
msgid "开始禁用Doris集群场景"
msgstr "Start disabling the Doris cluster scenario"

#: backend/flow/views/doris_enable.py:39
msgid "开始启用Doris集群场景"
msgstr "Start enabling the Doris cluster scenario"

#: backend/flow/views/doris_reboot.py:46
msgid "开始重启Doris节点场景"
msgstr "Start restarting the Doris node scenario"

#: backend/flow/views/doris_replace.py:69
msgid "开始替换Doris集群场景"
msgstr "Start replacing the Doris cluster scenario"

#: backend/flow/views/doris_scale_up.py:52
msgid "开始扩容Doris场景"
msgstr "Start expanding the Doris scene"

#: backend/flow/views/doris_shrink.py:52
msgid "开始缩容Doris集群场景"
msgstr "Start scaling down the Doris cluster scenario"

#: backend/flow/views/es_apply.py:63
#: backend/flow/views/migrate_views/es_fake_apply.py:66
msgid "开始部署ES场景"
msgstr "Start deploying ES scenarios"

#: backend/flow/views/es_destroy.py:39
msgid "开始下架ES场景"
msgstr "Start to remove the ES scene"

#: backend/flow/views/es_disable.py:39
msgid "开始禁用ES场景"
msgstr "Start disabling ES scenes"

#: backend/flow/views/es_enable.py:39
msgid "开始启用ES场景"
msgstr "Start to enable ES scene"

#: backend/flow/views/es_reboot.py:47
msgid "开始重启ES节点场景"
msgstr "Start restarting the ES node scenario"

#: backend/flow/views/es_replace.py:63 backend/flow/views/es_scale_up.py:52
msgid "开始扩容ES场景"
msgstr "Start to expand the ES scene"

#: backend/flow/views/es_shrink.py:52
msgid "开始缩容ES场景"
msgstr "Start shrinking the ES scene"

#: backend/flow/views/hdfs_apply.py:61
msgid "开始部署HDFS场景"
msgstr "Start deploying HDFS scenarios"

#: backend/flow/views/hdfs_destroy.py:39
msgid "开始HDFS集群销毁场景"
msgstr "Start the HDFS cluster destruction scenario"

#: backend/flow/views/hdfs_disable.py:39
msgid "开始HDFS集群禁用场景"
msgstr "Start HDFS cluster disable scenario"

#: backend/flow/views/hdfs_enable.py:39
msgid "开始HDFS集群启用场景"
msgstr "Start the HDFS cluster enablement scenario"

#: backend/flow/views/hdfs_reboot.py:55
msgid "开始重启HDFS场景"
msgstr "Start to restart the HDFS scene"

#: backend/flow/views/hdfs_replace.py:65
msgid "开始替换HDFS场景"
msgstr "Start to replace the HDFS scene"

#: backend/flow/views/hdfs_scale_up.py:42
msgid "开始扩容HDFS场景"
msgstr "Start expanding the HDFS scene"

#: backend/flow/views/hdfs_shrink.py:42
msgid "开始HDFS集群缩容场景"
msgstr "Start the HDFS cluster shrinking scenario"

#: backend/flow/views/influxdb_apply.py:57
#: backend/flow/views/migrate_views/influxdb_fake_apply.py:60
msgid "开始部署influxdb场景"
msgstr "Start deploying the influxdb scene"

#: backend/flow/views/influxdb_destroy.py:39
msgid "开始下架Influxdb场景"
msgstr "Start to remove the Influxdb scene"

#: backend/flow/views/influxdb_disable.py:39
msgid "开始禁用Influxdb场景"
msgstr "Start disabling the Influxdb scene"

#: backend/flow/views/influxdb_enable.py:39
msgid "开始启用Influxdb场景"
msgstr "Start enabling the Influxdb scene"

#: backend/flow/views/influxdb_reboot.py:47
msgid "开始重启Influxdb节点场景"
msgstr "Start restarting the Influxdb node scenario"

#: backend/flow/views/influxdb_replace.py:49
msgid "开始替换influxdb场景"
msgstr "Start to replace the influxdb scene"

#: backend/flow/views/kafka_apply.py:70
#: backend/flow/views/migrate_views/kafka_fake_apply.py:73
msgid "开始部署kafka场景"
msgstr "Start deploying kafka scenarios"

#: backend/flow/views/kafka_destroy.py:39
msgid "开始下架Kafka场景"
msgstr "Start to remove the Kafka scene"

#: backend/flow/views/kafka_disable.py:39
msgid "开始禁用Kafka场景"
msgstr "Start disabling the Kafka scene"

#: backend/flow/views/kafka_enable.py:39
msgid "开始启用Kafka场景"
msgstr "Start to enable the Kafka scene"

#: backend/flow/views/kafka_reboot.py:47
msgid "开始重启Kafka节点场景"
msgstr "Start restarting the Kafka node scenario"

#: backend/flow/views/kafka_replace.py:51
msgid "开始替换kafka场景"
msgstr "Start to replace the kafka scene"

#: backend/flow/views/kafka_scale_up.py:49
msgid "开始扩容kafka场景"
msgstr "Start to expand the kafka scene"

#: backend/flow/views/kafka_shrink.py:44
msgid "开始缩容kafka场景"
msgstr "Start shrinking the kafka scene"

#: backend/flow/views/migrate_views/hdfs_fake_apply.py:66
msgid "开始部署hdfs场景"
msgstr "Start deploying hdfs scene"

#: backend/flow/views/migrate_views/riak_migrate.py:65
msgid "开始迁移RIAK场景"
msgstr "Start migrating RIAK scenarios"

#: backend/flow/views/mysql_add_slave.py:44
#: backend/flow/views/mysql_add_slave_remote.py:44
msgid "开始添加slave"
msgstr "Start adding slaves"

#: backend/flow/views/mysql_edit_config.py:60
msgid "开始下发修改的参数"
msgstr "Start sending the modified parameters"

#: backend/flow/views/mysql_flashback.py:49
msgid "开始flashback"
msgstr "start flashback"

#: backend/flow/views/mysql_ha_db_table_backup.py:32
msgid "开始库表备份场景"
msgstr "Start database table backup scenario"

#: backend/flow/views/mysql_ha_destroy.py:31
msgid "开始回收mysql主从版场景"
msgstr "Start to recycle the mysql master-slave version scenario"

#: backend/flow/views/mysql_ha_destroy.py:49
msgid "开始禁用mysql主从版场景"
msgstr "Start to disable the mysql master-slave version scenario"

#: backend/flow/views/mysql_ha_destroy.py:65
msgid "开始启动mysql主从版场景"
msgstr "Start the mysql master-slave version scenario"

#: backend/flow/views/mysql_ha_full_backup.py:32
msgid "开始全库备份场景"
msgstr "Start the full database backup scenario"

#: backend/flow/views/mysql_ha_master_fail_over.py:30
msgid "开始执行主故障切换[整机切换]的任务"
msgstr ""
"Start the task of performing the main failover [whole machine switchover]"

#: backend/flow/views/mysql_ha_rename_database.py:30
#: backend/flow/views/mysql_ha_truncate_data.py:30
msgid "开始TenDBHA清档场景"
msgstr "Start the TenDBHA clearing scene"

#: backend/flow/views/mysql_ha_switch.py:30
msgid "开始执行主从切换[整机切换]的任务"
msgstr "Start the task of master-slave switching [whole machine switching]"

#: backend/flow/views/mysql_migrate_cluster.py:46
#: backend/flow/views/mysql_migrate_cluster_remote.py:46
#: backend/flow/views/mysql_restore_slave.py:49
#: backend/flow/views/mysql_restore_slave_remote.py:49
msgid "开始重建slave"
msgstr "Start rebuilding the slave"

#: backend/flow/views/mysql_proxy_add.py:30
msgid "开始添加mysql_proxy实例场景"
msgstr "Start adding mysql_proxy instance scenarios"

#: backend/flow/views/mysql_proxy_reduce.py:30
msgid "开始回收mysql_proxy实例场景"
msgstr "Start to recycle the mysql_proxy instance scenario"

#: backend/flow/views/mysql_proxy_switch.py:30
msgid "开始替换mysql_proxy实例场景"
msgstr "Start to replace the mysql_proxy instance scenario"

#: backend/flow/views/mysql_proxy_upgrade.py:30
msgid "开始测试本地升级mysql_proxy实例场景"
msgstr "Start testing the local upgrade mysql_proxy instance scenario"

#: backend/flow/views/mysql_pt_table_sync.py:30
msgid "开始执行数据修复"
msgstr "Start data recovery"

#: backend/flow/views/mysql_push_peripheral_config.py:25
msgid "开始下发周边配置场景"
msgstr "Start delivering peripheral configuration scenarios"

#: backend/flow/views/mysql_restore_local_remote.py:44
#: backend/flow/views/mysql_restore_local_slave.py:44
msgid "开始原地重建slave"
msgstr "Start rebuilding the slave in situ"

#: backend/flow/views/mysql_rollback_data.py:48
msgid "开始重建定点回档数据"
msgstr "Start to rebuild the fixed-point archive data"

#: backend/flow/views/mysql_rollback_to_cluster.py:49
msgid "定点回档到指定集群"
msgstr "Fixed point rollback to the specified cluster"

#: backend/flow/views/mysql_single_apply.py:57
msgid "开始部署mysql单实例场景"
msgstr "Start deploying mysql single instance scenario"

#: backend/flow/views/mysql_single_destroy.py:30
msgid "开始回收mysql单节点版场景"
msgstr "Start to recycle mysql single-node version scenario"

#: backend/flow/views/mysql_single_destroy.py:46
msgid "开始禁用mysql单节点版场景"
msgstr "Start disabling the mysql single-node version scenario"

#: backend/flow/views/mysql_single_destroy.py:62
msgid "开始启动mysql单节点版场景"
msgstr "Start the mysql single-node version scenario"

#: backend/flow/views/mysql_single_rename_database.py:30
#: backend/flow/views/mysql_single_truncate_data.py:30
msgid "开始TenDBSingle清档场景"
msgstr "Start the TenDBSingle clearing scene"

#: backend/flow/views/mysql_upgrade.py:30
msgid "开始测试本地升级mysql实例场景"
msgstr "Start testing the local upgrade mysql instance scenario"

#: backend/flow/views/mysql_upgrade.py:46
msgid "开始测试迁移升级mysql实例场景"
msgstr "Start testing the migration and upgrade mysql instance scenario"

#: backend/flow/views/pulsar_destroy.py:39
msgid "开始pulsar集群销毁场景"
msgstr "Start the pulsar cluster destruction scenario"

#: backend/flow/views/pulsar_disable.py:39
msgid "开始PULSAR集群禁用场景"
msgstr "Start PULSAR cluster disable scenario"

#: backend/flow/views/pulsar_enable.py:39
msgid "开始PULSAR集群启用场景"
msgstr "Start the PULSAR cluster enablement scenario"

#: backend/flow/views/pulsar_reboot.py:55
msgid "开始重启PULSAR场景"
msgstr "Start restarting the PULSAR scene"

#: backend/flow/views/pulsar_replace.py:24
msgid "开始PULSAR集群替换场景"
msgstr "Start the PULSAR cluster replacement scenario"

#: backend/flow/views/pulsar_shrink.py:28
msgid "开始PULSAR集群缩容场景"
msgstr "Start the PULSAR cluster shrinking scenario"

#: backend/flow/views/spider_cluster_database_table_backup.py:30
msgid "开始TenDBCluster库表备份场景"
msgstr "Start TenDBCluster database table backup scenario"

#: backend/flow/views/spider_cluster_destroy.py:34
msgid "开始禁用spider集群场景"
msgstr "Start to disable the spider cluster scenario"

#: backend/flow/views/spider_cluster_destroy.py:53
msgid "开始启用spider集群场景"
msgstr "Start to enable the spider cluster scenario"

#: backend/flow/views/spider_cluster_flashback.py:26
msgid "开始TenDBCluster Flashback场景"
msgstr "Start TenDBCluster Flashback scene"

#: backend/flow/views/spider_cluster_full_backup.py:30
msgid "开始TenDBCluster全库备份场景"
msgstr "Start TenDBCluster full database backup scenario"

#: backend/flow/views/spider_cluster_rename_database.py:30
msgid "开始TenDBCluster数据库重命名场景"
msgstr "Start the TenDBCluster database renaming scenario"

#: backend/flow/views/spider_cluster_standardize.py:30
msgid "开始TenDBCluster标准化"
msgstr "Start TenDBCluster standardization"

#: backend/flow/views/spider_cluster_truncate_database.py:30
msgid "开始TenDBCluster清档场景"
msgstr "Start the TenDBCluster clearing scene"

#: backend/flow/views/tendb_ha_standardize.py:30
msgid "开始TenDBHA标准化"
msgstr "Start TenDBHA standardization"

#: backend/flow/views/vm_apply.py:65
msgid "开始部署Vm场景"
msgstr "Start deploying Vm scenario"

#: backend/flow/views/vm_destroy.py:39
msgid "开始下架vm场景"
msgstr "Start removing vm scenes"

#: backend/flow/views/vm_disable.py:39
msgid "开始禁用VM场景"
msgstr "Start disabling VM scenario"

#: backend/flow/views/vm_enable.py:39
msgid "开始启用VM场景"
msgstr "Start enabling VM scenario"

#: backend/flow/views/vm_reboot.py:45
msgid "开始重启VM节点场景"
msgstr "Start restarting VM node scenario"

#: backend/flow/views/vm_replace.py:68
msgid "开始替换VM场景"
msgstr "Start replacing VM scenario"

#: backend/flow/views/vm_scale_up.py:55
msgid "开始扩容VM场景"
msgstr "Start expanding the VM scenario"

#: backend/flow/views/vm_shrink.py:54
msgid "开始缩容VM场景"
msgstr "Start shrinking VM scenario"

#: backend/iam_app/constans.py:20
msgid "业务只读"
msgstr "Business read only"

#: backend/iam_app/constans.py:21
msgid "业务运维"
msgstr "Business operation and maintenance"

#: backend/iam_app/constans.py:22
msgid "外部开发商专用"
msgstr "Exclusively for external developers"

#: backend/iam_app/constans.py:24
msgid "MySQL SQL变更"
msgstr "MySQL SQL changes"

#: backend/iam_app/constans.py:25
msgid "MySQL DB授权"
msgstr "MySQL DB authorization"

#: backend/iam_app/constans.py:27
msgid "TendbCluster SQL变更"
msgstr "TendbCluster SQL changes"

#: backend/iam_app/constans.py:28
msgid "TendbCluster DB授权"
msgstr "TendbCluster DB authorization"

#: backend/iam_app/constans.py:30
msgid "Kafka获取访问方式"
msgstr "Kafka gets access method"

#: backend/iam_app/constans.py:31
msgid "ES获取访问方式"
msgstr "ES gets access method"

#: backend/iam_app/constans.py:32
msgid "HDFS获取访问方式"
msgstr "HDFS gets access method"

#: backend/iam_app/dataclass/__init__.py:67
#: backend/iam_app/dataclass/resources.py:607
#: backend/iam_app/dataclass/resources.py:661
msgid "{} 列表"
msgstr "{} list"

#: backend/iam_app/dataclass/actions.py:48
msgid "动作ID{}长度超过{}，无法注册iam，请重新命名"
msgstr "The length of the action ID {} ​​exceeds {}. Unable to register iam. Please rename it."

#: backend/iam_app/dataclass/actions.py:111
msgid "业务访问"
msgstr "business visit"

#: backend/iam_app/dataclass/actions.py:133
msgid "全局设置访问"
msgstr "Global settings access"

#: backend/iam_app/dataclass/actions.py:138
#: backend/iam_app/dataclass/actions.py:162
#: backend/iam_app/dataclass/actions.py:231
#: backend/iam_app/dataclass/actions.py:243
#: backend/iam_app/dataclass/actions.py:255
#: backend/iam_app/dataclass/actions.py:1609
#: backend/iam_app/dataclass/actions.py:1633
#: backend/iam_app/dataclass/actions.py:1657
#: backend/iam_app/dataclass/actions.py:1693
#: backend/iam_app/dataclass/actions.py:1717
#: backend/iam_app/dataclass/actions.py:1740
#: backend/iam_app/dataclass/actions.py:1752
#: backend/iam_app/dataclass/actions.py:1764
#: backend/iam_app/dataclass/actions.py:1776
#: backend/iam_app/dataclass/actions.py:1824
#: backend/iam_app/dataclass/actions.py:1836
#: backend/iam_app/dataclass/actions.py:1848
#: backend/iam_app/dataclass/actions.py:1860
#: backend/iam_app/dataclass/actions.py:1884
#: backend/iam_app/dataclass/actions.py:1896
msgid "全局设置"
msgstr "Global settings"

#: backend/iam_app/dataclass/actions.py:145
msgid "单据查看"
msgstr "Document view"

#: backend/iam_app/dataclass/actions.py:151
#: backend/iam_app/dataclass/actions.py:196
#: backend/iam_app/dataclass/resources.py:271
msgid "单据"
msgstr "tickets"

#: backend/iam_app/dataclass/actions.py:157
msgid "全局单据流程设置"
msgstr "Global document process settings"

#: backend/iam_app/dataclass/actions.py:168
msgid "业务单据流程设置"
msgstr "Business document process settings"

#: backend/iam_app/dataclass/actions.py:173
#: backend/iam_app/dataclass/actions.py:207
#: backend/iam_app/dataclass/actions.py:219
#: backend/iam_app/dataclass/actions.py:1561
#: backend/iam_app/dataclass/actions.py:1573
#: backend/iam_app/dataclass/actions.py:1585
#: backend/iam_app/dataclass/actions.py:1597
#: backend/iam_app/dataclass/actions.py:1621
#: backend/iam_app/dataclass/actions.py:1645
#: backend/iam_app/dataclass/actions.py:1669
#: backend/iam_app/dataclass/actions.py:1681
#: backend/iam_app/dataclass/actions.py:1705
#: backend/iam_app/dataclass/actions.py:1729
#: backend/iam_app/dataclass/actions.py:1872
msgid "业务配置"
msgstr "Business configuration"

#: backend/iam_app/dataclass/actions.py:178
msgid "资源管理访问"
msgstr "Resource management access"

#: backend/iam_app/dataclass/actions.py:183
#: backend/iam_app/dataclass/actions.py:1503
#: backend/iam_app/dataclass/actions.py:1515
#: backend/iam_app/dataclass/actions.py:1527
#: backend/iam_app/dataclass/actions.py:1788
#: backend/iam_app/dataclass/actions.py:1800
#: backend/iam_app/dataclass/actions.py:1812
msgid "资源管理"
msgstr "Resource management"

#: backend/iam_app/dataclass/actions.py:190
msgid "任务流程管理"
msgstr "Task process management"

#: backend/iam_app/dataclass/actions.py:202
msgid "数据库配置查看"
msgstr "Database configuration view"

#: backend/iam_app/dataclass/actions.py:214
msgid "数据库配置编辑"
msgstr "Database configuration editor"

#: backend/iam_app/dataclass/actions.py:226
msgid "全局数据库配置编辑"
msgstr "Global database configuration editor"

#: backend/iam_app/dataclass/actions.py:238
msgid "全局数据库配置新增"
msgstr "Global database configuration new"

#: backend/iam_app/dataclass/actions.py:250
msgid "全局数据库配置删除"
msgstr "Global database configuration deletion"

#: backend/iam_app/dataclass/actions.py:262
msgid "MySQL 部署"
msgstr "MySQL deployment"

#: backend/iam_app/dataclass/actions.py:268
#: backend/iam_app/dataclass/actions.py:280
#: backend/iam_app/dataclass/actions.py:320
#: backend/iam_app/dataclass/actions.py:336
#: backend/iam_app/dataclass/actions.py:347
#: backend/iam_app/dataclass/actions.py:371
#: backend/iam_app/dataclass/actions.py:631
#: backend/iam_app/dataclass/actions.py:663
#: backend/iam_app/dataclass/actions.py:679
#: backend/iam_app/dataclass/actions.py:874
#: backend/iam_app/dataclass/actions.py:887
#: backend/iam_app/dataclass/actions.py:912
#: backend/iam_app/dataclass/actions.py:928
#: backend/iam_app/dataclass/actions.py:944
#: backend/iam_app/dataclass/actions.py:952
#: backend/iam_app/dataclass/actions.py:965
#: backend/iam_app/dataclass/actions.py:1013
#: backend/iam_app/dataclass/actions.py:1025
#: backend/iam_app/dataclass/actions.py:1037
#: backend/iam_app/dataclass/actions.py:1049
#: backend/iam_app/dataclass/actions.py:1056
#: backend/iam_app/dataclass/actions.py:1069
#: backend/iam_app/dataclass/actions.py:1081
#: backend/iam_app/dataclass/actions.py:1093
#: backend/iam_app/dataclass/actions.py:1105
#: backend/iam_app/dataclass/actions.py:1117
#: backend/iam_app/dataclass/actions.py:1124
#: backend/iam_app/dataclass/actions.py:1137
#: backend/iam_app/dataclass/actions.py:1144
#: backend/iam_app/dataclass/actions.py:1157
#: backend/iam_app/dataclass/actions.py:1169
#: backend/iam_app/dataclass/actions.py:1181
#: backend/iam_app/dataclass/actions.py:1188
#: backend/iam_app/dataclass/actions.py:1201
#: backend/iam_app/dataclass/actions.py:1213
#: backend/iam_app/dataclass/actions.py:1225
#: backend/iam_app/dataclass/actions.py:1233
#: backend/iam_app/dataclass/actions.py:1246
#: backend/iam_app/dataclass/actions.py:1258
#: backend/iam_app/dataclass/actions.py:1270
#: backend/iam_app/dataclass/actions.py:1282
#: backend/iam_app/dataclass/actions.py:1294
#: backend/iam_app/dataclass/actions.py:1306
#: backend/iam_app/dataclass/actions.py:1387
#: backend/iam_app/dataclass/actions.py:1399
#: backend/iam_app/dataclass/actions.py:1410
#: backend/iam_app/dataclass/actions.py:1492 backend/ticket/constants.py:233
#: backend/ticket/constants.py:234 backend/ticket/constants.py:263
#: backend/ticket/constants.py:281 backend/ticket/constants.py:282
#: backend/ticket/constants.py:283 backend/ticket/constants.py:284
#: backend/ticket/constants.py:285 backend/ticket/constants.py:286
#: backend/ticket/constants.py:289 backend/ticket/constants.py:290
#: backend/ticket/constants.py:291 backend/ticket/constants.py:292
#: backend/ticket/constants.py:297 backend/ticket/constants.py:298
#: backend/ticket/constants.py:299 backend/ticket/constants.py:333
#: backend/ticket/constants.py:334 backend/ticket/constants.py:335
#: backend/ticket/constants.py:336 backend/ticket/constants.py:339
#: backend/ticket/constants.py:342 backend/ticket/constants.py:343
#: backend/ticket/constants.py:344 backend/ticket/constants.py:345
#: backend/ticket/constants.py:348 backend/ticket/constants.py:351
#: backend/ticket/constants.py:352 backend/ticket/constants.py:353
#: backend/ticket/constants.py:354 backend/ticket/constants.py:357
#: backend/ticket/constants.py:360 backend/ticket/constants.py:361
#: backend/ticket/constants.py:362 backend/ticket/constants.py:363
#: backend/ticket/constants.py:366 backend/ticket/constants.py:377
#: backend/ticket/constants.py:378 backend/ticket/constants.py:379
#: backend/ticket/constants.py:380 backend/ticket/constants.py:383
#: backend/ticket/constants.py:387 backend/ticket/constants.py:388
#: backend/ticket/constants.py:389 backend/ticket/constants.py:392
#: backend/ticket/constants.py:393 backend/ticket/constants.py:397
#: backend/ticket/constants.py:408 backend/ticket/constants.py:410
#: backend/ticket/constants.py:448 backend/ticket/constants.py:449
#: backend/ticket/constants.py:450 backend/ticket/constants.py:451
#: backend/ticket/constants.py:454
msgid "集群管理"
msgstr "Cluster management"

#: backend/iam_app/dataclass/actions.py:274
msgid "MySQL 集群详情查看"
msgstr "View MySQL cluster details"

#: backend/iam_app/dataclass/actions.py:291
#: backend/iam_app/dataclass/actions.py:642 backend/ticket/constants.py:169
#: backend/ticket/constants.py:170 backend/ticket/constants.py:214
#: backend/ticket/constants.py:218 backend/ticket/constants.py:219
msgid "SQL 任务"
msgstr "SQL tasks"

#: backend/iam_app/dataclass/actions.py:299
#: backend/iam_app/dataclass/actions.py:359
#: backend/iam_app/dataclass/actions.py:383
#: backend/iam_app/dataclass/actions.py:395
#: backend/iam_app/dataclass/actions.py:407
#: backend/iam_app/dataclass/actions.py:419
#: backend/iam_app/dataclass/actions.py:431
#: backend/iam_app/dataclass/actions.py:438
#: backend/iam_app/dataclass/actions.py:690
#: backend/iam_app/dataclass/actions.py:702
#: backend/iam_app/dataclass/actions.py:714
#: backend/iam_app/dataclass/actions.py:726
#: backend/iam_app/dataclass/actions.py:738
#: backend/iam_app/dataclass/actions.py:748
#: backend/iam_app/dataclass/actions.py:758
#: backend/iam_app/dataclass/actions.py:770
#: backend/iam_app/dataclass/actions.py:1317
#: backend/iam_app/dataclass/actions.py:1328
#: backend/iam_app/dataclass/actions.py:1340
#: backend/iam_app/dataclass/actions.py:1352
#: backend/iam_app/dataclass/actions.py:1364
#: backend/iam_app/dataclass/actions.py:1376
#: backend/iam_app/dataclass/actions.py:1421
#: backend/iam_app/dataclass/actions.py:1432
#: backend/iam_app/dataclass/actions.py:1444
#: backend/iam_app/dataclass/actions.py:1456
#: backend/iam_app/dataclass/actions.py:1468
#: backend/iam_app/dataclass/actions.py:1480 backend/ticket/constants.py:180
#: backend/ticket/constants.py:181 backend/ticket/constants.py:183
#: backend/ticket/constants.py:239 backend/ticket/constants.py:240
#: backend/ticket/constants.py:241 backend/ticket/constants.py:242
#: backend/ticket/constants.py:276 backend/ticket/constants.py:277
#: backend/ticket/constants.py:412 backend/ticket/constants.py:413
msgid "权限管理"
msgstr "Permission management"

#: backend/iam_app/dataclass/actions.py:307
#: backend/iam_app/dataclass/actions.py:650 backend/ticket/constants.py:185
#: backend/ticket/constants.py:187 backend/ticket/constants.py:194
#: backend/ticket/constants.py:199 backend/ticket/constants.py:200
#: backend/ticket/constants.py:209 backend/ticket/constants.py:215
#: backend/ticket/constants.py:248 backend/ticket/constants.py:249
#: backend/ticket/constants.py:262 backend/ticket/constants.py:273
#: backend/ticket/constants.py:274 backend/ticket/constants.py:275
#: backend/ticket/constants.py:399
msgid "数据处理"
msgstr "Data processing"

#: backend/iam_app/dataclass/actions.py:314
msgid "MySQL Webconsole执行"
msgstr "MySQL Webconsole execution"

#: backend/iam_app/dataclass/actions.py:330
msgid "MySQL 临时密码修改"
msgstr "MySQL temporary password change"

#: backend/iam_app/dataclass/actions.py:341
msgid "MySQL 集群禁用和启用"
msgstr "MySQL cluster disabling and enabling"

#: backend/iam_app/dataclass/actions.py:353 backend/ticket/constants.py:182
msgid "MySQL 客户端权限克隆"
msgstr "MySQL Client Privileged Clone"

#: backend/iam_app/dataclass/actions.py:365
msgid "MySQL 集群删除"
msgstr "MySQL cluster deletion"

#: backend/iam_app/dataclass/actions.py:377
msgid "MySQL 账号创建"
msgstr "MySQL account creation"

#: backend/iam_app/dataclass/actions.py:389
msgid "MySQL 账号删除"
msgstr "MySQL account deletion"

#: backend/iam_app/dataclass/actions.py:401
msgid "MySQL账号规则创建"
msgstr "Create MySQL account rules"

#: backend/iam_app/dataclass/actions.py:413
msgid "MySQL 账号规则查看"
msgstr "View MySQL account rules"

#: backend/iam_app/dataclass/actions.py:425
msgid "MySQL授权"
msgstr "MySQL authorization"

#: backend/iam_app/dataclass/actions.py:445
msgid "MySQL 分区策略创建"
msgstr "MySQL partition strategy creation"

#: backend/iam_app/dataclass/actions.py:457
msgid "MySQL 分区策略更新"
msgstr "MySQL partitioning strategy update"

#: backend/iam_app/dataclass/actions.py:469
msgid "MySQL 分区策略删除"
msgstr "MySQL partition policy deletion"

#: backend/iam_app/dataclass/actions.py:481
msgid "MySQL 分区策略禁用启用"
msgstr "MySQL partitioning policy disable enable"

#: backend/iam_app/dataclass/actions.py:493
#: backend/ticket/builders/mysql/mysql_openarea.py:73
msgid "MySQL 开区执行"
msgstr "MySQL open zone execution"

#: backend/iam_app/dataclass/actions.py:499
#: backend/iam_app/dataclass/actions.py:511
#: backend/iam_app/dataclass/actions.py:523
#: backend/iam_app/dataclass/actions.py:535
#: backend/iam_app/dataclass/actions.py:782
#: backend/iam_app/dataclass/actions.py:794
#: backend/iam_app/dataclass/actions.py:806
#: backend/iam_app/dataclass/actions.py:818 backend/ticket/constants.py:198
#: backend/ticket/constants.py:208
msgid "克隆开区"
msgstr "Clone zone"

#: backend/iam_app/dataclass/actions.py:505
msgid "MySQL 开区模板创建"
msgstr "MySQL zone template creation"

#: backend/iam_app/dataclass/actions.py:517
msgid "MySQL 开区模板编辑"
msgstr "MySQL zone template editing"

#: backend/iam_app/dataclass/actions.py:529
msgid "MySQL 开区模板删除"
msgstr "MySQL zone template deletion"

#: backend/iam_app/dataclass/actions.py:541
msgid "Dumper 订阅规则详情查看"
msgstr "View Dumper subscription rules details"

#: backend/iam_app/dataclass/actions.py:547
#: backend/iam_app/dataclass/actions.py:559
#: backend/iam_app/dataclass/actions.py:571
#: backend/iam_app/dataclass/actions.py:583
#: backend/iam_app/dataclass/actions.py:595
#: backend/iam_app/dataclass/actions.py:607
#: backend/iam_app/dataclass/actions.py:619
msgid "Dumper管理"
msgstr "Dumper management"

#: backend/iam_app/dataclass/actions.py:553
msgid "Dumper 订阅规则编辑"
msgstr "Dumper subscription rules editor"

#: backend/iam_app/dataclass/actions.py:565
msgid "Dumper 订阅规则删除"
msgstr "Dumper subscription rule deletion"

#: backend/iam_app/dataclass/actions.py:577
msgid "Dumper 实例创建"
msgstr "Dumper instance creation"

#: backend/iam_app/dataclass/actions.py:589
msgid "Dumper 实例禁用与启用"
msgstr "Dumper instance disabling and enabling"

#: backend/iam_app/dataclass/actions.py:601
msgid "Dumper 实例迁移"
msgstr "Dumper instance migration"

#: backend/iam_app/dataclass/actions.py:613
msgid "Dumper 实例删除"
msgstr "Dumper instance deletion"

#: backend/iam_app/dataclass/actions.py:625
msgid "TenDB Cluster 集群详情查看"
msgstr "TenDB Cluster cluster details view"

#: backend/iam_app/dataclass/actions.py:657
msgid "TendbCluster Webconsole执行"
msgstr "TendbCluster Webconsole execution"

#: backend/iam_app/dataclass/actions.py:673
msgid "TenDB Cluster 临时密码修改"
msgstr "TenDB Cluster temporary password change"

#: backend/iam_app/dataclass/actions.py:684
msgid "TenDB Cluster 账号创建"
msgstr "TenDB Cluster account creation"

#: backend/iam_app/dataclass/actions.py:696
msgid "TenDB Cluster 账号删除"
msgstr "TenDB Cluster account deletion"

#: backend/iam_app/dataclass/actions.py:708
msgid "TenDB Cluster 账号规则创建"
msgstr "TenDB Cluster account rule creation"

#: backend/iam_app/dataclass/actions.py:720
msgid "TenDB Cluster 账号规则查看"
msgstr "TenDB Cluster account rules view"

#: backend/iam_app/dataclass/actions.py:732 backend/ticket/constants.py:241
msgid "TenDB Cluster 授权"
msgstr "TenDB Cluster authorization"

#: backend/iam_app/dataclass/actions.py:744
msgid "TenDB Cluster Excel授权"
msgstr "TenDB Cluster Excel authorization"

#: backend/iam_app/dataclass/actions.py:754 backend/ticket/constants.py:239
msgid "TenDB Cluster 客户端权限克隆"
msgstr "TenDB Cluster client permission cloning"

#: backend/iam_app/dataclass/actions.py:764 backend/ticket/constants.py:240
msgid "TenDB Cluster DB实例权限克隆"
msgstr "TenDB Cluster DB instance permission cloning"

#: backend/iam_app/dataclass/actions.py:776
msgid "TenDB Cluster 开区执行"
msgstr "TenDB Cluster open zone execution"

#: backend/iam_app/dataclass/actions.py:788
msgid "TenDB Cluster 开区模板创建"
msgstr "TenDB Cluster zone template creation"

#: backend/iam_app/dataclass/actions.py:800
msgid "TenDB Cluster 开区模板编辑"
msgstr "TenDB Cluster zone template editing"

#: backend/iam_app/dataclass/actions.py:812
msgid "TenDB Cluster 开区模板删除"
msgstr "TenDB Cluster zone template deletion"

#: backend/iam_app/dataclass/actions.py:824
msgid "TenDB Cluster 分区管理创建"
msgstr "TenDB Cluster partition management creation"

#: backend/iam_app/dataclass/actions.py:836
msgid "TenDB Cluster 分区管理更新"
msgstr "TenDB Cluster Partition Management Update"

#: backend/iam_app/dataclass/actions.py:848
msgid "TenDB Cluster 分区管理删除"
msgstr "TenDB Cluster partition management deletion"

#: backend/iam_app/dataclass/actions.py:860
msgid "TenDB Cluster 分区管理禁用启用"
msgstr "TenDB Cluster partition management disable enable"

#: backend/iam_app/dataclass/actions.py:881
msgid "TenDB Cluster 集群禁用启用"
msgstr "TenDB Cluster cluster disable enable"

#: backend/iam_app/dataclass/actions.py:894
msgid "TenDB Cluster 下架只读接入层"
msgstr "TenDB Cluster removes read-only access layer"

#: backend/iam_app/dataclass/actions.py:906
msgid "Redis 集群详情查看"
msgstr "View Redis cluster details"

#: backend/iam_app/dataclass/actions.py:922
msgid "Redis Webconsole执行"
msgstr "Redis Webconsole execution"

#: backend/iam_app/dataclass/actions.py:938
msgid "Redis 获取访问方式"
msgstr "Redis gets access method"

#: backend/iam_app/dataclass/actions.py:959
msgid "Redis 集群禁用启用"
msgstr "Redis cluster disable enable"

#: backend/iam_app/dataclass/actions.py:1007 backend/ticket/constants.py:350
msgid "ES 集群部署"
msgstr "ES cluster deployment"

#: backend/iam_app/dataclass/actions.py:1012
#: backend/iam_app/dataclass/actions.py:1024
#: backend/iam_app/dataclass/actions.py:1036
#: backend/iam_app/dataclass/actions.py:1048
msgid "ES"
msgstr "ES"

#: backend/iam_app/dataclass/actions.py:1019
msgid "ES 集群详情查看"
msgstr "View ES cluster details"

#: backend/iam_app/dataclass/actions.py:1031
msgid "ES 获取访问方式"
msgstr "ES Get access method"

#: backend/iam_app/dataclass/actions.py:1043
msgid "ES 集群禁用启用"
msgstr "ES cluster disable enable"

#: backend/iam_app/dataclass/actions.py:1063
msgid "Doris 集群详情查看"
msgstr "View Doris cluster details"

#: backend/iam_app/dataclass/actions.py:1075
msgid "Doris 获取访问方式"
msgstr "Doris Get access"

#: backend/iam_app/dataclass/actions.py:1087
msgid "Doris 集群禁用启用"
msgstr "Doris cluster disable enable"

#: backend/iam_app/dataclass/actions.py:1099
msgid "Kafka 集群详情查看"
msgstr "View Kafka cluster details"

#: backend/iam_app/dataclass/actions.py:1111
msgid "Kafka 获取访问方式"
msgstr "Kafka gets access method"

#: backend/iam_app/dataclass/actions.py:1131
msgid "Kafka 集群禁用启用"
msgstr "Kafka cluster disable enable"

#: backend/iam_app/dataclass/actions.py:1151
msgid "HDFS 集群详情查看"
msgstr "View HDFS cluster details"

#: backend/iam_app/dataclass/actions.py:1163
msgid "HDFS 获取访问方式"
msgstr "HDFS Get access method"

#: backend/iam_app/dataclass/actions.py:1175
msgid "HDFS 集群禁用启用"
msgstr "HDFS cluster disable enable"

#: backend/iam_app/dataclass/actions.py:1195
msgid "Pulsar 集群详情查看"
msgstr "View Pulsar cluster details"

#: backend/iam_app/dataclass/actions.py:1207
msgid "Pulsar 获取访问方式"
msgstr "Pulsar Get access method"

#: backend/iam_app/dataclass/actions.py:1219
msgid "Pulsar 集群禁用启用"
msgstr "Pulsar cluster disable enable"

#: backend/iam_app/dataclass/actions.py:1240
msgid "Riak 集群详情查看"
msgstr "View Riak cluster details"

#: backend/iam_app/dataclass/actions.py:1252
msgid "Riak 获取访问方式"
msgstr "Riak Get access"

#: backend/iam_app/dataclass/actions.py:1264
msgid "Riak 集群禁用启用"
msgstr "Riak cluster disable enable"

#: backend/iam_app/dataclass/actions.py:1276
msgid "Mongodb 集群详情查看"
msgstr "View Mongodb cluster details"

#: backend/iam_app/dataclass/actions.py:1288
msgid "MongoDB 部署"
msgstr "MongoDB deployment"

#: backend/iam_app/dataclass/actions.py:1300
msgid "MongoDB 集群禁用启用"
msgstr "MongoDB cluster disable enable"

#: backend/iam_app/dataclass/actions.py:1312
msgid "MongoDB 账号创建"
msgstr "MongoDB account creation"

#: backend/iam_app/dataclass/actions.py:1323
msgid "MongoDB 删除账号"
msgstr "MongoDB delete account"

#: backend/iam_app/dataclass/actions.py:1334
msgid "MongoDB 账号规则创建"
msgstr "MongoDB account rule creation"

#: backend/iam_app/dataclass/actions.py:1346
msgid "MongoDB 账号规则查看"
msgstr "View MongoDB account rules"

#: backend/iam_app/dataclass/actions.py:1358
msgid "MongoDB 集群授权"
msgstr "MongoDB cluster authorization"

#: backend/iam_app/dataclass/actions.py:1370
msgid "MongoDB Excel集群授权"
msgstr "MongoDB Excel cluster authorization"

#: backend/iam_app/dataclass/actions.py:1382
msgid "SQLServer 集群详情查看"
msgstr "View SQLServer cluster details"

#: backend/iam_app/dataclass/actions.py:1393
msgid "SQLServer 临时密码修改"
msgstr "SQLServer temporary password change"

#: backend/iam_app/dataclass/actions.py:1404
msgid "SQLServer 部署"
msgstr "SQLServer deployment"

#: backend/iam_app/dataclass/actions.py:1416
msgid "SQLServer 账号创建"
msgstr "SQLServer account creation"

#: backend/iam_app/dataclass/actions.py:1427
msgid "SQLServer 删除账号"
msgstr "SQLServer delete account"

#: backend/iam_app/dataclass/actions.py:1438
msgid "SQLServer 账号规则创建"
msgstr "SQLServer account rule creation"

#: backend/iam_app/dataclass/actions.py:1450
msgid "SQLServer 账号规则查看"
msgstr "View SQLServer account rules"

#: backend/iam_app/dataclass/actions.py:1462 backend/ticket/constants.py:276
msgid "SQLServer 集群授权"
msgstr "SQLServer cluster authorization"

#: backend/iam_app/dataclass/actions.py:1474
msgid "SQLServer Excel授权"
msgstr "SQLServer Excel authorization"

#: backend/iam_app/dataclass/actions.py:1486
msgid "SQLServer 集群禁用和启用"
msgstr "SQLServer cluster disabling and enabling"

#: backend/iam_app/dataclass/actions.py:1498
msgid "资源池管理"
msgstr "Resource pool management"

#: backend/iam_app/dataclass/actions.py:1510
msgid "资源池操作记录查看"
msgstr "View resource pool operation records"

#: backend/iam_app/dataclass/actions.py:1522
msgid "污点池管理"
msgstr "Taint pool management"

#: backend/iam_app/dataclass/actions.py:1534
msgid "健康报告查看"
msgstr "Health report view"

#: backend/iam_app/dataclass/actions.py:1539
#: backend/iam_app/dataclass/actions.py:1550
msgid "可观测"
msgstr "observable"

#: backend/iam_app/dataclass/actions.py:1545
msgid "DBHA切换事件查看"
msgstr "DBHA switching event view"

#: backend/iam_app/dataclass/actions.py:1556
msgid "告警组查看"
msgstr "Alarm group view"

#: backend/iam_app/dataclass/actions.py:1568
msgid "告警组新建"
msgstr "Create a new alarm group"

#: backend/iam_app/dataclass/actions.py:1580
msgid "告警组编辑"
msgstr "Alarm group editor"

#: backend/iam_app/dataclass/actions.py:1592
msgid "告警组删除"
msgstr "Alarm group deletion"

#: backend/iam_app/dataclass/actions.py:1604
msgid "全局告警组编辑"
msgstr "Global alarm group editing"

#: backend/iam_app/dataclass/actions.py:1616
msgid "监控策略查看"
msgstr "Monitoring strategy view"

#: backend/iam_app/dataclass/actions.py:1628
msgid "全局监控策略查看"
msgstr "Global monitoring policy view"

#: backend/iam_app/dataclass/actions.py:1640
msgid "监控策略编辑"
msgstr "Monitoring strategy editor"

#: backend/iam_app/dataclass/actions.py:1652
msgid "全局监控策略编辑"
msgstr "Global monitoring strategy editor"

#: backend/iam_app/dataclass/actions.py:1664
msgid "监控策略删除"
msgstr "Monitoring policy deletion"

#: backend/iam_app/dataclass/actions.py:1676
msgid "监控策略启停"
msgstr "Monitoring strategy start and stop"

#: backend/iam_app/dataclass/actions.py:1688
msgid "全局监控策略启停"
msgstr "Global monitoring strategy start and stop"

#: backend/iam_app/dataclass/actions.py:1700
msgid "监控策略克隆"
msgstr "Monitoring policy cloning"

#: backend/iam_app/dataclass/actions.py:1712
msgid "全局数据库配置查看"
msgstr "Global database configuration view"

#: backend/iam_app/dataclass/actions.py:1724
msgid "DBA人员设置"
msgstr "DBA personnel settings"

#: backend/iam_app/dataclass/actions.py:1735
msgid "全局DBA人员设置"
msgstr "Global DBA personnel settings"

#: backend/iam_app/dataclass/actions.py:1747
msgid "版本文件查看"
msgstr "Version file view"

#: backend/iam_app/dataclass/actions.py:1753
#: backend/iam_app/dataclass/actions.py:1765
msgid "版本文件"
msgstr "version file"

#: backend/iam_app/dataclass/actions.py:1759
msgid "版本文件管理"
msgstr "Version file management"

#: backend/iam_app/dataclass/actions.py:1771
msgid "密码安全规则设置"
msgstr "Password security rule settings"

#: backend/iam_app/dataclass/actions.py:1783
msgid "资源规格新建"
msgstr "New resource specification"

#: backend/iam_app/dataclass/actions.py:1789
#: backend/iam_app/dataclass/actions.py:1801
#: backend/iam_app/dataclass/actions.py:1813
#: backend/ticket/builders/influxdb/influxdb_apply.py:42
#: backend/ticket/builders/mongodb/mongo_add_mongos.py:33
#: backend/ticket/builders/mongodb/mongo_add_shard_nodes.py:38
#: backend/ticket/builders/mongodb/mongo_scale_updown.py:37
#: backend/ticket/builders/mysql/mysql_add_slave.py:29
#: backend/ticket/builders/mysql/mysql_migrate_cluster.py:29
#: backend/ticket/builders/mysql/mysql_migrate_upgrade.py:36
#: backend/ticket/builders/mysql/mysql_proxy_add.py:28
#: backend/ticket/builders/mysql/mysql_proxy_switch.py:37
#: backend/ticket/builders/redis/redis_toolbox_fixpoint_make.py:37
#: backend/ticket/builders/redis/redis_toolbox_proxy_scale_up.py:34
#: backend/ticket/builders/tendbcluster/tendb_migrate_cluster.py:30
msgid "资源规格"
msgstr "resource specification"

#: backend/iam_app/dataclass/actions.py:1795
msgid "资源规格编辑"
msgstr "Resource specification editor"

#: backend/iam_app/dataclass/actions.py:1807
msgid "资源规格删除"
msgstr "Resource specification delete"

#: backend/iam_app/dataclass/actions.py:1819
msgid "轮值策略查看"
msgstr "View rotation strategy"

#: backend/iam_app/dataclass/actions.py:1825
#: backend/iam_app/dataclass/actions.py:1837
#: backend/iam_app/dataclass/actions.py:1849
#: backend/iam_app/dataclass/actions.py:1861
#: backend/iam_app/dataclass/actions.py:1897
msgid "轮值策略"
msgstr "rotation strategy"

#: backend/iam_app/dataclass/actions.py:1831
msgid "轮值策略新增"
msgstr "New rotation strategy"

#: backend/iam_app/dataclass/actions.py:1843
msgid "轮值策略编辑"
msgstr "Rotation strategy editor"

#: backend/iam_app/dataclass/actions.py:1855
msgid "轮值策略删除"
msgstr "Rotation policy deletion"

#: backend/iam_app/dataclass/actions.py:1867
msgid "授权白名单管理"
msgstr "Authorization whitelist management"

#: backend/iam_app/dataclass/actions.py:1879
msgid "全局授权白名单管理"
msgstr "Global authorization whitelist management"

#: backend/iam_app/dataclass/actions.py:1903
msgid "集群入口配置修改"
msgstr "Cluster entry configuration modification"

#: backend/iam_app/dataclass/actions.py:1913
msgid "临时密码生效实例查看"
msgstr "View an example of temporary password taking effect"

#: backend/iam_app/dataclass/actions.py:1926
msgid "动作ID不存在: {}"
msgstr "Action ID does not exist: {}"

#: backend/iam_app/dataclass/resources.py:208
msgid "单据分类"
msgstr "Document classification"

#: backend/iam_app/dataclass/resources.py:215
#: backend/iam_app/views/ticket_group_provider.py:29
#: backend/iam_app/views/ticket_group_provider.py:34
msgid "其他"
msgstr "other"

#: backend/iam_app/dataclass/resources.py:225
msgid "任务流程"
msgstr "Task flow"

#: backend/iam_app/dataclass/resources.py:346
msgid "MySQL集群"
msgstr "MySQL cluster"

#: backend/iam_app/dataclass/resources.py:362
msgid "Redis集群"
msgstr "Redis cluster"

#: backend/iam_app/dataclass/resources.py:378
msgid "DORIS集群"
msgstr "DORIS cluster"

#: backend/iam_app/dataclass/resources.py:394
msgid "HDFS集群"
msgstr "HDFS cluster"

#: backend/iam_app/dataclass/resources.py:418
msgid "Mongodb集群"
msgstr "Mongodb cluster"

#: backend/iam_app/dataclass/resources.py:426
msgid "SQLServer集群"
msgstr "SQLServer cluster"

#: backend/iam_app/dataclass/resources.py:458
msgid "InfluxDB实例"
msgstr "InfluxDB instance"

#: backend/iam_app/dataclass/resources.py:510
msgid "MySQL 账号"
msgstr "MySQL account"

#: backend/iam_app/dataclass/resources.py:518
msgid "SQLServer 账号"
msgstr "SQLServer account"

#: backend/iam_app/dataclass/resources.py:526
msgid "MongoDB 账号"
msgstr "MongoDB account"

#: backend/iam_app/dataclass/resources.py:534
msgid "TendbCluster 账号"
msgstr "TendbCluster account"

#: backend/iam_app/dataclass/resources.py:542
msgid "VM集群"
msgstr "VM cluster"

#: backend/iam_app/dataclass/resources.py:601
msgid "全局监控策略"
msgstr "Global monitoring strategy"

#: backend/iam_app/dataclass/resources.py:655
msgid "全局告警组"
msgstr "Global alarm group"

#: backend/iam_app/dataclass/resources.py:676
msgid "开区模板"
msgstr "Open area template"

#: backend/iam_app/dataclass/resources.py:699
msgid "数据订阅规则"
msgstr "Data subscription rules"

#: backend/iam_app/dataclass/resources.py:755
msgid "资源类型ID不存在: {}"
msgstr "Resource type ID does not exist: {}"

#: backend/iam_app/exceptions.py:51
#, python-brace-format
msgid "当前用户无 [{action_name}] 权限"
msgstr "The current user does not have permission for [{action_name}]"

#: backend/iam_app/handlers/drf_perm/account.py:41
msgid "账号动作:{} 不存在/未实现"
msgstr "Account action:{} does not exist/is not implemented"

#: backend/iam_app/handlers/drf_perm/monitor.py:49
msgid "不合法的告警组任务ID：{}"
msgstr "Illegal alarm group task ID: {}"

#: backend/iam_app/handlers/drf_perm/monitor.py:71
msgid "未找到策略ID，无法决定告警组相关动作鉴权。请保证参数包含策略ID"
msgstr "The policy ID was not found and the action authentication related to the alarm group could not be determined. Please ensure that the parameter contains the policy ID"

#: backend/iam_app/handlers/drf_perm/openarea.py:49
msgid "{}没有找到相关动作鉴权"
msgstr "{}No relevant action authentication found"

#: backend/iam_app/handlers/drf_perm/proxypass.py:39
msgid "db_cloud_token:{}解密失败，请检查token是否合法"
msgstr "db_cloud_token: {} decryption failed, please check whether the token is legal."

#: backend/iam_app/handlers/drf_perm/proxypass.py:44
msgid "解析的云区域(ID:{})与请求参数的云区域(ID:{})不相同，请检查token是否合法"
msgstr "The parsed cloud area (ID: {}) is different from the cloud area (ID: {}) of the request parameter. Please check whether the token is legal."

#: backend/iam_app/handlers/drf_perm/storage.py:47
msgid "不允许同时操作业务临时文件和介质文件"
msgstr "Simultaneous operation of business temporary files and media files is not allowed"

#: backend/iam_app/handlers/drf_perm/storage.py:62
msgid "文件操作路径{}不合法，请联系管理员"
msgstr "The file operation path {} is illegal, please contact the administrator"

#: backend/iam_app/handlers/drf_perm/ticket.py:147
msgid "单据动作ID:{} 不存在"
msgstr "Document action ID:{} does not exist"

#: backend/iam_app/handlers/drf_perm/ticket.py:172
msgid "{}不在处理人:{}中, 无权进行审批操作"
msgstr "{} is not among the handlers: {} and does not have the right to perform approval operations"

#: backend/iam_app/handlers/permission.py:82
#, python-brace-format
msgid "获取系统信息错误：{message}"
msgstr "Error getting system information: {message}"

#: backend/iam_app/handlers/permission.py:663
msgid "填充权限字段失败：{}"
msgstr "Failed to populate permission fields: {}"

#: backend/iam_app/serializers.py:24 backend/iam_app/serializers.py:33
msgid "资源ID"
msgstr "Resource ID"

#: backend/iam_app/serializers.py:26
msgid "动作ID列表"
msgstr "action id list"

#: backend/iam_app/serializers.py:32
msgid "动作ID"
msgstr "Action ID"

#: backend/iam_app/serializers.py:34
msgid "是否抛出异常"
msgstr "Whether to throw an exception"

#: backend/iam_app/serializers.py:41
msgid "仅支持业务下一个动作关联一种类型的资源"
msgstr "Only supports one type of resource associated with the next business action"

#: backend/iam_app/views/cluster_provider.py:95
#: backend/iam_app/views/cluster_provider.py:148
msgid "单节点"
msgstr "single node"

#: backend/iam_app/views/cluster_provider.py:95
#: backend/iam_app/views/cluster_provider.py:148
msgid "高可用"
msgstr "High availability"

#: backend/iam_app/views/cluster_provider.py:139
msgid "副本集"
msgstr "replica set"

#: backend/iam_app/views/cluster_provider.py:139
msgid "分片集"
msgstr "shard set"

#: backend/iam_app/views/views.py:35
msgid "获取系统权限中心信息"
msgstr "Obtaining system authority center information"

#: backend/iam_app/views/views.py:42
msgid "检查当前用户对该动作是否有权限"
msgstr "Check if the current user has permission for the action"

#: backend/iam_app/views/views.py:62
msgid ""
"检查当前用户对该动作是否有权限(仅适用于鉴权业务下一个动作对应一种资源类型，如"
"果是多种动作对应多种资源类型，请切换为check_allowed接口)"
msgstr "Check whether the current user has permission for the action (only applicable to the authentication business. The next action corresponds to one resource type. If multiple actions correspond to multiple resource types, please switch to the check_allowed interface)"

#: backend/iam_app/views/views.py:74
msgid "获取权限申请数据"
msgstr "Obtain permission application data"

#: backend/iam_app/views/views.py:89
msgid ""
"单个获取权限申请数据(仅适用于鉴权业务下一个动作对应一种资源类型，如果是多种动"
"作对应多种资源类型，请切换为get_apply_data接口)"
msgstr "Single acquisition of permission application data (only applicable to the authentication business where the next action corresponds to one resource type. If multiple actions correspond to multiple resource types, please switch to the get_apply_data interface)"

#: backend/ticket/builders/__init__.py:145
#, python-brace-format
msgid "{creator}提交了{title}的单据，请查看详情后进行审批"
msgstr ""
"{creator} has submitted the ticket for {title}, please review the details "
"before approval"

#: backend/ticket/builders/__init__.py:150
msgid "单据链接"
msgstr "ticket link"

#: backend/ticket/builders/__init__.py:155
msgid "需求信息"
msgstr "demand information"

#: backend/ticket/builders/__init__.py:355
#: backend/ticket/builders/mysql/mysql_force_import_sqlfile.py:88
#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:192
#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:228
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:126
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:162
#: backend/ticket/builders/tendbcluster/tendb_import_sqlfile.py:76
#: backend/ticket/constants.py:461 backend/ticket/constants.py:498
msgid "单据审批"
msgstr "Ticket approval"

#: backend/ticket/builders/cloud/dbha_add.py:28
msgid "新DBHA-GM机器的部署信息"
msgstr "Deployment information for new DBHA-GM machines"

#: backend/ticket/builders/cloud/dbha_add.py:29
msgid "新DBHA-AGENT机器的部署信息"
msgstr "Deployment information for new DBHA-AGENT machines"

#: backend/ticket/builders/cloud/dbha_add.py:45
msgid "DBHA 服务新增"
msgstr "DBHA service added"

#: backend/ticket/builders/cloud/dbha_reduce.py:31
msgid "裁撤的DBHA-GM列表"
msgstr "List of abolished DBHA-GMs"

#: backend/ticket/builders/cloud/dbha_reduce.py:34
msgid "裁撤的DBHA-AGENT列表"
msgstr "List of abolished DBHA-AGENTs"

#: backend/ticket/builders/cloud/dbha_reduce.py:43
msgid "请至少保证一个agent/gm存活"
msgstr "Please keep at least one agent/gm alive"

#: backend/ticket/builders/cloud/dbha_reduce.py:60
msgid "DBHA 服务裁撤"
msgstr "DBHA service abolition"

#: backend/ticket/builders/cloud/dbha_reload.py:28
msgid "重装的GM ID列表"
msgstr "List of Reloaded GM IDs"

#: backend/ticket/builders/cloud/dbha_reload.py:29
msgid "重装的AGENT ID列表"
msgstr "Reloaded AGENT ID list"

#: backend/ticket/builders/cloud/dbha_reload.py:45
msgid "DBHA 服务重装"
msgstr "DBHA service reload"

#: backend/ticket/builders/cloud/dbha_replace.py:29
msgid "被替换旧DBHA-GM服务ID"
msgstr "Replaced by the old DBHA-GM service ID"

#: backend/ticket/builders/cloud/dbha_replace.py:30
msgid "替换后的新的DBHA-GM服务信息"
msgstr "New DBHA-GM service information after replacement"

#: backend/ticket/builders/cloud/dbha_replace.py:32
msgid "被替换旧DBHA-AGENT服务ID"
msgstr "Replaced by the old DBHA-AGENT service ID"

#: backend/ticket/builders/cloud/dbha_replace.py:33
msgid "替换后的新的DBHA-AGENT服务信息"
msgstr "New DBHA-AGENT service information after replacement"

#: backend/ticket/builders/cloud/dbha_replace.py:37
msgid "不允许同时对agent和gm进行替换"
msgstr "It is not allowed to replace agent and gm at the same time"

#: backend/ticket/builders/cloud/dbha_replace.py:61
msgid "DBHA 服务替换"
msgstr "DBHA service replacement"

#: backend/ticket/builders/cloud/dns_add.py:28
msgid "新DNS机器的部署信息"
msgstr "Deployment information for the new DNS machine"

#: backend/ticket/builders/cloud/dns_add.py:42
#: backend/ticket/builders/cloud/drs_add.py:42
msgid "DNS 服务新增"
msgstr "DNS service added"

#: backend/ticket/builders/cloud/dns_reduce.py:29
msgid "裁撤的DNS列表"
msgstr "Retired DNS list"

#: backend/ticket/builders/cloud/dns_reduce.py:35
msgid "请至少保证一个dns服务存活"
msgstr "Please ensure that at least one dns service is alive"

#: backend/ticket/builders/cloud/dns_reduce.py:51
msgid "DNS 服务裁撤"
msgstr "DNS service down"

#: backend/ticket/builders/cloud/dns_reload.py:28
msgid "重装的DNSID列表"
msgstr "Reloaded DNSID list"

#: backend/ticket/builders/cloud/dns_reload.py:42
msgid "DNS 服务重装"
msgstr "DNS service reinstallation"

#: backend/ticket/builders/cloud/dns_replace.py:28
msgid "被替换旧DNS服务ID"
msgstr "Replaced by the old DNS service ID"

#: backend/ticket/builders/cloud/dns_replace.py:29
msgid "替换后的新的DNS服务信息"
msgstr "New DNS service information after replacement"

#: backend/ticket/builders/cloud/dns_replace.py:43
msgid "DNS 服务替换"
msgstr "DNS service replacement"

#: backend/ticket/builders/cloud/drs_add.py:28
msgid "新drs机器的部署信息"
msgstr "Deployment information for new drs machines"

#: backend/ticket/builders/cloud/drs_reduce.py:29
msgid "裁撤的drs列表"
msgstr "abolished drs list"

#: backend/ticket/builders/cloud/drs_reduce.py:35
msgid "请至少保证一个drs服务存活"
msgstr "Please ensure that at least one drs service is alive"

#: backend/ticket/builders/cloud/drs_reduce.py:51
msgid "DRS 服务裁撤"
msgstr "DRS service abolition"

#: backend/ticket/builders/cloud/drs_reload.py:28
msgid "重装的drsID列表"
msgstr "Reloaded drsID list"

#: backend/ticket/builders/cloud/drs_reload.py:42
msgid "DRS 服务重装"
msgstr "DRS Service Reload"

#: backend/ticket/builders/cloud/drs_replace.py:28
msgid "被替换旧DRS服务ID"
msgstr "Replaced by the old DRS Service ID"

#: backend/ticket/builders/cloud/drs_replace.py:29
msgid "替换后的新的DRS服务信息"
msgstr "New DRS service information after replacement"

#: backend/ticket/builders/cloud/drs_replace.py:43
msgid "DRS 服务替换"
msgstr "DRS Service Replacement"

#: backend/ticket/builders/cloud/nginx_reload.py:27
msgid "重装的nginx id"
msgstr "Reloaded nginx id"

#: backend/ticket/builders/cloud/nginx_reload.py:48
msgid "Nginx 服务重装"
msgstr "Nginx service reinstallation"

#: backend/ticket/builders/cloud/nginx_replace.py:29
#: backend/ticket/builders/cloud/service_apply.py:31
msgid "部署nginx服务主机信息"
msgstr "Deploy nginx service host information"

#: backend/ticket/builders/cloud/nginx_replace.py:32
msgid "替换的nginx id"
msgstr "Replaced nginx id"

#: backend/ticket/builders/cloud/nginx_replace.py:33
#: backend/ticket/builders/cloud/service_apply.py:45
msgid "nginx服务部署信息"
msgstr "nginx service deployment information"

#: backend/ticket/builders/cloud/nginx_replace.py:52
msgid "Nginx 服务替换"
msgstr "Nginx service replacement"

#: backend/ticket/builders/cloud/redis_dts_add.py:28
msgid "新Redis Dts机器的部署信息"
msgstr "Deployment information for the new Redis Dts machine"

#: backend/ticket/builders/cloud/redis_dts_add.py:43
msgid "RedisDts 服务新增"
msgstr "RedisDts service added"

#: backend/ticket/builders/cloud/redis_dts_reduce.py:28
msgid "裁撤的redis_dts列表"
msgstr "Canceled redis_dts list"

#: backend/ticket/builders/cloud/redis_dts_reduce.py:42
msgid "RedisDts 服务裁撤"
msgstr "RedisDts service discontinuation"

#: backend/ticket/builders/cloud/service_apply.py:28
msgid "部署drs服务主机信息"
msgstr "Deploy drs service host information"

#: backend/ticket/builders/cloud/service_apply.py:34
#: backend/ticket/builders/cloud/service_apply.py:41
msgid "部署dns服务主机信息"
msgstr "Deploy dns service host information"

#: backend/ticket/builders/cloud/service_apply.py:37
msgid "部署dbha-agent服务主机信息"
msgstr "Deploy dbha-agent service host information"

#: backend/ticket/builders/cloud/service_apply.py:38
msgid "部署dbha-gm服务主机信息"
msgstr "Deploy dbha-gm service host information"

#: backend/ticket/builders/cloud/service_apply.py:44
msgid "drs服务部署信息"
msgstr "drs service deployment information"

#: backend/ticket/builders/cloud/service_apply.py:46
msgid "dns服务部署信息"
msgstr "DNS service deployment information"

#: backend/ticket/builders/cloud/service_apply.py:47
msgid "dbha服务部署信息"
msgstr "dbha service deployment information"

#: backend/ticket/builders/cloud/service_apply.py:48
msgid "redis_dts服务部署信息"
msgstr "redis_dts service deployment information"

#: backend/ticket/builders/cloud/service_apply.py:112
#: backend/ticket/builders/cloud/service_apply.py:149
msgid "Nginx 服务部署"
msgstr "Nginx service deployment"

#: backend/ticket/builders/cloud/service_apply.py:118
#: backend/ticket/builders/cloud/service_apply.py:149
msgid "DNS 服务部署"
msgstr "DNS service deployment"

#: backend/ticket/builders/cloud/service_apply.py:124
#: backend/ticket/builders/cloud/service_apply.py:149
msgid "DRS 服务部署"
msgstr "DRS Service Deployment"

#: backend/ticket/builders/cloud/service_apply.py:130
#: backend/ticket/builders/cloud/service_apply.py:149
msgid "DBHA 服务部署"
msgstr "DBHA service deployment"

#: backend/ticket/builders/cloud/service_apply.py:140
msgid "RedisDts 服务部署"
msgstr "RedisDts service deployment"

#: backend/ticket/builders/common/base.py:111
msgid "展示字段"
msgstr "Display fields"

#: backend/ticket/builders/common/base.py:141
msgid "此单据只用于临时集群的销毁，请不要用于其他正常集群"
msgstr "This document is only used for the destruction of temporary clusters. Please do not use it for other normal clusters."

#: backend/ticket/builders/common/base.py:145
msgid "存在临时集群已禁用，请在集群页面进行销毁"
msgstr "There is a temporary cluster that has been disabled. Please destroy it on the cluster page."

#: backend/ticket/builders/common/base.py:158
msgid "主机{}不在空闲机池，请保证所选的主机均来自空闲机"
msgstr ""
"The host {} is not in the idle machine pool, please ensure that the selected "
"hosts are all from idle machines"

#: backend/ticket/builders/common/base.py:167
msgid "所选主机存在已经被使用，请重新选择主机。主机信息: {}"
msgstr "The selected host is already in use, please select a new host. Host information: {}"

#: backend/ticket/builders/common/base.py:176
msgid "请输入主机的云区域信息"
msgstr "Please enter the cloud region information of the host"

#: backend/ticket/builders/common/base.py:194
msgid "请保证所选集群{}都是{}集群"
msgstr "Please ensure that the selected clusters {} are all {} clusters"

#: backend/ticket/builders/common/base.py:240
msgid "业务{}下已经存在同类型: {}, 同名: {} 集群，请重新命名"
msgstr ""
"A cluster of the same type: {}, with the same name: {} already exists under "
"business {}, please rename it"

#: backend/ticket/builders/common/base.py:246
msgid "[{}]集群无法通过正则性校验{}"
msgstr "[{}]The cluster cannot pass the regularity check{}"

#: backend/ticket/builders/common/base.py:249
msgid "[{}]集群域名长度过长，请不要让域名长度超过{}"
msgstr "[{}]The cluster domain name is too long. Please do not make the domain name longer than {}."

#: backend/ticket/builders/common/base.py:285
msgid "数据库{}不在所属集群{}中，请重新查验"
msgstr "The database {} does not belong to the cluster {}, please check again"

#: backend/ticket/builders/common/base.py:378
msgid "源DB名和新DB名不允许包含通配符"
msgstr "The source DB name and new DB name are not allowed to contain wildcard characters."

#: backend/ticket/builders/common/base.py:385
msgid "数据库[{}]不存在于集群{}中"
msgstr "Database [{}] does not exist in cluster {}"

#: backend/ticket/builders/common/base.py:390
msgid "重命名数据库[{}]已存在于集群{}中"
msgstr "Rename database [{}] already exists in cluster {}"

#: backend/ticket/builders/common/base.py:393
msgid "请保证集群{}中源数据库名{}的名字唯一"
msgstr ""
"Please ensure that the name of the source database name {} in the cluster {} "
"is unique"

#: backend/ticket/builders/common/base.py:396
msgid "请保证集群{}中新数据库名{}的名字唯一"
msgstr ""
"Please ensure that the name of the new database name {} in the cluster {} is "
"unique"

#: backend/ticket/builders/common/base.py:400
msgid "请保证源数据库名{}不要出现在新数据库名列表中"
msgstr ""
"Please ensure that the source database name {} does not appear in the list "
"of new database names"

#: backend/ticket/builders/common/base.py:414
msgid "slave: {}的is_stand_by不为true，或者处于异常状态"
msgstr "slave: {} is_stand_by is not true, or is in an abnormal state"

#: backend/ticket/builders/common/bigdata.py:36
msgid "节点列表信息"
msgstr "Node List Information"

#: backend/ticket/builders/common/bigdata.py:70
msgid "操作额外信息(用于前端渲染)"
msgstr "Operation extra information (for front-end rendering)"

#: backend/ticket/builders/common/bigdata.py:82
#: backend/ticket/builders/mysql/base.py:175
msgid "集群{}状态转移不合法：{}--->{} is invalid"
msgstr "Cluster {} state transfer is invalid: {}---&gt;{} is invalid"

#: backend/ticket/builders/common/bigdata.py:90
#: backend/ticket/builders/mongodb/mongo_restore.py:50
#: backend/ticket/builders/sqlserver/sqlserver_add_slave.py:31
#: backend/ticket/builders/sqlserver/sqlserver_restore_slave.py:35
msgid "资源池规格"
msgstr "Resource pool specification"

#: backend/ticket/builders/common/bigdata.py:111
#: backend/ticket/builders/influxdb/influxdb_apply.py:32
#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:34
#: backend/ticket/builders/mongodb/mongo_shard_apply.py:29
#: backend/ticket/builders/mysql/mysql_single_apply.py:48
#: backend/ticket/builders/redis/redis_cluster_apply.py:31
#: backend/ticket/builders/redis/redis_instance_apply.py:36
#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:47
#: backend/ticket/builders/tendbcluster/tendb_apply.py:34
msgid "城市代码"
msgstr "city ​​code"

#: backend/ticket/builders/common/bigdata.py:119
#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:32
#: backend/ticket/builders/mongodb/mongo_shard_apply.py:27
#: backend/ticket/builders/redis/redis_cluster_apply.py:29
#: backend/ticket/builders/redis/redis_instance_apply.py:35
#: backend/ticket/builders/tendbcluster/tendb_apply.py:31
#: backend/ticket/serializers.py:95
msgid "业务英文缩写"
msgstr "business abbreviation"

#: backend/ticket/builders/common/bigdata.py:120
msgid "集群名称（英文数字及下划线）"
msgstr "Cluster name (alphanumeric and underscore)"

#: backend/ticket/builders/common/bigdata.py:121
#: backend/ticket/builders/redis/redis_cluster_apply.py:43
msgid "集群别名（一般为中文别名）"
msgstr "Cluster alias (usually Chinese alias)"

#: backend/ticket/builders/common/bigdata.py:125
#: backend/ticket/builders/mongodb/mongo_shard_apply.py:43
msgid "资源申请规格"
msgstr "Resource Application Specifications"

#: backend/ticket/builders/common/bigdata.py:169
msgid "主机{}出现角色互斥，{}与{}冲突"
msgstr "Host {} has a role mutual exclusion, and {} conflicts with {}"

#: backend/ticket/builders/common/bigdata.py:183
msgid "旧节点信息集合"
msgstr "Collection of old node information"

#: backend/ticket/builders/common/bigdata.py:183
#: backend/ticket/builders/common/bigdata.py:185
msgid "节点信息"
msgstr "node information"

#: backend/ticket/builders/common/bigdata.py:185
msgid "新节点信息集合"
msgstr "New node information collection"

#: backend/ticket/builders/common/bigdata.py:187
msgid "规格类型"
msgstr "Specification type"

#: backend/ticket/builders/common/bigdata.py:194
msgid "替换前后角色类型不一致，请保证替换前后角色类型和数量一致！"
msgstr ""
"The types of characters before and after the replacement are inconsistent, "
"please ensure that the types and numbers of characters before and after the "
"replacement are the same!"

#: backend/ticket/builders/common/bigdata.py:202
msgid "角色{}替换前后数量不一致，请保证替换前后角色类型和数量一致！"
msgstr ""
"The number of roles {} before and after replacement is inconsistent, please "
"ensure that the type and number of characters before and after replacement "
"are consistent!"

#: backend/ticket/builders/common/bigdata.py:224
msgid "实例名"
msgstr "instance name"

#: backend/ticket/builders/common/bigdata.py:235
#: backend/ticket/builders/common/bigdata.py:313
msgid "实例{}不存在, 请重新确认实例的合法性"
msgstr ""
"Instance {} does not exist, please reconfirm the legitimacy of the instance"

#: backend/ticket/builders/common/bigdata.py:240
msgid "无法进行重启操作，原因:{}"
msgstr "Unable to perform restart operation, reason: {}"

#: backend/ticket/builders/common/constants.py:87
msgid "本地"
msgstr "local"

#: backend/ticket/builders/common/constants.py:88
msgid "远程"
msgstr "Remotely"

#: backend/ticket/builders/common/constants.py:105
msgid "整个集群"
msgstr "entire cluster"

#: backend/ticket/builders/common/constants.py:106
msgid "部分实例"
msgstr "Some examples"

#: backend/ticket/builders/common/constants.py:114
msgid "手动提单修复"
msgstr "Manual Bill of Lading Repair"

#: backend/ticket/builders/common/constants.py:115
msgid "例行校验修复"
msgstr "Routine check repair"

#: backend/ticket/builders/common/constants.py:123
msgid "远程备份 + 时间"
msgstr "remote backup + time"

#: backend/ticket/builders/common/constants.py:124
msgid "远程备份 + backupid"
msgstr "remote backup + backupid"

#: backend/ticket/builders/common/constants.py:125
msgid "本地备份 + 时间"
msgstr "local backup + time"

#: backend/ticket/builders/common/constants.py:126
msgid "本地备份 + backupid"
msgstr "local backup + backupid"

#: backend/ticket/builders/common/constants.py:134
msgid "回档到新集群"
msgstr "Roll back to new cluster"

#: backend/ticket/builders/common/constants.py:135
msgid "回档到已有集群"
msgstr "Roll back to an existing cluster"

#: backend/ticket/builders/common/constants.py:136
msgid "回档到原集群"
msgstr "Back to the original cluster"

#: backend/ticket/builders/doris/doris_apply.py:33
msgid "http端口"
msgstr "http port"

#: backend/ticket/builders/doris/doris_apply.py:34
msgid "输入端口"
msgstr "input port"

#: backend/ticket/builders/doris/doris_apply.py:55
msgid "端口号必须在5000到65535之间"
msgstr "The port number must be between 5000 and 65535"

#: backend/ticket/builders/doris/doris_apply.py:57
msgid "端口号{}不可用"
msgstr "Port number {} is not available"

#: backend/ticket/builders/doris/doris_apply.py:62
msgid "follower节点数不为3台! 请保证follower的部署节点数等于为3"
msgstr "The number of follower nodes is not 3! Please ensure that the number of follower deployment nodes is equal to 3"

#: backend/ticket/builders/doris/doris_apply.py:67
msgid "observer节点数小于2台! 请保证observer的部署节点数至少为2"
msgstr "The number of observer nodes is less than 2! Please ensure that the number of observer deployment nodes is at least 2"

#: backend/ticket/builders/doris/doris_apply.py:75
#: backend/ticket/builders/doris/doris_shrink.py:93
msgid "请保证冷/热节点必选1种以上"
msgstr "Please ensure that at least one type of cold/hot node must be selected."

#: backend/ticket/builders/doris/doris_apply.py:77
msgid "请保证部署节点的角色为2以上"
msgstr "Please ensure that the role of the deployment node is 2 or above"

#: backend/ticket/builders/doris/doris_apply.py:120
msgid "DORIS集群部署"
msgstr "DORIS cluster deployment"

#: backend/ticket/builders/doris/doris_destroy.py:36
msgid "DORIS集群删除"
msgstr "DORIS cluster deletion"

#: backend/ticket/builders/doris/doris_disable.py:39
msgid "Doris集群停用"
msgstr "Doris cluster deactivation"

#: backend/ticket/builders/doris/doris_enable.py:39
msgid "Doris集群启用"
msgstr "Doris cluster enabled"

#: backend/ticket/builders/doris/doris_reboot.py:38
msgid "DORIS实例重启"
msgstr "DORIS instance restart"

#: backend/ticket/builders/doris/doris_replace.py:53
msgid "DORIS集群替换"
msgstr "DORIS cluster replacement"

#: backend/ticket/builders/doris/doris_scale_up.py:45
#: backend/ticket/builders/es/es_scale_up.py:45
msgid "实例数必须为正数，请确保实例的合法性"
msgstr ""
"The number of instances must be a positive number, please ensure the "
"legitimacy of the instance"

#: backend/ticket/builders/doris/doris_scale_up.py:104
msgid "Doris集群扩容"
msgstr "Doris cluster expansion"

#: backend/ticket/builders/doris/doris_shrink.py:31
#: backend/ticket/builders/es/es_shrink.py:30
msgid "hot信息列表"
msgstr "hot information list"

#: backend/ticket/builders/doris/doris_shrink.py:32
#: backend/ticket/builders/es/es_shrink.py:31
msgid "cold信息列表"
msgstr "cold information list"

#: backend/ticket/builders/doris/doris_shrink.py:33
msgid "observer信息列表"
msgstr "observer information list"

#: backend/ticket/builders/doris/doris_shrink.py:35
#: backend/ticket/builders/es/es_shrink.py:34
msgid "nodes节点列表"
msgstr "nodes node list"

#: backend/ticket/builders/doris/doris_shrink.py:70
msgid "请保证部署的observer节点的角色最小值为0或2以上"
msgstr "Please ensure that the minimum role value of the deployed observer node is 0 or 2 or above."

#: backend/ticket/builders/doris/doris_shrink.py:95
msgid "请保证部署的冷/热节点的角色为2以上"
msgstr "Please ensure that the role of the deployed cold/hot node is 2 or above."

#: backend/ticket/builders/doris/doris_shrink.py:103
msgid "缩容仅支持hot、cold和observer"
msgstr "Scaling only supports hot, cold and observer"

#: backend/ticket/builders/doris/doris_shrink.py:119
msgid "Doris集群缩容"
msgstr "Doris cluster scaling down"

#: backend/ticket/builders/es/es_apply.py:50
msgid "请保证master的部署节点至少为3，且为奇数"
msgstr "Please ensure that the master&#39;s deployment nodes are at least 3 and an odd number."

#: backend/ticket/builders/es/es_apply.py:56
msgid "请保证部署至少一台hot/cold节点"
msgstr "Please ensure to deploy at least one hot/cold node"

#: backend/ticket/builders/es/es_apply.py:142
msgid "ES集群部署"
msgstr "ES cluster deployment"

#: backend/ticket/builders/es/es_destroy.py:36
msgid "ES集群删除"
msgstr "ES cluster deletion"

#: backend/ticket/builders/es/es_disable.py:37
msgid "ES集群停用"
msgstr "ES cluster deactivated"

#: backend/ticket/builders/es/es_enable.py:37
msgid "ES集群启用"
msgstr "ES cluster enabled"

#: backend/ticket/builders/es/es_reboot.py:38
msgid "ES实例重启"
msgstr "ES instance restart"

#: backend/ticket/builders/es/es_replace.py:53
msgid "ES集群替换"
msgstr "ES cluster replacement"

#: backend/ticket/builders/es/es_scale_up.py:104
msgid "ES集群扩容"
msgstr "ES cluster expansion"

#: backend/ticket/builders/es/es_shrink.py:32
msgid "client信息列表"
msgstr "client information list"

#: backend/ticket/builders/es/es_shrink.py:54
msgid "热节点和冷节点至少保留1台!"
msgstr "Keep at least 1 hot node and cold node!"

#: backend/ticket/builders/es/es_shrink.py:62
msgid "缩容仅支持hot、cold和client"
msgstr "Scaling only supports hot, cold and client"

#: backend/ticket/builders/es/es_shrink.py:78
msgid "ES集群缩容"
msgstr "ES cluster shrinkage"

#: backend/ticket/builders/hdfs/hdfs_apply.py:44
msgid "Datanode节点数量<2台，请增加Datanode节点数量"
msgstr ""
"The number of Datanode nodes is less than 2, please increase the number of "
"Datanode nodes"

#: backend/ticket/builders/hdfs/hdfs_apply.py:49
msgid "Namenode节点数量不等于2台，请确保Namenode数量为2台"
msgstr ""
"The number of Namenode nodes is not equal to 2, please ensure that the "
"number of Namenodes is 2"

#: backend/ticket/builders/hdfs/hdfs_apply.py:55
msgid "资源池部署ZooKeeper/JournalNode的角色数量为1-3台"
msgstr "The number of ZooKeeper/JournalNode roles deployed in the resource pool is 1-3."

#: backend/ticket/builders/hdfs/hdfs_apply.py:58
msgid ""
"ZooKeeper/JournalNode节点数量不等于3台，请确保ZooKeeper/JournalNode数量为3台"
msgstr ""
"The number of ZooKeeper/JournalNode nodes is not equal to 3, please ensure "
"that the number of ZooKeeper/JournalNode is 3"

#: backend/ticket/builders/hdfs/hdfs_apply.py:147
#: backend/ticket/constants.py:341
msgid "HDFS 集群部署"
msgstr "HDFS cluster deployment"

#: backend/ticket/builders/hdfs/hdfs_destroy.py:36
#: backend/ticket/constants.py:348
msgid "HDFS 集群删除"
msgstr "HDFS cluster deletion"

#: backend/ticket/builders/hdfs/hdfs_disable.py:39
#: backend/ticket/constants.py:347
msgid "HDFS 集群禁用"
msgstr "HDFS cluster disabled"

#: backend/ticket/builders/hdfs/hdfs_enable.py:40
#: backend/ticket/constants.py:346
msgid "HDFS 集群启用"
msgstr "HDFS cluster enabled"

#: backend/ticket/builders/hdfs/hdfs_reboot.py:39
msgid "HDFS实例重启"
msgstr "HDFS instance restart"

#: backend/ticket/builders/hdfs/hdfs_replace.py:36
msgid "hdfs替换只支持datanode角色"
msgstr "hdfs replacement only supports datanode role"

#: backend/ticket/builders/hdfs/hdfs_replace.py:56
#: backend/ticket/constants.py:345
msgid "HDFS 集群替换"
msgstr "HDFS cluster replacement"

#: backend/ticket/builders/hdfs/hdfs_scale_up.py:64
#: backend/ticket/constants.py:342
msgid "HDFS 集群扩容"
msgstr "HDFS cluster expansion"

#: backend/ticket/builders/hdfs/hdfs_shrink.py:30
#: backend/ticket/builders/kafka/kafka_shrink.py:31
#: backend/ticket/builders/pulsar/pulsar_shrink.py:34
msgid "broker信息列表"
msgstr "broker information list"

#: backend/ticket/builders/hdfs/hdfs_shrink.py:32
#: backend/ticket/builders/kafka/kafka_shrink.py:33
msgid "nodes节点信息"
msgstr "nodesNode information"

#: backend/ticket/builders/hdfs/hdfs_shrink.py:56
msgid "{}: 至少保留2台!"
msgstr "{}: Keep at least 2 units!"

#: backend/ticket/builders/hdfs/hdfs_shrink.py:59
msgid "缩容仅支持DataNode角色"
msgstr "Scaling only supports the DataNode role"

#: backend/ticket/builders/hdfs/hdfs_shrink.py:75
#: backend/ticket/constants.py:343
msgid "HDFS 集群缩容"
msgstr "HDFS cluster shrink"

#: backend/ticket/builders/influxdb/influxdb_apply.py:41
msgid "分组名字"
msgstr "group name"

#: backend/ticket/builders/influxdb/influxdb_apply.py:82
#: backend/ticket/constants.py:369
msgid "InfluxDB 实例部署"
msgstr "InfluxDB instance deployment"

#: backend/ticket/builders/influxdb/influxdb_destroy.py:37
#: backend/ticket/constants.py:373
msgid "InfluxDB 实例删除"
msgstr "InfluxDB instance deletion"

#: backend/ticket/builders/influxdb/influxdb_disable.py:40
#: backend/ticket/constants.py:372
msgid "InfluxDB 实例禁用"
msgstr "InfluxDB instance disabled"

#: backend/ticket/builders/influxdb/influxdb_enable.py:40
#: backend/ticket/constants.py:371
msgid "InfluxDB 实例启用"
msgstr "InfluxDB instance enabled"

#: backend/ticket/builders/influxdb/influxdb_reboot.py:39
#: backend/ticket/constants.py:370
msgid "InfluxDB 实例重启"
msgstr "InfluxDB instance restart"

#: backend/ticket/builders/influxdb/influxdb_replace.py:47
#: backend/ticket/constants.py:374
msgid "InfluxDB 实例替换"
msgstr "InfluxDB instance replacement"

#: backend/ticket/builders/kafka/kafka_apply.py:75
msgid "无认证开关, 1表示无认证。0表示认证，默认0"
msgstr "No authentication switch, 1 means no authentication. 0 means authentication, default 0"

#: backend/ticket/builders/kafka/kafka_apply.py:77
msgid "消息保留大小"
msgstr "Message reserved size"

#: backend/ticket/builders/kafka/kafka_apply.py:78
#: backend/ticket/builders/pulsar/pulsar_apply.py:29
msgid "副本数量"
msgstr "number of copies"

#: backend/ticket/builders/kafka/kafka_apply.py:79
#: backend/ticket/builders/pulsar/pulsar_apply.py:30
msgid "分区数量"
msgstr "number of partitions"

#: backend/ticket/builders/kafka/kafka_apply.py:80
#: backend/ticket/builders/pulsar/pulsar_apply.py:31
msgid "保留时长（小时）"
msgstr "Hold time (hours)"

#: backend/ticket/builders/kafka/kafka_apply.py:104
msgid "Zookeeper节点数量不等于3台，请确保Zookeeper节点数量为3"
msgstr ""
"The number of Zookeeper nodes is not equal to 3, please ensure that the "
"number of Zookeeper nodes is 3"

#: backend/ticket/builders/kafka/kafka_apply.py:110
msgid ""
"Broker节点与副本节点数量有误，请确保Broker节点至少为1且副本数量<=Broker数量"
msgstr ""
"The number of Broker nodes and copy nodes is wrong, please ensure that the "
"number of Broker nodes is at least 1 and the number of copies is &lt;= the "
"number of Brokers"

#: backend/ticket/builders/kafka/kafka_apply.py:136
#: backend/ticket/constants.py:332
msgid "Kafka 集群部署"
msgstr "Kafka cluster deployment"

#: backend/ticket/builders/kafka/kafka_destroy.py:37
msgid "Kafka 集群销毁"
msgstr "Kafka cluster destruction"

#: backend/ticket/builders/kafka/kafka_disable.py:40
msgid "Kafka 集群停用"
msgstr "Kafka cluster down"

#: backend/ticket/builders/kafka/kafka_enable.py:40
#: backend/ticket/constants.py:337
msgid "Kafka 集群启用"
msgstr "Kafka cluster enabled"

#: backend/ticket/builders/kafka/kafka_reboot.py:39
#: backend/ticket/constants.py:335
msgid "Kafka 实例重启"
msgstr "Kafka instance restart"

#: backend/ticket/builders/kafka/kafka_replace.py:47
#: backend/ticket/constants.py:336
msgid "Kafka 集群替换"
msgstr "Kafka cluster replacement"

#: backend/ticket/builders/kafka/kafka_scale_up.py:64
#: backend/ticket/constants.py:333
msgid "Kafka 集群扩容"
msgstr "Kafka cluster expansion"

#: backend/ticket/builders/kafka/kafka_shrink.py:58
msgid "{}: 至少保留1台!"
msgstr "{}: Keep at least 1 unit!"

#: backend/ticket/builders/kafka/kafka_shrink.py:61
msgid "缩容仅支持Broker"
msgstr "Scaling only supports Broker"

#: backend/ticket/builders/kafka/kafka_shrink.py:77
#: backend/ticket/constants.py:334
msgid "Kafka 集群缩容"
msgstr "Kafka cluster shrink"

#: backend/ticket/builders/mongodb/base.py:69
msgid "缩容规格: {} 的台数: {} 后不满足容灾要求!"
msgstr "Reduction specifications: {} Number of units: {} does not meet the disaster recovery requirements!"

#: backend/ticket/builders/mongodb/base.py:79
msgid "缩容机器: {} 后不满足容灾要求!"
msgstr "Shrink machine: {} does not meet disaster recovery requirements!"

#: backend/ticket/builders/mongodb/base.py:90
msgid "请保证机器{}不能再同一个分片{}中"
msgstr "Please ensure that machine {} cannot be in the same shard {}"

#: backend/ticket/builders/mongodb/base.py:99
msgid "请保证这一批集群的属性: {}是一致的"
msgstr "Please ensure that the attributes of this batch of clusters: {} are consistent"

#: backend/ticket/builders/mongodb/mongo_add_mongos.py:32
#: backend/ticket/builders/mongodb/mongo_reduce_mongos.py:30
msgid "接入层角色"
msgstr "Access layer role"

#: backend/ticket/builders/mongodb/mongo_add_mongos.py:35
#: backend/ticket/builders/mongodb/mongo_add_shard_nodes.py:43
#: backend/ticket/builders/mongodb/mongo_clear.py:34
#: backend/ticket/builders/mongodb/mongo_reduce_mongos.py:33
#: backend/ticket/builders/mongodb/mongo_reduce_shard_nodes.py:31
#: backend/ticket/builders/tendbcluster/tendb_spider_reduce_nodes.py:34
#: backend/ticket/builders/tendbcluster/tendb_spider_slave_destroy.py:22
msgid "是否做安全检测"
msgstr "Whether to do safety inspection"

#: backend/ticket/builders/mongodb/mongo_add_mongos.py:39
msgid "扩容接入层申请信息"
msgstr "Expansion access layer application information"

#: backend/ticket/builders/mongodb/mongo_add_mongos.py:74
msgid "MongoDB 扩容接入层执行"
msgstr "MongoDB expansion access layer execution"

#: backend/ticket/builders/mongodb/mongo_add_shard_nodes.py:34
msgid "当前shard节点数"
msgstr "Current number of shard nodes"

#: backend/ticket/builders/mongodb/mongo_add_shard_nodes.py:35
msgid "扩容shard节点数"
msgstr "Expand the number of shard nodes"

#: backend/ticket/builders/mongodb/mongo_add_shard_nodes.py:36
msgid "单机部署实例数"
msgstr "Number of single-machine deployment instances"

#: backend/ticket/builders/mongodb/mongo_add_shard_nodes.py:37
msgid "扩容shard分片数"
msgstr "Expanding the number of shard shards"

#: backend/ticket/builders/mongodb/mongo_add_shard_nodes.py:44
msgid "扩容shard节点数申请信息"
msgstr "Application information for expanding the number of shard nodes"

#: backend/ticket/builders/mongodb/mongo_add_shard_nodes.py:97
msgid "MongoDB 扩容shard节点数执行"
msgstr "MongoDB expands the number of shard nodes and executes it"

#: backend/ticket/builders/mongodb/mongo_authorize.py:26
msgid "授权数据列表"
msgstr "Authorized data list"

#: backend/ticket/builders/mongodb/mongo_authorize.py:38
#: backend/ticket/builders/mysql/mysql_authorize_rules.py:66
#: backend/ticket/builders/sqlserver/sqlserver_authorize.py:39
msgid "用户输入的excel下载文件地址"
msgstr "The excel download file address entered by the user"

#: backend/ticket/builders/mongodb/mongo_authorize.py:40
#: backend/ticket/builders/mysql/mysql_authorize_rules.py:68
#: backend/ticket/builders/sqlserver/sqlserver_authorize.py:41
msgid "授权数据信息列表"
msgstr "List of authorized data information"

#: backend/ticket/builders/mongodb/mongo_authorize.py:52
msgid "MongoDB 授权执行"
msgstr "MongoDB authorization execution"

#: backend/ticket/builders/mongodb/mongo_authorize.py:58
#: backend/ticket/builders/mysql/mysql_authorize_rules.py:106
#: backend/ticket/builders/sqlserver/sqlserver_authorize.py:72
msgid "授权数据不存在/已过期，请重新提交授权表单或excel文件"
msgstr "The authorization data does not exist/has expired. Please resubmit the authorization form or excel file."

#: backend/ticket/builders/mongodb/mongo_authorize.py:66
msgid "MongoDB Excel授权执行"
msgstr "MongoDB Excel authorization execution"

#: backend/ticket/builders/mongodb/mongo_backup.py:32
#: backend/ticket/builders/mongodb/mongo_clear.py:31
#: backend/ticket/builders/mongodb/mongo_restore.py:45
msgid "库表选择器"
msgstr "Library table selector"

#: backend/ticket/builders/mongodb/mongo_backup.py:33
msgid "备份节点"
msgstr "Backup node"

#: backend/ticket/builders/mongodb/mongo_backup.py:38
#: backend/ticket/builders/sqlserver/sqlserver_backup.py:34
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:59
msgid "备份方式"
msgstr "Backup method"

#: backend/ticket/builders/mongodb/mongo_backup.py:40
#: backend/ticket/builders/mongodb/mongo_full_backup.py:27
#: backend/ticket/builders/sqlserver/sqlserver_backup.py:36
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:53
#: backend/ticket/builders/tendbcluster/tendb_full_backup.py:30
msgid "备份保存时间"
msgstr "Backup save time"

#: backend/ticket/builders/mongodb/mongo_backup.py:62
msgid "如果备份方式选择mongos，请输入备份节点"
msgstr "If mongos is selected as the backup method, please enter the backup node"

#: backend/ticket/builders/mongodb/mongo_backup.py:65
msgid "请保证备份节点{}是分片集群的机器"
msgstr "Please ensure that the backup node {} is a machine in the sharded cluster"

#: backend/ticket/builders/mongodb/mongo_backup.py:85
msgid "MongoDB 库表备份执行"
msgstr "MongoDB database table backup execution"

#: backend/ticket/builders/mongodb/mongo_clear.py:29
msgid "删除类型"
msgstr "delete type"

#: backend/ticket/builders/mongodb/mongo_clear.py:30
msgid "是否删除索引"
msgstr "Whether to delete the index"

#: backend/ticket/builders/mongodb/mongo_clear.py:33
msgid "清档信息"
msgstr "Clearance information"

#: backend/ticket/builders/mongodb/mongo_clear.py:52
msgid "MongoDB 清档执行"
msgstr "MongoDB clearing execution"

#: backend/ticket/builders/mongodb/mongo_cutoff.py:35
msgid "替换主机IP"
msgstr "Replace host IP"

#: backend/ticket/builders/mongodb/mongo_cutoff.py:36
msgid "主机所在云区域"
msgstr "The cloud region where the host is located"

#: backend/ticket/builders/mongodb/mongo_cutoff.py:37
#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:47
#: backend/ticket/builders/redis/redis_toolbox_redis_scale_updown.py:34
#: backend/ticket/builders/redis/redis_toolbox_shard_update.py:37
#: backend/ticket/builders/redis/redis_toolbox_type_update.py:38
msgid "规格ID"
msgstr "Specification ID"

#: backend/ticket/builders/mongodb/mongo_cutoff.py:40
msgid "替换mongos的信息"
msgstr "Replace mongos information"

#: backend/ticket/builders/mongodb/mongo_cutoff.py:41
msgid "替换mongodb的信息"
msgstr "Replace mongodb information"

#: backend/ticket/builders/mongodb/mongo_cutoff.py:42
msgid "替换mongo_config的信息"
msgstr "Replace mongo_config information"

#: backend/ticket/builders/mongodb/mongo_cutoff.py:47
msgid "整机替换信息"
msgstr "Whole machine replacement information"

#: backend/ticket/builders/mongodb/mongo_cutoff.py:160
msgid "MongoDB 整机替换执行"
msgstr "MongoDB whole machine replacement execution"

#: backend/ticket/builders/mongodb/mongo_destroy.py:41
msgid "MongoDB 集群下架"
msgstr "MongoDB cluster removed"

#: backend/ticket/builders/mongodb/mongo_disable.py:44
#: backend/ticket/constants.py:409
msgid "MongoDB 集群禁用"
msgstr "MongoDB cluster disabled"

#: backend/ticket/builders/mongodb/mongo_enable.py:44
#: backend/ticket/constants.py:407
msgid "MongoDB 集群启用"
msgstr "MongoDB cluster enabled"

#: backend/ticket/builders/mongodb/mongo_full_backup.py:26
msgid "是否需要oplog备份"
msgstr "Do you need oplog backup?"

#: backend/ticket/builders/mongodb/mongo_full_backup.py:53
msgid "MongoDB 全库备份执行"
msgstr "MongoDB full database backup execution"

#: backend/ticket/builders/mongodb/mongo_instance_reload.py:28
msgid "实例主机ID"
msgstr "Instance host ID"

#: backend/ticket/builders/mongodb/mongo_instance_reload.py:32
msgid "重启信息"
msgstr "Restart information"

#: backend/ticket/builders/mongodb/mongo_instance_reload.py:67
#: backend/ticket/constants.py:408
msgid "MongoDB 实例重启"
msgstr "MongoDB instance restart"

#: backend/ticket/builders/mongodb/mongo_reduce_mongos.py:31
#: backend/ticket/builders/riak/riak_shrink.py:30
msgid "缩容节点"
msgstr "Scale down node"

#: backend/ticket/builders/mongodb/mongo_reduce_mongos.py:34
msgid "缩容接入层申请信息"
msgstr "Reduction access layer application information"

#: backend/ticket/builders/mongodb/mongo_reduce_mongos.py:53
msgid "缩容后的整体mongos机器数量不能小于2"
msgstr "The number of overall mongos machines after scaling cannot be less than 2"

#: backend/ticket/builders/mongodb/mongo_reduce_mongos.py:80
msgid "MongoDB 缩容接入层执行"
msgstr "MongoDB scaling access layer execution"

#: backend/ticket/builders/mongodb/mongo_reduce_shard_nodes.py:29
msgid "缩容数量"
msgstr "Number of shrinks"

#: backend/ticket/builders/mongodb/mongo_reduce_shard_nodes.py:32
msgid "缩容shard节点数信息"
msgstr "Shrink shard node number information"

#: backend/ticket/builders/mongodb/mongo_reduce_shard_nodes.py:67
msgid "MongoDB 缩容Shard节点数执行"
msgstr "MongoDB reduces the number of Shard nodes and executes it"

#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:27
msgid "复制集群ID（英文数字及下划线）"
msgstr "Copy the cluster ID (English numbers and underscores)"

#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:42
#: backend/ticket/builders/mongodb/mongo_shard_apply.py:39
msgid "起始端口"
msgstr "starting port"

#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:43
msgid "副本集数量"
msgstr "Number of replica sets"

#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:44
msgid "副本集节点数量"
msgstr "Number of replica set nodes"

#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:45
msgid "单机副本集数量"
msgstr "Number of stand-alone replica sets"

#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:46
msgid "副本集列表"
msgstr "Replica set list"

#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:48
#: backend/ticket/builders/mongodb/mongo_shard_apply.py:40
msgid "oplog容量占比"
msgstr "oplog capacity ratio"

#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:55
msgid "集群规格"
msgstr "Cluster specifications"

#: backend/ticket/builders/mongodb/mongo_replicaset_apply.py:101
msgid "MongoDB 副本集集群部署执行"
msgstr "MongoDB replica set cluster deployment execution"

#: backend/ticket/builders/mongodb/mongo_restore.py:43
#: backend/ticket/builders/redis/redis_toolbox_cut_off.py:34
#: backend/ticket/builders/sqlserver/sqlserver_add_slave.py:30
#: backend/ticket/builders/sqlserver/sqlserver_restore_slave.py:34
msgid "集群列表"
msgstr "cluster list"

#: backend/ticket/builders/mongodb/mongo_restore.py:47
msgid "指定备份记录[集群ID: 记录]"
msgstr "Specify backup record [cluster ID: record]"

#: backend/ticket/builders/mongodb/mongo_restore.py:48
msgid "部署城市"
msgstr "deploy city"

#: backend/ticket/builders/mongodb/mongo_restore.py:49
msgid "每台主机部署的节点数"
msgstr "Number of nodes deployed per host"

#: backend/ticket/builders/mongodb/mongo_restore.py:59
msgid "分片集群暂时不支持批量回档"
msgstr "Sharded clusters do not support batch rollback for the time being."

#: backend/ticket/builders/mongodb/mongo_restore.py:248
msgid "[{}]回档临时集群部署"
msgstr "[{}]Rolling back temporary cluster deployment"

#: backend/ticket/builders/mongodb/mongo_restore.py:255
#: backend/ticket/builders/mongodb/mongo_restore.py:269
msgid "MongoDB 回档执行"
msgstr "MongoDB rollback execution"

#: backend/ticket/builders/mongodb/mongo_restore.py:269
#: backend/ticket/builders/tendbcluster/tendb_fixpoint_rollback.py:204
#: backend/ticket/builders/tendbcluster/tendb_fixpoint_rollback.py:224
msgid "回档临时集群部署"
msgstr "Rolling back a temporary cluster deployment"

#: backend/ticket/builders/mongodb/mongo_scale_updown.py:33
#: backend/ticket/builders/mongodb/mongo_shard_apply.py:46
#: backend/ticket/builders/redis/redis_cluster_apply.py:49
#: backend/ticket/builders/redis/redis_toolbox_redis_scale_updown.py:44
#: backend/ticket/builders/tendbcluster/tendb_apply.py:45
#: backend/ticket/builders/tendbcluster/tendb_node_reblance.py:33
msgid "集群分片数"
msgstr "Number of cluster fragments"

#: backend/ticket/builders/mongodb/mongo_scale_updown.py:34
#: backend/ticket/builders/mongodb/mongo_shard_apply.py:45
#: backend/ticket/builders/tendbcluster/tendb_apply.py:54
msgid "机器组数"
msgstr "Number of machine groups"

#: backend/ticket/builders/mongodb/mongo_scale_updown.py:35
msgid "集群每分片节点数"
msgstr "Number of nodes per cluster in the cluster"

#: backend/ticket/builders/mongodb/mongo_scale_updown.py:42
msgid "集群容量变更申请信息"
msgstr "Cluster capacity change application information"

#: backend/ticket/builders/mongodb/mongo_scale_updown.py:50
msgid "请保证申请机器数{} = 机器组数{} * 集群分片节点数{}"
msgstr "Please ensure that the number of machines you apply for {} = the number of machine groups {} * the number of cluster shard nodes {}"

#: backend/ticket/builders/mongodb/mongo_scale_updown.py:115
msgid "MongoDB 集群容量变更执行"
msgstr "MongoDB cluster capacity change execution"

#: backend/ticket/builders/mongodb/mongo_script_exec.py:32
msgid "脚本内容列表"
msgstr "Script content list"

#: backend/ticket/builders/mongodb/mongo_script_exec.py:33
msgid "脚本导入类型"
msgstr "Script import type"

#: backend/ticket/builders/mongodb/mongo_script_exec.py:57
msgid "MongoDB 变更脚本执行执行"
msgstr "MongoDB change script execution"

#: backend/ticket/builders/mongodb/mongo_shard_apply.py:101
msgid "MongoDB 分片集群部署执行"
msgstr "MongoDB sharded cluster deployment execution"

#: backend/ticket/builders/mongodb/mongodb_temporary_destroy.py:54
#: backend/ticket/builders/mongodb/mongodb_temporary_destroy.py:68
msgid "MongoDB 临时集群下架"
msgstr "MongoDB temporary cluster removed"

#: backend/ticket/builders/mongodb/mongodb_temporary_destroy.py:60
#: backend/ticket/builders/mongodb/mongodb_temporary_destroy.py:68
#: backend/ticket/constants.py:415
msgid "MongoDB 临时集群销毁"
msgstr "MongoDB temporary cluster destruction"

#: backend/ticket/builders/mysql/base.py:101
msgid "单节点实例状态异常，暂时无法执行该单据类型：{}"
msgstr "The status of the single-node instance is abnormal and the document type cannot be executed temporarily: {}"

#: backend/ticket/builders/mysql/base.py:107
#: backend/ticket/builders/sqlserver/base.py:91
msgid "集群实例状态异常:{}，暂时无法执行该单据类型：{}"
msgstr "The cluster instance status is abnormal: {}, the document type cannot be executed temporarily: {}"

#: backend/ticket/builders/mysql/base.py:118
msgid "请保证所选集群{}与新增机器{}在同一云区域下"
msgstr ""
"Please ensure that the selected cluster {} and the newly added machine {} "
"are in the same cloud region"

#: backend/ticket/builders/mysql/base.py:127
msgid "请保证实例f{}的角色类型为{}"
msgstr "Please ensure that the role type of the instance f{} is {}"

#: backend/ticket/builders/mysql/base.py:143
msgid "请保证所选实例{}的关联集群为{}"
msgstr ""
"Please ensure that the associated cluster of the selected instance {} is {}"

#: backend/ticket/builders/mysql/base.py:166
msgid "是否强制下架"
msgstr "Is it mandatory to take off the shelves"

#: backend/ticket/builders/mysql/base.py:217
msgid ""
"【库表字段校验】库表只能由`[0-9],[a-z],[A-Z],-,_` 组成，(某些单据)支持*/%/?通"
"配符。库表长度最大为35"
msgstr "[Library table field verification] The library table can only be composed of `[0-9],[az],[AZ],-,_`, (some documents) support */%/? wildcard. The maximum length of the library table is 35"

#: backend/ticket/builders/mysql/base.py:223
msgid "【库表字段校验】{}"
msgstr "[Library table field verification]{}"

#: backend/ticket/builders/mysql/base.py:228
msgid "【库表字段校验】不允许系统库(除test)做任何变更类操作"
msgstr "[Library table field verification] System libraries (except test) are not allowed to perform any change operations"

#: backend/ticket/builders/mysql/base.py:230
msgid "【库表字段校验】DB名{}不能以stage_truncate开头"
msgstr "[Library table field verification] DB name {} cannot start with stage_truncate"

#: backend/ticket/builders/mysql/base.py:232
msgid "【库表字段校验】DB名{}不能以dba_rollback结尾"
msgstr "[Library table field verification] DB name {} cannot end with dba_rollback"

#: backend/ticket/builders/mysql/mysql_add_slave.py:27
msgid "新从库机器信息"
msgstr "New slave machine information"

#: backend/ticket/builders/mysql/mysql_add_slave.py:31
msgid "添加从库信息"
msgstr "Add slave information"

#: backend/ticket/builders/mysql/mysql_add_slave.py:36
#: backend/ticket/builders/mysql/mysql_migrate_cluster.py:33
#: backend/ticket/builders/mysql/mysql_migrate_upgrade.py:43
#: backend/ticket/builders/mysql/mysql_proxy_add.py:32
#: backend/ticket/builders/mysql/mysql_proxy_switch.py:40
#: backend/ticket/builders/tendbcluster/tendb_migrate_cluster.py:34
#: backend/ticket/builders/tendbcluster/tendb_restore_slave.py:34
msgid "机器来源"
msgstr "machine source"

#: backend/ticket/builders/mysql/mysql_add_slave.py:88
msgid "添加从库执行"
msgstr "Add slave execution"

#: backend/ticket/builders/mysql/mysql_authorize_rules.py:31
msgid "目标集群域名"
msgstr "Target cluster domain name"

#: backend/ticket/builders/mysql/mysql_authorize_rules.py:43
msgid "第三方接口/插件授权信息"
msgstr "Third-party interface/plug-in authorization information"

#: backend/ticket/builders/mysql/mysql_authorize_rules.py:45
msgid "是否需要审批"
msgstr "Whether approval is required"

#: backend/ticket/builders/mysql/mysql_authorize_rules.py:49
msgid "请保证授权数据存在"
msgstr "Please ensure that the authorization data exists"

#: backend/ticket/builders/mysql/mysql_authorize_rules.py:89
msgid "授权执行"
msgstr "authorized execution"

#: backend/ticket/builders/mysql/mysql_authorize_rules.py:114
msgid "Excel 授权执行"
msgstr "Excel authorization execution"

#: backend/ticket/builders/mysql/mysql_checksum.py:39
msgid "slave信息列表"
msgstr "slave information list"

#: backend/ticket/builders/mysql/mysql_checksum.py:46
#: backend/ticket/builders/tendbcluster/tendb_checksum.py:61
#: backend/ticket/constants.py:489
msgid "超时时间"
msgstr "overtime time"

#: backend/ticket/builders/mysql/mysql_checksum.py:47
#: backend/ticket/builders/tendbcluster/tendb_checksum.py:62
msgid "定时触发时间"
msgstr "Timing trigger time"

#: backend/ticket/builders/mysql/mysql_checksum.py:48
msgid "数据校验信息列表"
msgstr "Data verification information list"

#: backend/ticket/builders/mysql/mysql_checksum.py:49
#: backend/ticket/builders/mysql/mysql_data_repair.py:30
#: backend/ticket/builders/tendbcluster/tendb_checksum.py:60
msgid "数据修复信息"
msgstr "Data Repair Information"

#: backend/ticket/builders/mysql/mysql_checksum.py:50
#: backend/ticket/builders/mysql/mysql_data_repair.py:32
#: backend/ticket/builders/tendbcluster/tendb_checksum.py:64
msgid "非innodb表是否修复"
msgstr "Are non-innodb tables repaired?"

#: backend/ticket/builders/mysql/mysql_checksum.py:61
#: backend/ticket/builders/tendbcluster/tendb_checksum.py:72
msgid "定时时间必须晚于当前时间"
msgstr "The scheduled time must be later than the current time"

#: backend/ticket/builders/mysql/mysql_checksum.py:185
#: backend/ticket/builders/mysql/mysql_checksum.py:221
msgid "数据校验执行"
msgstr "Data validation execution"

#: backend/ticket/builders/mysql/mysql_checksum.py:202
msgid "手动"
msgstr "manual"

#: backend/ticket/builders/mysql/mysql_checksum.py:204
msgid "自动"
msgstr "automatic"

#: backend/ticket/builders/mysql/mysql_checksum.py:212
msgid "数据修复{}执行"
msgstr "datafix{} execute"

#: backend/ticket/builders/mysql/mysql_checksum.py:221
#: backend/ticket/builders/mysql/mysql_data_repair.py:59
msgid "数据修复执行"
msgstr "Data Repair Execution"

#: backend/ticket/builders/mysql/mysql_clone_rules.py:30
msgid "源IP"
msgstr "Source IP"

#: backend/ticket/builders/mysql/mysql_clone_rules.py:31
msgid "目标IP列表"
msgstr "Target IP list"

#: backend/ticket/builders/mysql/mysql_clone_rules.py:39
msgid "插件的权限克隆信息"
msgstr "Plug-in permission clone information"

#: backend/ticket/builders/mysql/mysql_clone_rules.py:45
#: backend/ticket/builders/tendbcluster/tendb_clone_rules.py:29
msgid "克隆集群类型"
msgstr "Clone cluster type"

#: backend/ticket/builders/mysql/mysql_clone_rules.py:69
msgid "客户端权限克隆执行"
msgstr "Client permission clone execution"

#: backend/ticket/builders/mysql/mysql_clone_rules.py:78
msgid "权限克隆数据已过期，请重新提交权限克隆表单或excel文件"
msgstr ""
"The permission clone data has expired, please resubmit the permission clone "
"form or excel file"

#: backend/ticket/builders/mysql/mysql_clone_rules.py:85
msgid "权限克隆数据不合法！请检查"
msgstr "Cloning data with permission is illegal! Check, please"

#: backend/ticket/builders/mysql/mysql_clone_rules.py:90
msgid "DB实例权限克隆执行"
msgstr "DB instance permission clone execution"

#: backend/ticket/builders/mysql/mysql_data_migrate.py:27
#: backend/ticket/builders/mysql/mysql_openarea.py:43
msgid "目标集群列表"
msgstr "Target cluster list"

#: backend/ticket/builders/mysql/mysql_data_migrate.py:28
msgid "迁移库列表"
msgstr "Migration library list"

#: backend/ticket/builders/mysql/mysql_data_migrate.py:29
msgid "克隆类型"
msgstr "Clone type"

#: backend/ticket/builders/mysql/mysql_data_migrate.py:31
msgid "数据迁移信息"
msgstr "Data migration information"

#: backend/ticket/builders/mysql/mysql_data_migrate.py:46
msgid "迁移存在不属于源集群的数据库"
msgstr "Migrate databases that do not belong to the source cluster"

#: backend/ticket/builders/mysql/mysql_data_migrate.py:52
msgid "迁移的数据库不能与目标集群有交集"
msgstr "The migrated database cannot overlap with the target cluster"

#: backend/ticket/builders/mysql/mysql_data_migrate.py:55
msgid "即将迁移的数据库和目标集群不允许重复"
msgstr "The database and target cluster to be migrated do not allow duplicates"

#: backend/ticket/builders/mysql/mysql_data_repair.py:27
msgid "master信息"
msgstr "master information"

#: backend/ticket/builders/mysql/mysql_data_repair.py:28
msgid "slaves信息"
msgstr "slaves information"

#: backend/ticket/builders/mysql/mysql_data_repair.py:31
msgid "校验单据结果表名"
msgstr "Verification ticket result table name"

#: backend/ticket/builders/mysql/mysql_data_repair.py:33
msgid "校验结果是否一致"
msgstr "Whether the verification result is consistent"

#: backend/ticket/builders/mysql/mysql_data_repair.py:36
msgid "数据修复触发类型"
msgstr "Data Repair Trigger Type"

#: backend/ticket/builders/mysql/mysql_dump_data.py:31
msgid "where条件"
msgstr "where condition"

#: backend/ticket/builders/mysql/mysql_dump_data.py:32
msgid "导出库列表"
msgstr "Export library list"

#: backend/ticket/builders/mysql/mysql_dump_data.py:35
msgid "是否导出表结构"
msgstr "Whether to export the table structure"

#: backend/ticket/builders/mysql/mysql_dump_data.py:36
msgid "是否导出表数据"
msgstr "Whether to export table data"

#: backend/ticket/builders/mysql/mysql_dump_data.py:75
msgid "数据导出执行"
msgstr "Data export execution"

#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:34
#: backend/ticket/builders/tendbcluster/tendb_fixpoint_rollback.py:43
msgid "回档集群ID"
msgstr "Rollback cluster ID"

#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:35
#: backend/ticket/builders/tendbcluster/tendb_fixpoint_rollback.py:44
msgid "备份新机器"
msgstr "backup new machine"

#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:41
#: backend/ticket/builders/tendbcluster/tendb_fixpoint_rollback.py:50
msgid "备份文件信息"
msgstr "Backup file information"

#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:49
#: backend/ticket/builders/tendbcluster/tendb_fixpoint_rollback.py:60
msgid "回档集群类型"
msgstr "Rollback cluster type"

#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:51
msgid "定点构造信息"
msgstr "fixed-point construction information"

#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:57
#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:62
msgid "请提供部署新集群的机器信息"
msgstr "Please provide machine information for deploying the new cluster"

#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:66
msgid "请保证rollback_time或backupinfo参数至少存在一个"
msgstr ""
"Please ensure that there is at least one rollback_time or backupinfo "
"parameter"

#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:74
msgid "定点时间{}不能晚于当前时间{}"
msgstr "Fixed time {} cannot be later than current time {}"

#: backend/ticket/builders/mysql/mysql_fixpoint_rollback.py:118
msgid "定点构造执行"
msgstr "Fixed-point construction execution"

#: backend/ticket/builders/mysql/mysql_flashback.py:41
msgid "flashback工具地址"
msgstr "flashback tool address"

#: backend/ticket/builders/mysql/mysql_flashback.py:43
msgid "记录文件"
msgstr "log file"

#: backend/ticket/builders/mysql/mysql_flashback.py:56
msgid ""
"flash的起止时间{}--{}不合法，请保证开始时间小于结束时间，并且二者不大于当前时"
"间"
msgstr ""
"The start and end time of flash {}--{} is invalid, please ensure that the "
"start time is less than the end time, and the two are not greater than the "
"current time"

#: backend/ticket/builders/mysql/mysql_flashback.py:78
msgid "闪回执行"
msgstr "flashback execution"

#: backend/ticket/builders/mysql/mysql_force_import_sqlfile.py:93
#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:198
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:132
msgid "人工确认执行"
msgstr "Manual confirmation execution"

#: backend/ticket/builders/mysql/mysql_force_import_sqlfile.py:105
#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:209
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:143
msgid "库表备份"
msgstr "Database table backup"

#: backend/ticket/builders/mysql/mysql_force_import_sqlfile.py:115
msgid "强制变更SQL执行"
msgstr "Force changes to SQL execution"

#: backend/ticket/builders/mysql/mysql_force_import_sqlfile.py:124
#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:228
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:162
#: backend/ticket/builders/tendbcluster/tendb_import_sqlfile.py:76
msgid "库表备份(可选)"
msgstr "Database table backup (optional)"

#: backend/ticket/builders/mysql/mysql_force_import_sqlfile.py:124
#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:219
#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:228
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:153
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:162
#: backend/ticket/builders/tendbcluster/tendb_import_sqlfile.py:76
#: backend/ticket/constants.py:260
msgid "变更SQL执行"
msgstr "Change SQL execution"

#: backend/ticket/builders/mysql/mysql_ha_apply.py:41
msgid "Proxy起始端口"
msgstr "Proxy start port"

#: backend/ticket/builders/mysql/mysql_ha_apply.py:61
msgid ""
"机器输入数量有误，期待输入{}台proxy和backend机器，但实际输入{}台proxy机器和{}"
"台backend机器"
msgstr ""
"The number of machines entered is wrong. Expected to input {} proxy and "
"backend machines, but actually entered {} proxy machines and {} backend "
"machines"

#: backend/ticket/builders/mysql/mysql_ha_apply.py:130
msgid "MySQL高可用部署执行"
msgstr "MySQL high availability deployment execution"

#: backend/ticket/builders/mysql/mysql_ha_apply.py:149
#: backend/ticket/builders/mysql/mysql_single_apply.py:223
#: backend/ticket/builders/sqlserver/sqlserver_restore_slave.py:131
#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:220
msgid "获取数据库字符集或版本失败，请检查获取参数, db_config: {}"
msgstr ""
"Failed to get the database character set or version, please check the "
"parameters, db_config: {}"

#: backend/ticket/builders/mysql/mysql_ha_backup.py:35
#: backend/ticket/builders/sqlserver/sqlserver_backup.py:37
msgid "备份信息列表"
msgstr "Backup Information List"

#: backend/ticket/builders/mysql/mysql_ha_backup.py:57
msgid "库表备份执行"
msgstr "Database table backup execution"

#: backend/ticket/builders/mysql/mysql_ha_clear.py:34
#: backend/ticket/builders/sqlserver/sqlserver_clear.py:33
msgid "清档类型"
msgstr "Clearance type"

#: backend/ticket/builders/mysql/mysql_ha_clear.py:37
#: backend/ticket/builders/sqlserver/sqlserver_clear.py:36
msgid "清档信息列表"
msgstr "List of clearance information"

#: backend/ticket/builders/mysql/mysql_ha_clear.py:62
msgid "清档执行"
msgstr "Clear file execution"

#: backend/ticket/builders/mysql/mysql_ha_destroy.py:51
msgid "MySQL高可用销毁执行"
msgstr "MySQL high availability destruction execution"

#: backend/ticket/builders/mysql/mysql_ha_destroy.py:85
msgid "dumper 下架"
msgstr "dumper removed from shelves"

#: backend/ticket/builders/mysql/mysql_ha_disable.py:38
msgid "MySQL高可用禁用执行"
msgstr "MySQL high availability disable execution"

#: backend/ticket/builders/mysql/mysql_ha_enable.py:38
msgid "MySQL高可用启用执行"
msgstr "MySQL HA Enabled Execution"

#: backend/ticket/builders/mysql/mysql_ha_full_backup.py:30
#: backend/ticket/builders/tendbcluster/tendb_backup.py:26
msgid "备份位置"
msgstr "Backup location"

#: backend/ticket/builders/mysql/mysql_ha_full_backup.py:35
msgid "备份类型"
msgstr "backup type"

#: backend/ticket/builders/mysql/mysql_ha_full_backup.py:36
msgid "备份文件tag"
msgstr "backup file tag"

#: backend/ticket/builders/mysql/mysql_ha_full_backup.py:37
#: backend/ticket/builders/redis/redis_instance_apply.py:45
msgid "集群信息"
msgstr "Cluster information"

#: backend/ticket/builders/mysql/mysql_ha_full_backup.py:67
msgid "全库备份执行"
msgstr "Full database backup execution"

#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:31
#: backend/ticket/builders/spider/metadata_import.py:31
#: backend/ticket/builders/tendbsingle/metadata_import.py:30
msgid "元数据json内容"
msgstr "Metadata json content"

#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:61
#: backend/ticket/builders/spider/metadata_import.py:56
#: backend/ticket/builders/tendbsingle/metadata_import.py:52
msgid "bk_biz_id: {} 不存在"
msgstr "bk_biz_id: {} does not exist"

#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:67
#: backend/ticket/builders/spider/metadata_import.py:62
#: backend/ticket/builders/tendbsingle/metadata_import.py:58
msgid "db_module_id: {} 不存在"
msgstr "db_module_id: {} does not exist"

#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:89
msgid "proxy_spec_id: {} 不存在"
msgstr "proxy_spec_id: {} does not exist"

#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:96
#: backend/ticket/builders/tendbsingle/metadata_import.py:78
msgid "storage_spec_id: {} 不存在"
msgstr "storage_spec_id: {} does not exist"

#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:121
#: backend/ticket/builders/tendbsingle/metadata_import.py:190
msgid "{} 超出 scr mysql segment 范围"
msgstr "{} exceeds scr mysql segment range"

#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:127
#: backend/ticket/builders/spider/metadata_import.py:112
msgid "隔离级别 {} 不支持"
msgstr "Isolation level {} not supported"

#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:145
#: backend/ticket/builders/spider/metadata_import.py:129
#: backend/ticket/builders/tendbsingle/metadata_import.py:107
msgid "{} version: {} or charset: {} not match to db module: {}: {}, {}"
msgstr "{} version: {} or charset: {} not match to db module: {}: {}, {}"

#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:161
#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:172
#: backend/ticket/builders/spider/metadata_import.py:153
#: backend/ticket/builders/spider/metadata_import.py:168
#: backend/ticket/builders/tendbsingle/metadata_import.py:121
msgid "{} not found in machine part"
msgstr "{} not found in machine part"

#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:188
#: backend/ticket/builders/spider/metadata_import.py:184
#: backend/ticket/builders/tendbsingle/metadata_import.py:137
msgid "{} cpu={} not match to {}"
msgstr "{} cpu={} not match to {}"

#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:198
#: backend/ticket/builders/spider/metadata_import.py:194
#: backend/ticket/builders/tendbsingle/metadata_import.py:147
msgid "{} mem={}GB not match to {}GB"
msgstr "{} mem={}GB not match to {}GB"

#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:213
#: backend/ticket/builders/spider/metadata_import.py:209
#: backend/ticket/builders/tendbsingle/metadata_import.py:162
msgid "{} {} size={}GB not match to {}"
msgstr "{} {} size={}GB not match to {}"

#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:222
#: backend/ticket/builders/spider/metadata_import.py:218
#: backend/ticket/builders/tendbsingle/metadata_import.py:171
msgid "{} {} type={} not match to {}"
msgstr "{} {} type={} not match to {}"

#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:229
#: backend/ticket/builders/spider/metadata_import.py:225
#: backend/ticket/builders/tendbsingle/metadata_import.py:178
msgid "{} mount point {} not found"
msgstr "{} mount point {} not found"

#: backend/ticket/builders/mysql/mysql_ha_metadata_import.py:243
msgid "MySQL高可用元数据导入"
msgstr "MySQL high availability metadata import"

#: backend/ticket/builders/mysql/mysql_ha_rename.py:32
#: backend/ticket/builders/sqlserver/sqlserver_dbrename.py:29
msgid "源数据库名"
msgstr "source database name"

#: backend/ticket/builders/mysql/mysql_ha_rename.py:33
#: backend/ticket/builders/sqlserver/sqlserver_dbrename.py:30
msgid "目标数据库名"
msgstr "target database name"

#: backend/ticket/builders/mysql/mysql_ha_rename.py:35
#: backend/ticket/builders/sqlserver/sqlserver_dbrename.py:32
msgid "重命名数据库列表"
msgstr "Rename database list"

#: backend/ticket/builders/mysql/mysql_ha_rename.py:67
msgid "DB重命名执行"
msgstr "DB rename execution"

#: backend/ticket/builders/mysql/mysql_ha_standardize.py:29
#: backend/ticket/builders/spider/mysql_spider_standardize.py:29
#: backend/ticket/builders/tendbsingle/standardize.py:27
msgid "标准化信息"
msgstr "standardized information"

#: backend/ticket/builders/mysql/mysql_ha_standardize.py:41
#: backend/ticket/builders/spider/mysql_spider_standardize.py:41
#: backend/ticket/builders/tendbcluster/append_deploy_ctl.py:46
#: backend/ticket/builders/tendbsingle/standardize.py:40
msgid "{} 不是 {} 集群"
msgstr "{} is not a {} cluster"

#: backend/ticket/builders/mysql/mysql_ha_standardize.py:51
#: backend/ticket/builders/spider/mysql_spider_standardize.py:49
msgid "{} proxy 数量异常"
msgstr "{} The number of proxies is abnormal"

#: backend/ticket/builders/mysql/mysql_ha_standardize.py:56
msgid "{} 存储 master 数量异常"
msgstr "{} The number of storage masters is abnormal"

#: backend/ticket/builders/mysql/mysql_ha_standardize.py:61
msgid "{} 存储 slave 数量异常"
msgstr "{} The number of storage slaves is abnormal."

#: backend/ticket/builders/mysql/mysql_ha_standardize.py:74
msgid "MySQL高可用标准化"
msgstr "MySQL high availability standardization"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:41
msgid "语义执行的流程ID"
msgstr "Process ID for semantic execution"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:49
msgid "无法获取语义执行id:{}的上下文数据，请检查语义执行任务是否成功完成"
msgstr ""
"Failed to get the context data of semantic execution id: {}, please check "
"whether the semantic execution task is successfully completed"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:64
msgid "模拟执行链接"
msgstr "Simulation Execution Link"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:70
msgid "模拟执行结果"
msgstr "Simulation execution results"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:78
msgid "无"
msgstr "none"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:81
msgid "SQL高危语句"
msgstr "SQL high-risk statements"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:140
msgid "模拟执行的pipeline数据还未准备好，请检查celery状态并稍后重试单据。"
msgstr ""
"The pipeline data for simulated execution is not ready yet, please check the "
"celery status and try again later."

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:175
msgid "SQL语法检查查询"
msgstr "SQL syntax check query"

#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:182
#: backend/ticket/builders/mysql/mysql_import_sqlfile.py:228
#: backend/ticket/builders/tendbcluster/tendb_import_sqlfile.py:76
msgid "SQL模拟执行状态查询"
msgstr "SQL simulation execution status query"

#: backend/ticket/builders/mysql/mysql_local_upgrade.py:25
#: backend/ticket/builders/mysql/mysql_migrate_upgrade.py:37
#: backend/ticket/builders/mysql/mysql_proxy_upgrade.py:25
msgid "目标版本包ID"
msgstr "Target version package ID"

#: backend/ticket/builders/mysql/mysql_local_upgrade.py:27
#: backend/ticket/builders/mysql/mysql_master_slave_switch.py:39
#: backend/ticket/builders/mysql/mysql_proxy_upgrade.py:27
#: backend/ticket/builders/sqlserver/sqlserver_master_slave_switch.py:28
#: backend/ticket/builders/tendbcluster/tendb_master_slave_switch.py:31
msgid "单据信息"
msgstr "Ticket information"

#: backend/ticket/builders/mysql/mysql_master_fail_over.py:38
msgid "主库故障切换执行"
msgstr "Primary database failover execution"

#: backend/ticket/builders/mysql/mysql_master_slave_switch.py:35
#: backend/ticket/builders/sqlserver/sqlserver_master_slave_switch.py:24
msgid "主库 IP"
msgstr "Master IP"

#: backend/ticket/builders/mysql/mysql_master_slave_switch.py:36
#: backend/ticket/builders/sqlserver/sqlserver_master_slave_switch.py:25
msgid "从库 IP"
msgstr "Slave IP"

#: backend/ticket/builders/mysql/mysql_master_slave_switch.py:40
#: backend/ticket/builders/tendbcluster/tendb_master_slave_switch.py:33
msgid "是否检测连接"
msgstr "Whether to detect the connection"

#: backend/ticket/builders/mysql/mysql_master_slave_switch.py:42
#: backend/ticket/builders/tendbcluster/tendb_master_slave_switch.py:35
msgid "是否检测数据同步延时情况(互切单据延时属于强制检测，故必须传True)"
msgstr "Whether to detect data synchronization delay (the delay of mutual switching documents is mandatory detection, so it must be passed True)"

#: backend/ticket/builders/mysql/mysql_master_slave_switch.py:44
#: backend/ticket/builders/tendbcluster/tendb_master_slave_switch.py:37
msgid "是否检测历史数据检验结果"
msgstr "Whether to detect historical data inspection results"

#: backend/ticket/builders/mysql/mysql_master_slave_switch.py:104
msgid "主从互换执行"
msgstr "Master-slave swap execution"

#: backend/ticket/builders/mysql/mysql_master_slave_switch.py:138
msgid "dumper 迁移"
msgstr "dumper migration"

#: backend/ticket/builders/mysql/mysql_migrate_cluster.py:27
#: backend/ticket/builders/mysql/mysql_migrate_upgrade.py:39
#: backend/ticket/builders/tendbcluster/tendb_migrate_cluster.py:26
msgid "新主库主机"
msgstr "New master database host"

#: backend/ticket/builders/mysql/mysql_migrate_cluster.py:28
#: backend/ticket/builders/mysql/mysql_migrate_upgrade.py:40
#: backend/ticket/builders/tendbcluster/tendb_migrate_cluster.py:27
msgid "新从库主机"
msgstr "new slave master"

#: backend/ticket/builders/mysql/mysql_migrate_cluster.py:35
msgid "迁移主从信息"
msgstr "Migrate master-slave information"

#: backend/ticket/builders/mysql/mysql_migrate_cluster.py:39
#: backend/ticket/builders/sqlserver/sqlserver_clear.py:35
#: backend/ticket/builders/tendbcluster/tendb_migrate_cluster.py:40
msgid "安全模式"
msgstr "safe mode"

#: backend/ticket/builders/mysql/mysql_migrate_cluster.py:90
msgid "迁移主从执行"
msgstr "Migrate master-slave execution"

#: backend/ticket/builders/mysql/mysql_migrate_upgrade.py:38
msgid "数据库模块ID"
msgstr "Database module ID"

#: backend/ticket/builders/mysql/mysql_migrate_upgrade.py:46
#: backend/ticket/builders/mysql/mysql_proxy_add.py:34
msgid "添加信息"
msgstr "add information"

#: backend/ticket/builders/mysql/mysql_migrate_upgrade.py:60
msgid "集群{}无法找到最近一次备份，或最近一次备份不为logical"
msgstr "Cluster{} cannot find the most recent backup, or the most recent backup is not logical"

#: backend/ticket/builders/mysql/mysql_openarea.py:26
msgid "源DB"
msgstr "SourceDB"

#: backend/ticket/builders/mysql/mysql_openarea.py:27
msgid "目标DB"
msgstr "Target DB"

#: backend/ticket/builders/mysql/mysql_openarea.py:28
msgid "表结构列表"
msgstr "table structure list"

#: backend/ticket/builders/mysql/mysql_openarea.py:29
msgid "表数据列表"
msgstr "table data list"

#: backend/ticket/builders/mysql/mysql_openarea.py:32
msgid "分区执行信息"
msgstr "Partition execution information"

#: backend/ticket/builders/mysql/mysql_openarea.py:36
msgid "db名"
msgstr "db name"

#: backend/ticket/builders/mysql/mysql_openarea.py:41
msgid "用户"
msgstr "user"

#: backend/ticket/builders/mysql/mysql_openarea.py:42
#: backend/ticket/serializers.py:337
msgid "IP列表"
msgstr "IP list"

#: backend/ticket/builders/mysql/mysql_openarea.py:44
msgid "授权DB列表"
msgstr "Authorized DB list"

#: backend/ticket/builders/mysql/mysql_openarea.py:46
msgid "准入DB列表"
msgstr "Admission DB list"

#: backend/ticket/builders/mysql/mysql_openarea.py:49
msgid "模板ID"
msgstr "Template ID"

#: backend/ticket/builders/mysql/mysql_openarea.py:51
#: backend/ticket/builders/mysql/mysql_partition.py:52
#: backend/ticket/builders/mysql/mysql_partition_cron.py:28
#: backend/ticket/builders/tendbcluster/tendb_partition_cron.py:29
msgid "分区信息"
msgstr "partition information"

#: backend/ticket/builders/mysql/mysql_partition.py:23
msgid "初始化分区语句"
msgstr "initialize partition statement"

#: backend/ticket/builders/mysql/mysql_partition.py:24
msgid "所需空间Byte"
msgstr "Required space Byte"

#: backend/ticket/builders/mysql/mysql_partition.py:25
msgid "表是否包含唯一键或者主键"
msgstr "Whether the table contains a unique key or a primary key"

#: backend/ticket/builders/mysql/mysql_partition.py:29
msgid "配置ID"
msgstr "Configuration ID"

#: backend/ticket/builders/mysql/mysql_partition.py:30
msgid "库名匹配规则"
msgstr "database Name Matching Rules"

#: backend/ticket/builders/mysql/mysql_partition.py:31
msgid "表明匹配规则"
msgstr "show matching rules"

#: backend/ticket/builders/mysql/mysql_partition.py:32
msgid "初始化分区表"
msgstr "Initialize the partition table"

#: backend/ticket/builders/mysql/mysql_partition.py:33
msgid "添加分区"
msgstr "add partition"

#: backend/ticket/builders/mysql/mysql_partition.py:34
msgid "删除分区"
msgstr "delete partition"

#: backend/ticket/builders/mysql/mysql_partition.py:40
msgid "分片名"
msgstr "slice name"

#: backend/ticket/builders/mysql/mysql_partition.py:41
msgid "执行对象列表"
msgstr "Execution object list"

#: backend/ticket/builders/mysql/mysql_partition.py:46
msgid "配置ID列表"
msgstr "Configuration ID list"

#: backend/ticket/builders/mysql/mysql_partition.py:67
#: backend/ticket/builders/tendbcluster/tendb_partition.py:36
msgid "分区管理执行"
msgstr "Partition Management Execution"

#: backend/ticket/builders/mysql/mysql_partition_cron.py:24
#: backend/ticket/builders/tendbcluster/tendb_partition_cron.py:25
msgid "服务器IP"
msgstr "Server IP"

#: backend/ticket/builders/mysql/mysql_partition_cron.py:26
#: backend/ticket/builders/tendbcluster/tendb_partition_cron.py:27
msgid "分区文件名"
msgstr "Partition file name"

#: backend/ticket/builders/mysql/mysql_partition_cron.py:30
#: backend/ticket/builders/tendbcluster/tendb_partition_cron.py:31
msgid "定时任务执行日期"
msgstr "Scheduled task execution date"

#: backend/ticket/builders/mysql/mysql_partition_cron.py:45
#: backend/ticket/builders/tendbcluster/tendb_partition_cron.py:46
msgid "分区管理定时任务执行"
msgstr "Partition management scheduled task execution"

#: backend/ticket/builders/mysql/mysql_proxy_add.py:27
msgid "Proxy IP + 云区域"
msgstr "Proxy IP + cloud region"

#: backend/ticket/builders/mysql/mysql_proxy_add.py:78
msgid "添加PROXY执行"
msgstr "Add PROXY execution"

#: backend/ticket/builders/mysql/mysql_proxy_switch.py:35
msgid "旧Proxy实例信息"
msgstr "Old Proxy instance information"

#: backend/ticket/builders/mysql/mysql_proxy_switch.py:36
msgid "新Proxy机器信息"
msgstr "New Proxy machine information"

#: backend/ticket/builders/mysql/mysql_proxy_switch.py:42
msgid "是否强制替换"
msgstr "Whether to force replacement"

#: backend/ticket/builders/mysql/mysql_proxy_switch.py:43
msgid "替换信息"
msgstr "replacement information"

#: backend/ticket/builders/mysql/mysql_proxy_switch.py:96
msgid "替换PROXY执行"
msgstr "Replace PROXY execution"

#: backend/ticket/builders/mysql/mysql_push_peripheral_config.py:25
msgid "单据输入"
msgstr "Document entry"

#: backend/ticket/builders/mysql/mysql_restore_local_slave.py:26
#: backend/ticket/builders/sqlserver/sqlserver_restore_local_slave.py:25
#: backend/ticket/builders/tendbcluster/tendb_restore_local_slave.py:30
msgid "从库实例信息"
msgstr "Information of the slave instance"

#: backend/ticket/builders/mysql/mysql_restore_local_slave.py:29
#: backend/ticket/builders/sqlserver/sqlserver_add_slave.py:34
#: backend/ticket/builders/sqlserver/sqlserver_restore_local_slave.py:28
#: backend/ticket/builders/sqlserver/sqlserver_restore_slave.py:39
#: backend/ticket/builders/tendbcluster/tendb_restore_local_slave.py:33
msgid "重建从库列表"
msgstr "Rebuild slave list"

#: backend/ticket/builders/mysql/mysql_restore_local_slave.py:72
msgid "Slave原地重建执行"
msgstr "Slave in-place reconstruction execution"

#: backend/ticket/builders/mysql/mysql_restore_slave.py:26
#: backend/ticket/builders/tendbcluster/tendb_restore_slave.py:28
msgid "旧从库 IP"
msgstr "Old slave IP"

#: backend/ticket/builders/mysql/mysql_restore_slave.py:27
#: backend/ticket/builders/tendbcluster/tendb_restore_slave.py:29
msgid "新从库 IP"
msgstr "New slave IP"

#: backend/ticket/builders/mysql/mysql_restore_slave.py:31
#: backend/ticket/builders/tendbcluster/tendb_restore_slave.py:37
msgid "集群重建信息"
msgstr "Cluster rebuild information"

#: backend/ticket/builders/mysql/mysql_restore_slave.py:76
msgid "Slave重建执行"
msgstr "Slave reconstruction execution"

#: backend/ticket/builders/mysql/mysql_single_apply.py:42
#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:43
msgid "域名关键字"
msgstr "domain name keywords"

#: backend/ticket/builders/mysql/mysql_single_apply.py:50
#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:49
msgid "机器规格"
msgstr "Machine Specifications"

#: backend/ticket/builders/mysql/mysql_single_apply.py:52
#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:51
msgid "申请数量"
msgstr "Number of applications"

#: backend/ticket/builders/mysql/mysql_single_apply.py:54
#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:53
msgid "每台机器部署的实例数量"
msgstr "Number of instances deployed per machine"

#: backend/ticket/builders/mysql/mysql_single_apply.py:60
#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:59
#: backend/ticket/builders/tendbcluster/tendb_apply.py:43
msgid "部署规格"
msgstr "deployment specification"

#: backend/ticket/builders/mysql/mysql_single_apply.py:68
#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:67
msgid "机器规格展示名"
msgstr "Machine specification display name"

#: backend/ticket/builders/mysql/mysql_single_apply.py:71
msgid "MySQL起始端口"
msgstr "MySQL starting port"

#: backend/ticket/builders/mysql/mysql_single_apply.py:95
#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:89
#, python-brace-format
msgid "不允许存在重复的域名关键字[{duplicates}]"
msgstr "Duplicate domain name keywords are not allowed [{duplicates}]"

#: backend/ticket/builders/mysql/mysql_single_apply.py:204
msgid "MySQL单节点部署执行"
msgstr "MySQL standalone deployment execution"

#: backend/ticket/builders/mysql/mysql_single_clear.py:46
msgid "MySQL 单节点清档执行"
msgstr "MySQL single node clearing execution"

#: backend/ticket/builders/mysql/mysql_single_destroy.py:36
msgid "MySQL单节点销毁执行"
msgstr "MySQL standalone destruction execution"

#: backend/ticket/builders/mysql/mysql_single_disable.py:36
msgid "MySQL单节点禁用执行"
msgstr "MySQL standalone disable execution"

#: backend/ticket/builders/mysql/mysql_single_enable.py:36
msgid "MySQL单节点启用执行"
msgstr "MySQL standalone enable execution"

#: backend/ticket/builders/mysql/mysql_single_rename.py:40
msgid "MySQL 单节点DB重命名执行"
msgstr "MySQL single node DB rename execution"

#: backend/ticket/builders/pulsar/pulsar_apply.py:32
msgid "至少写入成功副本数"
msgstr "At least the number of successfully written replicas"

#: backend/ticket/builders/pulsar/pulsar_apply.py:57
msgid "bookkeeper节点数小于2台! 请保证bookkeeper的部署节点数至少为2"
msgstr ""
"The number of bookkeeper nodes is less than 2! Please ensure that the number "
"of bookkeeper deployment nodes is at least 2"

#: backend/ticket/builders/pulsar/pulsar_apply.py:62
msgid "zookeeper节点数不为3台! 请保证zookeeper的部署节点数等于为3"
msgstr ""
"The number of zookeeper nodes is not 3! Please ensure that the number of "
"zookeeper deployment nodes is equal to 3"

#: backend/ticket/builders/pulsar/pulsar_apply.py:67
msgid "broker节点数小于1台! 请保证broker的部署节点数至少为1"
msgstr ""
"The number of broker nodes is less than 1! Please ensure that the number of "
"broker deployment nodes is at least 1"

#: backend/ticket/builders/pulsar/pulsar_apply.py:71
msgid "请保证副本数量至少为2，且不超过bookkeeper数量"
msgstr ""
"Please ensure that the number of copies is at least 2 and does not exceed "
"the number of bookkeepers"

#: backend/ticket/builders/pulsar/pulsar_apply.py:74
msgid "最小成功写入副本数量不得大于副本数量"
msgstr ""
"The minimum number of successfully written replicas must not be greater than "
"the number of replicas"

#: backend/ticket/builders/pulsar/pulsar_apply.py:101
#: backend/ticket/constants.py:359
msgid "Pulsar 集群部署"
msgstr "Pulsar cluster deployment"

#: backend/ticket/builders/pulsar/pulsar_destroy.py:37
#: backend/ticket/constants.py:366
msgid "Pulsar 集群删除"
msgstr "Pulsar cluster deletion"

#: backend/ticket/builders/pulsar/pulsar_disable.py:40
#: backend/ticket/constants.py:365
msgid "Pulsar 集群禁用"
msgstr "Pulsar cluster disabled"

#: backend/ticket/builders/pulsar/pulsar_enable.py:40
#: backend/ticket/constants.py:364
msgid "Pulsar 集群启用"
msgstr "Pulsar cluster enabled"

#: backend/ticket/builders/pulsar/pulsar_reboot.py:39
msgid "Pulsar 集群重启"
msgstr "Pulsar cluster restart"

#: backend/ticket/builders/pulsar/pulsar_replace.py:46
#: backend/ticket/constants.py:363
msgid "Pulsar 集群替换"
msgstr "Pulsar cluster replacement"

#: backend/ticket/builders/pulsar/pulsar_scale_up.py:46
#: backend/ticket/constants.py:360
msgid "Pulsar 集群扩容"
msgstr "Pulsar cluster expansion"

#: backend/ticket/builders/pulsar/pulsar_shrink.py:35
msgid "bookkeeper信息列表"
msgstr "bookkeeper information list"

#: backend/ticket/builders/pulsar/pulsar_shrink.py:61
msgid "{}: 至少保留{}台!"
msgstr "{}: Keep at least {} units!"

#: backend/ticket/builders/pulsar/pulsar_shrink.py:64
msgid "请选择Broker和BookKeeper实例进行缩容"
msgstr "Please select Broker and BookKeeper instances for shrinking"

#: backend/ticket/builders/pulsar/pulsar_shrink.py:69
msgid "缩容不支持ZooKeeper"
msgstr "Scaling does not support ZooKeeper"

#: backend/ticket/builders/pulsar/pulsar_shrink.py:85
#: backend/ticket/constants.py:361
msgid "Pulsar 集群缩容"
msgstr "Pulsar cluster shrink"

#: backend/ticket/builders/redis/base.py:48
msgid "集群【{}({})】锁定中，请等待"
msgstr "Cluster [{}({})] is locked, please wait"

#: backend/ticket/builders/redis/base.py:50
msgid "集群【{}】不存在"
msgstr "Cluster {{}] does not exist"

#: backend/ticket/builders/redis/base.py:57
msgid "提取/删除/备份规则列表"
msgstr "Extract/delete/backup rule list"

#: backend/ticket/builders/redis/base.py:145
msgid "集群{}已被禁用，请先启用!"
msgstr "Cluster {} has been disabled, please enable it first!"

#: backend/ticket/builders/redis/base.py:147
msgid "集群{}不存在."
msgstr "Cluster{} does not exist."

#: backend/ticket/builders/redis/plugin_create_clb.py:42
msgid "创建CLB"
msgstr "Create CLB"

#: backend/ticket/builders/redis/plugin_create_polaris.py:42
msgid "创建Polaris"
msgstr "CreatePolaris"

#: backend/ticket/builders/redis/plugin_delete_clb.py:42
msgid "删除CLB"
msgstr "Delete CLB"

#: backend/ticket/builders/redis/plugin_delete_polaris.py:42
msgid "删除Polaris"
msgstr "Remove Polaris"

#: backend/ticket/builders/redis/plugin_dns_bind_clb.py:42
msgid "域名绑定CLB"
msgstr "Domain name binding CLB"

#: backend/ticket/builders/redis/plugin_dns_unbind_clb.py:42
msgid "域名接绑CLB"
msgstr "Domain name binding to CLB"

#: backend/ticket/builders/redis/redis_backup.py:67
msgid "集群备份"
msgstr "cluster backup"

#: backend/ticket/builders/redis/redis_close.py:51
#: backend/ticket/builders/redis/redis_close.py:69
msgid "禁用集群"
msgstr "disable cluster"

#: backend/ticket/builders/redis/redis_close.py:56
#: backend/ticket/builders/redis/redis_open.py:53
msgid "是否强制"
msgstr "Is it mandatory?"

#: backend/ticket/builders/redis/redis_cluster_apply.py:28
#: backend/ticket/builders/redis/redis_instance_apply.py:41
msgid "集群端口"
msgstr "cluster port"

#: backend/ticket/builders/redis/redis_cluster_apply.py:39
msgid "申请容量"
msgstr "Application capacity"

#: backend/ticket/builders/redis/redis_cluster_apply.py:40
msgid "申请容量详情"
msgstr "Application Capacity Details"

#: backend/ticket/builders/redis/redis_cluster_apply.py:42
#: backend/ticket/builders/redis/redis_instance_apply.py:30
msgid "集群ID（英文数字及下划线）"
msgstr "Cluster ID (English numbers and underscores)"

#: backend/ticket/builders/redis/redis_cluster_apply.py:44
msgid "proxy访问密码"
msgstr "proxy access password"

#: backend/ticket/builders/redis/redis_cluster_apply.py:48
#: backend/ticket/builders/redis/redis_instance_apply.py:47
msgid "proxy部署方案"
msgstr "Proxy deployment scheme"

#: backend/ticket/builders/redis/redis_cluster_apply.py:72
msgid "redis集群部署的集群分片数至少大于3"
msgstr "The number of cluster shards deployed in the redis cluster is at least greater than 3"

#: backend/ticket/builders/redis/redis_cluster_apply.py:105
msgid "master、slave、proxy中存在重复节点"
msgstr "There are duplicate nodes in master, slave and proxy"

#: backend/ticket/builders/redis/redis_cluster_apply.py:109
msgid "至少提供1台master节点和1台slave节点，且master与slave节点数要保持一致"
msgstr ""
"Provide at least 1 master node and 1 slave node, and the number of master "
"and slave nodes should be consistent"

#: backend/ticket/builders/redis/redis_cluster_apply.py:111
msgid "proxy至少提供2台机器"
msgstr "The proxy provides at least 2 machines"

#: backend/ticket/builders/redis/redis_cluster_apply.py:282
#: backend/ticket/constants.py:289
msgid "Redis 集群部署"
msgstr "Redis cluster deployment"

#: backend/ticket/builders/redis/redis_cluster_rename_domain.py:31
msgid "集群新域名"
msgstr "Cluster new domain name"

#: backend/ticket/builders/redis/redis_cluster_rename_domain.py:32
msgid "集群额外信息"
msgstr "Cluster extra information"

#: backend/ticket/builders/redis/redis_cluster_rename_domain.py:38
#: backend/ticket/builders/redis/redis_toolbox_add_slave.py:47
#: backend/ticket/builders/redis/redis_toolbox_autofix.py:45
#: backend/ticket/builders/redis/redis_toolbox_cut_off.py:42
#: backend/ticket/builders/redis/redis_toolbox_datastruct_task_delete.py:54
#: backend/ticket/builders/redis/redis_toolbox_fixpoint_make.py:76
#: backend/ticket/builders/redis/redis_toolbox_instance_shutdown.py:38
#: backend/ticket/builders/redis/redis_toolbox_master_slave_switch.py:62
#: backend/ticket/builders/redis/redis_toolbox_proxy_scale_down.py:36
#: backend/ticket/builders/redis/redis_toolbox_proxy_scale_up.py:37
#: backend/ticket/builders/redis/redis_toolbox_redis_scale_updown.py:58
#: backend/ticket/builders/redis/redis_toolbox_rollback_data_copy.py:42
#: backend/ticket/builders/redis/redis_toolbox_shard_update.py:83
#: backend/ticket/builders/redis/redis_toolbox_type_update.py:86
msgid "批量操作参数列表"
msgstr "Batch operation parameter list"

#: backend/ticket/builders/redis/redis_cluster_rename_domain.py:52
msgid "集群域名重命名"
msgstr "Cluster domain name renaming"

#: backend/ticket/builders/redis/redis_cluster_version_update.py:24
msgid "节点类型"
msgstr "Node type"

#: backend/ticket/builders/redis/redis_cluster_version_update.py:25
msgid "当前版本列表"
msgstr "Current version list"

#: backend/ticket/builders/redis/redis_cluster_version_update.py:26
msgid "目标版本"
msgstr "target version"

#: backend/ticket/builders/redis/redis_cluster_version_update.py:28
msgid "版本升级信息"
msgstr "Version upgrade information"

#: backend/ticket/builders/redis/redis_cluster_version_update.py:45
msgid "redis 集群版本升级"
msgstr "redis cluster version upgrade"

#: backend/ticket/builders/redis/redis_destroy.py:49
#: backend/ticket/builders/redis/redis_destroy.py:65
msgid "下架集群"
msgstr "Take off the cluster"

#: backend/ticket/builders/redis/redis_instance_apply.py:31
msgid "db数量"
msgstr "db quantity"

#: backend/ticket/builders/redis/redis_instance_apply.py:32
msgid "追加部署的主机信息"
msgstr "Add deployed host information"

#: backend/ticket/builders/redis/redis_instance_apply.py:42
msgid "访问密码"
msgstr "access password"

#: backend/ticket/builders/redis/redis_instance_apply.py:49
msgid "是否是追加部署"
msgstr "Is it an additional deployment?"

#: backend/ticket/builders/redis/redis_instance_apply.py:68
msgid "请保证机器组数{}能整除集群数{}"
msgstr "Please ensure that the number of machine groups {} can be evenly divided by the number of clusters {}"

#: backend/ticket/builders/redis/redis_instance_apply.py:167
msgid "Redis 主从部署"
msgstr "Redis master-slave deployment"

#: backend/ticket/builders/redis/redis_key_delete.py:30
msgid "删除方式"
msgstr "delete method"

#: backend/ticket/builders/redis/redis_key_delete.py:90
msgid "删除Key"
msgstr "delete key"

#: backend/ticket/builders/redis/redis_key_extract.py:67
msgid "提取Key"
msgstr "extract key"

#: backend/ticket/builders/redis/redis_maxmemory_set.py:80
msgid "集群maxmemory设置"
msgstr "Cluster maxmemory settings"

#: backend/ticket/builders/redis/redis_open.py:48
#: backend/ticket/builders/redis/redis_open.py:66
msgid "启用集群"
msgstr "enable cluster"

#: backend/ticket/builders/redis/redis_toolbox_add_slave.py:31
#: backend/ticket/builders/redis/redis_toolbox_master_slave_switch.py:33
msgid "主从切换对"
msgstr "master-slave switching pair"

#: backend/ticket/builders/redis/redis_toolbox_add_slave.py:43
msgid "集群{}不存在异常的从库主机"
msgstr "There is no abnormal slave host in cluster {}"

#: backend/ticket/builders/redis/redis_toolbox_add_slave.py:74
msgid "Redis 新建从库"
msgstr "Redis new slave library"

#: backend/ticket/builders/redis/redis_toolbox_autofix.py:40
#: backend/ticket/builders/redis/redis_toolbox_cut_off.py:38
#: backend/ticket/builders/redis/redis_toolbox_instance_shutdown.py:35
msgid "slave列表"
msgstr "slave list"

#: backend/ticket/builders/redis/redis_toolbox_autofix.py:93
msgid "故障自愈"
msgstr "Fault self-healing"

#: backend/ticket/builders/redis/redis_toolbox_cut_off.py:37
msgid "master列表"
msgstr "master list"

#: backend/ticket/builders/redis/redis_toolbox_cut_off.py:39
msgid "资源申请信息(前端不用传递，后台渲染)"
msgstr "Resource application information (no need to pass it to the front end, rendering in the background)"

#: backend/ticket/builders/redis/redis_toolbox_cut_off.py:95
msgid "整机替换"
msgstr "Whole machine replacement"

#: backend/ticket/builders/redis/redis_toolbox_data_check_repair.py:29
msgid "源集群访问入口"
msgstr "Source cluster access entrance"

#: backend/ticket/builders/redis/redis_toolbox_data_check_repair.py:30
msgid "目标集群访问入口"
msgstr "Target cluster access entrance"

#: backend/ticket/builders/redis/redis_toolbox_data_check_repair.py:32
msgid "源实例列表"
msgstr "Source instance list"

#: backend/ticket/builders/redis/redis_toolbox_data_check_repair.py:32
msgid "IP:PORT"
msgstr "IP:PORT"

#: backend/ticket/builders/redis/redis_toolbox_data_check_repair.py:34
#: backend/ticket/builders/redis/redis_toolbox_data_copy.py:38
#: backend/ticket/builders/redis/redis_toolbox_rollback_data_copy.py:29
msgid "包含key"
msgstr "Contains key"

#: backend/ticket/builders/redis/redis_toolbox_data_check_repair.py:35
#: backend/ticket/builders/redis/redis_toolbox_data_copy.py:39
#: backend/ticket/builders/redis/redis_toolbox_rollback_data_copy.py:30
msgid "排除key"
msgstr "exclude key"

#: backend/ticket/builders/redis/redis_toolbox_data_check_repair.py:37
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:48
msgid "执行模式"
msgstr "execution mode"

#: backend/ticket/builders/redis/redis_toolbox_data_check_repair.py:38
msgid "执行模式为定时执行时，需要设置执行时间"
msgstr "When the execution mode is scheduled execution, the execution time needs to be set"

#: backend/ticket/builders/redis/redis_toolbox_data_check_repair.py:40
msgid "是否保持校验"
msgstr "Whether to keep verification"

#: backend/ticket/builders/redis/redis_toolbox_data_check_repair.py:41
msgid "校验终止时间，当不保持校验时，需要设置该时间"
msgstr "Verification termination time. When verification is not maintained, this time needs to be set."

#: backend/ticket/builders/redis/redis_toolbox_data_check_repair.py:43
msgid "是否修复数据"
msgstr "Whether to repair data"

#: backend/ticket/builders/redis/redis_toolbox_data_check_repair.py:44
msgid "数据修复模式"
msgstr "Data Repair Mode"

#: backend/ticket/builders/redis/redis_toolbox_data_check_repair.py:46
msgid "批量校验与修复列表"
msgstr "Batch verification and repair list"

#: backend/ticket/builders/redis/redis_toolbox_data_check_repair.py:53
#: backend/ticket/builders/redis/redis_toolbox_data_copy.py:105
#: backend/ticket/builders/redis/redis_toolbox_rollback_data_copy.py:69
msgid "请补齐缺少正则配置的行"
msgstr "Please complete the missing regular configuration lines"

#: backend/ticket/builders/redis/redis_toolbox_data_check_repair.py:74
#: backend/ticket/constants.py:316
msgid "Redis 数据校验与修复"
msgstr "Redis data verification and repair"

#: backend/ticket/builders/redis/redis_toolbox_data_copy.py:51
#: backend/ticket/builders/redis/redis_toolbox_data_copy.py:57
msgid "集群IP端口"
msgstr "Cluster IP port"

#: backend/ticket/builders/redis/redis_toolbox_data_copy.py:52
#: backend/ticket/builders/redis/redis_toolbox_data_copy.py:58
msgid "集群访问密码"
msgstr "Cluster access password"

#: backend/ticket/builders/redis/redis_toolbox_data_copy.py:80
msgid "批量数据复制列表"
msgstr "Batch data copy list"

#: backend/ticket/builders/redis/redis_toolbox_data_copy.py:99
msgid "仅支持两个不同集群间的复制: {}"
msgstr "Only supports replication between two different clusters: {}"

#: backend/ticket/builders/redis/redis_toolbox_data_copy.py:102
#: backend/ticket/builders/redis/redis_toolbox_rollback_data_copy.py:66
msgid "源集群不能重复: {}"
msgstr "The source cluster cannot be repeated: {}"

#: backend/ticket/builders/redis/redis_toolbox_data_copy.py:109
msgid "源集群{}不存在，请确认."
msgstr "The source cluster {} does not exist, please confirm."

#: backend/ticket/builders/redis/redis_toolbox_data_copy.py:111
#: backend/ticket/builders/redis/redis_toolbox_datastruct_task_delete.py:39
msgid "目标集群{}不存在，请确认."
msgstr "The target cluster {} does not exist, please confirm."

#: backend/ticket/builders/redis/redis_toolbox_data_copy.py:134
msgid "Redis 数据复制"
msgstr "Redis data replication"

#: backend/ticket/builders/redis/redis_toolbox_datastruct_task_delete.py:29
msgid "关联单据ID"
msgstr "Associated document ID"

#: backend/ticket/builders/redis/redis_toolbox_datastruct_task_delete.py:48
msgid "集群{}: 没有找到未销毁的实例."
msgstr "Cluster{}: No undestroyed instance found."

#: backend/ticket/builders/redis/redis_toolbox_datastruct_task_delete.py:65
msgid "Redis 销毁构造实例"
msgstr "Redis destroys the constructed instance"

#: backend/ticket/builders/redis/redis_toolbox_fixpoint_make.py:38
#: backend/ticket/builders/redis/redis_toolbox_rollback_data_copy.py:31
msgid "待构造时间点"
msgstr "Time point to be constructed"

#: backend/ticket/builders/redis/redis_toolbox_fixpoint_make.py:52
msgid "集群{}: 主机数量({})不能大于实例数量({})."
msgstr "Cluster {}: The number of hosts ({}) cannot be greater than the number of instances ({})."

#: backend/ticket/builders/redis/redis_toolbox_fixpoint_make.py:66
msgid "集群{}: 不支持部分实例构造."
msgstr "Cluster{}: Partial instance construction is not supported."

#: backend/ticket/builders/redis/redis_toolbox_fixpoint_make.py:71
msgid "集群{}: 构造时间最多向前追溯15天."
msgstr "Cluster{}: The construction time can be traced back up to 15 days."

#: backend/ticket/builders/redis/redis_toolbox_fixpoint_make.py:106
msgid "Redis 定点构造"
msgstr "Redis fixed-point construction"

#: backend/ticket/builders/redis/redis_toolbox_instance_shutdown.py:52
msgid "实例下架"
msgstr "Instance removed from shelves"

#: backend/ticket/builders/redis/redis_toolbox_master_slave_switch.py:29
msgid "master主机"
msgstr "master host"

#: backend/ticket/builders/redis/redis_toolbox_master_slave_switch.py:30
msgid "slave主机"
msgstr "slave host"

#: backend/ticket/builders/redis/redis_toolbox_master_slave_switch.py:35
#: backend/ticket/builders/redis/redis_toolbox_proxy_scale_down.py:33
#: backend/ticket/builders/redis/redis_toolbox_redis_scale_updown.py:50
#: backend/ticket/builders/redis/redis_toolbox_shard_update.py:55
#: backend/ticket/builders/redis/redis_toolbox_type_update.py:58
msgid "切换类型"
msgstr "Switch type"

#: backend/ticket/builders/redis/redis_toolbox_master_slave_switch.py:52
msgid "集群{}的主从关系不匹配：{} -> {}."
msgstr "The master-slave relationship of cluster {} does not match: {} -&gt; {}."

#: backend/ticket/builders/redis/redis_toolbox_master_slave_switch.py:73
#: backend/ticket/constants.py:305
msgid "Redis 主从切换"
msgstr "Redis master-slave switching"

#: backend/ticket/builders/redis/redis_toolbox_proxy_scale_down.py:28
#: backend/ticket/builders/redis/redis_toolbox_proxy_scale_up.py:33
msgid "目标proxy数量"
msgstr "Target number of proxies"

#: backend/ticket/builders/redis/redis_toolbox_proxy_scale_down.py:30
#: backend/ticket/builders/tendbcluster/tendb_spider_reduce_nodes.py:28
msgid "缩容指定主机"
msgstr "Reduce the capacity of a specified host"

#: backend/ticket/builders/redis/redis_toolbox_proxy_scale_down.py:48
msgid "请保证集群{}缩容后proxy数量不小于2"
msgstr "Please ensure that the number of proxies is not less than 2 after the cluster {} is scaled down."

#: backend/ticket/builders/redis/redis_toolbox_proxy_scale_down.py:64
msgid "Proxy缩容"
msgstr "Proxy reduction"

#: backend/ticket/builders/redis/redis_toolbox_proxy_scale_up.py:65
msgid "Proxy扩容"
msgstr "Proxy expansion"

#: backend/ticket/builders/redis/redis_toolbox_redis_scale_updown.py:45
msgid "部署机器组数"
msgstr "Number of deployed machine groups"

#: backend/ticket/builders/redis/redis_toolbox_redis_scale_updown.py:53
msgid "容量变更类型"
msgstr "Capacity change type"

#: backend/ticket/builders/redis/redis_toolbox_redis_scale_updown.py:80
#: backend/ticket/constants.py:301
msgid "Redis 集群容量变更"
msgstr "Redis cluster capacity change"

#: backend/ticket/builders/redis/redis_toolbox_rollback_data_copy.py:27
msgid "构造产物访问入口（ip:port）"
msgstr "Construct product access entrance (ip:port)"

#: backend/ticket/builders/redis/redis_toolbox_rollback_data_copy.py:60
msgid "构造记录不存在，请确认: {}"
msgstr "Construction record does not exist, please confirm: {}"

#: backend/ticket/builders/redis/redis_toolbox_rollback_data_copy.py:63
msgid "目标集群不能重复: {}"
msgstr "The target cluster cannot be repeated: {}"

#: backend/ticket/builders/redis/redis_toolbox_rollback_data_copy.py:88
#: backend/ticket/constants.py:315
msgid "Redis 构造实例数据回写"
msgstr "Redis constructs instance data writeback"

#: backend/ticket/builders/redis/redis_toolbox_shard_update.py:43
#: backend/ticket/builders/redis/redis_toolbox_type_update.py:44
msgid "申请proxy资源"
msgstr "Apply for proxy resources"

#: backend/ticket/builders/redis/redis_toolbox_shard_update.py:44
#: backend/ticket/builders/redis/redis_toolbox_type_update.py:45
msgid "申请redis主从资源"
msgstr "Apply for redis master-slave resources"

#: backend/ticket/builders/redis/redis_toolbox_shard_update.py:47
#: backend/ticket/builders/redis/redis_toolbox_type_update.py:48
msgid "当前规格ID"
msgstr "Current specification ID"

#: backend/ticket/builders/redis/redis_toolbox_shard_update.py:48
#: backend/ticket/builders/redis/redis_toolbox_type_update.py:49
msgid "当前分片数"
msgstr "Current number of shards"

#: backend/ticket/builders/redis/redis_toolbox_shard_update.py:49
#: backend/ticket/builders/redis/redis_toolbox_type_update.py:50
msgid "目标分片数"
msgstr "Target number of shards"

#: backend/ticket/builders/redis/redis_toolbox_shard_update.py:63
msgid "集群({})：目标分片数({})和原始分片数({})相同."
msgstr "Cluster ({}): The target number of shards ({}) and the original number of shards ({}) are the same."

#: backend/ticket/builders/redis/redis_toolbox_shard_update.py:72
#: backend/ticket/builders/redis/redis_toolbox_type_update.py:75
msgid "集群({})：{} 类集群不支持版本 {}."
msgstr "Cluster({}): {} class cluster does not support version {}."

#: backend/ticket/builders/redis/redis_toolbox_shard_update.py:105
msgid "Redis 集群分片变更"
msgstr "Redis cluster sharding changes"

#: backend/ticket/builders/redis/redis_toolbox_type_update.py:51
msgid "当前集群类型"
msgstr "Current cluster type"

#: backend/ticket/builders/redis/redis_toolbox_type_update.py:66
msgid "集群({})：目标类型({})和原始类型({})相同."
msgstr "Cluster ({}): The target type ({}) and the original type ({}) are the same."

#: backend/ticket/builders/redis/redis_toolbox_type_update.py:108
#: backend/ticket/constants.py:313
msgid "Redis 集群类型变更"
msgstr "Redis cluster type change"

#: backend/ticket/builders/riak/riak_apply.py:77
msgid "Riak 集群部署执行"
msgstr "Riak cluster deployment execution"

#: backend/ticket/builders/riak/riak_destroy.py:43
#: backend/ticket/constants.py:389
msgid "Riak 集群销毁"
msgstr "Riak cluster destroyed"

#: backend/ticket/builders/riak/riak_disable.py:46
#: backend/ticket/constants.py:391
msgid "Riak 集群禁用"
msgstr "Riak cluster disabled"

#: backend/ticket/builders/riak/riak_enable.py:46
#: backend/ticket/constants.py:390
msgid "Riak 集群启用"
msgstr "Riak cluster enabled"

#: backend/ticket/builders/riak/riak_migrate.py:69
msgid "Riak 集群迁移执行"
msgstr "Riak cluster migration execution"

#: backend/ticket/builders/riak/riak_reboot.py:28
msgid "重启主机ID"
msgstr "Reboot host ID"

#: backend/ticket/builders/riak/riak_reboot.py:35
msgid "等待重启的riak节点{}不存在，请重新选择"
msgstr "The riak node {} waiting for restart does not exist, please select again."

#: backend/ticket/builders/riak/riak_reboot.py:52
msgid "Riak 集群重启"
msgstr "Riak cluster restart"

#: backend/ticket/builders/riak/riak_scale_up.py:62
#: backend/ticket/constants.py:387
msgid "Riak 集群扩容"
msgstr "Riak cluster expansion"

#: backend/ticket/builders/riak/riak_shrink.py:45
#: backend/ticket/constants.py:388
msgid "Riak 集群缩容"
msgstr "Riak cluster scaling"

#: backend/ticket/builders/spider/metadata_import.py:34
msgid "spider规格ID"
msgstr "spider specification ID"

#: backend/ticket/builders/spider/metadata_import.py:35
msgid "remote规格ID"
msgstr "remote specification ID"

#: backend/ticket/builders/spider/metadata_import.py:82
msgid "spider_spec_id: {} 不存在"
msgstr "spider_spec_id: {} does not exist"

#: backend/ticket/builders/spider/metadata_import.py:89
msgid "remote_spec_id: {} 不存在"
msgstr "remote_spec_id: {} does not exist"

#: backend/ticket/builders/spider/mysql_spider_standardize.py:73
msgid "TendbCluster 高可用标准化"
msgstr "TendbCluster high availability standardization"

#: backend/ticket/builders/sqlserver/base.py:85
msgid "副本集实例状态异常，暂时无法执行该单据类型：{}"
msgstr "The replica set instance status is abnormal and the document type cannot be executed temporarily: {}"

#: backend/ticket/builders/sqlserver/sqlserver_add_slave.py:32
#: backend/ticket/builders/sqlserver/sqlserver_restore_slave.py:37
msgid "新slave机器信息"
msgstr "New slave machine information"

#: backend/ticket/builders/sqlserver/sqlserver_add_slave.py:66
msgid "SQLServer 添加Slave执行"
msgstr "SQLServer adds Slave execution"

#: backend/ticket/builders/sqlserver/sqlserver_authorize.py:62
msgid "SQLServer 授权执行"
msgstr "SQLServer authorized execution"

#: backend/ticket/builders/sqlserver/sqlserver_authorize.py:79
msgid "SQLServer Excel授权执行"
msgstr "SQLServer Excel authorized execution"

#: backend/ticket/builders/sqlserver/sqlserver_backup.py:28
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:41
msgid "备份db列表"
msgstr "Backup db list"

#: backend/ticket/builders/sqlserver/sqlserver_backup.py:32
#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:51
msgid "备份位置(先固定为master)"
msgstr "Backup location (fixed to master first)"

#: backend/ticket/builders/sqlserver/sqlserver_backup.py:67
#: backend/ticket/builders/sqlserver/sqlserver_rollback.py:153
msgid "SQLServer 库表备份执行"
msgstr "SQLServer database table backup execution"

#: backend/ticket/builders/sqlserver/sqlserver_build_db_sync_for_autofix.py:42
msgid "同步的数据库"
msgstr "Synchronized database"

#: backend/ticket/builders/sqlserver/sqlserver_build_db_sync_for_autofix.py:44
msgid "同步信息列表"
msgstr "Synchronized information list"

#: backend/ticket/builders/sqlserver/sqlserver_build_db_sync_for_autofix.py:61
msgid "SQLServer 同步数据"
msgstr "SQLServer synchronizes data"

#: backend/ticket/builders/sqlserver/sqlserver_clear.py:26
msgid "清档db列表"
msgstr "Clear db list"

#: backend/ticket/builders/sqlserver/sqlserver_clear.py:27
msgid "清档db正则列表"
msgstr "Clear db regular list"

#: backend/ticket/builders/sqlserver/sqlserver_clear.py:29
msgid "忽略db正则列表"
msgstr "Ignore db regular list"

#: backend/ticket/builders/sqlserver/sqlserver_clear.py:31
msgid "清档表"
msgstr "clearance list"

#: backend/ticket/builders/sqlserver/sqlserver_clear.py:32
msgid "忽略表"
msgstr "ignore table"

#: backend/ticket/builders/sqlserver/sqlserver_clear.py:56
msgid "SQLServer 清档执行"
msgstr "SQLServer cleanup execution"

#: backend/ticket/builders/sqlserver/sqlserver_data_migrate.py:30
#: backend/ticket/builders/sqlserver/sqlserver_rollback.py:33
msgid "源集群库名"
msgstr "Source cluster library name"

#: backend/ticket/builders/sqlserver/sqlserver_data_migrate.py:31
#: backend/ticket/builders/sqlserver/sqlserver_rollback.py:34
msgid "目标集群库名"
msgstr "Target cluster library name"

#: backend/ticket/builders/sqlserver/sqlserver_data_migrate.py:33
#: backend/ticket/builders/sqlserver/sqlserver_rollback.py:36
msgid "集群重命名库名"
msgstr "Cluster rename library name"

#: backend/ticket/builders/sqlserver/sqlserver_data_migrate.py:48
#: backend/ticket/builders/sqlserver/sqlserver_rollback.py:52
msgid "迁移DB信息"
msgstr "Migrate DB information"

#: backend/ticket/builders/sqlserver/sqlserver_data_migrate.py:49
msgid "迁移记录ID"
msgstr "Migration record ID"

#: backend/ticket/builders/sqlserver/sqlserver_data_migrate.py:51
msgid "迁移后，系统是否对源DB进行重命名"
msgstr "After migration, whether the system renames the source DB"

#: backend/ticket/builders/sqlserver/sqlserver_data_migrate.py:52
msgid "手动终止迁移"
msgstr "Terminate migration manually"

#: backend/ticket/builders/sqlserver/sqlserver_data_migrate.py:53
#: backend/ticket/builders/sqlserver/sqlserver_rollback.py:56
msgid "迁移信息列表"
msgstr "Migration information list"

#: backend/ticket/builders/sqlserver/sqlserver_data_migrate.py:149
msgid "SQLServer 全备迁移执行"
msgstr "SQLServer full migration execution"

#: backend/ticket/builders/sqlserver/sqlserver_data_migrate.py:213
msgid "SQLServer 增量迁移执行(断开同步)"
msgstr "SQLServer incremental migration execution (disconnect synchronization)"

#: backend/ticket/builders/sqlserver/sqlserver_data_migrate.py:225
msgid "SQLServer 目标数据库重命名"
msgstr "SQLServer target database rename"

#: backend/ticket/builders/sqlserver/sqlserver_data_migrate.py:231
msgid "SQLServer 源数据库重命名"
msgstr "SQLServer source database rename"

#: backend/ticket/builders/sqlserver/sqlserver_data_migrate.py:252
msgid "SQLServer 增量迁移执行"
msgstr "SQLServer incremental migration execution"

#: backend/ticket/builders/sqlserver/sqlserver_dbrename.py:68
msgid "SQLServer DB重命名执行"
msgstr "SQLServer DB rename execution"

#: backend/ticket/builders/sqlserver/sqlserver_destroy.py:35
msgid "SQLServer 销毁执行"
msgstr "SQLServer destroy execution"

#: backend/ticket/builders/sqlserver/sqlserver_disable.py:38
msgid "SQLServer 禁用执行"
msgstr "SQLServer disable execution"

#: backend/ticket/builders/sqlserver/sqlserver_enable.py:39
msgid "SQLServer 启用执行"
msgstr "SQLServer enable execution"

#: backend/ticket/builders/sqlserver/sqlserver_ha_apply.py:49
msgid "机器输入数量{}有误，预期数量{}"
msgstr "The machine input quantity {} is incorrect, the expected quantity {}"

#: backend/ticket/builders/sqlserver/sqlserver_ha_apply.py:114
msgid "SQLServer 高可用部署执行"
msgstr "SQLServer High Availability Deployment Execution"

#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:31
msgid "执行DB"
msgstr "Execute DB"

#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:42
msgid "忽略备份db列表"
msgstr "Ignore backup db list"

#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:88
msgid "所选备份DB信息为空，请检查库表正则"
msgstr "The selected backup DB information is empty, please check the database table regularity"

#: backend/ticket/builders/sqlserver/sqlserver_import_sqlfile.py:162
msgid "定时执行(人工确认)"
msgstr "Scheduled execution (manual confirmation)"

#: backend/ticket/builders/sqlserver/sqlserver_master_fail_over.py:24
msgid "是否强制切换(强切固定为true)"
msgstr "Whether to force switching (forced switching is fixed to true)"

#: backend/ticket/builders/sqlserver/sqlserver_master_fail_over.py:44
msgid "SQLServer 主故障切换执行"
msgstr "SQLServer Primary Failover Execution"

#: backend/ticket/builders/sqlserver/sqlserver_master_slave_switch.py:29
msgid "是否强制切换(互切固定为false)"
msgstr "Whether to force switching (mutual switching is fixed to false)"

#: backend/ticket/builders/sqlserver/sqlserver_master_slave_switch.py:55
msgid "SQLServer 主从互换执行"
msgstr "SQLServer master-slave interchange execution"

#: backend/ticket/builders/sqlserver/sqlserver_reset.py:27
msgid "重置集群名"
msgstr "Reset cluster name"

#: backend/ticket/builders/sqlserver/sqlserver_reset.py:28
msgid "重置集群主域名"
msgstr "Reset the cluster primary domain name"

#: backend/ticket/builders/sqlserver/sqlserver_reset.py:29
msgid "重置集群从域名"
msgstr "Reset the cluster from domain name"

#: backend/ticket/builders/sqlserver/sqlserver_reset.py:31
msgid "集群重置信息"
msgstr "Cluster reset information"

#: backend/ticket/builders/sqlserver/sqlserver_reset.py:38
msgid "集群:{}不处于禁用态，无法重置"
msgstr "Cluster: {} is not disabled and cannot be reset"

#: backend/ticket/builders/sqlserver/sqlserver_reset.py:53
msgid "SQLServer 集群重置执行"
msgstr "SQLServer cluster reset execution"

#: backend/ticket/builders/sqlserver/sqlserver_restore_local_slave.py:57
msgid "SQLServer Slave原地重建执行"
msgstr "SQLServer Slave rebuilds execution in place"

#: backend/ticket/builders/sqlserver/sqlserver_restore_slave.py:36
msgid "旧slave机器信息"
msgstr "Old slave machine information"

#: backend/ticket/builders/sqlserver/sqlserver_restore_slave.py:116
msgid "SQLServer Slave重建执行"
msgstr "SQLServer Slave rebuild execution"

#: backend/ticket/builders/sqlserver/sqlserver_rollback.py:45
msgid "备份ID"
msgstr "Backup ID"

#: backend/ticket/builders/sqlserver/sqlserver_rollback.py:46
msgid "备份日志"
msgstr "Backup log"

#: backend/ticket/builders/sqlserver/sqlserver_rollback.py:57
msgid "是否原地构造"
msgstr "Whether to construct in situ"

#: backend/ticket/builders/sqlserver/sqlserver_rollback.py:140
msgid "SQLServer 定点构造执行"
msgstr "SQLServer fixed-point construction execution"

#: backend/ticket/builders/sqlserver/sqlserver_rollback.py:146
msgid "SQLServer 数据库重命名"
msgstr "SQLServer database rename"

#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:70
msgid "SQLServer起始端口"
msgstr "SQLServer starting port"

#: backend/ticket/builders/sqlserver/sqlserver_single_apply.py:206
msgid "SQLServer 单节点部署执行"
msgstr "SQLServer single node deployment execution"

#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:32
msgid "订阅库名"
msgstr "Subscription library name"

#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:33
msgid "订阅表名列表"
msgstr "Subscription table name list"

#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:36
msgid "数据库原源群"
msgstr "Database source group"

#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:37
msgid "集群module id"
msgstr "cluster module id"

#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:38
msgid "部署的dumper id"
msgstr "Deployed dumper id"

#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:40
msgid "接收端集群域名/IP"
msgstr "Receiver cluster domain name/IP"

#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:41
msgid "接收端端口"
msgstr "Receiver port"

#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:43
msgid "l5_modid配置"
msgstr "l5_modid arrangement"

#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:44
msgid "l5_cmdid配置"
msgstr "l5_cmdid configuration"

#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:45
msgid "kafka用户名"
msgstr "kafka username"

#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:46
msgid "kafka密码"
msgstr "kafka password"

#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:48
msgid "订阅名称"
msgstr "Subscription name"

#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:50
msgid "订阅库表"
msgstr "Subscription library table"

#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:51
msgid "dumper配置信息"
msgstr "dumper configuration information"

#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:79
#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:106
msgid "全局订阅中, 数据源 + 接收端（类型+接收地址）需要唯一"
msgstr "In global subscription, the data source + receiving end (type + receiving address) need to be unique"

#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:83
#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:127
msgid "同一个订阅中，dumper ID + 接收端（类型+接收地址) 需要唯一"
msgstr "In the same subscription, dumper ID + receiving end (type + receiving address) need to be unique"

#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:135
msgid "接收端协议选择KAFKA时，请填写kafka用户名和密码"
msgstr "When KAFKA is selected as the receiving protocol, please fill in the kafka username and password."

#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:137
msgid "接收端协议选择L5_AGENT时，请填写l5_modid和l5_cmdid"
msgstr "When the receiving protocol selects L5_AGENT, please fill in l5_modid and l5_cmdid"

#: backend/ticket/builders/tbinlogdumper/dumper_apply.py:180
msgid "Tbinlogdumper 上架"
msgstr "Tbinlogdumper is on the shelves"

#: backend/ticket/builders/tbinlogdumper/dumper_disable.py:24
#: backend/ticket/builders/tbinlogdumper/dumper_enable.py:24
#: backend/ticket/builders/tbinlogdumper/dumper_reduce_nodes.py:30
msgid "dumper实例ID"
msgstr "dumper instance ID"

#: backend/ticket/builders/tbinlogdumper/dumper_disable.py:38
msgid "Tbinlogdumper 禁用"
msgstr "Tbinlogdumper disabled"

#: backend/ticket/builders/tbinlogdumper/dumper_enable.py:38
msgid "Tbinlogdumper 启用"
msgstr "Tbinlogdumper enabled"

#: backend/ticket/builders/tbinlogdumper/dumper_reduce_nodes.py:72
msgid "Tbinlogdumper 下架"
msgstr "Tbinlogdumper removed from shelves"

#: backend/ticket/builders/tbinlogdumper/dumper_switch.py:25
msgid "dumper进程ID"
msgstr "dumper process ID"

#: backend/ticket/builders/tbinlogdumper/dumper_switch.py:46
msgid "Tbinlogdumper 切换"
msgstr "Tbinlogdumper toggle"

#: backend/ticket/builders/tendbcluster/append_deploy_ctl.py:41
msgid "{} 不是 [{}]{} 的集群"
msgstr "{} is not a cluster of [{}]{}"

#: backend/ticket/builders/tendbcluster/append_deploy_ctl.py:60
msgid "{} spider master 数量不足 2 个"
msgstr "{} The number of spider masters is less than 2"

#: backend/ticket/builders/tendbcluster/append_deploy_ctl.py:65
msgid "{} remote 数量异常"
msgstr "{} The number of remotes is abnormal"

#: backend/ticket/builders/tendbcluster/base.py:112
msgid "【{}】请保证集群部署的接入层主节点和运维节点的总和小于37"
msgstr "[{}] Please ensure that the total number of access layer master nodes and operation and maintenance nodes deployed in the cluster is less than 37"

#: backend/ticket/builders/tendbcluster/base.py:129
msgid "【{}】请保证缩容后的接入层数量小于当前节点数量"
msgstr "[{}] Please ensure that the number of access layers after scaling is smaller than the current number of nodes."

#: backend/ticket/builders/tendbcluster/base.py:133
msgid "【{}】请保证缩容后的接入层spider master数量>=2"
msgstr "[{}] Please ensure that the number of spider masters in the access layer after scaling is &gt;= 2"

#: backend/ticket/builders/tendbcluster/base.py:136
msgid "【{}】请保证缩容后的接入层spider slave数量>=1"
msgstr "[{}] Please ensure that the number of spider slaves in the access layer after scaling is &gt;= 1"

#: backend/ticket/builders/tendbcluster/base.py:155
msgid "集群总分片数{}与单机分片数{}、机器部署组数{}不匹配"
msgstr "The total number of cluster shards{} does not match the number of single-machine shards{} and the number of machine deployment groups{}"

#: backend/ticket/builders/tendbcluster/base.py:165
msgid "是否只禁用只读接入层"
msgstr "Whether to disable only the read-only access layer"

#: backend/ticket/builders/tendbcluster/base.py:166
msgid "是否只启用只读接入层"
msgstr "Whether to enable only the read-only access layer"

#: backend/ticket/builders/tendbcluster/tendb_apply.py:44
msgid "集群访问端口"
msgstr "cluster access port"

#: backend/ticket/builders/tendbcluster/tendb_apply.py:46
#: backend/ticket/builders/tendbcluster/tendb_node_reblance.py:34
msgid "单机分片数"
msgstr "Number of shards on a single machine"

#: backend/ticket/builders/tendbcluster/tendb_apply.py:125
msgid "TenDB Cluster 集群部署执行"
msgstr "TenDB Cluster deployment execution"

#: backend/ticket/builders/tendbcluster/tendb_authorize_rules.py:29
#: backend/ticket/builders/tendbcluster/tendb_authorize_rules.py:44
msgid "TenDB Cluster 授权执行"
msgstr "TenDB Cluster authorized execution"

#: backend/ticket/builders/tendbcluster/tendb_backup.py:32
msgid "库表备份信息"
msgstr "Database table backup information"

#: backend/ticket/builders/tendbcluster/tendb_backup.py:51
#: backend/ticket/constants.py:213
msgid "TenDB Cluster 库表备份"
msgstr "TenDB Cluster database table backup"

#: backend/ticket/builders/tendbcluster/tendb_checksum.py:44
msgid "是否修复"
msgstr "Whether to repair"

#: backend/ticket/builders/tendbcluster/tendb_checksum.py:45
msgid "数据校验后修复执行类型"
msgstr "Repair execution type after data verification"

#: backend/ticket/builders/tendbcluster/tendb_checksum.py:49
msgid "主库实例"
msgstr "Main library instance"

#: backend/ticket/builders/tendbcluster/tendb_checksum.py:50
msgid "从库实例"
msgstr "Example from library"

#: backend/ticket/builders/tendbcluster/tendb_checksum.py:57
msgid "校验范围"
msgstr "Calibration range"

#: backend/ticket/builders/tendbcluster/tendb_checksum.py:63
msgid "全备信息列表"
msgstr "Full information list"

#: backend/ticket/builders/tendbcluster/tendb_clear.py:46
msgid "TenDB Cluster 清档执行"
msgstr "TenDB Cluster cleanup execution"

#: backend/ticket/builders/tendbcluster/tendb_clone_rules.py:41
msgid "TenDB Cluster 客户端权限克隆执行"
msgstr "TenDB Cluster client permission clone execution"

#: backend/ticket/builders/tendbcluster/tendb_clone_rules.py:49
msgid "TenDB Cluster 实例权限克隆执行"
msgstr "TenDB Cluster instance permission clone execution"

#: backend/ticket/builders/tendbcluster/tendb_data_repair.py:46
msgid "Tendb Cluster 数据修复执行"
msgstr "Tendb Cluster data repair execution"

#: backend/ticket/builders/tendbcluster/tendb_destroy.py:37
msgid "TenDB Cluster 下架执行"
msgstr "TenDB Cluster delisting execution"

#: backend/ticket/builders/tendbcluster/tendb_disable.py:40
msgid "TenDB Cluster 禁用执行"
msgstr "TenDB Cluster disable execution"

#: backend/ticket/builders/tendbcluster/tendb_dump_data.py:41
msgid "Tendb Cluster 数据导出执行"
msgstr "Tendb Cluster data export execution"

#: backend/ticket/builders/tendbcluster/tendb_enable.py:40
msgid "TenDB Cluster 启用执行"
msgstr "TenDB Cluster enable execution"

#: backend/ticket/builders/tendbcluster/tendb_fixpoint_rollback.py:39
msgid "spider新机器"
msgstr "spider new machine"

#: backend/ticket/builders/tendbcluster/tendb_fixpoint_rollback.py:40
msgid "remote新机器"
msgstr "remote new machine"

#: backend/ticket/builders/tendbcluster/tendb_fixpoint_rollback.py:45
msgid "回档类型"
msgstr "rollback type"

#: backend/ticket/builders/tendbcluster/tendb_fixpoint_rollback.py:62
msgid "回档信息"
msgstr "rollback information"

#: backend/ticket/builders/tendbcluster/tendb_fixpoint_rollback.py:214
#: backend/ticket/builders/tendbcluster/tendb_fixpoint_rollback.py:224
msgid "TenDBCluster 回档执行"
msgstr "TenDBCluster rollback execution"

#: backend/ticket/builders/tendbcluster/tendb_flashback.py:49
msgid "TenDB Cluster 闪回执行"
msgstr "TenDB Cluster flashback execution"

#: backend/ticket/builders/tendbcluster/tendb_full_backup.py:27
msgid "备份位置信息"
msgstr "Back up location information"

#: backend/ticket/builders/tendbcluster/tendb_full_backup.py:29
msgid "备份选项"
msgstr "Backup options"

#: backend/ticket/builders/tendbcluster/tendb_full_backup.py:31
msgid "集群备份信息"
msgstr "Cluster backup information"

#: backend/ticket/builders/tendbcluster/tendb_full_backup.py:56
msgid "备份位置选择spider_mnt时，请提供运维节点的地址"
msgstr "When selecting spider_mnt as the backup location, please provide the address of the operation and maintenance node."

#: backend/ticket/builders/tendbcluster/tendb_full_backup.py:69
#: backend/ticket/constants.py:236
msgid "TenDB Cluster 全库备份"
msgstr "TenDB Cluster full database backup"

#: backend/ticket/builders/tendbcluster/tendb_master_fail_over.py:23
#: backend/ticket/builders/tendbcluster/tendb_master_slave_switch.py:32
msgid "是否强制执行(互切不强制，故障切强制)"
msgstr "Whether to enforce it (mutual switching is not mandatory, fault switching is mandatory)"

#: backend/ticket/builders/tendbcluster/tendb_master_fail_over.py:24
msgid "是否检测数据同步延时情况"
msgstr "Whether to detect data synchronization delay"

#: backend/ticket/builders/tendbcluster/tendb_master_fail_over.py:28
msgid "主故障切换场景需要强制执行"
msgstr "Primary failover scenario needs to be enforced"

#: backend/ticket/builders/tendbcluster/tendb_master_fail_over.py:41
msgid "TendbCluster 主故障切换"
msgstr "TendbCluster Master Failover"

#: backend/ticket/builders/tendbcluster/tendb_master_slave_switch.py:25
msgid "主库信息"
msgstr "Main database information"

#: backend/ticket/builders/tendbcluster/tendb_master_slave_switch.py:26
msgid "从库信息"
msgstr "Information from the database"

#: backend/ticket/builders/tendbcluster/tendb_master_slave_switch.py:28
msgid "切换的主从组"
msgstr "Switched master-slave group"

#: backend/ticket/builders/tendbcluster/tendb_master_slave_switch.py:41
msgid "主从互切场景：非强制执行，强制检查延时"
msgstr "Master-slave mutual switching scenario: non-mandatory execution, mandatory check delay"

#: backend/ticket/builders/tendbcluster/tendb_master_slave_switch.py:54
msgid "TendbCluster 主从互换执行"
msgstr "TendbCluster master-slave swap execution"

#: backend/ticket/builders/tendbcluster/tendb_migrate_cluster.py:28
msgid "旧主库主机"
msgstr "Old main library host"

#: backend/ticket/builders/tendbcluster/tendb_migrate_cluster.py:29
msgid "旧从库主机"
msgstr "Old slave host"

#: backend/ticket/builders/tendbcluster/tendb_migrate_cluster.py:36
msgid "克隆主从信息"
msgstr "Clone master-slave information"

#: backend/ticket/builders/tendbcluster/tendb_migrate_cluster.py:78
msgid "TenDB Cluster 主从迁移执行"
msgstr "TenDB Cluster master-slave migration execution"

#: backend/ticket/builders/tendbcluster/tendb_mnt_apply.py:26
#: backend/ticket/builders/tendbcluster/tendb_mnt_destroy.py:24
msgid "运维节点信息"
msgstr "Operation and maintenance node information"

#: backend/ticket/builders/tendbcluster/tendb_mnt_apply.py:28
msgid "添加spider运维节点信息"
msgstr "Add spider operation and maintenance node information"

#: backend/ticket/builders/tendbcluster/tendb_mnt_apply.py:52
msgid "TendbCluster 添加运维节点"
msgstr "TendbCluster adds operation and maintenance nodes"

#: backend/ticket/builders/tendbcluster/tendb_mnt_destroy.py:26
msgid "下架spider运维节点信息"
msgstr "Remove spider operation and maintenance node information"

#: backend/ticket/builders/tendbcluster/tendb_mnt_destroy.py:27
msgid "是否安全模式执行"
msgstr "Whether to execute in safe mode"

#: backend/ticket/builders/tendbcluster/tendb_mnt_destroy.py:42
msgid "TendbCluster 下架运维节点"
msgstr "TendbCluster removes operation and maintenance nodes"

#: backend/ticket/builders/tendbcluster/tendb_node_reblance.py:35
msgid "规格要求"
msgstr "Specification requirements"

#: backend/ticket/builders/tendbcluster/tendb_node_reblance.py:37
msgid "变更前的规格名"
msgstr "Specification name before change"

#: backend/ticket/builders/tendbcluster/tendb_node_reblance.py:38
msgid "变更前机器组数"
msgstr "Number of machine groups before change"

#: backend/ticket/builders/tendbcluster/tendb_node_reblance.py:40
msgid "集群扩缩容信息"
msgstr "Cluster expansion and contraction information"

#: backend/ticket/builders/tendbcluster/tendb_node_reblance.py:47
msgid "执行前是否需要数据校验"
msgstr "Whether data verification is required before execution"

#: backend/ticket/builders/tendbcluster/tendb_node_reblance.py:48
msgid "数据校验触发类型"
msgstr "Data verification trigger type"

#: backend/ticket/builders/tendbcluster/tendb_node_reblance.py:49
msgid "数据校验 触发时间"
msgstr "Data verification trigger time"

#: backend/ticket/builders/tendbcluster/tendb_node_reblance.py:93
msgid "TendbCluster 集群容量变更"
msgstr "TendbCluster cluster capacity change"

#: backend/ticket/builders/tendbcluster/tendb_openarea.py:31
msgid "Tendb Cluster 开区执行"
msgstr "Tendb Cluster zone execution"

#: backend/ticket/builders/tendbcluster/tendb_rename.py:42
msgid "TenDBCluster Cluster 重命名执行"
msgstr "TenDBCluster Cluster rename execution"

#: backend/ticket/builders/tendbcluster/tendb_restore_local_slave.py:83
msgid "TenDB Cluster Slave原地重建执行"
msgstr "TenDB Cluster Slave in-situ reconstruction execution"

#: backend/ticket/builders/tendbcluster/tendb_restore_slave.py:30
msgid "新从库资源池参数"
msgstr "New slave library resource pool parameters"

#: backend/ticket/builders/tendbcluster/tendb_restore_slave.py:80
#: backend/ticket/constants.py:227
msgid "TenDB Cluster Slave重建"
msgstr "TenDB Cluster Slave rebuild"

#: backend/ticket/builders/tendbcluster/tendb_spider_add_nodes.py:30
msgid "接入层类型"
msgstr "Access layer type"

#: backend/ticket/builders/tendbcluster/tendb_spider_add_nodes.py:31
msgid "规格参数"
msgstr "Specifications"

#: backend/ticket/builders/tendbcluster/tendb_spider_add_nodes.py:34
#: backend/ticket/builders/tendbcluster/tendb_spider_slave_apply.py:38
msgid "机器导入类型"
msgstr "Machine import type"

#: backend/ticket/builders/tendbcluster/tendb_spider_add_nodes.py:36
#: backend/ticket/builders/tendbcluster/tendb_spider_slave_apply.py:36
msgid "扩容信息"
msgstr "Expansion information"

#: backend/ticket/builders/tendbcluster/tendb_spider_add_nodes.py:71
msgid "TenDBCluster Cluster 接入层扩容"
msgstr "TenDBCluster Cluster access layer expansion"

#: backend/ticket/builders/tendbcluster/tendb_spider_reduce_nodes.py:26
msgid "剩余spider数量"
msgstr "Number of remaining spiders"

#: backend/ticket/builders/tendbcluster/tendb_spider_reduce_nodes.py:31
msgid "缩容的角色"
msgstr "Shrunken role"

#: backend/ticket/builders/tendbcluster/tendb_spider_reduce_nodes.py:35
msgid "缩容信息"
msgstr "Shrink information"

#: backend/ticket/builders/tendbcluster/tendb_spider_reduce_nodes.py:54
msgid "TenDB Cluster 接入层缩容"
msgstr "TenDB Cluster access layer reduction"

#: backend/ticket/builders/tendbcluster/tendb_spider_slave_apply.py:32
msgid "slave信息"
msgstr "slave information"

#: backend/ticket/builders/tendbcluster/tendb_spider_slave_apply.py:34
msgid "资源规格参数"
msgstr "Resource specification parameters"

#: backend/ticket/builders/tendbcluster/tendb_spider_slave_apply.py:50
msgid "集群{}已经存在只读接入层，无法再次部署"
msgstr "Cluster {} already has a read-only access layer and cannot be deployed again."

#: backend/ticket/builders/tendbcluster/tendb_spider_slave_apply.py:86
#: backend/ticket/constants.py:225
msgid "TenDB Cluster 部署只读接入层"
msgstr "TenDB Cluster deploys a read-only access layer"

#: backend/ticket/builders/tendbcluster/tendb_spider_slave_destroy.py:34
#: backend/ticket/constants.py:226
msgid "TenDB Cluster 只读接入层下架"
msgstr "TenDB Cluster read-only access layer removed"

#: backend/ticket/builders/tendbcluster/tendb_temporary_destroy.py:49
#: backend/ticket/builders/tendbcluster/tendb_temporary_destroy.py:63
msgid "TenDBCluster 临时集群下架"
msgstr "TenDBCluster temporary cluster removed"

#: backend/ticket/builders/tendbcluster/tendb_temporary_destroy.py:55
#: backend/ticket/builders/tendbcluster/tendb_temporary_destroy.py:63
msgid "TenDBCluster 临时集群销毁"
msgstr "TenDBCluster temporary cluster destruction"

#: backend/ticket/builders/tendbsingle/standardize.py:52
msgid "TenDB Single 标准化"
msgstr "TenDB Single Standardization"

#: backend/ticket/constants.py:32
msgid "主流程-人工确认"
msgstr "Main Process - Manual Confirmation"

#: backend/ticket/constants.py:33
msgid "自动化流程-人工确认"
msgstr "Automated Process - Manual Confirmation"

#: backend/ticket/constants.py:34
msgid "资源补货"
msgstr "Resource replenishment"

#: backend/ticket/constants.py:42
msgid "我的待办"
msgstr "my to do"

#: backend/ticket/constants.py:43
msgid "我的申请"
msgstr "My application"

#: backend/ticket/constants.py:55
msgid "已处理"
msgstr "processed"

#: backend/ticket/constants.py:64
msgid "资源不足"
msgstr "Insufficient resources"

#: backend/ticket/constants.py:65
msgid "获取资源所失败"
msgstr "Failed to obtain resource"

#: backend/ticket/constants.py:66
msgid "参数合法性校验失败"
msgstr "Parameter validity verification failed"

#: backend/ticket/constants.py:67
msgid "锁定返回机器失败"
msgstr "Lock return machine failed"

#: backend/ticket/constants.py:77 backend/ticket/constants.py:88
msgid "等待中"
msgstr "Waiting"

#: backend/ticket/constants.py:81 backend/ticket/constants.py:93
msgid "撤销"
msgstr "revoke"

#: backend/ticket/constants.py:82 backend/ticket/constants.py:91
msgid "终止"
msgstr "termination"

#: backend/ticket/constants.py:94
msgid "跳过"
msgstr "jump over"

#: backend/ticket/constants.py:157
msgid "无法找到{}关联的组件类型"
msgstr "Unable to find component type associated with {}"

#: backend/ticket/constants.py:161
msgid "MySQL 单节点部署"
msgstr "MySQL standalone deployment"

#: backend/ticket/constants.py:162
msgid "MySQL 添加从库"
msgstr "MySQL Add Slave Instance"

#: backend/ticket/constants.py:162 backend/ticket/constants.py:163
#: backend/ticket/constants.py:164 backend/ticket/constants.py:165
#: backend/ticket/constants.py:166 backend/ticket/constants.py:167
#: backend/ticket/constants.py:172 backend/ticket/constants.py:173
#: backend/ticket/constants.py:184 backend/ticket/constants.py:195
#: backend/ticket/constants.py:216 backend/ticket/constants.py:217
#: backend/ticket/constants.py:221 backend/ticket/constants.py:222
#: backend/ticket/constants.py:227 backend/ticket/constants.py:228
#: backend/ticket/constants.py:229 backend/ticket/constants.py:235
#: backend/ticket/constants.py:266 backend/ticket/constants.py:267
#: backend/ticket/constants.py:268 backend/ticket/constants.py:269
#: backend/ticket/constants.py:270 backend/ticket/constants.py:271
#: backend/ticket/constants.py:272 backend/ticket/constants.py:301
#: backend/ticket/constants.py:302 backend/ticket/constants.py:303
#: backend/ticket/constants.py:304 backend/ticket/constants.py:305
#: backend/ticket/constants.py:306 backend/ticket/constants.py:307
#: backend/ticket/constants.py:312 backend/ticket/constants.py:313
#: backend/ticket/constants.py:317 backend/ticket/constants.py:402
#: backend/ticket/constants.py:403 backend/ticket/constants.py:404
#: backend/ticket/constants.py:405 backend/ticket/constants.py:406
#: backend/ticket/constants.py:411 backend/ticket/constants.py:414
#: backend/ticket/constants.py:415 backend/ticket/constants.py:416
msgid "集群维护"
msgstr "Cluster maintenance"

#: backend/ticket/constants.py:163
msgid "MySQL Slave重建"
msgstr "MySQL Slave Rebuild"

#: backend/ticket/constants.py:164
msgid "MySQL Slave原地重建"
msgstr "MySQL Slave reconstruction in place"

#: backend/ticket/constants.py:165
msgid "MySQL 迁移主从"
msgstr "MySQL migration master-slave"

#: backend/ticket/constants.py:166
msgid "MySQL 主从互换"
msgstr "MySQL master-slave swap"

#: backend/ticket/constants.py:167
msgid "MySQL 主库故障切换"
msgstr "MySQL master database failover"

#: backend/ticket/constants.py:168
msgid "MySQL 高可用部署"
msgstr "MySQL high availability deployment"

#: backend/ticket/constants.py:169
msgid "MySQL 变更SQL执行"
msgstr "MySQL changes SQL execution"

#: backend/ticket/constants.py:170
msgid "MySQL 强制变更SQL执行"
msgstr "MySQL forces changes to SQL execution"

#: backend/ticket/constants.py:171
msgid "MySQL 模拟执行"
msgstr "MySQL simulation execution"

#: backend/ticket/constants.py:172
msgid "MySQL 添加Proxy"
msgstr "MySQL add Proxy"

#: backend/ticket/constants.py:173
msgid "MySQL 替换Proxy"
msgstr "MySQL replaces Proxy"

#: backend/ticket/constants.py:174
msgid "MySQL 单节点删除"
msgstr "MySQL standalone deletion"

#: backend/ticket/constants.py:175
msgid "MySQL 单节点启用"
msgstr "MySQL standalone enabled"

#: backend/ticket/constants.py:176
msgid "MySQL 单节点禁用"
msgstr "MySQL standalone disabled"

#: backend/ticket/constants.py:177
msgid "MySQL 高可用删除"
msgstr "MySQL high availability deletion"

#: backend/ticket/constants.py:178
msgid "MySQL 高可用禁用"
msgstr "MySQL high availability disabled"

#: backend/ticket/constants.py:179
msgid "MySQL 高可用启用"
msgstr "MySQL high availability enabled"

#: backend/ticket/constants.py:180
msgid "MySQL 集群授权"
msgstr "MySQL Cluster Authorization"

#: backend/ticket/constants.py:181
msgid "MySQL EXCEL授权"
msgstr "MySQL EXCEL authorization"

#: backend/ticket/constants.py:183
msgid "MySQL DB实例权限克隆"
msgstr "Clone MySQL DB Instance Privileges"

#: backend/ticket/constants.py:184
msgid "MySQL 高可用DB重命名"
msgstr "MySQL high availability DB renaming"

#: backend/ticket/constants.py:185
msgid "MySQL 高可用清档"
msgstr "MySQL HA Clear File"

#: backend/ticket/constants.py:186
msgid "MySQL 高可用库表备份"
msgstr "MySQL high availability database table backup"

#: backend/ticket/constants.py:186 backend/ticket/constants.py:193
#: backend/ticket/constants.py:213 backend/ticket/constants.py:236
#: backend/ticket/constants.py:261 backend/ticket/constants.py:400
#: backend/ticket/constants.py:401
msgid "备份"
msgstr "backup"

#: backend/ticket/constants.py:187
msgid "MySQL 数据校验修复"
msgstr "MySQL Data Inconsistency Repair"

#: backend/ticket/constants.py:188
msgid "MySQL 分区"
msgstr "MySQL partition"

#: backend/ticket/constants.py:189
msgid "MySQL 分区定时任务"
msgstr "MySQL partition scheduled tasks"

#: backend/ticket/constants.py:190
msgid "MySQL 数据修复"
msgstr "MySQL data repair"

#: backend/ticket/constants.py:191
msgid "MySQL 闪回"
msgstr "MySQL flashback"

#: backend/ticket/constants.py:191 backend/ticket/constants.py:192
#: backend/ticket/constants.py:237 backend/ticket/constants.py:238
msgid "回档"
msgstr "rollback"

#: backend/ticket/constants.py:192
msgid "MySQL 定点构造"
msgstr "MySQL fixed-point construct"

#: backend/ticket/constants.py:193
msgid "MySQL 高可用全库备份"
msgstr "MySQL high availability full database backup"

#: backend/ticket/constants.py:194
msgid "MySQL 单节点清档"
msgstr "MySQL standalone clear file"

#: backend/ticket/constants.py:195
msgid "MySQL 单节点DB重命名"
msgstr "MySQL standalone DB rename"

#: backend/ticket/constants.py:196
msgid "TendbHA 标准化"
msgstr "TendbHA standardization"

#: backend/ticket/constants.py:197
msgid "TendbHA 元数据导入"
msgstr "TendbHA metadata import"

#: backend/ticket/constants.py:198
msgid "MySQL 开区"
msgstr "MySQL zone"

#: backend/ticket/constants.py:199
msgid "MySQL DB克隆"
msgstr "MySQL DB clone"

#: backend/ticket/constants.py:200
msgid "MySQL 数据导出"
msgstr "MySQL data export"

#: backend/ticket/constants.py:201
msgid "MySQL 原地升级"
msgstr "MySQL in-place upgrade"

#: backend/ticket/constants.py:201 backend/ticket/constants.py:202
#: backend/ticket/constants.py:203
msgid "版本升级"
msgstr "Version upgrade"

#: backend/ticket/constants.py:202
msgid "MySQL 迁移升级"
msgstr "MySQL migration and upgrade"

#: backend/ticket/constants.py:203
msgid "MySQL Proxy升级"
msgstr "MySQL Proxy upgrade"

#: backend/ticket/constants.py:204
msgid "TendbHA集群迁移至其他业务"
msgstr "Migrate TendbHA cluster to other businesses"

#: backend/ticket/constants.py:205
msgid "推送周边配置"
msgstr "Push peripheral configuration"

#: backend/ticket/constants.py:208
msgid "TenDB Cluster 开区"
msgstr "TenDB Cluster zone"

#: backend/ticket/constants.py:209
msgid "TenDB Cluster 数据校验修复"
msgstr "TenDB Cluster data verification repair"

#: backend/ticket/constants.py:210
msgid "TenDB Cluster 数据修复"
msgstr "TenDB Cluster data repair"

#: backend/ticket/constants.py:211
msgid "TenDB Cluster 分区管理"
msgstr "TenDB Cluster partition management"

#: backend/ticket/constants.py:212
msgid "TenDB Cluster 分区定时任务"
msgstr "TenDB Cluster partition scheduled tasks"

#: backend/ticket/constants.py:214
msgid "TenDB Cluster 数据库重命名"
msgstr "TenDB Cluster database rename"

#: backend/ticket/constants.py:215
msgid "TenDB Cluster 清档"
msgstr "TenDB Cluster cleanup"

#: backend/ticket/constants.py:216
msgid "TenDB Cluster 主库故障切换"
msgstr "TenDB Cluster main database failover"

#: backend/ticket/constants.py:217
msgid "TenDB Cluster 主从互切"
msgstr "TenDB Cluster master-slave switch"

#: backend/ticket/constants.py:218
msgid "TenDB Cluster 变更SQL执行"
msgstr "TenDB Cluster changes SQL execution"

#: backend/ticket/constants.py:219
msgid "TenDB Cluster 强制变更SQL执行"
msgstr "TenDB Cluster forces changes to SQL execution"

#: backend/ticket/constants.py:220
msgid "TenDB Cluster 模拟执行"
msgstr "TenDB Cluster simulation execution"

#: backend/ticket/constants.py:221
msgid "TenDB Cluster 扩容接入层"
msgstr "TenDB Cluster expansion access layer"

#: backend/ticket/constants.py:222
msgid "TenDB Cluster 缩容接入层"
msgstr "TenDB Cluster scale-down access layer"

#: backend/ticket/constants.py:223
msgid "TenDB Cluster 添加运维节点"
msgstr "TenDB Cluster adds operation and maintenance nodes"

#: backend/ticket/constants.py:223 backend/ticket/constants.py:224
msgid "运维 Spider 管理"
msgstr "Operation and maintenance Spider management"

#: backend/ticket/constants.py:224
msgid "TenDB Cluster 下架运维节点"
msgstr "TenDB Cluster removes operation and maintenance nodes"

#: backend/ticket/constants.py:228
msgid "TenDB Cluster Slave原地重建"
msgstr "TenDB Cluster Slave is rebuilt in place"

#: backend/ticket/constants.py:229
msgid "TenDB Cluster 主从迁移"
msgstr "TenDB Cluster master-slave migration"

#: backend/ticket/constants.py:230
msgid "TenDB Cluster 集群部署"
msgstr "TenDB Cluster deployment"

#: backend/ticket/constants.py:231
msgid "TenDB Cluster 集群启用"
msgstr "TenDB Cluster enabled"

#: backend/ticket/constants.py:232
msgid "TenDB Cluster 集群禁用"
msgstr "TenDB Cluster disabled"

#: backend/ticket/constants.py:233
msgid "TenDB Cluster 集群销毁"
msgstr "TenDB Cluster destruction"

#: backend/ticket/constants.py:234
msgid "TenDB Cluster 临时集群销毁"
msgstr "TenDB Cluster temporary cluster destruction"

#: backend/ticket/constants.py:235
msgid "TenDB Cluster 集群容量变更"
msgstr "TenDB Cluster cluster capacity change"

#: backend/ticket/constants.py:237
msgid "TenDB Cluster 定点构造"
msgstr "TenDB Cluster fixed-point construction"

#: backend/ticket/constants.py:238
msgid "TenDB Cluster 闪回"
msgstr "TenDB Cluster flashback"

#: backend/ticket/constants.py:242
msgid "TenDB Cluster EXCEL授权"
msgstr "TenDB Cluster EXCEL authorization"

#: backend/ticket/constants.py:248
msgid "TenDB Cluster DB克隆"
msgstr "TenDB Cluster DB clone"

#: backend/ticket/constants.py:249
msgid "TenDB Cluster 数据导出"
msgstr "TenDB Cluster data export"

#: backend/ticket/constants.py:251
msgid "TBINLOGDUMPER 上架"
msgstr "TBINLOGDUMPER is now available"

#: backend/ticket/constants.py:252
msgid "TBINLOGDUMPER 下架"
msgstr "TBINLOGDUMPER removed from shelves"

#: backend/ticket/constants.py:253
msgid "TBINLOGDUMPER 切换"
msgstr "TBINLOGDUMPER toggle"

#: backend/ticket/constants.py:254
msgid "TBINLOGDUMPER 禁用"
msgstr "TBINLOGDUMPER disabled"

#: backend/ticket/constants.py:255
msgid "TBINLOGDUMPER 启用"
msgstr "TBINLOGDUMPER enabled"

#: backend/ticket/constants.py:258
msgid "SQLServer 单节点部署"
msgstr "SQLServer single node deployment"

#: backend/ticket/constants.py:259
msgid "SQLServer 高可用部署"
msgstr "SQLServer High Availability Deployment"

#: backend/ticket/constants.py:260
msgid "SQLServer SQL导入执行"
msgstr "SQLServer SQL import execution"

#: backend/ticket/constants.py:261
msgid "SQLServer 库表备份"
msgstr "SQLServer database table backup"

#: backend/ticket/constants.py:262
msgid "SQLServer 清档"
msgstr "SQLServer Clearance"

#: backend/ticket/constants.py:263
msgid "SQLServer 集群卸载"
msgstr "SQLServer cluster uninstallation"

#: backend/ticket/constants.py:264
msgid "SQLServer 集群禁用"
msgstr "SQLServer cluster disabled"

#: backend/ticket/constants.py:265
msgid "SQLServer 集群启用"
msgstr "SQLServer cluster enabled"

#: backend/ticket/constants.py:266
msgid "SQLServer DB重命名"
msgstr "SQLServer DB rename"

#: backend/ticket/constants.py:267
msgid "SQLServer 主从互切"
msgstr "SQLServer master-slave switching"

#: backend/ticket/constants.py:268
msgid "SQLServer 主库故障切换"
msgstr "SQLServer main database failover"

#: backend/ticket/constants.py:269
msgid "SQLServer 原地重建"
msgstr "SQLServer rebuild in place"

#: backend/ticket/constants.py:270
msgid "SQLServer 新机重建"
msgstr "SQLServer new machine reconstruction"

#: backend/ticket/constants.py:271
msgid "SQLServer 添加从库"
msgstr "SQLServer add slave database"

#: backend/ticket/constants.py:272
msgid "SQLServer 集群重置"
msgstr "SQLServer cluster reset"

#: backend/ticket/constants.py:273
msgid "SQLServer 全备迁移"
msgstr "SQLServer full migration"

#: backend/ticket/constants.py:274
msgid "SQLServer 增量迁移"
msgstr "SQLServer incremental migration"

#: backend/ticket/constants.py:275
msgid "SQLServer 定点构造"
msgstr "SQLServer fixed-point construction"

#: backend/ticket/constants.py:277
msgid "SQLServer EXCEL授权"
msgstr "SQLServer EXCEL authorization"

#: backend/ticket/constants.py:278
msgid "SQLServer DB建立同步"
msgstr "SQLServer DB establishes synchronization"

#: backend/ticket/constants.py:281
msgid "Redis 创建CLB"
msgstr "Redis creates CLB"

#: backend/ticket/constants.py:282
msgid "Redis 删除CLB"
msgstr "Redis delete CLB"

#: backend/ticket/constants.py:283
msgid "Redis 域名绑定CLB"
msgstr "Redis domain name binding CLB"

#: backend/ticket/constants.py:284
msgid "Redis 域名解绑CLB"
msgstr "Redis domain name unbinding CLB"

#: backend/ticket/constants.py:285
msgid "Redis 创建Polaris"
msgstr "Redis creates Polaris"

#: backend/ticket/constants.py:286
msgid "Redis 删除Polaris"
msgstr "Redis Delete Polaris"

#: backend/ticket/constants.py:287
msgid "Redis 单节点部署"
msgstr "Redis standalone deployment"

#: backend/ticket/constants.py:288
msgid "Redis 主从节点部署"
msgstr "Redis master-slave node deployment"

#: backend/ticket/constants.py:290
msgid "Redis 提取 Key"
msgstr "Redis Extract Key"

#: backend/ticket/constants.py:291
msgid "Redis 删除 key"
msgstr "Redis delete key"

#: backend/ticket/constants.py:292
msgid "Redis 集群备份"
msgstr "Redis cluster backup"

#: backend/ticket/constants.py:293
msgid "Redis 集群启用"
msgstr "Redis cluster enabled"

#: backend/ticket/constants.py:294
msgid "Redis 集群禁用"
msgstr "Redis cluster disabled"

#: backend/ticket/constants.py:295
msgid "Redis 主从启用"
msgstr "Redis master-slave enabled"

#: backend/ticket/constants.py:296
msgid "Redis 主从禁用"
msgstr "Redis master-slave disabled"

#: backend/ticket/constants.py:297
msgid "Redis 集群删除"
msgstr "Redis cluster deletion"

#: backend/ticket/constants.py:298
msgid "Redis 主从集群删除"
msgstr "Redis master-slave cluster deletion"

#: backend/ticket/constants.py:299
msgid "Redis 集群清档"
msgstr "Redis cluster clear file"

#: backend/ticket/constants.py:302
msgid "Redis 整机替换"
msgstr "Redis whole machine replacement"

#: backend/ticket/constants.py:303
msgid "Redis 故障自愈"
msgstr "Redis fault self-healing"

#: backend/ticket/constants.py:304
msgid "Redis 故障自愈-实例下架"
msgstr "Redis fault self-healing-instance removed"

#: backend/ticket/constants.py:306
msgid "Redis Proxy扩容"
msgstr "Redis Proxy expansion"

#: backend/ticket/constants.py:307
msgid "Redis Proxy缩容"
msgstr "Redis Proxy scaling down"

#: backend/ticket/constants.py:308
msgid "Redis 新增DTS SERVER"
msgstr "Redis adds DTS SERVER"

#: backend/ticket/constants.py:309
msgid "Redis 删除DTS SERVER"
msgstr "Redis delete DTS SERVER"

#: backend/ticket/constants.py:310
msgid "Redis 集群数据构造"
msgstr "Redis cluster data structure"

#: backend/ticket/constants.py:310 backend/ticket/constants.py:311
#: backend/ticket/constants.py:315
msgid "数据构造"
msgstr "data structure"

#: backend/ticket/constants.py:311
msgid "Redis 数据构造记录删除"
msgstr "Redis data structure record deletion"

#: backend/ticket/constants.py:312
msgid "Redis 集群分片数变更"
msgstr "Redis cluster shard number change"

#: backend/ticket/constants.py:314
msgid "Redis 集群数据复制"
msgstr "Redis cluster data replication"

#: backend/ticket/constants.py:314
msgid "数据传输"
msgstr "Data transfer"

#: backend/ticket/constants.py:317
msgid "Redis 重建从库"
msgstr "Redis rebuilds the slave library"

#: backend/ticket/constants.py:318
msgid "Redis DTS在线切换"
msgstr "Redis DTS online switching"

#: backend/ticket/constants.py:319
msgid "Redis 数据迁移"
msgstr "Redis data migration"

#: backend/ticket/constants.py:320
msgid "Redis slots 迁移"
msgstr "Redis slots migration"

#: backend/ticket/constants.py:321
msgid "Redis 集群版本升级"
msgstr "Redis cluster version upgrade"

#: backend/ticket/constants.py:322
msgid "Redis 集群重装DBMON"
msgstr "Redis cluster reinstall DBMON"

#: backend/ticket/constants.py:323
msgid "predixy配置重写"
msgstr "predixy configuration rewrite"

#: backend/ticket/constants.py:324
msgid "Redis 集群proxys版本升级"
msgstr "Redis cluster proxys version upgrade"

#: backend/ticket/constants.py:325
msgid "Redis脏机清理"
msgstr "Redis dirty machine cleaning"

#: backend/ticket/constants.py:326
msgid "Redis 集群存储层cli连接kill"
msgstr "Redis cluster storage layer cli connection kill"

#: backend/ticket/constants.py:327
msgid "Redis集群域名重命名"
msgstr "Redis cluster domain name renaming"

#: backend/ticket/constants.py:328
msgid "Redis 集群设置maxmemory"
msgstr "Redis cluster settings maxmemory"

#: backend/ticket/constants.py:329
msgid "Redis 集群加载modules"
msgstr "Redis cluster loads modules"

#: backend/ticket/constants.py:338
msgid "Kafka 集群禁用"
msgstr "Kafka cluster disabled"

#: backend/ticket/constants.py:339
msgid "Kafka 集群删除"
msgstr "Kafka cluster deletion"

#: backend/ticket/constants.py:344
msgid "HDFS 实例重启"
msgstr "HDFS instance restart"

#: backend/ticket/constants.py:351
msgid "ES 集群扩容"
msgstr "ES cluster expansion"

#: backend/ticket/constants.py:352
msgid "ES 集群缩容"
msgstr "ES cluster shrinkage"

#: backend/ticket/constants.py:353
msgid "ES 实例重启"
msgstr "ES instance restart"

#: backend/ticket/constants.py:354
msgid "ES 集群替换"
msgstr "ES cluster replacement"

#: backend/ticket/constants.py:355
msgid "ES 集群启用"
msgstr "ES cluster enabled"

#: backend/ticket/constants.py:356
msgid "ES 集群禁用"
msgstr "ES cluster disabled"

#: backend/ticket/constants.py:357
msgid "ES 集群删除"
msgstr "ES cluster deletion"

#: backend/ticket/constants.py:362
msgid "Pulsar 实例重启"
msgstr "Pulsar instance restart"

#: backend/ticket/constants.py:369 backend/ticket/constants.py:370
#: backend/ticket/constants.py:373 backend/ticket/constants.py:374
msgid "实例管理"
msgstr "Instance management"

#: backend/ticket/constants.py:376
msgid "Doris 集群部署"
msgstr "Doris cluster deployment"

#: backend/ticket/constants.py:377
msgid "Doris 集群扩容"
msgstr "Doris cluster expansion"

#: backend/ticket/constants.py:378
msgid "Doris 集群缩容"
msgstr "Doris cluster scaling down"

#: backend/ticket/constants.py:379
msgid "Doris 实例重启"
msgstr "Doris instance restart"

#: backend/ticket/constants.py:380
msgid "Doris 集群替换"
msgstr "Doris cluster replacement"

#: backend/ticket/constants.py:381
msgid "Doris 集群启用"
msgstr "Doris cluster enabled"

#: backend/ticket/constants.py:382
msgid "Doris 集群禁用"
msgstr "Doris cluster disabled"

#: backend/ticket/constants.py:383
msgid "Doris 集群删除"
msgstr "Doris cluster deletion"

#: backend/ticket/constants.py:386
msgid "Riak 集群部署"
msgstr "Riak cluster deployment"

#: backend/ticket/constants.py:392
msgid "Riak 集群节点重启"
msgstr "Riak cluster node restart"

#: backend/ticket/constants.py:393
msgid "Riak 集群迁移"
msgstr "Riak cluster migration"

#: backend/ticket/constants.py:396
msgid "MongoDB 副本集集群部署"
msgstr "MongoDB replica set cluster deployment"

#: backend/ticket/constants.py:397
msgid "MongoDB 分片集群部署"
msgstr "MongoDB sharded cluster deployment"

#: backend/ticket/constants.py:398
msgid "MongoDB 变更脚本执行"
msgstr "MongoDB change script execution"

#: backend/ticket/constants.py:398
msgid "脚本任务"
msgstr "script task"

#: backend/ticket/constants.py:399
msgid "MongoDB 清档"
msgstr "MongoDB clearance"

#: backend/ticket/constants.py:400
msgid "MongoDB 全库备份"
msgstr "MongoDB full database backup"

#: backend/ticket/constants.py:401
msgid "MongoDB 库表备份"
msgstr "MongoDB database table backup"

#: backend/ticket/constants.py:402
msgid "MongoDB 扩容接入层"
msgstr "MongoDB expansion access layer"

#: backend/ticket/constants.py:403
msgid "MongoDB 缩容接入层"
msgstr "MongoDB scaling access layer"

#: backend/ticket/constants.py:404
msgid "MongoDB 扩容shard节点数"
msgstr "MongoDB expands the number of shard nodes"

#: backend/ticket/constants.py:405
msgid "MongoDB 缩容shard节点数"
msgstr "MongoDB shrinks the number of shard nodes"

#: backend/ticket/constants.py:406
msgid "MongoDB 集群容量变更"
msgstr "MongoDB cluster capacity changes"

#: backend/ticket/constants.py:410
msgid "MongoDB 集群删除"
msgstr "MongoDB cluster deletion"

#: backend/ticket/constants.py:411
msgid "MongoDB 整机替换"
msgstr "MongoDB whole machine replacement"

#: backend/ticket/constants.py:412
msgid "MongoDB 授权"
msgstr "MongoDB authorization"

#: backend/ticket/constants.py:413
msgid "MongoDB Excel授权"
msgstr "MongoDB Excel authorization"

#: backend/ticket/constants.py:414
msgid "MongoDB 定点回档"
msgstr "MongoDB fixed point recovery"

#: backend/ticket/constants.py:416
msgid "MongoDB 安装DBMon"
msgstr "MongoDB install DBMon"

#: backend/ticket/constants.py:419
msgid "云区域服务部署"
msgstr "Cloud Region Service Deployment"

#: backend/ticket/constants.py:420
msgid "云区域Nginx 服务部署"
msgstr "Nginx Service Deployment in Cloud Regions"

#: backend/ticket/constants.py:421
msgid "云区域nginx 服务重装"
msgstr "Cloud area nginx service reinstallation"

#: backend/ticket/constants.py:422
msgid "云区域nginx 服务替换"
msgstr "Cloud zone nginx service replacement"

#: backend/ticket/constants.py:423
msgid "云区域dns 服务部署"
msgstr "Cloud zone dns service deployment"

#: backend/ticket/constants.py:424
msgid "云区域dns 服务添加"
msgstr "cloud zone dns service added"

#: backend/ticket/constants.py:425
msgid "云区域dns 服务裁撤"
msgstr "Cloud zone dns service abolition"

#: backend/ticket/constants.py:426
msgid "云区域dns 服务替换"
msgstr "Cloud zone dns service replacement"

#: backend/ticket/constants.py:427
msgid "云区域dns 服务重装"
msgstr "Cloud zone dns service reinstallation"

#: backend/ticket/constants.py:428
msgid "云区域dbha 服务部署"
msgstr "Cloud region dbha service deployment"

#: backend/ticket/constants.py:429
msgid "云区域dbha 服务重装"
msgstr "Cloud region dbha service reinstallation"

#: backend/ticket/constants.py:430
msgid "云区域dbha 服务替换"
msgstr "Cloud zone dbha service replacement"

#: backend/ticket/constants.py:431
msgid "云区域dbha 服务新增"
msgstr "Cloud region dbha service added"

#: backend/ticket/constants.py:432
msgid "云区域dbha 服务删除"
msgstr "cloud zone dbha service delete"

#: backend/ticket/constants.py:433
msgid "云区域drs 服务部署"
msgstr "Cloud zone drs service deployment"

#: backend/ticket/constants.py:434
msgid "云区域drs 服务重启"
msgstr "Cloud zone drs service restart"

#: backend/ticket/constants.py:435
msgid "云区域drs 服务新增"
msgstr "Cloud zone drs service added"

#: backend/ticket/constants.py:436
msgid "云区域drs 服务删除"
msgstr "cloud zone drs service deletion"

#: backend/ticket/constants.py:437
msgid "云区域drs 服务替换"
msgstr "cloud zone drs service replacement"

#: backend/ticket/constants.py:438
msgid "云区域redis_dts 服务部署"
msgstr "Cloud region redis_dts service deployment"

#: backend/ticket/constants.py:439
msgid "云区域redis_dts 服务新增"
msgstr "New redis_dts service in cloud area"

#: backend/ticket/constants.py:440
msgid "云区域redis_dts 服务删除"
msgstr "Cloud region redis_dts service deletion"

#: backend/ticket/constants.py:447
msgid "VM 集群部署"
msgstr "VM cluster deployment"

#: backend/ticket/constants.py:448
msgid "VM 集群扩容"
msgstr "VM cluster expansion"

#: backend/ticket/constants.py:449
msgid "VM 集群缩容"
msgstr "VM cluster scaling down"

#: backend/ticket/constants.py:450
msgid "VM 实例重启"
msgstr "VM instance restart"

#: backend/ticket/constants.py:451
msgid "VM 集群替换"
msgstr "VM cluster replacement"

#: backend/ticket/constants.py:452
msgid "VM 集群启用"
msgstr "VM cluster enabled"

#: backend/ticket/constants.py:453
msgid "VM 集群禁用"
msgstr "VM cluster disabled"

#: backend/ticket/constants.py:454
msgid "VM 集群删除"
msgstr "VM cluster deletion"

#: backend/ticket/constants.py:463
msgid "生产部署"
msgstr "production deployment"

#: backend/ticket/constants.py:465
msgid "快速执行"
msgstr "fast execution"

#: backend/ticket/constants.py:467
msgid "结果忽略执行"
msgstr "result ignore execution"

#: backend/ticket/constants.py:471
msgid "交付"
msgstr "Deliver"

#: backend/ticket/constants.py:473
msgid "描述任务信息"
msgstr "Describe task information"

#: backend/ticket/constants.py:479
msgid "资源交付"
msgstr "resource delivery"

#: backend/ticket/constants.py:481
msgid "资源批量申请"
msgstr "Resource Batch Application"

#: backend/ticket/constants.py:483
msgid "资源批量交付"
msgstr "Batch delivery of resources"

#: backend/ticket/constants.py:500
msgid "单据过期配置"
msgstr "Document expiration configuration"

#: backend/ticket/constants.py:506
msgid "前置动作"
msgstr "pre-action"

#: backend/ticket/constants.py:507
msgid "后继动作"
msgstr "subsequent action"

#: backend/ticket/constants.py:513
msgid "自动重试"
msgstr "automatic retry"

#: backend/ticket/constants.py:514
msgid "手动重试"
msgstr "Manual retry"

#: backend/ticket/constants.py:520
msgid "通用错误代码"
msgstr "generic error code"

#: backend/ticket/constants.py:521
msgid "自动互斥重试错误代码"
msgstr "Automatic mutex retry error code"

#: backend/ticket/constants.py:522
msgid "手动互斥重试错误代码"
msgstr "Manual mutex retry error code"

#: backend/ticket/constants.py:523
msgid "系统终止错误代码"
msgstr "System termination error code"

#: backend/ticket/constants.py:541
msgid "需要人工确认"
msgstr "Requires manual confirmation"

#: backend/ticket/constants.py:542
msgid "无需确认"
msgstr "No confirmation required"

#: backend/ticket/constants.py:550
msgid "数据复制完成后自动断开同步关系"
msgstr "Automatically disconnect the synchronization relationship after data copy is completed"

#: backend/ticket/constants.py:551
msgid "数据复制完成后保持同步关系，定时发送断开同步提醒"
msgstr "After data replication is completed, the synchronization relationship is maintained and synchronization disconnection reminders are sent regularly."

#: backend/ticket/constants.py:569
msgid "一天一次"
msgstr "once a day"

#: backend/ticket/constants.py:570 backend/ticket/constants.py:580
msgid "一周一次"
msgstr "once a week"

#: backend/ticket/constants.py:578
msgid "一次"
msgstr "once"

#: backend/ticket/constants.py:579
msgid "三天一次"
msgstr "Once every three days"

#: backend/ticket/constants.py:588
msgid "删除同名key再写入"
msgstr "Delete the key with the same name and write it again"

#: backend/ticket/constants.py:589
msgid "保留同名key追加写入"
msgstr "Keep the key with the same name and append it to write"

#: backend/ticket/constants.py:590
msgid "清空集群后写入"
msgstr "Write after clearing the cluster"

#: backend/ticket/constants.py:598
msgid "立刻触发"
msgstr "Trigger immediately"

#: backend/ticket/constants.py:599
msgid "定时触发"
msgstr "Timing trigger"

#: backend/ticket/constants.py:605 backend/ticket/constants.py:614
msgid "审批"
msgstr "Approval"

#: backend/ticket/constants.py:606 backend/ticket/constants.py:615
msgid "认领"
msgstr "claim"

#: backend/ticket/constants.py:607
msgid "分派"
msgstr "dispatch"

#: backend/ticket/constants.py:608
msgid "自动处理"
msgstr "Automatic processing"

#: backend/ticket/constants.py:616
msgid "派单"
msgstr "dispatch order"

#: backend/ticket/constants.py:617
msgid "转单"
msgstr "transfer order"

#: backend/ticket/constants.py:618
msgid "终止节点和单据"
msgstr "Termination nodes and documents"

#: backend/ticket/constants.py:634
msgid "待办"
msgstr "Upcoming"

#: backend/ticket/constants.py:639
msgid "待确认"
msgstr "To be confirmed"

#: backend/ticket/constants.py:640
msgid "待审批"
msgstr "Pending approval"

#: backend/ticket/constants.py:646
msgid "审批过期"
msgstr "Approval expired"

#: backend/ticket/constants.py:647
msgid "执行过期"
msgstr "Execution expired"

#: backend/ticket/constants.py:648
msgid "单据流程todo过期"
msgstr "Document process todo expires"

#: backend/ticket/exceptions.py:18
msgid "单据模块异常"
msgstr "Ticket module exception"

#: backend/ticket/exceptions.py:23
msgid "ITSM单据不存在"
msgstr "ITSM ticket does not exist"

#: backend/ticket/exceptions.py:24
#, python-brace-format
msgid "ITSM单据[{sn}]不存在"
msgstr "ITSM ticket [{sn}] does not exist"

#: backend/ticket/exceptions.py:29
msgid "单据类型不支持"
msgstr "Ticket type does not support"

#: backend/ticket/exceptions.py:30
#, python-brace-format
msgid "单据类型不支持{ticket_type}"
msgstr "Ticket type does not support {ticket_type}"

#: backend/ticket/exceptions.py:35
msgid "单据参数校验异常"
msgstr "Ticket parameter verification exception"

#: backend/ticket/exceptions.py:36
#, python-brace-format
msgid "单据{ticket_type}参数校验异常"
msgstr "Ticket {ticket_type} parameter verification exception"

#: backend/ticket/exceptions.py:41
msgid "单据执行互斥"
msgstr "Mutual Execution of Tickets"

#: backend/ticket/exceptions.py:42
#, python-brace-format
msgid "单据{ticket_type}执行互斥"
msgstr "Ticket {ticket_type} executes mutual exclusion"

#: backend/ticket/exceptions.py:47
msgid "单据提交重复"
msgstr "Duplicate ticket submission"

#: backend/ticket/exceptions.py:48
#, python-brace-format
msgid "单据{ticket_type}提交重复"
msgstr "Duplicate submission of ticket {ticket_type}"

#: backend/ticket/exceptions.py:53
msgid "单据任务定时触发异常"
msgstr "Document task triggers exception regularly"

#: backend/ticket/exceptions.py:54
msgid "单据任务{ticket_type}定时触发异常"
msgstr "Document task {ticket_type} triggers exception regularly"

#: backend/ticket/exceptions.py:59
msgid "错误的todo处理人"
msgstr "Wrong todo handler"

#: backend/ticket/exceptions.py:60
#, python-brace-format
msgid "错误的todo处理人{username}"
msgstr "Wrong todo handler {username}"

#: backend/ticket/exceptions.py:65
msgid "审批处理异常"
msgstr "Approval processing exception"

#: backend/ticket/exceptions.py:66
#, python-brace-format
msgid "审批处理异常{username}"
msgstr "Approval processing exception {username}"

#: backend/ticket/exceptions.py:71
msgid "单据流程设置失败"
msgstr "Document process setup failed"

#: backend/ticket/exceptions.py:72
msgid "单据流程{ticket_type}设置失败"
msgstr "Document process {ticket_type} setting failed"

#: backend/ticket/flow_manager/base.py:110
msgid "{}流程已跳过"
msgstr "{} process skipped"

#: backend/ticket/flow_manager/delivery.py:42
msgid "交付成功"
msgstr "successful delivery"

#: backend/ticket/flow_manager/delivery.py:89
msgid "失败后继续提交"
msgstr "Continue submitting after failure"

#: backend/ticket/flow_manager/delivery.py:93
msgid "执行{}"
msgstr "implement{}"

#: backend/ticket/flow_manager/inner.py:85
#, python-brace-format
msgid "任务{status_display}"
msgstr "task {status_display}"

#: backend/ticket/flow_manager/inner.py:200
msgid "该任务流程跳过，相关信息可在历史任务中查看"
msgstr ""
"The task process is skipped, and relevant information can be viewed in the "
"historical task"

#: backend/ticket/flow_manager/inner.py:220
#, python-brace-format
msgid "(执行结果可忽略)任务状态: {status_display}"
msgstr "(The execution result can be ignored) Task status: {status_display}"

#: backend/ticket/flow_manager/itsm.py:63
msgid "未知单据"
msgstr "unknown document"

#: backend/ticket/flow_manager/itsm.py:70
msgid "审批中"
msgstr "Approval"

#: backend/ticket/flow_manager/itsm.py:71
msgid "已通过"
msgstr "passed"

#: backend/ticket/flow_manager/itsm.py:72
msgid "已撤销"
msgstr "Revoked"

#: backend/ticket/flow_manager/itsm.py:73
msgid "被拒绝"
msgstr "be rejected"

#: backend/ticket/flow_manager/pause.py:43
#, python-brace-format
msgid "暂停状态{status_display}"
msgstr "pause status {status_display}"

#: backend/ticket/flow_manager/pause.py:66
msgid "【{}】流程待确认，是否继续？"
msgstr "【{}】The process is pending confirmation. Do you want to continue?"

#: backend/ticket/flow_manager/resource.py:60
#, python-brace-format
msgid "资源申请状态{status_display}"
msgstr "Resource application status {status_display}"

#: backend/ticket/flow_manager/resource.py:165
msgid "资源不足申请失败，请前往补货后重试{}"
msgstr "The application failed due to insufficient resources, please try again after replenishing {}"

#: backend/ticket/flow_manager/resource.py:168
msgid "资源池服务出现系统错误，请联系管理员或稍后重试。错误信息: [{}]{}"
msgstr "A system error occurred in the resource pool service. Please contact the administrator or try again later. error message: [{}]{}"

#: backend/ticket/flow_manager/resource.py:174
msgid "资源池相关服务出现未知异常，请联系管理员处理。错误信息: [{}]{}"
msgstr "An unknown exception occurred in resource pool-related services. Please contact the administrator to handle it. error message: [{}]{}"

#: backend/ticket/flow_manager/resource.py:203
msgid "【{}】流程所需资源不足"
msgstr "【{}】Insufficient resources required for the process"

#: backend/ticket/flow_manager/resource.py:246
msgid "申请的资源总数为0，资源申请不合法"
msgstr "The total number of resources requested is 0, and the resource application is illegal."

#: backend/ticket/flow_manager/resource.py:284
msgid "资源申请下一个节点不为部署节点，请重新编排"
msgstr ""
"The next node for resource application is not a deployment node, please re-"
"arrange"

#: backend/ticket/flow_manager/resource.py:431
msgid "模拟资源申请失败，主机数量不够"
msgstr "Simulation resource application failed, the number of hosts is not enough"

#: backend/ticket/flow_manager/resource.py:437
msgid "模拟资源申请失败，主机数量不够：{} < {}"
msgstr "Simulation resource application failed, the number of hosts is not enough: {} &lt; {}"

#: backend/ticket/flow_manager/resource.py:439
#, python-format
msgid "模拟资源申请成功（%s）：%s"
msgstr "Simulation resource application successful (%s): %s"

#: backend/ticket/flow_manager/timer.py:56
msgid "定时时间{}，已超时{}，需手动触发。暂停状态:{}"
msgstr ""
"Timing time {}, has timed out {} and needs to be triggered manually. "
"Suspended state: {}"

#: backend/ticket/flow_manager/timer.py:64
msgid "定时节点已触发"
msgstr "Timing node has been triggered"

#: backend/ticket/flow_manager/timer.py:66
msgid "定时时间{}，倒计时:{}"
msgstr "Timing time {}, countdown: {}"

#: backend/ticket/flow_manager/timer.py:99
msgid "【{}】定时流程待确认,是否继续？"
msgstr ""
"【{}】The scheduled process is to be confirmed. Do you want to continue?"

#: backend/ticket/handler.py:164
msgid "云区域组件快速部署单据"
msgstr "Quick Deployment ticket for Cloud Region Components"

#: backend/ticket/handler.py:236
msgid "{} 终止了此单据"
msgstr "{} terminated this document"

#: backend/ticket/handler.py:268
msgid "单据[{}]没有需要终止的流程，跳过..."
msgstr "Document [{}] has no process that needs to be terminated, skip..."

#: backend/ticket/handler.py:282
msgid "操作人[{}]终止了单据[{}]"
msgstr "Operator [{}] terminated document [{}]"

#: backend/ticket/handler.py:298
msgid "不允许新增平台级别的流程设置"
msgstr "New platform-level process settings are not allowed"

#: backend/ticket/handler.py:304
msgid "业务级别不允许编辑[人工确认]设置"
msgstr "Business level does not allow editing of [Manual Confirmation] settings"

#: backend/ticket/handler.py:311
msgid "业务[{}]已存在{}的流程配置"
msgstr "Business [{}] already has the process configuration of {}"

#: backend/ticket/handler.py:313
msgid "业务[{}]已存在{}的集群流程配置"
msgstr "Business [{}] already has the cluster process configuration of {}"

#: backend/ticket/handler.py:318
msgid "业务[{}]已存在{}的相同范围配置"
msgstr "Business [{}] already exists in the same scope configuration of {}"

#: backend/ticket/mock_data.py:60
msgid "测试创建es集群"
msgstr "Test to create an es cluster"

#: backend/ticket/mock_data.py:65 backend/ticket/mock_data.py:92
#: backend/ticket/mock_data.py:121 backend/ticket/mock_data.py:158
msgid "深圳"
msgstr "Shenzhen"

#: backend/ticket/mock_data.py:87
msgid "测试创建kafka集群"
msgstr "Test to create a kafka cluster"

#: backend/ticket/mock_data.py:116
msgid "测试创建hdfs集群"
msgstr "Test to create hdfs cluster"

#: backend/ticket/mock_data.py:156
msgid "测试集群"
msgstr "test cluster"

#: backend/ticket/models/ticket.py:47
msgid "流程类型"
msgstr "Process type"

#: backend/ticket/models/ticket.py:48
msgid "流程别名"
msgstr "process alias"

#: backend/ticket/models/ticket.py:50
msgid "单据流程对象ID"
msgstr "Ticket process object ID"

#: backend/ticket/models/ticket.py:51
msgid "单据流程详情"
msgstr "Ticket process details"

#: backend/ticket/models/ticket.py:53
msgid "单据流程状态"
msgstr "Ticket process status"

#: backend/ticket/models/ticket.py:59
msgid "错误代码"
msgstr "error code"

#: backend/ticket/models/ticket.py:61
msgid "重试类型(专用于inner_flow)"
msgstr "retry type (specific to inner_flow)"

#: backend/ticket/models/ticket.py:63
msgid "流程上下文(用于扩展字段)"
msgstr "Process context (for extension fields)"

#: backend/ticket/models/ticket.py:66
msgid "单据流程(Flow)"
msgstr "Document process (Flow)"

#: backend/ticket/models/ticket.py:93 backend/ticket/models/ticket.py:237
#: backend/ticket/serializers.py:88 backend/ticket/serializers.py:291
#: backend/ticket/serializers.py:323
msgid "单据分组类型"
msgstr "Ticket grouping type"

#: backend/ticket/models/ticket.py:101
msgid "单据差异化详情"
msgstr "Ticket Differentiation Details"

#: backend/ticket/models/ticket.py:102
msgid "单据通知设置"
msgstr "Document notification settings"

#: backend/ticket/models/ticket.py:103
msgid "单据是否审阅过"
msgstr "Have the tickets been reviewed"

#: backend/ticket/models/ticket.py:106
msgid "单据(Ticket)"
msgstr "Ticket"

#: backend/ticket/models/ticket.py:195
msgid "正在自动创建单据，单据详情: {}"
msgstr "Ticket is being created automatically, ticket details: {}"

#: backend/ticket/models/ticket.py:204
msgid "单据{}正在初始化流程"
msgstr "Ticket {} is initializing the process"

#: backend/ticket/models/ticket.py:219
msgid "不支持该类型的单据"
msgstr "This type of document is not supported"

#: backend/ticket/models/ticket.py:225
msgid "发起故障自愈，告警事件 ID："
msgstr "Initiate fault self-healing, alarm event ID:"

#: backend/ticket/models/ticket.py:239
msgid "是否支持用户配置"
msgstr "Whether to support user configuration"

#: backend/ticket/models/ticket.py:240
msgid "单据配置 eg: {'need_itsm': false, 'need_manual_confirm': false}"
msgstr "Document configuration eg: {&#39;need_itsm&#39;: false, &#39;need_manual_confirm&#39;: false}"

#: backend/ticket/models/ticket.py:243
msgid "单据流程配置(TicketFlowsConfig)"
msgstr "Ticket flow configuration (TicketFlowsConfig)"

#: backend/ticket/models/ticket.py:327 backend/ticket/models/ticket.py:397
#: backend/ticket/models/todo.py:51
msgid "关联流程任务"
msgstr "Associate Process Task"

#: backend/ticket/models/ticket_result_relation.py:25
msgid "第三方系统id"
msgstr "Third-party system id"

#: backend/ticket/models/todo.py:50
msgid "待办标题"
msgstr "to do title"

#: backend/ticket/models/todo.py:53
msgid "待办人"
msgstr "to-do person"

#: backend/ticket/models/todo.py:55
msgid "待办类型"
msgstr "to-do type"

#: backend/ticket/models/todo.py:60
msgid "上下文"
msgstr "the context"

#: backend/ticket/models/todo.py:62
msgid "待办状态"
msgstr "pending status"

#: backend/ticket/models/todo.py:67
msgid "待办完成人"
msgstr "to-do completion person"

#: backend/ticket/models/todo.py:68
msgid "待办完成时间"
msgstr "to-do completion time"

#: backend/ticket/models/todo.py:73
msgid "待办(Todo)"
msgstr "Todo"

#: backend/ticket/models/todo.py:104
msgid "关联待办"
msgstr "Associated to-do"

#: backend/ticket/models/todo.py:105
msgid "操作"
msgstr "operate"

#: backend/ticket/models/todo.py:108 backend/ticket/models/todo.py:109
msgid "待办操作记录"
msgstr "To-do operation record"

#: backend/ticket/serializers.py:36
msgid "发送类型"
msgstr "Send type"

#: backend/ticket/serializers.py:38
msgid "包含用户名，用户需在蓝鲸平台注册，多个以逗号分隔"
msgstr "Contains usernames. Users need to register on the Blue Whale platform. Multiple ones are separated by commas."

#: backend/ticket/serializers.py:39
msgid "发件人/企微机器人ID"
msgstr "Sender/Qiwei Robot ID"

#: backend/ticket/serializers.py:40
msgid "(机器人专用)接收者，可以传@all，或者会话id"
msgstr "(robot only) receiver, you can pass @all, or session id"

#: backend/ticket/serializers.py:41
msgid "提醒群中的指定成员(@某个成员)，@all表示提醒所有人"
msgstr "Remind designated members in the group (@a member), @all means remind everyone"

#: backend/ticket/serializers.py:42
msgid "提醒手机号对应的群成员(@某个成员)，@all表示提醒所有人"
msgstr "Remind the group member corresponding to the mobile phone number (@a certain member), @all means remind everyone"

#: backend/ticket/serializers.py:43
msgid "是否只给指定用户可见，默认给所有人可见"
msgstr "Whether it is only visible to specified users. It is visible to everyone by default."

#: backend/ticket/serializers.py:89 backend/ticket/views.py:228
#: backend/ticket/views.py:229
msgid "单据详情"
msgstr "Ticket details"

#: backend/ticket/serializers.py:92
msgid "状态名称"
msgstr "state name"

#: backend/ticket/serializers.py:98
msgid "是否忽略重复提交"
msgstr "Whether to ignore duplicate submissions"

#: backend/ticket/serializers.py:101
msgid "通知设置"
msgstr "Notification settings"

#: backend/ticket/serializers.py:111
msgid "不允许提交敏感单据类型{}"
msgstr "Sensitive document types are not allowed to be submitted{}"

#: backend/ticket/serializers.py:134
msgid "流程待办"
msgstr "process to do"

#: backend/ticket/serializers.py:135
msgid "跳转链接"
msgstr "jump link"

#: backend/ticket/serializers.py:139
msgid "流程类型显示名"
msgstr "Process type display name"

#: backend/ticket/serializers.py:140
msgid "概览"
msgstr "overview"

#: backend/ticket/serializers.py:141
msgid "流程输出数据"
msgstr "Process output data"

#: backend/ticket/serializers.py:214
msgid "待办人列表"
msgstr "to-do list"

#: backend/ticket/serializers.py:232 backend/ticket/serializers.py:360
msgid "待办ID"
msgstr "to-do ID"

#: backend/ticket/serializers.py:233
msgid "动作"
msgstr "action"

#: backend/ticket/serializers.py:234 backend/ticket/serializers.py:361
msgid "动作参数"
msgstr "action parameters"

#: backend/ticket/serializers.py:241
msgid "是否是部署类单据"
msgstr "Is it a deployment document?"

#: backend/ticket/serializers.py:256 backend/ticket/serializers.py:260
msgid "单据流程的ID"
msgstr "ID of the ticket process"

#: backend/ticket/serializers.py:275 backend/ticket/serializers.py:283
msgid "查询起始时间"
msgstr "Query start time"

#: backend/ticket/serializers.py:276 backend/ticket/serializers.py:284
msgid "查询终止时间"
msgstr "query end time"

#: backend/ticket/serializers.py:278 backend/ticket/serializers.py:286
msgid "操作状态"
msgstr "operating state"

#: backend/ticket/serializers.py:308
msgid "单据可配置项"
msgstr "Document configurable items"

#: backend/ticket/serializers.py:313 backend/ticket/serializers.py:318
msgid "流程规则ID列表)"
msgstr "Process rule ID list)"

#: backend/ticket/serializers.py:322 backend/ticket/serializers.py:330
msgid "单据流程描述"
msgstr "Document process description"

#: backend/ticket/serializers.py:325
msgid "是否需要单据审批"
msgstr "Whether document approval is required"

#: backend/ticket/serializers.py:326
msgid "是否需要人工确认"
msgstr "Whether manual confirmation is required"

#: backend/ticket/serializers.py:335
msgid "主机所在业务"
msgstr "host business"

#: backend/ticket/serializers.py:341
msgid "请至少提供两台机器来部署云区域组件"
msgstr "Please provide at least two machines to deploy cloud zone components"

#: backend/ticket/serializers.py:347
msgid "单据ID(逗号分割)"
msgstr "Document ID (comma separated)"

#: backend/ticket/serializers.py:351
msgid "是否通过"
msgstr "pass or not"

#: backend/ticket/serializers.py:352
msgid "单据id集合"
msgstr "Document ID collection"

#: backend/ticket/serializers.py:370
msgid "统一动作"
msgstr "Unified action"

#: backend/ticket/serializers.py:372
msgid "待办操作列表"
msgstr "To-do list"

#: backend/ticket/serializers.py:384
msgid "待办id{}不存在"
msgstr "To-do id{} does not exist"

#: backend/ticket/tasks/ticket_tasks.py:197
msgid "集群{}数据校验正确，不需要进行数据修复"
msgstr "Cluster {} data verification is correct, no data repair is required"

#: backend/ticket/tasks/ticket_tasks.py:225
msgid "集群{}存在数据不一致，自动创建的数据修复单据"
msgstr ""
"There is data inconsistency in the cluster {}, the automatically created "
"data repair ticket"

#: backend/ticket/tasks/ticket_tasks.py:295
msgid "任务{}立即执行"
msgstr "Task {} executes immediately"

#: backend/ticket/tasks/ticket_tasks.py:298
msgid "任务{}定时执行，定时触发时间:{}"
msgstr "The task {} is executed regularly, and the timing trigger time: {}"

#: backend/ticket/tasks/ticket_tasks.py:306
msgid "不支持的定时类型: {}"
msgstr "Unsupported timing type: {}"

#: backend/ticket/tasks/ticket_tasks.py:337
#, python-brace-format
msgid ""
"        单据类型：{ticket_type}\n"
"        所属业务：{biz_name}\n"
"        提单人：{creator}\n"
"        提单时间：{submit_time}\n"
"        处理人：{processor}\n"
"        执行情况：{flow_status}\n"
"        查看详情：{detail_address}        "
msgstr "Document type: {ticket_type}\n Business: {biz_name}\n Bill of lading: {creator}\n Bill of lading time: {submit_time}\n Processor: {processor}\n Execution status: {flow_status}\n View details :{detail_address}"

#: backend/ticket/tasks/ticket_tasks.py:364
#, python-brace-format
msgid ""
"\n"
"审批链接：{approval_address}"
msgstr "\nApproval link: {approval_address}"

#: backend/ticket/tasks/ticket_tasks.py:375
#, python-brace-format
msgid "【数据库管理】 {flow_msg_type}通知"
msgstr "【Database Management】 {flow_msg_type} notification"

#: backend/ticket/todos/__init__.py:99
msgid "确认执行"
msgstr "Confirm execution"

#: backend/ticket/todos/__init__.py:100
msgid "终止单据"
msgstr "Termination ticket"

#: backend/ticket/todos/__init__.py:101
msgid "资源重新申请"
msgstr "Resource re-application"

#: backend/ticket/todos/pause_todo.py:42 backend/ticket/todos/pause_todo.py:62
#: backend/ticket/todos/pipeline_todo.py:40
msgid "{}不在处理人: {}中，无法处理"
msgstr "{} is not among the handlers: {} and cannot be processed"

#: backend/ticket/views.py:194
msgid "实例{}已存在相同类型的单据[{}]正在运行，请确认是否重复提交"
msgstr ""
"The same type of ticket [{}] already exists in the instance {} and is "
"running, please confirm whether to submit it repeatedly"

#: backend/ticket/views.py:205
msgid "集群{}已存在相同类型的单据[{}]正在运行，请确认是否重复提交"
msgstr ""
"The same type of ticket [{}] already exists in the cluster {} and is "
"running, please confirm whether to submit it repeatedly"

#: backend/ticket/views.py:245
msgid "单据列表"
msgstr "Ticket list"

#: backend/ticket/views.py:286 backend/ticket/views.py:288
msgid "创建单据(允许创建敏感单据)"
msgstr "Create documents (allows creation of sensitive documents)"

#: backend/ticket/views.py:296
msgid "获取单据流程"
msgstr "Obtain ticket process"

#: backend/ticket/views.py:297
msgid "流程信息"
msgstr "process information"

#: backend/ticket/views.py:308
msgid "单据回调"
msgstr "Ticket callback"

#: backend/ticket/views.py:320
msgid "单据流程重试"
msgstr "Ticket process retry"

#: backend/ticket/views.py:331
msgid "单据流程终止"
msgstr "Document process terminated"

#: backend/ticket/views.py:343
msgid "获取单据类型列表"
msgstr "Get a list of ticket types"

#: backend/ticket/views.py:358
msgid "节点列表"
msgstr "node list"

#: backend/ticket/views.py:386
msgid "待办单据列表"
msgstr "To-Do List"

#: backend/ticket/views.py:424
msgid "待办处理"
msgstr "pending"

#: backend/ticket/views.py:450
msgid "待办单据数"
msgstr "Number of pending tickets"

#: backend/ticket/views.py:473
msgid "查询集群变更单据事件"
msgstr "Query cluster change ticket events"

#: backend/ticket/views.py:508
msgid "查询集群实例变更单据事件"
msgstr "Query cluster instance change ticket events"

#: backend/ticket/views.py:543
msgid "查询可编辑单据流程描述"
msgstr "Query editable document process description"

#: backend/ticket/views.py:570
msgid "修改可编辑的单据流程规则"
msgstr "Modify editable document process rules"

#: backend/ticket/views.py:581
msgid "创建单据流程规则"
msgstr "Create document process rules"

#: backend/ticket/views.py:592
msgid "删除单据流程规则"
msgstr "Delete document process rules"

#: backend/ticket/views.py:603
msgid "快速部署云区域组件"
msgstr "Quickly deploy cloud zone components"

#: backend/ticket/views.py:618
msgid "批量审批"
msgstr "Batch approval"

#: backend/ticket/views.py:639
msgid "批量待办处理"
msgstr "Batch to-do processing"

#: backend/utils/time.py:157
msgid "搜索的时间序列为空"
msgstr "The time series being searched is empty"

#: backend/utils/time.py:169
msgid "无法找到合适的附近时间点"
msgstr "Unable to find a suitable nearby time point"

#: backend/version_log/config.py:30
msgid "版本日志"
msgstr "version log"

#: backend/version_log/models.py:43
msgid "访问版本"
msgstr "access version"

#: backend/version_log/models.py:48
msgid "版本日志访问记录"
msgstr "Version log access records"

#: backend/version_log/views.py:44
msgid "访问出错，请联系管理员。"
msgstr "System error, please contact administrator"

#: backend/version_log/views.py:48
msgid "日志列表获取成功"
msgstr "Log list obtained successfully"

#: backend/version_log/views.py:64
msgid "日志版本文件没找到，请联系管理员"
msgstr "The log version file was not found, please contact the administrator"

#: backend/version_log/views.py:68
msgid "日志详情获取成功"
msgstr "Log details obtained successfully"

#~ msgid "部分列表元素的参数不合法，请检查"
#~ msgstr "The parameters of some list elements are invalid, please check"

#~ msgid "查询任务Node详情"
#~ msgstr "Querying Task Node Details"

#~ msgid "SQL语句导入"
#~ msgstr "SQL statement import"

#~ msgid "请补充：指定云区域的proxy信息"
#~ msgstr "Please add: the proxy information of the specified cloud area"

#~ msgid "主从高可用-主域名配置"
#~ msgstr "Master-slave high availability - master domain name configuration"

#~ msgid "主从高可用-从域名配置"
#~ msgstr "Master-slave high availability-slave domain name configuration"

#~ msgid "单节点-域名配置"
#~ msgstr "standalone-domain name configuration"

#~ msgid "端口默认值-Proxy起始端口"
#~ msgstr "Port default value - Proxy start port"

#~ msgid "端口默认值-MySQL起始端口"
#~ msgstr "Port default value - MySQL start port"

#~ msgid "MySQL的RSA秘钥"
#~ msgstr "MySQL RSA key"

#~ msgid "密码加密失败: {}"
#~ msgstr "Password encryption failed: {}"

#~ msgid "密码解密失败: {}"
#~ msgstr "Password decryption failed: {}"

#~ msgid "RSA密钥"
#~ msgstr "RSA key"

#~ msgid "RSA秘钥"
#~ msgstr "RSA key"

#~ msgid "提供服务 节点"
#~ msgstr "Provide service node"

#~ msgid "proxy {} 在集群里边"
#~ msgstr "proxy {} in the cluster"

#~ msgid "DB 模块 ID"
#~ msgstr "DB module ID"

#~ msgid "拓扑层级"
#~ msgstr "topology level"

#~ msgid "系统角色"
#~ msgstr "system role"

#~ msgid "同步后继"
#~ msgstr "sync successor"

#~ msgid "同步上联"
#~ msgstr "sync uplink"

#~ msgid "绑定入口"
#~ msgstr "binding entry"

#~ msgid "接入层列表"
#~ msgstr "access layer list"

#~ msgid "IDC 城市 ID"
#~ msgstr "IDC City ID"

#~ msgid "逻辑城市 ID"
#~ msgstr "Logical City ID"

#~ msgid "逻辑城市名"
#~ msgstr "logical city name"

#~ msgid "网络设备 ID"
#~ msgstr "network device ID"

#~ msgid "online"
#~ msgstr "online"

#~ msgid "offline"
#~ msgstr "offline"

#~ msgid "destroy"
#~ msgstr "destroy"

#~ msgid "tendbsingle"
#~ msgstr "tendbsingle"

#~ msgid "backend_master"
#~ msgstr "backend_master"

#~ msgid "backend_repeater"
#~ msgstr "backend_repeater"

#~ msgid "backend_slave"
#~ msgstr "backend_slave"

#~ msgid "redis_master"
#~ msgstr "redis_master"

#~ msgid "redis_slave"
#~ msgstr "redis_slave"

#~ msgid "es_datanode_hot"
#~ msgstr "es_datanode_hot"

#~ msgid "es_datanode_cold"
#~ msgstr "es_datanode_cold"

#~ msgid "hdfs_namenode"
#~ msgstr "hdfs_namenode"

#~ msgid "hdfs_zookeeper"
#~ msgstr "hdfs_zookeeper"

#~ msgid "hdfs_journalnode"
#~ msgstr "hdfs_journalnode"

#~ msgid "riak_node"
#~ msgstr "riak_node"

#~ msgid "部署方案不匹配"
#~ msgstr "Deployment scheme does not match"

#~ msgid "集群类型:{cluster_type} 和部署方案:{deploy_plan_class} 不匹配"
#~ msgstr ""
#~ "Cluster type: {cluster_type} and deployment plan: {deploy_plan_class} do "
#~ "not match"

#~ msgid "业务需要在 dba 业务下新增一个 set, 需要记录下这个 set id"
#~ msgstr ""
#~ "The business needs to add a new set under the dba business, and the set "
#~ "id needs to be recorded"

#~ msgid "部署方法ID"
#~ msgstr "Deployment Method ID"

#~ msgid "{} 未实现 status flag"
#~ msgstr "{} unimplemented status flag"

#~ msgid "find primary show slave status failed: {}"
#~ msgstr "find primary show slave status failed: {}"

#~ msgid "分组表"
#~ msgstr "group table"

#~ msgid "集群分片总数"
#~ msgstr "Total number of cluster shards"

#~ msgid "集群存储预估总容量/G"
#~ msgstr "Estimated total capacity of cluster storage/G"

#~ msgid "方案描述"
#~ msgstr "Program description"

#~ msgid "drop_cluster - 方便调试，后面去掉"
#~ msgstr "drop_cluster - convenient for debugging, removed later"

#~ msgid "drop_my_cluster - 方便调试，后面去掉"
#~ msgstr "drop_my_cluster - convenient for debugging, removed later"

#~ msgid "告警通知组类别"
#~ msgstr "Alarm notification group category"

#~ msgid "DBA系统专用"
#~ msgstr "Dedicated to DBA system"

#~ msgid "[gcsdns]查询和上报切换队列"
#~ msgstr "[gcsdns] query and report switch queue"

#~ msgid ""
#~ "dts task操作,目前支持 同步完成(syncStopTodo)、强制终止(ForceKillTaskTodo) "
#~ "两个操作"
#~ msgstr ""
#~ "The dts task operation currently supports two operations: synchronous "
#~ "completion (syncStopTodo) and forced termination (ForceKillTaskTodo)"

#~ msgid "dts tasks重新开始"
#~ msgstr "dts tasks restart"

#~ msgid "dts tasks重试当前步骤"
#~ msgstr "dts tasks retry current step"

#~ msgid "token:{}不存在，请传入校验token"
#~ msgstr "token: {} does not exist, please pass in the verification token"

#~ msgid "部署方案操作失败"
#~ msgstr "Deployment scenario operation failed"

#~ msgid "Redis部署方案名称"
#~ msgstr "Redis deployment scheme name"

#~ msgid "Redis集群类型"
#~ msgstr "Redis cluster type"

#~ msgid "部署方案id列表"
#~ msgstr "Deployment scheme id list"

#~ msgid "新建{}部署方案"
#~ msgstr "New {} deployment plan"

#~ msgid "更新{}部署方案"
#~ msgstr "update{} deployment scheme"

#~ msgid "部署方案: {} 正在被引用，无法修改相关参数"
#~ msgstr ""
#~ "Deployment plan: {} is being referenced, cannot modify related parameters"

#~ msgid "查询{}部署方案列表"
#~ msgstr "Query the list of {} deployment schemes"

#~ msgid "删除{}部署方案"
#~ msgstr "delete {} deployment scheme"

#~ msgid "部署方案: {} 正在被引用，无法删除"
#~ msgstr "Deployment scheme: {} is being referenced and cannot be removed"

#~ msgid "批量删除{}部署方案"
#~ msgstr "Batch delete {} deployment schemes"

#~ msgid "部署方案: {} 存在被引用，无法删除"
#~ msgstr ""
#~ "Deployment scheme: {} exists and is referenced and cannot be deleted"

#~ msgid "通过下发脚本到机器获取集群备份记录"
#~ msgstr "Get the cluster backup record by sending the script to the machine"

#~ msgid "根据job id查询任务执行状态和执行结果"
#~ msgstr "Query task execution status and execution results based on job id"

#~ msgid "excel表头校验不正确! 提示: 请按照模板填写授权数据"
#~ msgstr ""
#~ "The excel header verification is incorrect! Reminder: Please fill in the "
#~ "authorization data according to the template"

#~ msgid "授权数据缓存UID"
#~ msgstr "Authorization Data Cache UID"

#~ msgid "密码是否满足强度"
#~ msgstr "Whether the password meets the strength"

#~ msgid "不允许sql_content和sql_file同时为空，请至少填写一项"
#~ msgstr ""
#~ "Both sql_content and sql_file are not allowed to be empty at the same "
#~ "time, please fill in at least one item"

#~ msgid "sql执行的DB信息"
#~ msgstr "DB information executed by sql"

#~ msgid "高危信息提示"
#~ msgstr "High-risk information reminder"

#~ msgid "时间{}格式解析失败: {}，请按照{}格式输入时间"
#~ msgstr ""
#~ "Time {} format parsing failed: {}, please enter time according to {} "
#~ "format"

#~ msgid "sql数据是否成功录入到pipeline"
#~ msgstr "Whether the sql data is successfully entered into the pipeline"

#~ msgid "改变流程配置"
#~ msgstr "Change process configuration"

#~ msgid "查询流程配置"
#~ msgstr "Query process configuration"

#~ msgid "创建分区后自动执行的分区单据"
#~ msgstr "Partition ticket executed automatically after partition creation"

#~ msgid "更新者"
#~ msgstr "updater"

#~ msgid "分区使用的端口"
#~ msgstr "The port used by the partition"

#~ msgid "同一业务不同集群"
#~ msgstr "Different clusters of the same business"

#~ msgid "不同业务不同集群"
#~ msgstr "Different business clusters"

#~ msgid "复制到其他系统"
#~ msgstr "copy to other system"

#~ msgid "从回档临时环境复制数据"
#~ msgstr "Copy data from the archive staging environment"

#~ msgid "用户自建redis迁移到DBM"
#~ msgstr "Migrating user-built redis to DBM"

#~ msgid "用户确认修复"
#~ msgstr "User confirms the fix"

#~ msgid "是否数据修复"
#~ msgstr "Data repair Execution"

#~ msgid "bill备注"
#~ msgstr "Bill Remarks"

#~ msgid "非超级用户，暂不允许调用此接口"
#~ msgstr "Non-super users are not allowed to call this interface"

#~ msgid "打包下载结果文件列表"
#~ msgstr "Package download result file list"

#~ msgid "deploy-rotate"
#~ msgstr "deploy-rotate"

#~ msgid "backup-truncate-database"
#~ msgstr "backup-truncate-database"

#~ msgid "长久存储-保留三年"
#~ msgstr "Long-term storage - keep for three years"

#~ msgid "下发MySQL介质{}"
#~ msgstr "Send MySQL media {}"

#~ msgid "初始化机器{}"
#~ msgstr "init machine{}"

#~ msgid "获取MASTER节点备份介质{}"
#~ msgstr "Get the MASTER node backup media{}"

#~ msgid "获取SLAVE节点备份介质{}"
#~ msgstr "Get SLAVE node backup media {}"

#~ msgid "切换实例"
#~ msgstr "switch instance"

#~ msgid "成对迁移集群的主从节点"
#~ msgstr "Migrating the master and slave nodes of the cluster in pairs"

#~ msgid "卸载主从实例完毕，修改元数据"
#~ msgstr "After uninstalling the master-slave instance, modify the metadata"

#~ msgid "准备重命名参数"
#~ msgstr "Prepare to rename parameters"

#~ msgid "构造过滤正则"
#~ msgstr "Construct filter regular"

#~ msgid "获得源目标的库表"
#~ msgstr "Get the db table of the source target"

#~ msgid "检查源数据库是否在用"
#~ msgstr "Check if the source database is in use"

#~ msgid "表迁移"
#~ msgstr "table migration"

#~ msgid "迁移源库中其他对象"
#~ msgstr "Migrate other objects in the source instance"

#~ msgid "确认源数据库已空"
#~ msgstr "Confirm the source database is empty"

#~ msgid "删除源数据库"
#~ msgstr "delete source database"

#~ msgid "{} {} 重命名数据库"
#~ msgstr "{} {} rename database"

#, python-format
#~ msgid "%s slave 节点不存在"
#~ msgstr "%s slave node does not exist"

#~ msgid "下发db-actor到集群主从节点"
#~ msgstr "Send db-actor to the master and slave nodes of the cluster"

#~ msgid "slave重建之新增repl帐户{}"
#~ msgstr "New repl account {} for slave reconstruction"

#~ msgid "slave重建之获取MASTER节点备份介质{}"
#~ msgstr "Slave reconstruction to obtain MASTER node backup media {}"

#~ msgid "slave重建之获取SLAVE节点备份介质{}"
#~ msgstr "Obtain SLAVE node backup media {} for slave reconstruction"

#~ msgid "判断备份文件来源,并传输备份文件到新slave节点{}"
#~ msgstr ""
#~ "Determine the source of the backup file, and transfer the backup file to "
#~ "the new slave node{}"

#~ msgid "克隆主节点账号权限到新从节点"
#~ msgstr "Clone the master node account permissions to the new slave node"

#~ msgid "old slave卸载完毕，修改元数据"
#~ msgstr "After the old slave is uninstalled, modify the metadata"

#~ msgid "slave 原地恢复数据{}"
#~ msgstr "slave restore data in place{}"

#~ msgid "Restore local Slave 本地重建"
#~ msgstr "Restore local Slave local reconstruction"

#~ msgid "添加slave之新增repl帐户{}"
#~ msgstr "Add a new repl account {} for slave"

#~ msgid "添加slave之获取MASTER节点备份介质{}"
#~ msgstr "Add slave to obtain MASTER node backup media{}"

#~ msgid "添加slave之获取SLAVE节点备份介质{}"
#~ msgstr "Add slave to obtain SLAVE node backup media{}"

#~ msgid "添加slave之恢复数据{}"
#~ msgstr "Add recovery data of slave {}"

#~ msgid "添加Slave之恢复slave"
#~ msgstr "Add Slave recovery slave"

#~ msgid "添加从库flow"
#~ msgstr "Add slave flow"

#~ msgid "清理机器配置{}"
#~ msgstr "clean up machine config{}"

#~ msgid "清理机器flow"
#~ msgstr "Clean up machine flow"

#~ msgid "定点恢复之获取MASTER节点备份介质{}"
#~ msgstr "Obtain the MASTER node backup media {} for fixed-point recovery"

#~ msgid "定点恢复之获取SLAVE节点备份介质{}"
#~ msgstr "Obtaining backup media of SLAVE nodes for fixed-point recovery {}"

#~ msgid "判断备份文件来源,并传输备份文件到新定点恢复节点{}"
#~ msgstr ""
#~ "Determine the source of the backup file, and transfer the backup file to "
#~ "the new designated recovery node{}"

#~ msgid "传输文件{}"
#~ msgstr "transfer file{}"

#~ msgid "卸载rollback实例{}"
#~ msgstr "unload rollback instance{}"

#~ msgid "卸载rollback实例完毕，修改元数据"
#~ msgstr "After uninstalling the rollback instance, modify the metadata"

#~ msgid "获得清档目标"
#~ msgstr "get clearance target"

#~ msgid "检查清档目标是否在用"
#~ msgstr "Check if the cleanup target is in use"

#~ msgid "生成备份库名"
#~ msgstr "Generate backup database name"

#~ msgid "备份清档表"
#~ msgstr "backup cleanup table"

#~ msgid "重建空表"
#~ msgstr "rebuild empty table"

#~ msgid "备份库中其他对象"
#~ msgstr "Other objects in the backup db"

#~ msgid "{} {} 清档"
#~ msgstr "{} {} clear file"

#~ msgid "Redis-{}-安装原子任务"
#~ msgstr "Redis-{}-install atomic tasks"

#~ msgid "Redis-001-{}-下发介质包"
#~ msgstr "Redis-001-{}-deliver media package"

#~ msgid "Redis-005-{}-安装监控"
#~ msgstr "Redis-005-{}-install monitoring"

#~ msgid "Redis-101-{}-下发介质包"
#~ msgstr "Redis-101-{}-deliver media package"

#~ msgid "Redis-102-{}-卸载dbmon"
#~ msgstr "Redis-102-{}-uninstall dbmon"

#~ msgid "Redis-103-{}-建立主从关系"
#~ msgstr "Redis-103-{}-establish master-slave relationship"

#~ msgid "Redis-104-{}-建立主从关系"
#~ msgstr "Redis-104-{}-establish master-slave relationship"

#~ msgid "Redis-801-{}-下发介质包"
#~ msgstr "Redis-801-{}-deliver media package"

#~ msgid "Redis-802-{}-请求检查"
#~ msgstr "redis-802-{}-request-check"

#~ msgid "Redis-003-{}-下发介质包"
#~ msgstr "Redis-003-{}-deliver media package"

#~ msgid "Redis-504-{}-实例切换"
#~ msgstr "Redis-504-{}-instance switching"

#~ msgid "源集群:{} 数据迁移到 目的集群:{}"
#~ msgstr "Source cluster: {} Data migration to destination cluster: {}"

#~ msgid "REDIS_MASTER-裁撤替换"
#~ msgstr "REDIS_MASTER - undo replace"

#~ msgid "REDIS_MASTER-故障自愈"
#~ msgstr "REDIS_MASTER - fault self-healing"

#~ msgid "[redis]卸载bkdbmon"
#~ msgstr "[redis] uninstall bkdbmon"

#~ msgid "清理Redis配置"
#~ msgstr "Clean up Redis configuration"

#~ msgid "清理Proxy配置"
#~ msgstr "Clean up the Proxy configuration"

#~ msgid "REDIS-重装DBMON"
#~ msgstr "REDIS-Reinstall DBMON"

#~ msgid "{}部署bkdbmon"
#~ msgstr "{} deploy bkdbmon"

#~ msgid "{}添加域名"
#~ msgstr "{} add domain name"

#~ msgid "主机转移"
#~ msgstr "host transfer"

#~ msgid "{}删除域名"
#~ msgstr "{} delete domain name"

#~ msgid "下架proxy实例"
#~ msgstr "Remove the proxy instance"

#~ msgid "proxy下架元数据"
#~ msgstr "Proxy removal metadata"

#~ msgid "集群[{}]添加spider master节点"
#~ msgstr "Cluster [{}] add spider master node"

#~ msgid "部署spider-ctl集群"
#~ msgstr "Deploy the spider-ctl cluster"

#~ msgid "spider上对中控主节点进行授权"
#~ msgstr "Authorize the central control master node on the spider"

#~ msgid "中控主节点注册临时spider节点路由信息"
#~ msgstr ""
#~ "The central control master node registers the routing information of the "
#~ "temporary spider node"

#~ msgid "ctl 执行库表备份"
#~ msgstr "ctl perform database table backup"

#~ msgid "存入的存储节点数量不是偶数，请检查！"
#~ msgstr ""
#~ "The number of stored storage nodes is not an even number, please check!"

#~ msgid "ctl 执行全库备份"
#~ msgstr "ctl perform full database backup"

#~ msgid "适配备份库映射"
#~ msgstr "Adapt backup database mapping"

#~ msgid "重建备份库"
#~ msgstr "Rebuild the backup database"

#~ msgid "{} on remote {} 清档"
#~ msgstr "{} on remote {} clear file"

#~ msgid "处理集群表"
#~ msgstr "Working with clustered tables"

#~ msgid "{} on remote {} 重命名数据库"
#~ msgstr "{} on remote {} rename database"

#~ msgid "删除集群源库"
#~ msgstr "Delete the cluster source database"

#~ msgid "【{}】自动化流程待确认,是否继续？"
#~ msgstr ""
#~ "【{}】The automated process is pending confirmation. Do you want to "
#~ "continue?"

#~ msgid "{}-空闲检查"
#~ msgstr "{} - idle check"

#~ msgid "空闲检查失败"
#~ msgstr "idle check failed"

#~ msgid "错误详情{}"
#~ msgstr "error details{}"

#, python-format
#~ msgid "输入参数%s不符合【时区(+08:00、-08:00)】格式"
#~ msgstr ""
#~ "The input parameter %s does not conform to the [time zone (+08:00, "
#~ "-08:00)] format"

#, python-format
#~ msgid "输入参数%s不符合【秒(s) 或 时间(%%Y-%%m-%%d %%H:%%M:%%S)】格式"
#~ msgstr ""
#~ "The input parameter %s does not conform to the [second (s) or time (%%Y-"
#~ "%%m-%%d %%H:%%M:%%S)] format"

#~ msgid "「授权接口返回结果异常」{}"
#~ msgstr "Authorization interface returns abnormal result {}"

#~ msgid "分区管理服务api异常，相关信息: {}"
#~ msgstr "Partition management service api exception, related information: {}"

#~ msgid "获取分区语句成功"
#~ msgstr "Get partition statement succeeded"

#~ msgid "语义检查出发的自动创建单据"
#~ msgstr "Automatic creation of tickets starting from semantic check"

#~ msgid "task:{} {}:{} 迁移失败"
#~ msgstr "task:{} {}:{} migration failed"

#~ msgid "{}中有{}个proxy不是running状态"
#~ msgstr "{} proxy in {} is not running"

#~ msgid "查询主机bk_host_id失败[数量不匹配]"
#~ msgstr "Failed to query host bk_host_id [number does not match]"

#~ msgid "查询空闲机模块ID bk_module_id 失败"
#~ msgstr "Failed to query the idle machine module ID bk_module_id"

#~ msgid "导入资源池失败"
#~ msgstr "Failed to import resource pool"

#~ msgid "单实例架构"
#~ msgstr "single instance architecture"

#~ msgid "数据库管理"
#~ msgstr "database management"

#~ msgid "平台管理"
#~ msgstr "platform management"

#~ msgid "JWT鉴权错误，错误信息: {}"
#~ msgstr "JWT authentication error, error message: {}"

#~ msgid ""
#~ "新DB名字{}格式不合法，请保证数据库名以小写字母开头且只能包含字母、数字、连"
#~ "接符-和下划线_，并且长度在1到39字符之间"
#~ msgstr ""
#~ "The format of the new DB name {} is invalid. Please ensure that the "
#~ "database name starts with a lowercase letter and can only contain "
#~ "letters, numbers, hyphens - and underscores _, and the length is between "
#~ "1 and 39 characters"

#~ msgid "不允许%单独使用，不允许*组合使用"
#~ msgstr ""
#~ "% is not allowed to be used alone, and * is not allowed to be used in "
#~ "combination"

#~ msgid "包含通配符时，每一个输入框只能允许单一对象"
#~ msgstr ""
#~ "When wildcards are included, each input box can only allow a single object"

#~ msgid "字符不允许只包含空格"
#~ msgstr "Characters are not allowed to contain only spaces"

#~ msgid "DB选择框不允许为空"
#~ msgstr "The DB selection box is not allowed to be empty"

#~ msgid "table选择框不允许为空"
#~ msgstr "The table selection box is not allowed to be empty"

#~ msgid "忽略DB选择框和忽略table选择框要么同时为空，要么同时不为空"
#~ msgstr ""
#~ "Ignore the DB selection box and ignore the table selection box are either "
#~ "empty or not empty at the same time"

#~ msgid "规格"
#~ msgstr "Specification"

#~ msgid "master节点数不为3台! 请保证master的部署节点为3"
#~ msgstr ""
#~ "The number of master nodes is not 3! Please ensure that the deployment "
#~ "nodes of the master are 3"

#~ msgid "matser实例状态异常，暂时无法执行该单据类型：{}"
#~ msgstr ""
#~ "The state of the matser instance is abnormal, and this ticket type cannot "
#~ "be executed temporarily: {}"

#~ msgid "proxy实例状态异常，暂时无法执行该单据类型：{}"
#~ msgstr ""
#~ "The status of the proxy instance is abnormal, and the ticket type cannot "
#~ "be executed temporarily: {}"

#~ msgid "系统内置数据库[{}]，不允许重命名"
#~ msgstr "System built-in database [{}], renaming is not allowed"

#~ msgid "sql文件路径"
#~ msgstr "sql file path"

#~ msgid "模拟执行node_id"
#~ msgstr "Simulate the execution of node_id"

#~ msgid "模拟执行root_id"
#~ msgstr "Simulate the execution of root_id"

#~ msgid "sql文件名"
#~ msgstr "sql file name"

#~ msgid "目标变更db"
#~ msgstr "target change db"

#~ msgid "备份匹配DB列表"
#~ msgstr "Backup matching DB list"

#~ msgid "备份匹配Table列表"
#~ msgstr "Backup matching Table list"

#~ msgid "sql备份信息"
#~ msgstr "sql backup information"

#~ msgid "后台部署方案"
#~ msgstr "Background deployment scheme"

#~ msgid "主机【{}】已经被注册到了集群元数据，请检查"
#~ msgstr ""
#~ "The host [{}] has been registered in the cluster metadata, please check"

#~ msgid "master和slave中存在重复节点"
#~ msgstr "There are duplicate nodes in master and slave"

#~ msgid "slave和proxy中存在重复节点"
#~ msgstr "There are duplicate nodes in slave and proxy"

#~ msgid "部署方案"
#~ msgstr "deployment plan"

#~ msgid "集群访问域名"
#~ msgstr "Cluster access domain name"

#~ msgid "机器数"
#~ msgstr "Number of machines"

#~ msgid "Spider 全备"
#~ msgstr "Spider fully prepared"

#~ msgid "redis集群 slave 裁撤替换"
#~ msgstr "redis cluster slave abolition and replacement"

#~ msgid "redis集群 proxy 裁撤替换"
#~ msgstr "redis cluster proxy abolition and replacement"

#~ msgid "类型{}与类型{}之间不允许进行比较"
#~ msgstr "Comparison not allowed between type {} and type {}"
