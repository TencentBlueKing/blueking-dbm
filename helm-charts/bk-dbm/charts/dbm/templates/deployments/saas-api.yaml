{{- if .Values.enabled -}}
{{- $fullName := ( include "dbm.saas-api.fullname" .) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "dbm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.saas.api.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "dbm.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: "{{ $fullName }}"
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dbm.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: "{{ $fullName }}"
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dbm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.global.imageRegistry | default .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/bash
            - -c
          args:
            - gunicorn wsgi -b :8000 -c etc/gunicorn.py --access-logfile - --error-logfile -
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path | default "/ping"}}
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds | default 5}}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds | default 30}}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds | default 5}}
            successThreshold: {{ .Values.livenessProbe.successThreshold | default 6}}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold | default 1}}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path | default "/ping"}}
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds | default 5}}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds | default 30}}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds | default 5}}
            successThreshold: {{ .Values.readinessProbe.successThreshold | default 6}}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold | default 1}}
          {{- include "dbm.container_env" . | nindent 10 }}
          resources:
            {{- toYaml .Values.saas.api.resources | nindent 12 }}
      {{- include "dbm.initContainersWaitForMigrate" . | nindent 6 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}
