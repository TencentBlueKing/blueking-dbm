apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dbpriv.fullname" . }}
  labels:
    {{- include "dbpriv.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "dbpriv.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        reloader.stakater.com/auto: "true"
      labels:
        {{- include "dbpriv.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dbpriv.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        -
          name: config-volume
          configMap:
            name:  dbpriv-configmap
            items:
              -
                key: config.yaml
                mode: 420
                path: path/to/config.yaml
            defaultMode: 272
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.global.imageRegistry | default .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path | default "/ping"}}
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds | default 5}}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds | default 30}}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds | default 5}}
            successThreshold: {{ .Values.livenessProbe.successThreshold | default 1}}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold | default 1}}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path | default "/ping"}}
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds | default 5}}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds | default 30}}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds | default 5}}
            successThreshold: {{ .Values.readinessProbe.successThreshold | default 1}}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold | default 1}}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            -
              name: config-volume
              subPath: path/to/config.yaml
              mountPath: /conf/config.yaml
        - name: mysql56
          image: "{{ .Values.global.imageRegistry | default .Values.mysql56image.registry }}/{{ .Values.mysql56image.repository }}:{{ .Values.mysql56image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- range $key, $val := .Values.envMysql56 }}
            - name: {{ $key }}
              value: {{ quote $val }}
              {{- end }}
          ports:
            - containerPort: 3306
          args:
              - mysqld
              - '--defaults-file=/etc/my.cnf'
              - '--character-set-server=utf8'
              - '--user=mysql'
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
