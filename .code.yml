######## Code generated by gonote. DO NOT EDIT. >>>>>

# [!勿修改模板!] 生成了默认值模板，请根据实际情况调整对应的配置值
# [!最高优先级!] 本项目的特殊配置，会覆盖命令行输入的参数
gonote:
  split_ch_and_en: false # [选项开关] 修复行注释(//...)中英文词没有空格间隔，但不修复注释块(/*...*/)
  without_import: true # [选项开关] 关闭 import 强制分组功能
  no_line_break: false # [选项开关] 关闭过长自动换行功能
  no_complete_general: false # [选项开关] 关闭补全通用注释，默认填充 ServeHTTP/String/Error 等通用注释
  complete_general_config: # 内置了腾讯代码规范中的例外函数，你可以覆盖或添加更多配置
    - pattern: "Run()"
      annotation: Command Run
      limits:
        - type_func
    - pattern: "Init()"
      annotation: prepare run env
      limits:
        - type_func
    - pattern: "Validate()"
      annotation: run selfdefine validate function
      limits:
        - type_func
    - pattern: "Example()"
      annotation: subcommand example input
      limits:
        - type_func
    - pattern: "PreCheck()"
      annotation: pre run pre check
      limits:
        - type_func
    - pattern: "New.*Command"
      annotation: create new subcommand
      limits:
        - func
    - pattern: "Install()"
      annotation: install
      limits:
        - type_func
        - func
  #    - pattern: '(.*)Req'           # 匹配该正则所有的关键词
  #      annotation: '函数 $1 入参'    # 参考 nginx 的 URL 重写 ListReq =正则匹配并解析group=> (List)Req =取出group=> ($1)Req =group替换=> 函数 List 入参
  #      limits:
  #        - func                     # 函数注释
  #        - type_func                # 类型函数注释，常见结构体函数
  #        - type                     # 类型，常见结构体注释
  linters:
    disable_all: false
    enable:
      - oversize_func_arg # 函数入参过多，不能超过5个
      - large_file # 超大文件检查，普通<800行，单测<1600行
      - large_func # 超长函数体检查，普通<80行，单测<160行
      - switch_default # switch 需要 default 分支
      - bad_name # 不符合规范的命名

######## Code generated by gonote. DO NOT EDIT. <<<<<

source:
  # 文件或目录使用绝对路径，绝对路径按代码库根目录计算，以/开头。
  # 提供产品代码库中编写的测试代码存放目录或文件名格式,以便后续代码统计环节进行排除等特殊处理
  # 不要使用.*/等正则表达式屏蔽掉所有代码，会导致部门代码量骤减从而影响部门代码得分，还会导致Coverity扫不到任何代码而失败
  # 请勿使用Tab键，将会导致yaml解析出错
  test_source:
    #用于匹配文件; 匹配方式为正则表达式。
    filepath_regex: [".*/test.py"]
  # 提供产品代码库中工具或框架自动生成的且在代码库中的代码，没有可为空。以便后续代码统计环节进行排除等特殊处理。
  auto_generate_source:
    # 自动生成代码文件的正则表达式，若无统一标识格式，可以指定具体目录，样例可参考test_source举例
    filepath_regex: [".*/migrations/.*"]
  # 提供产品代码库中直接以源码形式存在的第三方代码目录或代码文件名的正则表达。
  # 此处备注的第三方代码在后续统计代码量环节会被排除，若代码库中不存在需要排除的第三方代码，该项配置标识可为空
  third_party_source:
    #第三方代码文件的正则表达式，若无统一标识格式，可以指定具体目录，样例可参考test_source举例
    filepath_regex:
